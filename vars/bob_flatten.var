bbset info.BOB_WA_TOP                {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2} {# snapshot of env variable}
bbset info.REPO_TOP                  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo} {# snapshot of env variable}
bbset info.PROCESS                   {n2p}                                                            {# snapshot of env variable}
bbset info.CHIP                      {lajolla}                                                        {# snapshot of env variable}
bbset info.IP_PROJ                   {hsio}                                                           {# snapshot of env variable}
bbset info.BLOCK                     {ufs_top}                                                        {# snapshot of env variable}
bbset info.BOB_ROOT_DIR              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f} {# snapshot of env variable}
bbset info.BOB_RUN_DIR               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main} {# snapshot of env variable}
bbset info.BRANCH                    {main}                                                           {# snapshot of env variable}
bbset info.PD_TOOLS_DIR              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools} {# snapshot of env variable}
bbset info.PROCESS_DIR               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p} {# snapshot of env variable}
bbset info.CAD_CHIP_DIR              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/chip/lajolla} {# snapshot of env variable}
bbset info.CHIP_DIR                  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/chip/lajolla} {# snapshot of env variable}
bbset info.IP_PROJ_DIR               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/hsio} {# snapshot of env variable}
bbset info.BLOCK_DIR                 {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/hsio/ufs_top} {# snapshot of env variable}
bbset info.CREATE_TS                 {2025-05-11T11:37:40.063460}                                     {# timestamp of bob create}
bbset bob.Scheduler                  {slurm}                                                          {valid values: 'nc', 'slurm'}
bbset pdv.lmretry                    {loop,maxretry:30,interval:60}                                   {set retry setting for calibre runs}
bbset pdv.disable_lic                {true}                                                           {# No Comment}  
bbset pdv.runpdv.layout              {[filechain -filetype layout]}                                   {path to layout database}
bbset pdv.runpdv.netlist             {[filechain -filetype spice -category flat]}                     {path to design netlist}
bbset pdv.lvs.hcells                 {[filechain -filetype hcell]}                                    {path to design hcell list}
bbset pdv.xor.turbo                  {16}                                                             {executor calibre on multiple cores}
bbset pdv.xor.hier                   {true}                                                           {perform hierarchical XOR}
bbset pdv.drc.metrics.categories_dir {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/chip/lajolla/pdv/metrics_categories} {pull user defined categories}
bbset pdv.metrics_capture            {true}                                                           {Enable metrics capture}
bbset pdv.metrics.upload             {true}                                                           {stream the metrics.tsv to BQ}
bbset pdv.esa.nodes                  {pnr/floorplan pnr/placeopt pnr/clock pnr/clockopt pnr/route}    {# Implement node the that this flow like to branch from}
bbset pdv.info_bump.audit            {true}                                                           {perform CIA checker}
bbset pdv.flipchip_bump.audit        {true}                                                           {perform CIA checker}
bbset pdv.sram_check.audit           {true}                                                           {perform CIA checker}
bbset pdv.ant.audit                  {true}                                                           {perform CIA checker}
bbset pdv.erc.audit                  {true}                                                           {perform CIA checker}
bbset pdv.erc_waiver.audit           {true}                                                           {perform CIA checker}
bbset pdv.drc.audit                  {true}                                                           {perform CIA checker}
bbset pdv.drc_dfm.audit              {true}                                                           {perform CIA checker}
bbset pdv.lvs.audit                  {true}                                                           {perform CIA checker}
bbset pdv.perc_p2p.audit             {true}                                                           {perform CIA checker}
bbset pdv.perc_topo.audit            {true}                                                           {perform CIA checker}
bbset pdv.perc_topo_waiver.audit     {true}                                                           {perform CIA checker}
bbset pdv.perc_ldl.audit             {true}                                                           {perform CIA checker}
bbset pdv.perc_cd.audit              {true}                                                           {perform CIA checker}
bbset pdv.perc_cnod.audit            {true}                                                           {perform CIA checker}
bbset pdv.xor.audit                  {true}                                                           {perform CIA checker}
bbset pdv.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/pdv/CIA/checkers }                  {CIA checker search path for sta stage}
bbset pdv.config.CIA.ConsolidateSummary {[bbget .info.BOB_RUN_DIR]/pdv/*/logs/cia.summary }              {cia.summary path for Bob Audit System}
bbset pdp.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/pdv/CIA/checkers }                  {CIA checker search path for sta stage}
bbset pdp.config.CIA.ConsolidateSummary {[bbget .info.BOB_RUN_DIR]/pdp/*/logs/cia.summary }              {cia.summary path for Bob Audit System}
bbset pdv.drc.edtext                 {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].drc.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].drc.EDTEXT.txt]} {# No Comment}  
bbset pdv.drc.voltage_info           {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].drc.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].drc.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.drc_recon.edtext           {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].drc.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].drc.EDTEXT.txt]} {# No Comment}  
bbset pdv.drc_recon.voltage_info     {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].drc.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].drc.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.drc_dfm.edtext             {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].drc.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].drc.EDTEXT.txt]} {# No Comment}  
bbset pdv.drc_dfm.voltage_info       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].drc.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].drc.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.erc.psub2_info             {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc.PSUB2.txt]} {# No Comment}  
bbset pdv.erc.edtext                 {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc.EDTEXT.txt]} {# No Comment}  
bbset pdv.erc.vvdd_info              {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc.VVDD_EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc.VVDD_EDTEXT.txt]} {# No Comment}  
bbset pdv.erc.waiver_setup           {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc.WAIVER_SETUP [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc.WAIVER_SETUP]} {# No Comment}  
bbset pdv.erc_waiver.psub2_info      {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.PSUB2.txt]} {# No Comment}  
bbset pdv.erc_waiver.edtext          {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.EDTEXT.txt]} {# No Comment}  
bbset pdv.erc_waiver.vvdd_info       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.VVDD_EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.VVDD_EDTEXT.txt]} {# No Comment}  
bbset pdv.erc_waiver.waiver_setup    {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.WAIVER_SETUP [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].erc_waiver.WAIVER_SETUP]} {# No Comment}  
bbset pdv.lvs.psub2_info             {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.PSUB2.txt]} {# No Comment}  
bbset pdv.lvs.edtext                 {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.EDTEXT.txt]} {# No Comment}  
bbset pdv.lvs.filter_opt             {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.FILTER_OPTIONS.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.FILTER_OPTIONS.txt]} {# No Comment}  
bbset pdv.lvs.rename_txt             {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.RENAME.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.RENAME.txt]} {# No Comment}  
bbset pdv.lvs_recon.psub2_info       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.PSUB2.txt]} {# No Comment}  
bbset pdv.lvs_recon.edtext           {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.EDTEXT.txt]} {# No Comment}  
bbset pdv.lvs_recon.filter_opt       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.FILTER_OPTIONS.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.FILTER_OPTIONS.txt]} {# No Comment}  
bbset pdv.lvs_recon.rename_txt       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].lvs.RENAME.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].lvs.RENAME.txt]} {# No Comment}  
bbset pdv.perc_cnod.psub2_info       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.PSUB2.txt]} {# No Comment}  
bbset pdv.perc_cnod.edtext           {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.EDTEXT.txt]} {# No Comment}  
bbset pdv.perc_cnod.vvdd_info        {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.VVDD_EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.VVDD_EDTEXT.txt]} {# No Comment}  
bbset pdv.perc_cnod.matrix_pmpode    {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.PMPODE_MATRIX.csv [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.PMPODE_SUPPLY_MATRIX.csv]} {# No Comment}  
bbset pdv.perc_cnod.matrix_nmpode    {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.NMPODE_MATRIX.csv [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.NMPODE_SUPPLY_MATRIX.csv]} {# No Comment}  
bbset pdv.perc_cnod.matrix_bulk_pmpode {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.PMPODE_MATRIX.csv [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.PMPODE_BULK_MATRIX.csv]} {# No Comment}  
bbset pdv.perc_cnod.matrix_bulk_nmpode {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.NMPODE_MATRIX.csv [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cnod.NMPODE_BULK_MATRIX.csv]} {# No Comment}  
bbset pdv.perc_topo.voltage_info     {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_topo.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_topo.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.perc_topo.waiver_setup     {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_topo.WAIVER_SETUP [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_topo.WAIVER_SETUP]} {# No Comment}  
bbset pdv.perc_topo_waiver.voltage_info {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_topo_waiver.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_topo.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.perc_topo_waiver.waiver_setup {[bbget .info.PROCESS_DIR]/pdv/calibre/waiver_files/perc_topo/waiver_setup} {# No Comment}  
bbset pdv.perc_ldl.psub2_info        {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_ldl.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_ldl.PSUB2.txt]} {# No Comment}  
bbset pdv.perc_ldl.voltage_info      {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_ldl.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_ldl.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.perc_ldl.edtext            {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_ldl.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_ldl.EDTEXT.txt]} {# No Comment}  
bbset pdv.perc_p2p.psub2_info        {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_p2p.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_p2p.PSUB2.txt]} {# No Comment}  
bbset pdv.perc_p2p.voltage_info      {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_p2p.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_p2p.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.perc_p2p.edtext            {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_p2p.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_p2p.EDTEXT.txt]} {# No Comment}  
bbset pdv.perc_cd.psub2_info         {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cd.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cd.PSUB2.txt]} {# No Comment}  
bbset pdv.perc_cd.voltage_info       {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cd.VOLT.INFO.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cd.VOLT.INFO.txt]} {# No Comment}  
bbset pdv.perc_cd.edtext             {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].perc_cd.EDTEXT.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].perc_cd.EDTEXT.txt]} {# No Comment}  
bbset pdp.lmretry                    {loop,maxretry:30,interval:60}                                   {set retry setting for calibre runs}
bbset pdp.runpdp.layout              {[bbfiles -filetype layout -bundles chipfinish]}                 {path to design layout}
bbset pdp.runpdp.netlist             {[bbfiles -filetype verilog -purpose lvs -bundles chipfinish]}   {path to design netlist}
bbset pdp.ipmerge.subblocks          {[bbfiles -hierarchy -level 1 -subblocks all -filetype nodklayout -bundles dummyfill]} {subblocks dummyfill collateral}
bbset pdp.ipmerge.strict             {true}                                                           {perform source cell check}
bbset pdp.ipmerge.check_empty        {1}                                                              {# No Comment}  
bbset pdp.v2spi.calibre_version      {2023.1_18.8}                                                    {v2lvs calibre version to use}
bbset pdp.v2spi.subblocks_spice      {[bbfiles -hierarchy -level 1 -subblocks all -filetype spice -category nodkflat -bundles v2spi]} {subblock spice collateral}
bbset pdp.v2spi.subblocks_verilog    {[bbfiles -subblocks all -filetype verilog -purpose lvs -bundles chipfinish]} {subblock verilog collateral}
bbset pdp.v2spi.flatten              {true}                                                           {generated flattened netlist}
bbset pdp.postfix.hcells             {[bbfiles -filetype hcell -bundles designin]}                    {hcells for design}
bbset pdp.postfix.netlist            {[bbfiles -bundles v2spi -filetype spice -category flat]}        {fla spice for the postfix}
bbset pdp.designin.hcells            {[bbfiles -filetype hcell -bundles chipfinish]}                  {hcells for design}
bbset pdp.designin.hcell_subblocks   {[bbfiles -subblocks all -level 1 -filetype hcell -bundles designin]} {hcells for sub-blocks}
bbset pdp.designin.hcelltag          {[bbfiles -filetype hcell_tag -bundles chipfinish]}              {watermark represented file}
bbset pdp.esa.nodes                  {pnr/floorplan pnr/placeopt pnr/clock pnr/clockopt pnr/route}    {# Implement node the that this flow like to branch from}
bbset pdp.dummyfill.audit            {true}                                                           {perform CIA checker}
bbset pdp.v2spi.audit                {true}                                                           {perform CIA checker}
bbset pdp.ipmerge.audit              {true}                                                           {perform CIA checker}
bbset pdp.postfix.audit              {true}                                                           {perform CIA checker}
bbset pdp.designin.audit             {true}                                                           {perform CIA checker}
bbset pdp.bumpoverlay.audit          {true}                                                           {perform CIA checker}
bbset pdp.lefvsgds.audit             {true}                                                           {perform CIA checker}
bbset pdp.ipmerge.text2layout_files  {[file_exists [bbget info.BLOCK_DIR]/pdv_misc/[bbget info.BLOCK].ipmerge.PSUB2.txt [bbget info.IP_PROJ_DIR]/pdv_misc/[bbget info.BLOCK].ipmerge.PSUB2.txt]} {# No Comment}  
bbset pnr.floorplan.PowerSwitchHammerChainDirection {}                                                               {Hammer chain direction override}
bbset pnr.floorplan.DetachModuleOrPortsOverrides {}                                                               {dict: specify hammer chain or port name per power domain}
bbset pnr.floorplan.DetachModuleAndPortsOverrides {}                                                               {dict: specify hammer chain and port name per power domain}
bbset pnr.floorplan.FPMetricsCsvToBQ {[bbget .info.REPO_TOP]/cad/pd-tools/sif/bin/csv_to_bq.py}       {script for uploading fp metrics to fp dashboard}
bbset pnr.floorplan.FPMetricsYAML    {[bbget .info.REPO_TOP]/cad/pd-tools/sif/bin/fp_metrics.yaml}    {fp metrics yaml file for fp dashboard}
bbset pnr.floorplan.EnableManualHammerChainOptimization {false}                                                          {enable manual direction hammer chain grid proximity based sorting}
bbset pnr.floorplan.GridSizePSChaining {2}                                                              {int: grids in x and y for calculating PS chaining}
bbset pnr.floorplan.ChannelSwitchOffset {8}                                                              {int: CPP times offset for PS cell from channel boundary}
bbset pnr.floorplan.GspanGridTransitionBlockage {false}                                                          {str: Create placement hard Blockage on gspan augmented grid transition to normal grid }
bbset pnr.floorplan.GspanBoxBlockageWidth {1}                                                              {float: Should be greater then 1}
bbset pnr.floorplan.GenerateViaPillar {true}                                                           {str: Generate the via pillar lef and association files}
bbset pnr.floorplan.SaveCallbacks    {}                                                               {str: Callbacks after which we save design}
bbset pnr.floorplan.StartCallback    {}                                                               {str: Callback to start the flow from}
bbset pnr.floorplan.InputDatabase    {}                                                               {str: Input Database for floorplan stage}
bbset pnr.floorplan.EdgePlaceBlockageWidth {0}                                                              {float: Width of blockage to be created at the edges}
bbset pnr.floorplan.EdgePlaceBlockageHeight {0}                                                              {float: Height of blockage to be created at the edges}
bbset pnr.floorplan.EdgeHaloSize     {0}                                                              {float: Size of halo blockage around the design}
bbset pnr.floorplan.DefaultSiteName  {coreW48H130}                                                    {str: Default site name}
bbset pnr.floorplan.SitePattern      {*coreW48H30*}                                                   {str: Site pattern for row creation}
bbset pnr.floorplan.PGSiteName       {}                                                               {str: PG site name for PG cells}
bbset pnr.floorplan.PreservePlacement {0}                                                              {bool: Preserve synthesis standard cell placement during floorplan}
bbset pnr.floorplan.PreservePlacementBlockages {0}                                                              {bool: Preserve pre-placed hard placement blockages placement during floorplan}
bbset pnr.floorplan.EnableCutRowBlockages {0}                                                              {bool: Create blockages where rows shouldn't be created due to cutRow limitation}
bbset pnr.floorplan.Type             {def}                                                            {str: Floorplan type. Use one of DEF TCL or aspect ratioi. Default is none.}
bbset pnr.floorplan.DEFFiles         {[bbget .pnr.setup.InputDEFFile]}                                {file: Floorplan DEF file list}
bbset pnr.floorplan.TargetUtilization {0.7}                                                            {float: Target Floorplan utilisation}
bbset pnr.floorplan.CoreOffset       {0.912 0.988 0.912 0.988}                                        {str: Target core offset {l r t b}}
bbset pnr.floorplan.PinLayers        {M6 M7 M8 M9 M10 M11}                                            {str: List of layers to place unplaced pins}
bbset pnr.floorplan.PGPinLayers      {}                                                               {str: List of layers to create PG pins. Default to top two layers if not specified}
bbset pnr.floorplan.PGPinOverrides   {}                                                               {str: Variable to control edge PG pin layers and thier length. eg. {D11 {type edge} D12 {type edge length 0.8}}}
bbset pnr.floorplan.MacroPinLayers   {[bbget .pnr.floorplan.PinLayers]}                               {str: List of macro pin layers. This is used for macro pin layer check}
bbset pnr.floorplan.MacroPinLayerOverrides {}                                                               {str: Overrides for setting the top macro pin layers for specific cells. This is used for macro pin layer check}
bbset pnr.floorplan.MacroPGPinLayers {M3 M4 M5 M6 M7 M8 M9}                                           {str: list of mmemory pg pin layers}
bbset pnr.floorplan.MacroPGPinLayerOverrides {}                                                               {str: Overrides for setting the top macro pg pin layers for specific cells}
bbset pnr.floorplan.TrackSpec        {{layer M0 pitch 0.26 pattern {0.0305 0.0535 0.0765 0.0995 0.13 0.1605 0.1835 0.2065 0.2295 0.26} width {0.028 0.013 0.013 0.013 0.013 0.028 0.013 0.013 0.013 0.013} mask {1 2 1 2 1 2 1 2 1 2} offset 0}
                                      {layer M1  offset 0.024}
                                      {layer M2  offset 0.0 pattern {0.026 0.052} mask {1 2}}
                                      {layer M3  offset 0.024}
                                      {layer M4  offset 0.000}
                                      {layer M5  offset 0.024 pattern {0.042 0.084} mask {1 2}}
                                      {layer M6  die_offset 0.000}
                                      {layer M7  die_offset 0.000}
                                      {layer M8  die_offset 0.000}
                                      {layer M9  die_offset 0.000}
                                      {layer M10 die_offset 0.000}
                                      {layer M11 die_offset 0.000}
                                      {layer M12 offset 0.000}} {str: provides track configuration}
bbset pnr.floorplan.FCTrackSpec      {}                                                               {str: provides track configuration for FC}
bbset pnr.floorplan.PushDownTrackOffsetLayers {M12 M13 M14 M15}                                                {str: List of layers getting track offset from SoC}
bbset pnr.floorplan.TrackOffsetFile  {/google/gchips/workspace/redondo-asia/tpe/user/annug/track_offset_new.tcl} {PARTHL : To avoid missing trackoffset information for global grid}
bbset pnr.floorplan.RowGenerationMode {native}                                                         {str:CADONLY Row generation mode native or manual}
bbset pnr.floorplan.TrackGenerationMode {}                                                               {str: Track generation mode can be replace or append}
bbset pnr.floorplan.TrackGenerationLayers {M0 M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 M11 M12 M13 M14 M15}          {str: List of layers for track generation}
bbset pnr.floorplan.FlipFirstRow     {false}                                                          {bool: Control row flip. If true first row is flipped else second}
bbset pnr.floorplan.PreserveMacroPlacementHalos {0}                                                              {bool: Preserve existing macro haloes. Otherwise reset to process defaults}
bbset pnr.floorplan.MacroPlacementHalo {0.576 0.52 0.576 0.52}                                          {str: Default placement halo spacing to apply for macros. {<left> <bottom> <right> <top>}}
bbset pnr.floorplan.MacroPlacementHaloOverrides { dwc_mipi_mphy_type1_g5_pma_2tx_2rx_ns {10 5 20 10} PCLAMPCCOD_H_C240708 {0.8 0.8 0.8 0.8 } } {dict: Custom Placement halo spacing for specified cell types. {ESD {2 2 2 2} CDMM {2 2 2 2}}}
bbset pnr.floorplan.MacroRoutingHaloSize {0}                                                              {float: Default macro routing halo}
bbset pnr.floorplan.MacroRoutingHaloMinLayer {}                                                               {str: Defaulting macro routing halo blockage layers}
bbset pnr.floorplan.MacroRoutingHaloMaxLayer {}                                                               {str: Defaulting macro routing halo blockage layers}
bbset pnr.floorplan.MacroRoutingHaloOverrides {dwc_mipi_mphy_type1_g5_pma_2tx_2rx_ns {10 M0 M13} dwc_usbc32dptx_pma_x4_ns {10 M0 M13} dwc_eusb2_phy_1p_ns {10 M0 M13} tcxo_clock_buffer_top {1.2 M0 M8} amux_top {10 M0 M7} ABKBCKL2 {10 M0 M7 } PLLTS3FEFRACP2 {10 M0 M9} PLLTS3FEFRACP3 {10 M0 M9} PLLTS3FEFRACP {10 M0 M9} PLLTS3FEINTQ {10 M0 M9} PLLTS3FPFRACP2  {10 M0 M9} N03_DTCD_ALL_M11_220327 {1.2 M0 M13} } {PARTHL: Custom routing halo for Analog IPs in hsio}
bbset pnr.floorplan.PowerSwitchToNearestVDDM1 {0.6}                                                            {float:CADONLY Distance to first power switch from nearest VDD M1 Stripe in core area}
bbset pnr.floorplan.LeftEdgeBoundaryCell {}                                                               {str: Left Edge Boundary Cell}
bbset pnr.floorplan.TopEdgeBoundaryCell {}                                                               {str: Top Edge Boundary Cell}
bbset pnr.floorplan.RightEdgeBoundaryCell {}                                                               {str: Right Edge Boundary Cell}
bbset pnr.floorplan.BottomEdgeBoundaryCell {}                                                               {str: Bottom Edge Boundary Cell}
bbset pnr.floorplan.BottomLeftInsideCornerBoundaryCell {}                                                               {str: Bottom Left Inside Corner Boundary Cell}
bbset pnr.floorplan.BottomRightInsideCornerBoundaryCell {}                                                               {str: Bottom Right Inside Corner Boundary Cell}
bbset pnr.floorplan.TopLeftInsideCornerBoundaryCell {}                                                               {str: Top Left Inside Corner Boundary Cell}
bbset pnr.floorplan.TopRightInsideCornerBoundaryCell {}                                                               {str: Top Right Inside Corner Boundary Cell}
bbset pnr.floorplan.BottomLeftOutsideCornerBoundaryCell {}                                                               {str: Bottom Left Outside Corner Boundary Cell}
bbset pnr.floorplan.BottomRightOutsideCornerBoundaryCell {}                                                               {str: Bottom Right Outside Corner Boundary Cell}
bbset pnr.floorplan.TopLeftOutsideCornerBoundaryCell {}                                                               {str: Top Left Outside Corner Boundary Cell}
bbset pnr.floorplan.TopRightOutsideCornerBoundaryCell {}                                                               {str: Top Right Outside Corner Boundary Cell}
bbset pnr.floorplan.TopRightEdgeNeighborBoundaryCell {}                                                               {str: Top Right Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomRightEdgeNeighborBoundaryCell {}                                                               {str: Bottom Right Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomLeftEdgeBoundaryCell {}                                                               {str: Bottom Left Edge Boundary Cell}
bbset pnr.floorplan.TopLeftEdgeBoundaryCell {}                                                               {str: Top Left Edge Boundary Cell}
bbset pnr.floorplan.TopLeftEdgeNeighborBoundaryCell {}                                                               {str: Top Left Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomLeftEdgeNeighborBoundaryCell {}                                                               {str: Bottom Left Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomRightEdgeBoundaryCell {}                                                               {str: Bottom Right edge boundary cell}
bbset pnr.floorplan.TopRightEdgeBoundaryCell {}                                                               {str: Top right edge boundary cell}
bbset pnr.floorplan.LeftEdgeAONBoundaryCell {BOUNDARYRIGHTBWP130HPNPN3P48CPDLVT BOUNDARYRIGHTNWTAPBWP130HPNPN3P48CPDLVT BOUNDARYRIGHTPWTAPBWP130HPNPN3P48CPDLVT} {str: AON Left Edge Boundary Cell}
bbset pnr.floorplan.TopEdgeAONBoundaryCell {BOUNDARYNROW1BWP130HPNPN3P48CPDLVT BOUNDARYNROW2BWP130HPNPN3P48CPDLVT BOUNDARYNROW4BWP130HPNPN3P48CPDLVT BOUNDARYNROW8BWP130HPNPN3P48CPDLVT BOUNDARYNROWCMDNWTAPBWP130HPNPN3P48CPDLVT BOUNDARYNROWNWTAPWALLBWP130HPNPN3P48CPDLVT BOUNDARYNROWWALLBWP130HPNPN3P48CPDLVT} {str: AON Top Edge Boundary Cell}
bbset pnr.floorplan.RightEdgeAONBoundaryCell {BOUNDARYLEFTBWP130HPNPN3P48CPDLVT BOUNDARYLEFTNWTAPBWP130HPNPN3P48CPDLVT BOUNDARYLEFTPWTAPBWP130HPNPN3P48CPDLVT} {str: AON Right Edge Boundary Cell}
bbset pnr.floorplan.BottomEdgeAONBoundaryCell {BOUNDARYNROW1BWP130HPNPN3P48CPDLVT BOUNDARYNROW2BWP130HPNPN3P48CPDLVT BOUNDARYNROW4BWP130HPNPN3P48CPDLVT BOUNDARYNROW8BWP130HPNPN3P48CPDLVT BOUNDARYNROWCMDNWTAPBWP130HPNPN3P48CPDLVT BOUNDARYNROWNWTAPWALLBWP130HPNPN3P48CPDLVT BOUNDARYNROWWALLBWP130HPNPN3P48CPDLVT} {str: AON Bottom Edge Boundary Cell}
bbset pnr.floorplan.BottomLeftInsideCornerAONBoundaryCell {}                                                               {str: AON Bottom Left Inside Corner Boundary Cell}
bbset pnr.floorplan.BottomRightInsideCornerAONBoundaryCell {BOUNDARYNINCORNERBWP130HPNPN3P48CPDLVT BOUNDARYNINCORNERNWTAPBWP130HPNPN3P48CPDLVT BOUNDARYNINCORNERPWTAPBWP130HPNPN3P48CPDLVT} {str: AON Bottom Right Inside Corner Boundary Cell}
bbset pnr.floorplan.TopLeftInsideCornerAONBoundaryCell {}                                                               {str: AON Top Left Inside Corner Boundary Cell}
bbset pnr.floorplan.TopRightInsideCornerAONBoundaryCell {BOUNDARYNINCORNERBWP130HPNPN3P48CPDLVT BOUNDARYNINCORNERNWTAPBWP130HPNPN3P48CPDLVT BOUNDARYNINCORNERPWTAPBWP130HPNPN3P48CPDLVT} {str: AON Top Right Inside Corner Boundary Cell}
bbset pnr.floorplan.BottomLeftOutsideCornerAONBoundaryCell {BOUNDARYNCORNERBWP130HPNPN3P48CPDLVT BOUNDARYNCORNERNWTAPBWP130HPNPN3P48CPDLVT} {str: AON Bottom Left Outside Corner Boundary Cell}
bbset pnr.floorplan.BottomRightOutsideCornerAONBoundaryCell {}                                                               {str: AON Bottom Right Outside Corner Boundary Cell}
bbset pnr.floorplan.TopLeftOutsideCornerAONBoundaryCell {BOUNDARYNCORNERBWP130HPNPN3P48CPDLVT BOUNDARYNCORNERNWTAPBWP130HPNPN3P48CPDLVT} {str: AON Top Left Outside Corner Boundary Cell}
bbset pnr.floorplan.TopRightOutsideCornerAONBoundaryCell {}                                                               {str: AON Top Right Outside Corner Boundary Cell}
bbset pnr.floorplan.TopRightEdgeNeighborAONBoundaryCell {}                                                               {str: AON Top Right Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomRightEdgeNeighborAONBoundaryCell {}                                                               {str: AON Bottom Right Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomLeftEdgeAONBoundaryCell {}                                                               {str: AON Bottom Left Edge Boundary Cell}
bbset pnr.floorplan.TopLeftEdgeAONBoundaryCell {}                                                               {str: AON Top Left Edge Boundary Cell}
bbset pnr.floorplan.TopLeftEdgeNeighborAONBoundaryCell {}                                                               {str: AON Top Left Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomLeftEdgeNeighborAONBoundaryCell {}                                                               {str: AON Bottom Left Edge Neighbor Boundary Cell}
bbset pnr.floorplan.BottomRightEdgeAONBoundaryCell {}                                                               {str: AON Bottom right edge boundary cell}
bbset pnr.floorplan.TopRightEdgeAONBoundaryCell {}                                                               {str: AON Top right edge boundary cell}
bbset pnr.floorplan.FillWallPitch    {998.4}                                                          {float: Fill wall pitch value}
bbset pnr.floorplan.BoundaryCellPrefix {ENDCAP}                                                         {str:MUSTSET Boundary Cell Prefix}
bbset pnr.floorplan.FillWallPitchOverrides {}                                                               {str: fillwall pitch overrides per power domain }
bbset pnr.floorplan.NpppWallPitch    {3700.032}                                                       {float: Nppp Wall Pitch value}
bbset pnr.floorplan.PpbkCell         {{FILLPPBKBWP130HPNPN3P48CPDLVT} {FILLPPBKLABWP130HPNPN3P48CPDLVT}} {str: PPBK Cell name}
bbset pnr.floorplan.NpppWallToInCornerSpacing {0.768}                                                          {float: Nppp Wall to InCorner Spacing value}
bbset pnr.floorplan.NpppWallToFillWallSpacing {0.96}                                                           {float: Nppp Wall to FillWall Spacing value}
bbset pnr.floorplan.TapCellPrefix    {TAP}                                                            {str:MUSTSET Tap cell prefix}
bbset pnr.floorplan.TapCell          {TAPCELLVPPBWP130HPNPN3P48CPDLVT  TAPCELLVPPWALLBWP130HPNPN3P48CPDLVT  TAPCELLPWBWP130HPNPN3P48CPDLVT  TAPCELLPWWALLBWP130HPNPN3P48CPDLVT  FILLWALLATBWP130HPNPN3P48CPDLVT  FILLWALLATSHBWP130HPNPN3P48CPDLVT  FILLWALLBWP130HPNPN3P48CPDLVT  FILLWALLSHBWP130HPNPN3P48CPDLVT  FILLCPWWALLATBWP130HPNPN3P48CPDLVT  FILLCPWWALLBWP130HPNPN3P48CPDLVT} {str: Well Tap Cell}
bbset pnr.floorplan.AONTapCell       { TAPCELLCMDNWBWP130HPNPN3P48CPDLVT  TAPCELLNWWALLBWP130HPNPN3P48CPDLVT  TAPCELLCMDPWBWP130HPNPN3P48CPDLVT  TAPCELLPWWALLBWP130HPNPN3P48CPDLVT  FILLWALLATBWP130HPNPN3P48CPDLVT  FILLWALLATSHBWP130HPNPN3P48CPDLVT  FILLWALLBWP130HPNPN3P48CPDLVT  FILLWALLSHBWP130HPNPN3P48CPDLVT  FILLCPWWALLATBWP130HPNPN3P48CPDLVT  FILLCPWWALLBWP130HPNPN3P48CPDLVT } {str: AON Well Tap Cell}
bbset pnr.floorplan.TapPitch         {60}                                                             {float: Well Tap Pitch}
bbset pnr.floorplan.TapOffset        {0}                                                              {float: Well Tap offset}
bbset pnr.floorplan.MultiTapRule     {}                                                               {str: Multi tap rule for inserting combination of tap cells}
bbset pnr.floorplan.AONMultiTapRule  {}                                                               {str: AON Multi tap rule for inserting combination of tap cells}
bbset pnr.floorplan.AlignSwitchAndTapColumns {0}                                                              {bool: Align switch and tap columns}
bbset pnr.floorplan.EnableIncrTapInsertion {0}                                                              {bool: Enable incremental tap cell insertion}
bbset pnr.floorplan.EnableDenseTapRegions {0}                                                              {bool: Enable/disable denser tap regions}
bbset pnr.floorplan.LegalizePin      {0}                                                              {str: Legalise pin}
bbset pnr.floorplan.PowerDomainOverrides {PD_UFS0_TOP {MVDD VDD_STBY_S} PD_UFS0_HC {MVDD VDD_STBY_S} PD_UFS0_PCS {MVDD VDD_STBY_S}} {str: Power Domain Overrides}
bbset pnr.floorplan.NarrowChannelThreshold {0}                                                              {float: Minmum height of a narrow channel}
bbset pnr.floorplan.MacrosToBeConsideredAsStdCells {fiducial*}                                                      {str: List of macros to be considered as std cells for channel calculation}
bbset pnr.floorplan.PowerSwitchHammerToTrickleRatio {10}                                                             {int: Ratio of switches in hammer chain to trickle chain}
bbset pnr.floorplan.PowerSwitchHammerChainCount {1}                                                              {int: Number of hammer chains. Split primary hammer chain into multiple chains}
bbset pnr.floorplan.EnableSerialHammerChains {1}                                                              {bool: Splits the hammer chain according to position}
bbset pnr.floorplan.PowerSwitchChainDirection {LtoR}                                                           {str: Power Switch Chain direction}
bbset pnr.floorplan.ExcludeChannelSwitchesFromTrickleChain {1}                                                              {bool: Exclude channel switches from trickle chain}
bbset pnr.floorplan.EnableDiscreteChannelHammerChain {1}                                                              {bool: Create separate hammer chain of channel switches}
bbset pnr.floorplan.NumDiscreteChannelHammerChains {1}                                                              {int: Number of discrete channel hammer chains}
bbset pnr.floorplan.NumDiscreteChannelHammerChainsOverrides {}                                                               {Discrete Chainnel Hammer Chains Number override per power domain}
bbset pnr.floorplan.HammerEndLogic   {}                                                               {str: Default hammer end logic}
bbset pnr.floorplan.HammerEndLogicOverrides {}                                                               {str: Hammer End Logic Override per ack port per power domain}
bbset pnr.floorplan.EnableHammerUpdateNames {1}                                                              {bool: add suffix in the hammer and trickle net}
bbset pnr.floorplan.HammerChainBoxes {{}}                                                             {str: region specific hammer chaining}
bbset pnr.floorplan.EnableTrickleChainOptimization {0}                                                              {bool: Optimize trickle chain length}
bbset pnr.floorplan.ChainStartCorner {LL}                                                             {str: Chain Start Corner in chain length optimisation}
bbset pnr.floorplan.OptimizationDirection {1}                                                              {str: Controls chain optmisation direction}
bbset pnr.floorplan.SwitchChainMergePowerDomains {}                                                               {str: Merge power domains for power switch chaining}
bbset pnr.floorplan.PowerSwitchChainingMode {native}                                                         {str: select between native and manual power switch chaining}
bbset pnr.floorplan.PowerSwitchHammerToTrickleRatioOverrides {}                                                               {str: specify Hammer to Trickle Ratio per power domain}
bbset pnr.floorplan.PowerSwitchHammerChainCountOverrides {}                                                               {str: specify hammer chain count per power domain}
bbset pnr.floorplan.EnableManualChainOptimisation {0}                                                              {bool: chain length optimisation for manual chaining}
bbset pnr.floorplan.DetachModuleOrPorts {}                                                               {str: detach or module ports}
bbset pnr.floorplan.DetachModuleAndPorts {}                                                               {str: detach and module ports}
bbset pnr.floorplan.PowerSwitchChainingModeOverrides {}                                                               {str: override to change the mode of chaining for a power domain}
bbset pnr.floorplan.PowerSwitchControlInversion {1}                                                              {bool: Enabling inversion at the inputs and outputs of trickle/hammer chains}
bbset pnr.floorplan.PowerSwitchInversionCell {PTINVHDCWD1BWP130HPNPN3P48CPDLVTLL}                             {str: Process specific cell for power switch ctrl/ack inversion}
bbset pnr.floorplan.HammerChainBoxesOverrides {}                                                               {str: override to define boxes for a power domain}
bbset pnr.floorplan.ManualRechainPowerSwitch {0}                                                              {bool: Enable manual chaining optimisation}
bbset pnr.floorplan.PowerSwitchAckPin {NSLEEPOUT}                                                      {str: power switch ack pin}
bbset pnr.floorplan.PowerSwitchCtrlPin {NSLEEPIN}                                                       {str: power switch ctrl pin}
bbset pnr.floorplan.MacroCtrlPorts   {SD DES}                                                         {str: macro control ports}
bbset pnr.floorplan.MacroAckPorts    {ROP}                                                            {str: macro ack ports}
bbset pnr.floorplan.PowerSwitchChainStrategy {hammer-trickle}                                                 {str: Switch chaining strategy hammer-trickle or cascade}
bbset pnr.floorplan.PowerSwitchSpec  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/psspec.tcl} {file: Power switch spec for PG construsiton}
bbset pnr.floorplan.PowerSwitchDef   {}                                                               {file: Power switch def file. This has higher priority than power switch spec}
bbset pnr.floorplan.PowerSwitchPso   {}                                                               {file: Power switch pso for PSW insertion. This should be used along with PowerSwitchDef}
bbset pnr.floorplan.PowerSwitchRuleSuffix {ALL}                                                            {str: Switch rule suffix, default is ALL}
bbset pnr.floorplan.PowerSwitchRuleOverrides {}                                                               {str: Overrides for power switch rule definitions like ack_port and req_port}
bbset pnr.floorplan.PowerSwitchOrientation {MX}                                                             {str: Switch Cell orientation}
bbset pnr.floorplan.PowerSwitchXSnap {0.048}                                                          {float: Snap constraint for power switches}
bbset pnr.floorplan.PowerSwitchPins  {aon_power TVDD primary_power VDD ground VSS}                    {str: Power switch pin types for manual switch insertion}
bbset pnr.floorplan.PowerSwitchInstanceModule {}                                                               {str: Power switch module instance override {domain module}}
bbset pnr.floorplan.PowerSwitchInsertionMode {native}                                                         {str::MUSTSET Control the power switch insertion mode (native or manual)}
bbset pnr.floorplan.DefaultPDPSWLeftOffset {0}                                                              {float: Power Switch Offset for Default power domain}
bbset pnr.floorplan.ExtraSwitchesBottomOffset {0.117}                                                          {float: additional bottom offset for extra switches}
bbset pnr.floorplan.MultipleSwitchRowsInHorizontalChannel {0}                                                              {float: Enable multiple rows of switches in horizontal channel}
bbset pnr.floorplan.PowerSwitchChainCellTypeCheck {1}                                                              {bool: Enable/Disable cell type checking when creating switch chains. Useful when extra switches are added in design.}
bbset pnr.floorplan.PowerSwitchAbutment {1}                                                              {bool: Enable/Disable 2 Power Switches Abutment}
bbset pnr.floorplan.FourRowHeightCoreSwitchCell {HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT}                        {Four row height switch cell}
bbset pnr.floorplan.EnableFourRowHeightCoreSwitchCell {0}                                                              {bool: Enable to insert four rows height power switches}
bbset pnr.floorplan.CoreSwitchPrefix {CSW}                                                            {str:CADONLY Core switch cell prefix}
bbset pnr.floorplan.CoreSwitchCell   {HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT}                        {str:MUSTSET Core Switch Cell Name}
bbset pnr.floorplan.CoreSwitchTopOffset {0.260}                                                          {float:CADONLY Core switch top offset}
bbset pnr.floorplan.CoreSwitchBottomOffset {0.260}                                                          {float:CADONLY Core switch bottom offset}
bbset pnr.floorplan.CoreSwitchLeftOffset {1.536}                                                          {float:CADONLY Core switch left offset}
bbset pnr.floorplan.CoreSwitchRightOffset {0.0}                                                            {float:CADONLY Core switch right offset}
bbset pnr.floorplan.CoreSwitchXPitch {15.36}                                                          {float:CADONLY Core switch X pitch}
bbset pnr.floorplan.CoreSwitchYPitch {4}                                                              {float:CADONLY Core switch Y pitch}
bbset pnr.floorplan.MissingSwitchHorizontalAlignment {0}                                                              {float: Align switches horizontally if missing}
bbset pnr.floorplan.CoreRegionSwitchYPitch {[expr [bbget .pnr.floorplan.CoreSwitchYPitch] + 1]}             {Increment CoreSwitchYPitch by 1 in the flow}
bbset pnr.floorplan.HorizontalChannelSwitchCell {HDR39XSINTCWD1BWP130HPNPN3P48CPDSVT}                            {str:MUSTSET Horizontal Channel switch cell name}
bbset pnr.floorplan.HorizontalChannelMinHeight {auto}                                                           {float:CADONLY Horizontal Channel Min height}
bbset pnr.floorplan.HorizontalChannelMaxHeight {13}                                                             {float:CADONLY Horizontal Channel Max height}
bbset pnr.floorplan.HorizontalChannelSwitchXPitch {[bbget .pnr.floorplan.CoreSwitchXPitch]}                        {float:CADONLY Horizontal channel switch X pitch}
bbset pnr.floorplan.HorizontalChannelSwitchPrefix {HCSW}                                                           {str:CADONLY Horizontal channel switch X pitch}
bbset pnr.floorplan.HorizontalChannelSwitchPadding {0.52}                                                           {float: Horizontal Channel Switch Padding}
bbset pnr.floorplan.HorizontalChannelOverrides {}                                                               {str: Horizontal Channel Override boxes}
bbset pnr.floorplan.HorizontalChannelMergeThreshold {0}                                                              {float:CADONLY Merge horizontal channels within specified distance}
bbset pnr.floorplan.AlignHorizontalChannelSwitches {1}                                                              {bool: to align horizontal channel switches with core switches}
bbset pnr.floorplan.VerticalChannelSwitchCell {HDR17XSINTCWGOLD1BWP130HPNPN3P48CPDSVT}                         {str:CADONLY Vertical channel switch cell name}
bbset pnr.floorplan.VerticalChannelMinWidth {2.63}                                                           {str:CADONLY Vertical Channel min width}
bbset pnr.floorplan.VerticalChannelMaxWidth {14.928}                                                         {str:CADONLY Vertical Channel max width}
bbset pnr.floorplan.VerticalChannelSwitchYPitch {5}                                                              {float:CADONLY Vertical Channel switch Y pitch}
bbset pnr.floorplan.VerticalChannelSwitchPrefix {VCSW}                                                           {str:CADONLY Vertical channel switch cell prefix}
bbset pnr.floorplan.VerticalChannelSwitchPadding {0}                                                              {float: Vertical channel switch padding}
bbset pnr.floorplan.VerticalChannelOverrides {}                                                               {str: Vertical channel override boxes}
bbset pnr.floorplan.VerticalChannelM1PGAlignment {1}                                                              {Vertical channel M1 PG alignment with core}
bbset pnr.floorplan.VerticalChannelSwitchXPitch {4.608}                                                          {Two columns vertical channel switchXPitch}
bbset pnr.floorplan.ExtraCoreSwitchXPitch {[bbget .pnr.floorplan.CoreSwitchXPitch]}                        {float: Extra core switches x pitch. Defaults to core switch x pitch}
bbset pnr.floorplan.ExtraCoreSwitchYPitch {[bbget .pnr.floorplan.CoreRegionSwitchYPitch]}                  {float: Extra core switches y pitch. Defaults to core switch y pitch}
bbset pnr.floorplan.CoreBoxExtraPSW  {}                                                               {str: Boxes to add extra power switch}
bbset pnr.floorplan.CoreBoxExtraPSWDoubleColumn {0}                                                              {bool: Enable to insert two column power extra power switch}
bbset pnr.floorplan.CriticalBoundarySwitchAddition {1}                                                              {bool: To insert power switch on weak boundary region}
bbset pnr.floorplan.HorizontalBoxExtraPSW {}                                                               {str: Boxes to add extra powerswitches inside horizontal boxes}
bbset pnr.floorplan.EnableWideChannelBlockages {0}                                                              {bool: Enable creating automatic placement blockages in wide channels to guide optimizations.}
bbset pnr.floorplan.WideChannelBlockageType {soft}                                                           {str: Type of channel blockage to create soft or partial}
bbset pnr.floorplan.WideChannelBlockageDensity {70}                                                             {float: Utilization for the wide channel blockage to control cell density for IR}
bbset pnr.floorplan.WideChannelBlockageSplitSize {0 0}                                                            {str: Create an array of blockages instead of a single blockage for more even cell distribution}
bbset pnr.floorplan.WideChannelBlockageExcludeFlops {0}                                                              {bool: Flag to allow flops in the wide channels. Default is true or allow}
bbset pnr.floorplan.EnableIRBlockages {1}                                                              {bool: Enable IR Blockages to avoid high cell density in regions without switch coverage}
bbset pnr.floorplan.IRBlockageDensity {50}                                                             {float: Utilization for IR blockages}
bbset pnr.floorplan.FiducialTapFix   {-0.0680}                                                        {float: Adjust the larger tap cell for power hook-up}
bbset pnr.floorplan.FiducialCell     {fiducial_h130}                                                  {str: fiducial cell name}
bbset pnr.floorplan.FiducialXOffset  {}                                                               {float: fiducial x offset}
bbset pnr.floorplan.FiducialYOffset  {}                                                               {float: fiducial Y offset}
bbset pnr.floorplan.FiducialYPitch   {32}                                                             {Fiducial Y-Pitch}
bbset pnr.floorplan.FiducialXPitch   {32}                                                             {Fiducial X-Pitch}
bbset pnr.floorplan.InsertFiducialCell {1}                                                              {bool: Enable fiducial cell insertion}
bbset pnr.floorplan.EnableBoundaryRoutingBlockages {1}                                                              {bool: Enable boundary routing blockages}
bbset pnr.floorplan.BoundaryRoutingBlockageLayers {M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 M11 M12 M13 M14 M15}             {str: list of layers to create boundary routing blocks on}
bbset pnr.floorplan.BoundaryRoutingBlockagePGPinLayers {M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 M11 M12 M13 M14 M15}             {str: PG pin layers to truncate boundary routing blockages}
bbset pnr.floorplan.BoundaryRoutingBlockageWidth {}                                                               {str: Boundary routing blockage width. Can be a single value {both} or {H V} for both directions.}
bbset pnr.floorplan.VoltageAreas     { PD_AVDD075_UFS0_EMBD_VPDIG {{0.912 398.658 838.128 1238.016} } PD_UFS0_HC {{0.912 75.868} {630.48 75.868} {630.48 101.036} {692.208 101.036} {692.208 139.308} {864.576 139.308} {864.576 268.008} {179.972 268.008} {179.972 199.888} {0.912 199.888} {0.912 75.868} }  PD_UFS0_PCS {{119.136 332.228 544.224 387.0865}} } {str: Define power domain boxes {pd1 {boxes1} pd2 {boxes2}}}
bbset pnr.floorplan.ViaSnapParams    {M1 grid M2 grid M3 grid M4 grid M5 grid M6 grid M7 grid M8 grid M9 grid M10 grid M11 grid M12 grid M13 grid M14 grid} {str: Control via snapping: grid, half grid or none}
bbset pnr.floorplan.ConvertVABoxesToPolygon {1}                                                              {bool: Switch to enable conversion of VA boxes to polygon. Enabled by default. Can be turned off if disjoint VAs are needed.}
bbset pnr.floorplan.VABoxesRectBoxList {1}                                                              {bool: Set this to 1 VA Boxes are defined as disjonted list of rectangles and not disjointed rectilinear shapes}
bbset pnr.floorplan.ChipCornerKeepoutWidth {}                                                               {float: Width for chip level corner keepout zone}
bbset pnr.floorplan.ChipCornerKeepoutHeight {}                                                               {float: Height for chip level corner keepout zone}
bbset pnr.floorplan.RingBlockNames   {}                                                               {str: Block names to draw ring around.}
bbset pnr.floorplan.EnableCoaxialRouting {0}                                                              {bool: Enable co-axial routing}
bbset pnr.floorplan.DEFFileForCoaxialRoutes {}                                                               {file: Read co-axial shielding information from an existing DEF file and not route in existing design}
bbset pnr.floorplan.CoaxialShieldResistanceCorner {}                                                               {str: RC corner in which co-axial routed nets resistance is to be measured}
bbset pnr.floorplan.CoaxialBusGroupsInfo {}                                                               {str: Coaxial buses to be routed along with their individual configurations. Example: {bus_group_1 {nets {net_1 net_2 net_3 net_4} top_layer {M10} bottom_layer {M9} shield_net {VSS} ndr {DTS_2W_2S}} }}
bbset pnr.floorplan.PushDownLayers   {}                                                               {str: Layers being pushed down from SoC}
bbset pnr.floorplan.KeepPitchAfterSnap {false}                                                          {bool: Option used in setAddStripeMode - Only set true in SOC blocks}
bbset pnr.floorplan.LVLBlock         {false}                                                          {bool: Used in pgspec.chip.tcl for custom M2 PG straps in LVL blocks}
bbset pnr.floorplan.LVLUpperGrid     {0}                                                              {str: Enable M14/M15 PG over soc LVL cells}
bbset pnr.floorplan.RetimerSkipRightMostM1PG {false}                                                          {str: Used in pgspec.chip.tcl to skip right-most M1 PG stripe in SOC retimer blocks}
bbset pnr.floorplan.WallPitch        {998.4}                                                          {float: Fillwall pitch}
bbset pnr.floorplan.SRAMNamingPattern {TS.*|ts.*}                                                      {str: Memory naming pattern regex}
bbset pnr.floorplan.WallToInCornerSpacing {0.768}                                                          {float: Wall to incorner spacing}
bbset pnr.floorplan.EnableContinousGlobalGrid {1}                                                              {bool: for Global continuous Grid across domains}
bbset pnr.floorplan.BoundaryCellCmdArgs {-boundary_tap true -boundary_tap_swap_flow true -wall_pitch 96} {str: extra args for boundary cell insertion related settings}
bbset pnr.floorplan.FollowPinLayer   {M0}                                                             {str: PG follow pin layer}
bbset pnr.floorplan.FiducialSiteWidth {}                                                               {float: fiducial cell site width}
bbset pnr.floorplan.FiducialSiteHeight {}                                                               {float: fiducial cell site height}
bbset pnr.floorplan.CustomIPM15Extension {12}                                                             {str: related to M15 pg extension of custom macros}
bbset pnr.floorplan.CustomIPM14Extension {12}                                                             {str: related to M14 pg extension of custom macros}
bbset pnr.floorplan.DisablePSWCoaxialKeepouts {1}                                                              {bool: disable power switch coaxial keepouts}
bbset pnr.floorplan.GuardRingLayers  {M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 M11 M12 M13}                     {str: Guard Ring Layers}
bbset pnr.floorplan.GuardRingNet     {VSS}                                                            {str: Guard Ring net name}
bbset pnr.floorplan.GuardRingSpec    {}                                                               {str: Guard Ring spec}
bbset pnr.floorplan.PowerGridSpec    {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/flash_pg.tcl} {file: Power grid spec for PG construsiton}
bbset pnr.floorplan.SwitchedDomainPGScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/switched_domain_abut.tcl} {file: PG spec for switched domains}
bbset pnr.floorplan.SwitchedDomainM13PGScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/m13_switch_grid.tcl} {file: switched domain M13 pg file}
bbset pnr.floorplan.AonDomainPGScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/aon_domain_h130.tcl} {file: PG spec for aon domain}
bbset pnr.floorplan.MemoryPGScript   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/macro_pg_2xM5_1xp76Pillar_3xM11M12_default.tcl} {file: default memory pgspec file}
bbset pnr.floorplan.MemoryPGScriptRecipe1 {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/macro_pg_2xM5_1xp76Pillar_3xM11M12_recipe1.tcl} {file: recipe1 memory pgspec file}
bbset pnr.floorplan.MemoryPGScriptRecipe2 {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/macro_pg_2xM5_1xp76Pillar_3xM11M12_recipe2.tcl} {file: recipe2 memory pgspec file}
bbset pnr.floorplan.MemoryPGScriptRecipe3 {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/macro_pg_2xM5_1xp76Pillar_3xM11M12_recipe3.tcl} {file: recipe3 memory pgspec file}
bbset pnr.floorplan.SingleRailMemoryPGScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/macro_pg_singlerail.tcl} {file: default memory pgspec file}
bbset pnr.floorplan.MemoryPGExtraM7M9 {MVDD}                                                           {str: Can be MVDD or AVDD. Applicable for Recipe1,2,3}
bbset pnr.floorplan.MemoryPGRecipe1Insts {}                                                               {str: List of memory insts to apply recipe1}
bbset pnr.floorplan.MemoryPGRecipe2Insts {}                                                               {str: List of memory insts to apply recipe2}
bbset pnr.floorplan.MemoryPGRecipe3Insts {}                                                               {str: List of memory insts to apply recipe3}
bbset pnr.floorplan.PowerGridDef     {}                                                               {file: power grid def for PG constrution this takes precedence over pgspec.tcl file}
bbset pnr.floorplan.PowerGridOverrides {}                                                               {str: power grid overrides}
bbset pnr.floorplan.PowerGridViaOverrides {}                                                               {str: power grid via overrides}
bbset pnr.floorplan.PGMaxRoutingLayer {M15}                                                            {str: Max PG routing layer. Default is pnr.MaxRoutingLayer}
bbset pnr.floorplan.BlockCoreMemoryGridLayers {}                                                               {str: block memory grid in core area for given layers}
bbset pnr.floorplan.ExtendPGStripesTillDieBoundary {1}                                                              {str: Extend the PG stripes till die boundary}
bbset pnr.floorplan.GenerateM0Stripes {1}                                                              {bool: to generate M0 stripes using addStripe engine}
bbset pnr.floorplan.PGM13FiducialContinuity {0}                                                              {bool: to enable continuous M13 over the fiducial cell}
bbset pnr.floorplan.EnableMacroM13Continuous {1}                                                              {bool: enable M13 pg continuous over macros}
bbset pnr.floorplan.EnableSwitchPillarPGFirst {1}                                                              {bool: enable switch pillar PG first in the pgspec.tcl}
bbset pnr.floorplan.AlignM14M15Tracks {1}                                                              {bool: enable/disable to align M14/M15 tracks}
bbset pnr.floorplan.PGM15VSSOffset   {0.86}                                                           {float: M15 PG VSS offset value}
bbset pnr.floorplan.PGM14VSSOffset   {0.27}                                                           {float: M14 PG VSS offset value}
bbset pnr.floorplan.PGM14M15OffsetFile {/google/gchips/workspace/redondo-asia/tpe/user/annug/pg_offset_new.tcl} {float: PG offset file containing the offset values}
bbset pnr.floorplan.EnableFullPGInM14M15 {0}                                                              {bool: To have complete PG in M14/M15 layers}
bbset pnr.floorplan.PGFillM14M15Spec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/pgfill_m14_m15.tcl} {file: Full PG enablement in M14/M15 layers}
bbset pnr.floorplan.EnableFullPGInM14M15AtClock {1}                                                              {bool: Enable PG Fill after the clock stage}
bbset pnr.floorplan.GspanAonBoxes    {}                                                               {str: List of aon domain GSPAN boxes for denser pg grid}
bbset pnr.floorplan.GspanSwitchedBoxes {}                                                               {str: List of switched domain GSPAN boxes for denser pg grid}
bbset pnr.floorplan.AonDomainGspanPGScript {}                                                               {file: aon domain gspan pg spec file}
bbset pnr.floorplan.SwitchedDomainGspanPGScript {}                                                               {file: switched domain gspan pg spec file}
bbset pnr.floorplan.SVDDNets         {}                                                               {str: secondary pg config}
bbset pnr.floorplan.AonDomainSecondaryPGSpec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/aon_secondary_pg.tcl} {file: Aon Domain secondary PG spec}
bbset pnr.floorplan.SwitchedDomainSecondaryPGSpec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/switched_secondary_pg.tcl} {file: Switched Domain secondary PG spec}
bbset pnr.floorplan.EnableTapSecondaryPG {1}                                                              {bool: To enable secondary pg for tap cell connections}
bbset pnr.floorplan.TapSecondaryPGSpec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/tap_secondary_pg_add_target_pg.tcl} {file: secondary pg spec file for tap cell connections}
bbset pnr.floorplan.TapSecondaryPGTargetLayer {M3}                                                             {str: target layer for tap secondary pg}
bbset pnr.floorplan.TapSecondaryM3Config {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/stack_layer_M1_M2.config} {file: config file for M3 target layer tap secondary pg}
bbset pnr.floorplan.TapSecondaryM5Config {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/stack_layer_M1_M4.config} {file: config file for M5 target layer tap secondary pg}
bbset pnr.floorplan.EndCapTapPG      {0}                                                              {bool: Enable it to create the end cap before the tap grid}
bbset pnr.floorplan.MultiPDFWAlign   {0}                                                              {Enable to align fillwall in multi power domain}
bbset pnr.floorplan.MultiPDPSAlign   {0}                                                              {Enable to align power switch in multi power domain}
bbset pnr.floorplan.CustomMacroList  {}                                                               {list: List of Custom Macros used}
bbset pnr.floorplan.AllCustomMacroCellList {}                                                               {list: List of all custom macros in a given project}
bbset pnr.floorplan.CustomMacroIpWiseSpec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/h130/ip_wise_spec.tcl} {file: PG spec for custom macros}
bbset pnr.floorplan.ESDHaloFollowed  {0}                                                              {bool: Enable power grid enhancement over ESD / B2B if halo is followed}
bbset pnr.floorplan.Reports          {welltap_endcap gif pg_layer_stats power_chain_report layer_track_usage_report fiducial_cell cell_legality} {Default reporting in floorplan stage}
bbset pnr.floorplan.Exports          {netlist def lef macro_list}                                     {Default exports in floorplan stage}
bbset pnr.floorplan.InlineExports    {def upf netlist macro_list ib_def lef lef}                      {Inline exports in floorplan stage}
bbset pnr.floorplan.Metrics          {power timing layout}                                            {Default metrics in floorplan}
bbset pnr.floorplan.PSGridSort       {true}                                                           {Enable Grid based sorting in PS manual chaining}
bbset pnr.floorplan.UserDefineSnapConstraintGrid {0 -0.052 0.048 0.260}                                           {# No Comment}  
bbset pnr.Stages                     {placeopt clock clockopt route routeopt chipfinish}              {PNR Flow Stages}
bbset pnr.Tool                       {fc}                                                             {PNR Tool Name} 
bbset pnr.Cores                      {32}                                                             {Number of cores for the main stage}
bbset pnr.RAM                        {128000}                                                         {Memory (in MB) for the main stage}
bbset pnr.Resources                  {}                                                               {NC resources}  
bbset pnr.LicenseWaitTime            {360}                                                            {License wait time in minutes}
bbset pnr.AutoQueryRAM               {0}                                                              {Enable RAM pickup from central bigquery}
bbset pnr.EnableGUI                  {0}                                                              {Enable GUI for the main execution node }
bbset pnr.MessageLimits              {}                                                               {Specify message limits on tool messages}
bbset pnr.ExitOnLinkError            {True}                                                           {Error on link issue between int and lib and lef}
bbset pnr.ExportCores                {16}                                                             {Number of cores for the export stage}
bbset pnr.ExportRAM                  {128000}                                                         {Memory (in MB) for the export stage}
bbset pnr.ExportResources            {}                                                               {NC Resources: enable C2D/N2D}
bbset pnr.EnableNotifications        {False}                                                          {Enable EMAIL Notifications for stage completion}
bbset pnr.EnableMorpheus             {true}                                                           {To enable morpheus based macro AI assistant tool}
bbset pnr.EnableMorpheusVerifier     {true}                                                           {To enable morpheus based macro AI assistant tool}
bbset pnr.TempDir                    {}                                                               {Optional temp directory path to work around default FE_TMPDIR issues}
bbset pnr.PreRunScripts              {}                                                               {Pre run scripts to intercept the run before main flow execution}
bbset pnr.PostRunScripts             {}                                                               {Post run scripts to intercept the run after main flow execution}
bbset pnr.PreExportRunScripts        {}                                                               {Pre export run scripts to intercept the run before export flow execution}
bbset pnr.PostExportRunScripts       {}                                                               {Post export run scripts to intercept the run after export flow execution}
bbset pnr.PreAssembleRunScripts      {}                                                               {Pre assemble run scripts to intercept the run before assemble flow execution}
bbset pnr.PostAssembleRunScripts     {}                                                               {Post assemble run scripts to intercept the run after assemble flow execution}
bbset pnr.UnsupportedFDLMainPreScripts {}                                                               {Scripts be source before main function in pnr stage fdl. This variable is only for flow onwer.}
bbset pnr.UnsupportedFDLMainPostScripts {}                                                               {Scripts be source before after function in pnr stage fdl. This variable is only for flow onwer.}
bbset pnr.PreserveMainCallbacks      {0}                                                              {Preserve the main callbacks defined in the flow}
bbset pnr.WatermarkRTLTag            {[bbget .syn.WatermarkRTLTag]}                                   {RTL tag}       
bbset pnr.WatermarkPushdownTag       {[bbget .syn.WatermarkPushdownTag]}                              {WatermarkpushdownTag}
bbset pnr.WatermarkCell              {[bbget .syn.WatermarkCell]}                                     {Watermark lib cell}
bbset pnr.EnableWaterMarkInsertion   {[bbget .syn.EnableWaterMarkInsertion]}                          {Enable disable watermark insertion}
bbset pnr.MultiInputSwitchingCoefficient {[bbget .sta.config.global.MultiInputSwitchingCoefficient]}      {Multi input switching factor }
bbset pnr.EnableGKCNode              {0}                                                              {bool: set it to 1 to enable GKC in all PNR stages guided via ValidGKCStages}
bbset pnr.GkcRunBy                   {pd}                                                             {Indicates GkcRunBy pd or dft}
bbset pnr.ValidGKCStages             {placeopt routeopt chipfinish}                                   {valid stages to enable GKC in PNR flow}
bbset pnr.TechFile                   {[bbquery get file -db pdk -filter "file_type=~'techfile' && tool=~'icc2' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {Milkyway tech file}
bbset pnr.TechLEFFile                {[bbquery get file -db pdk -filter "file_type=~'techlef' && tool=~'innovus' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {Milkyway tech file}
bbset pnr.LayerMapFile               {[bbquery get file -db pdk -filter "file_type=~'nxtgrdlayermap' && tool=~'starrc' && stack=~'[bbget .Stack]' && is_shdmim =~'[bbget .TechIsShdmim]'&& pnr_tool =~'icc2'"]} {fc layermap file}
bbset pnr.MetalStack                 {}                                                               {Metal Stack Name}
bbset pnr.QRCTechMapFile             {[bbquery get file -db pdk -filter "file_type=~'qrctechmap' && tool=~'innovus' && stack=~'[bbget .Stack]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {Quantus RC Tech map file}
bbset pnr.QRCCmdFile                 {[bbget .info.PROCESS_DIR]/pnr/innovus/routeopt.qrc.cmd}         {Quantus RC Cmd file for RC Extraction}
bbset pnr.ExtractEnableVirtualMetalFill {0}                                                              {Enable Virtual Metal Fill in extraction.}
bbset pnr.QRCVMFCmdFile              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/routeopt.ivmf.qrc.cmd} {Quantus RC Cmd file used for RC extraction with virtual metal fill at SignoffOpt stage}
bbset pnr.VMFScheme                  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/n3e_schemefile} {Metal Scheme File for Quantus Virtual Metal Fill Extraction}
bbset pnr.VMFRule                    {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/ivmf_rulefile} {Metal Fill Rule File for Quantus Virtual Metal Fill Extraction}
bbset pnr.QRCCores                   {8}                                                              {Additional cores to be reserved for QRC extraction}
bbset pnr.QRCMemory                  {30000}                                                          {Additional memory to be reserved for QRC extraction}
bbset pnr.QRCTempdir                 {}                                                               {Use a local temp directory for QRC extraction}
bbset pnr.QRCTechFiles               {[bbquery get file -db pdk -filter "file_type=~'parasitics' &&  tool=~'qrc'" ]} {qrcTechFile file list}
bbset pnr.RouteHonorNonDefaultRules  {wire 6:14}                                                      {Set strict route NDR}
bbset pnr.StreamOutMapFile           {[bbquery get file -db pdk -filter "file_type=='layermap' && function=='pnr' && stack=='[bbget .Stack]' && is_shdmim=='[bbget .TechIsShdmim]' && tool=='[regsub fc [bbget .pnr.Tool] icc2]'"]} {Streamout Map file}
bbset pnr.StreamOutFillWiresAsStripes {1}                                                              {Force streamout fill wires as stripes if layer map is missing fillwire definitions}
bbset pnr.CellEdgeSpacingFile        {}                                                               {Cell edge spacing for Lassen libraries}
bbset pnr.PlacementSpacingRuleFile   {[glob -nocomplain /google/gchips/lib/foundry/tsmc/[bbget .info.PROCESS]/tsmc/dk/[bbget .DkVersion]/par_tcl/sc*[bbget .Track]*/*.tcl] [glob -nocomplain /google/gchips/lib/foundry/tsmc/[bbget .info.PROCESS]/tsmc/dk/[bbget .DkVersion]/par_tcl/ip*/*.tcl]} {Cell edge spacing for synopsys libraries}
bbset pnr.UFCRulesFile               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/ufc.rules} {Unified floorplan constraints rules file for check floorplan}
bbset pnr.SiteHeight                 {0.130}                                                          {Default site height}
bbset pnr.SiteWidth                  {0}                                                              {Default site width}
bbset pnr.StdLibraryFileInclude      {.*h130.*}                                                       { use to exclude libraries match this regep}
bbset pnr.StdLibraryFileExclude      {.*h156.*}                                                       { use to exclude libraries match this regep}
bbset pnr.MacroLibraryFileInclude    {ts1n02pmblvtb4096x32m8twzhodxcp|ts6n02psvtb64x132m1bzhocp|ts6n02psvta512x128m2sbzhocp|ts6n02psvta144x128m2sbzhocp|ts6n02psvta200x128m2sbzhocp|ts1n02pmbsvta4096x16m4qbzhocp|ts1n02psbsvta512x118m2bzhocp|ts6n02psvtb512x128m2bzhocp|ts6n02psvtb256x132m1bzhocp|ts6n02psvtb64x180m1bzhocp|ts3n02psvta16384x16m16bzo_hsios_mphy_rom|ts3n02psvta4096x16m16bzo_hsios_mphy_rom|dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns|ts6n02psvtb256x264m1bzhocp|ts6n02psvtb64x264m1bzhocp|ts1n02pmbsvta16384x16m16qbzhocp|ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom|ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom|tphn02p_075od12gpio.*|fiducial.*|ts6n02psvta256x256m1sbzhocp|ts6n02psvta32x256m1sbzhocp|ts6n02psvta80x256m1sbzhocp|ts6n02psvtb256x256m1bzhocp|ts6n02psvtb32x264m1bzhocp} {use to include macro libraries match this regexp}
bbset pnr.MacroLibraryFileExclude    {}                                                               {use to exclude macro libraries match this regep}
bbset pnr.CreateSingleConstraintMode {}                                                               {To create only one constraint mode irrespective of multiple scenarios per mode}
bbset pnr.scenarios.IncrementalScenarios {}                                                               {define incremental scenarios that been added in implementation stages}
bbset pnr.LibraryLEFFiles            {[bbquery get file -filter "file_type=='lef'"]}                  {LEF files}     
bbset pnr.LibraryVlgFiles            {[bbquery get file -filter "file_type=='vlg'"]}                  {LEF files}     
bbset pnr.LibraryCCSLibFiles         {[bbquery get file -filter "file_type=='ccs_lib'"]}              {CCS Lib files} 
bbset pnr.ExtraNdmLibrary            {}                                                               {Extra NDM Libraries}
bbset pnr.TieHighLowCell             {TIELXNBWP130HPNPN3P48CPDLVT TIEHXPBWP130HPNPN3P48CPDLVT}        {Tie HILO cell} 
bbset pnr.TieHiLoMaxFanout           {4}                                                              {Max fanout of tie High Low cells}
bbset pnr.TieHiLoMaxDistance         {25}                                                             {Max Distance of tie High Low cells}
bbset pnr.GPTieHighLowCell           {GTIELXNBWP130HPNPN3P48CPDLVT GTIEHXPBWP130HPNPN3P48CPDLVT}      {GP Tie HILO cell}
bbset pnr.ManualTieHiLoPinsFile      {}                                                               {List of pins to manually insert tie hi/lo cells}
bbset pnr.ManualGPTieHiLoPinsFile    {}                                                               {List of pins to manually insert AON tie hi/lo cells}
bbset pnr.AntennaCellName            {ANTENNAFIN4DHMGOFBIBWP130HPNPN3P48CPDSVT}                       {use to fix antenna violations}
bbset pnr.DelayCells                 {DELAD1BWP130HPNPN3P48CPDLVT DELCD1BWP130HPNPN3P48CPDLVT  DELED1BWP130HPNPN3P48CPDLVT DELGD1BWP130HPNPN3P48CPDLVT BUFFD2BWP130HPNPN3P48CPDLVT  BUFFD2BWP130HPNPN3P48CPDLVTLL BUFFD3BWP130HPNPN3P48CPDLVTLL BUFFD4BWP130HPNPN3P48CPDLVT} {List of delay cells for hold fixing}
bbset pnr.EnableEMT                  {false}                                                          {to enable EMT flow, Toggle factor based cell EM violation fixing }
bbset pnr.EnableGlitchPowerOptimization {0}                                                              {Glitch Power Optimization flow for innovus}
bbset pnr.DontUseCellList            {}                                                               {Global dont use cell list}
bbset pnr.DontUseCellListFiles       {}                                                               {GLobal dont use cell list}
bbset pnr.ForceUseCellList           {}                                                               {Global Force Use cell list}
bbset pnr.ForceUseCellListFiles      {}                                                               {Global Force use cell List Files}
bbset pnr.PhysicalCellVth            {}                                                               {Physical cell VTH prefix}
bbset pnr.BoundarySkewPortPatterns   {*clk* *CLK* *R* *SE* *WRCK* I_DFT_TCK VDD* VSS *feedthru* *dft* *DFT* *SCAN*} {Port Patterns to be disabled with usefulSkew optimization}
bbset pnr.PathGroupOverrides         { INPUT {effortLevel high}  IN2OUT {effortLevel high}
                                      OUTPUT {effortLevel high} REG2REG {effortLevel high} REG2MEM {effortLevel high}
                                      MEM2REG {effortLevel high} REG2ICG {effortLevel high} IN2ICG {effortLevel high}
                                      } {Path Group switch settings dict for each path_groups}
bbset pnr.RetimerCellVthType         {}                                                               {use for vt check for retimer cells}
bbset pnr.ClockCellVthType           {}                                                               {use for vt check for clock cells}
bbset pnr.TargetExtractRcCorners     {[bbget .pex.TargetExtractRcCorners]}                            {Extract RC Corners for the chipfinish stage}
bbset pnr.subblock.Lefs              {[bbfiles -bundles chipfinish -filetype lef -purpose signoff -hierarchy -subblocks all]} {List of subblock lef files that feed into ExtraLibs feature}
bbset pnr.subblock.Libs              {[bbfiles -bundles chipfinish -filetype lib -subblocks all]}     {List of subblock lib files that feed into ExtraLibs feature}
bbset pnr.ExtraLibs.Enable           {True}                                                           {# enable the extra-lib function for PNR subblocks}
bbset pnr.ExtraLibs.bbquery.ip.lef   {[bbget .pnr.subblock.Lefs]}                                     {# lef for subblock. Getten from .pnr.subblock.Lefs by default}
bbset pnr.ExtraLibs.bbquery.ip.ccs_lib {[bbget .pnr.subblock.Libs]}                                     {# ccs_lib for subblock. Getten from .pnr.subblock.Libs by default}
bbset pnr.EnableAdvanceMIS           {false}                                                          {To enable amis derating}
bbset pnr.EnableDistortionEffectCheckArc {True}                                                           {Consider waveform distortion effect on check arc calculation}
bbset pnr.PathGroupFile              {}                                                               {use to source a file with pre-defined path groups}
bbset pnr.PVTCornersFile             {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/config/pvt/pvt.yaml} {PVT corner definitions file}
bbset pnr.holdmargin.UncertaintyTableName {[bbget .sta.config.additional_hold_margin.UncertaintyTableName]} {# provide one of the table name in .sta.config.additional_hold_margin.Uncertainty, or leave empty to get default table}
bbset pnr.holdmargin.Uncertainty.Value {[bbget ".sta.config.additional_hold_margin.[bbget .pnr.holdmargin.UncertaintyTableName].Uncertainty" -traverse 1]} {# Hold margin scenario pattern and value list. Align STA format. go/rdo-timing-signoff}
bbset pnr.holdmargin.custom_macro_margin.HoldUncertaintyRatio {[bbget .sta.config.custom_macro_margin.HoldUncertaintyRatio]}   {# Add extra hold uncertainty on custom macros's clock pin, multiply hold_uncertainty_ratio with original hold uncertainty}
bbset pnr.holdmargin.FlowSettingMethod {[bbget .sta.config.additional_hold_margin.FlowSettingMethod]}   {# value : var|csv}
bbset pnr.holdmargin.UncertaintyTable {[bbget .sta.config.additional_hold_margin.UncertaintyTable]}    {# default table name for hold uncertainty}
bbset pnr.holdmargin.CsvInput        {[bbget .sta.config.additional_hold_margin.CsvInput]}            {# CSV folder for hold uncertainty}
bbset pnr.drv.ClockConstraintDenominator {[bbget .sta.config.drv_constraint.ClockConstraintDividedBy]}    {Denominator for clock slew calculation. default clock slew constraint is T/6, which T is clock period}
bbset pnr.drv.DataConstraintDenominator {[bbget .sta.config.drv_constraint.DataConstraintDividedBy]}     {Denominator for data slew calculation. default data  slew constraint is T/3, which T is clock period}
bbset pnr.drv.ClockConstraintDenominatorOverrides {{* 6} {*NM* 9} {*UD* 9} {*SUD* 9} {*UUD* 9}}                    {Overrides of Denominator for clock slew calculation. eg {{*SUD* val1} {*uud* val2}}}
bbset pnr.drv.ClockConstraintMaxValues {{* 10000000000} {*NM* 0.250} {*UD* 0.275} {*SUD* 0.300} {*UUD* 0.335}} {Max values of clock constraints that can be used.  eg {{*SUD* val1} {*uud* val2}}}
bbset pnr.drv.DataConstraintDenominatorOverrides {{* 3} {*NM* 5} {*UD* 4} {*SUD* 3} {*UUD* 3}}                    {Overrides of Denominator for data slew calculation. eg {{*SUD* val1} {*uud* val2}}}
bbset pnr.lowvpocv.LowVoltagePvts    {[bbget .sta.config.additional_max_trans_sigma.Pvts]}            {# PVTs that to be in lowV conditions, wildcard supported, type=list}
bbset pnr.lowvpocv.DataTransSigma    {[bbget .sta.config.lowv_pocv.DataTransSigma]}                   {# data transition sigma}
bbset pnr.lowvpocv.ClkTransSigma     {[bbget .sta.config.lowv_pocv.ClkTransSigma]}                    {# clock transition sigma}
bbset pnr.lowvpocv.AdditionalLowVoltagePvts {[bbget .sta.config.additional_max_trans_sigma.Pvts]}            {# PVTs that to be in lowV conditions, wildcard supported, type=list}
bbset pnr.lowvpocv.AddLowVDataTransSigma {[bbget .sta.config.additional_max_trans_sigma.DataTransSigma]}  {# data transition sigma}
bbset pnr.lowvpocv.AddLowVClkTransSigma {[bbget .sta.config.additional_max_trans_sigma.ClkTransSigma]}   {# clock transition sigma}
bbset pnr.lowvpocv.LowVoltageCellVtsConfig {[bbget .sta.config.lowv_pocv.LowVoltage_CellVts_config]}        {# Cell Vts that to be in lowV conditions, to set HoldConstraintSubtractSigma, wildcard supported, type=list}
bbset pnr.lowvpocv.HoldConstraintSubtractSigma {[bbget .sta.config.lowv_pocv.HoldConstraintSubtractSigma]}      {# hold subtract sigma}
bbset pnr.DerateScriptsSkipStages    {libgen}                                                         {Default: libgen. List of stages to skip createDerateScript. 'all' can be used to skip in all the stages}
bbset pnr.DerateFiles                {./srcs/inputs/reduce_table.yaml}                                {IP Specific Derate YAML files from timing team}
bbset pnr.DerateTCLFiles             {}                                                               {User defined IP Specific Derate TCL files}
bbset pnr.DerateLibNameMappingFiles  {./srcs/inputs/derate_libname_mapping.tcl}                       {Library name to vt_derate table lookup key mapping TCL files.}
bbset pnr.DerateLibNameMappingLibs   {[bbget .sta.DerateLibNameMappingLibs]}                          {Lib files bbquery filtering pattern for generating library name to vt_derate_lookup key mapping dict}
bbset pnr.MISDerateLibNameMappingFiles {./srcs/inputs/mis_derate_libname_mapping.tcl}                   {Library name to vt_derate table lookup key mapping TCL files.}
bbset pnr.MISDerateLibNameMappingLibs {}                                                               {lib files bbquery filtering pattern for generating library name to mis_derate_lookup key mapping dict}
bbset pnr.derate.ActiveAllScenarios  {0}                                                              {Active all the scenarios before derate is applied. This help user to switch scenarios after derate is applied. This option only useful for innovus. fc can apply derate on scenarios without activation. pnr.derate.<STAGE>.ActiveAllScenarios is supported}
bbset pnr.derate.RevisableDerate     {temperature voltage aging}                                      {Derate that is revisable through revise derate process.}
bbset pnr.derate.Value               {}                                                               {Global default derate value for revise derating across all the stages, corners, clock/data, cell_type and rise/fall}
bbset pnr.derate.vt_mismatch.dominate_vt.Value {[bbget .sta.config.derate.VtMismatch.DominateVt]}               {# Dominate vt type for the design. Default is from .sta.config.derate.VtMismatch.DominateVt}
bbset pnr.derate.vt_mismatch.penalty.Value {[bbget .sta.config.derate.VtMismatch.Penalty]}                  {# additional increment derate on non-dominate vt cells. Default is from .sta.config.derate.VtMismatch.Penalty}
bbset pnr.derate.vt_mismatch.DerateCsvInput {[bbget .sta.config.derate.VtMismatch.DerateCsvInput]}           {# No Comment}  
bbset pnr.derate.od_mismatch.DerateCsvInput {[bbget .sta.config.derate.ODMismatch.DerateCsvInput]}           {# No Comment}  
bbset pnr.derate.aging.StressCondition {[bbget .sta.config.derate.Aging.StressCondition]}               {# Stress condition selection, pf[\d+] or default, default=default}
bbset pnr.derate.aging.MemStressCondition {[bbget .sta.config.derate.Aging.Mem.StressCondition]}           {# Stress condition selection, pf[\d+] or default, default=default}
bbset pnr.derate.aging.MemApplyMapping {[bbget .sta.config.derate.Aging.Mem.ApplyMapping]}              {# applied derate mapping rules}
bbset pnr.derate.aging.DerateCsvInput {[bbget .sta.config.derate.Aging.DerateCsvInput]}                {# No Comment}  
bbset pnr.derate.shifttemperature.InputYaml {[bbget .sta.config.derate.ShiftTemperature.InputYaml]}          {# input reference temperature yaml}
bbset pnr.derate.shifttemperature.BaseTemperature {[bbget .sta.config.derate.ShiftTemperature.BaseTemperature]}    {# base reference temperature derate source}
bbset pnr.derate.shifttemperature.ToTemperature {[bbget .sta.config.derate.ShiftTemperature.ToTemperature]}      {# shift to temperature derate}
bbset pnr.derate.shifttemperature.TemperatureShift {[bbget .sta.config.derate.ShiftTemperature.TemperatureShift]}   {# degree of temperature shift}
bbset pnr.derate.shifttemperature.TargetPvts {[bbget .sta.config.derate.ShiftTemperature.TargetPvts]}         {# targeting PVTs to be scaled}
bbset pnr.derate.foundryprocess.DefaultInputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.DefaultYaml]} {# default input derate foundry process addl derate yaml}
bbset pnr.derate.foundryprocess.InputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.yaml]}    {# input derate foundry process addl derate yaml}
bbset pnr.derate.foundryprocess.IncludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.IncludeRcCorner]} {# regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset pnr.derate.foundryprocess.ExcludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.ExcludeRcCorner]} {# regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset pnr.derate.foundryprocess.TableName {[bbget .sta.config.derate.foundry_process_addl_derate.TableName]} {# table name in yaml file}
bbset pnr.derate.foundryprocess.ApplyMapping {
                                      {early_clock {set_timing_derate -cell_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -cell_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -cell_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -cell_delay -increment -late -data} }
                                      {setup       {set_timing_derate -cell_check -increment -late} }
                                      {hold        {set_timing_derate -cell_check -increment -early} }
                                      } {# applied derate mapping rules}
bbset pnr.derate.foundryprocess.mem.InputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.mem.yaml]} {# input derate foundry process addl derate yaml}
bbset pnr.derate.foundryprocess.mem.DefaultInputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.mem.DefaultYaml]} {# input derate foundry process addl derate yaml}
bbset pnr.derate.foundryprocess.mem.IncludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.mem.IncludeRcCorner]} {# regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset pnr.derate.foundryprocess.mem.ExcludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.mem.ExcludeRcCorner]} {# regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset pnr.derate.foundryprocess.mem.TableName {[bbget sta.config.derate.foundry_process_addl_derate.mem.TableName]} {# table name in yaml file}
bbset pnr.derate.foundryprocess.mem.ApplyMapping {
                                      {tcd_late_derate    {set_timing_derate -cell_delay -increment -late} }
                                      {min_period_derate  {set_timing_derate -min_period} }
                                      {min_period_derate_total_with_aging {set_timing_derate -min_period} }
                                      {mpw_derate         {set_timing_derate -min_pulse_width} }
                                      {mpw_derate_with_aging {set_timing_derate -min_pulse_width} }
                                      {setup_path         {set_path_margin -setup} }
                                      {hold_path          {set_path_margin -hold} }
                                      } {# applied derate mapping rules}
bbset pnr.derate.illegal_cell.CellGroups {[bbget .sta.config.illegal_cell_margins.types]}                 {Cell groups for illegal cell derate}
bbset pnr.derate.illegal_cell.InputYaml {[bbget .sta.config.illegal_cell_margins.yaml]}                  {inpiut derate for illegal cell yaml}
bbset pnr.derate.illegal_cell.ApplyMapping {
                                      {early_clock {set_timing_derate -cell_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -cell_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -cell_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -cell_delay -increment -late -data} }
                                      {early_pocvm_clock {set_timing_derate -cell_delay -increment -early -clock} }
                                      {early_pocvm_data  {set_timing_derate -cell_delay -increment -early -data} }
                                      {late_pocvm_clock  {set_timing_derate -cell_delay -increment -late -clock} }
                                      {late_pocvm_data   {set_timing_derate -cell_delay -increment -late -data} }
                                      {setup_path  {set_path_margin -setup} }
                                      {hold_path   {set_path_margin -hold} }
                                      } {# applied derate mapping rules}
bbset pnr.derate.net.InputCsv        {[bbget .sta.config.wire_ocv.Derate.File]}                       {Input derate for net flat derate}
bbset pnr.derate.net.ApplyMapping    {
                                      {early_clock {set_timing_derate -net_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -net_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -net_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -net_delay -increment -late -data} }
                                      } {# applied derate mapping rules}
bbset pnr.derate.socvrcfactor.Value  { { * {early 0.10 late 0.10} } }                                 {Defines the value of interconnect delay variation factor. This value applies global variation as percentage of the nominal delay by command set_socv_rc_variation_factor. The value range from 1.0 to 0.0. eg. { {*NM* {early 0.10 late 0.10} } {*SUD* {early 0.10 late 0.10}} }}
bbset pnr.derate.delay_buffer_hold_penalty.DeratePenaltyValue {[bbget .sta.config.setup_margin.DelayBufferHoldPenalty.DeratePenaltyValue]} {# delay hold buffer penalty value}
bbset pnr.derate.delay_buffer_hold_penalty.Pattern {[bbget .sta.config.setup_margin.DelayBufferHoldPenalty.Pattern]} {# DELAY Buffer Patterns, ex: *DEL*}
bbset pnr.derate.custom_macro_margin.EarlyDerate {[bbget .sta.config.custom_macro_margin.EarlyDerate]}            {# Add extra derate on early path of custom macro}
bbset pnr.derate.custom_macro_margin.VoltageTemperatureDerateMap {[bbget .sta.config.custom_macro_margin.VoltageTemperatureDerateMap]} {# mapping the macro to stdcell type for vt variation and agining derate}
bbset pnr.derate.custom_macro_margin.foundry_extra_margin.CellRegexp {[bbget .sta.config.custom_macro_margin.foundry_extra_margin.CellRegexp]} {# List of cell regexp}
bbset pnr.derate.custom_macro_margin.foundry_extra_margin.Derate {[bbget .sta.config.custom_macro_margin.foundry_extra_margin.Derate]} {# cell_delay late derate value to be applied}
bbset pnr.WireOCVMFile               {[bbquery get file -filter "file_type=='pocvm' && library_name=='wire'"]} {wire.pocvm file for FC read_ocvm}
bbset pnr.SetupSigmaMultipliers      {}                                                               {Scenario specific setup sigma mulitpliers. eg {*UUD* 2.0}}
bbset pnr.HoldSigmaMultipliers       {*ffgnp-USOD* 4 *ffgnp-SOD* 4 *ffgnp-OD* 4 *ffgnp-NM* 4 *ssgnp-USOD* 4 *ssgnp-SOD* 4 *ssgnp-OD* 4 *ssgnp-NM* 4 *ssgnp-UD* 4 *ssgnp-SUD* 4 *ssgnp-UUD* 4 *sfg-NM* 4 *fsg-NM* 4 *sfg-SUD* 4 *fsg-SUD* 4 *sfg-UUD* 4 *fsg-UUD* 4} {Scenario specific hold sigma mulitpliers. eg {*UUD* 2.0}}
bbset pnr.OverWriteConsFiles         {}                                                               {Global constraint constraint file}
bbset pnr.ScaleFactor                {10000}                                                          {Technology scale factor}
bbset pnr.ClockCCOptSpecFile         {}                                                               {Custom spec file to be sourced instead of default ccopt.spec}
bbset pnr.IncrementalSDC             {}                                                               {Reading incremental sdc at each stage to control uncertainity}
bbset pnr.MaxTransitionOverrides     {[bbget syn.MaxTransitionOverrides]}                             {Apply user max transition overrides. eg {{*SUD* {data {*clk* 0.70} clock {*clk* 0.60}}} {*NM* {data {*clk* 0.70} clock {*clk* 0.60}}}}}
bbset pnr.MaxTransitionOverridesPercentage {}                                                               {Apply user max transition overrides in percentage. eg {{*SUD* {data {*clk* 0.70} clock {*clk* 0.60}}} {*NM* {data {*clk* 0.70} clock {*clk* 0.60}}}}}
bbset pnr.ClockUncertainityOverrides {}                                                               {Apply user clock uncertainity overrides. eg {{*SUD* {setup {*clk* 0.070} hold {*clk* 0.070}}} {*NM* {setup {*clk* 0.050} hold {*clk* 0.050}}}}}
bbset pnr.EnablePreRouteAWP          {1}                                                              {Enable Advanced waveform propagation in pre-route stages}
bbset pnr.EnableAdvancedPincapMode   {2}                                                              {Enable Advanced Pin cap mode}
bbset pnr.EnableCCDOptimization      {0}                                                              {Enable concurrent clock data optimization}
bbset pnr.ViaVariationFastCorners    {}                                                               {Fast corners for via variation modeling}
bbset pnr.ViaVariationSlowCorners    {}                                                               {Slow corners for via variation modeling}
bbset pnr.ViaVariationFileForFastCorners {}                                                               {Via variation model file for fast corners}
bbset pnr.ViaVariationFileForSlowCorners {}                                                               {Via variation model file for slow corners}
bbset pnr.EnableSignoffDeratesAtPreroute {0}                                                              {Enable the use of signoff ageing derates at pre-route stages}
bbset pnr.EnableSignoffCorrSettingsAtPreroute {0}                                                              {Enable the use of signoff settings at pre-route stages}
bbset pnr.EnableClockSourceLatencyOverride {false}                                                          {Set Clock Latency based on PostCtsClockSourceLatency value}
bbset pnr.ClockSourceLatencyOverrides {}                                                               {Custom scanerio clock IO latencys. dict of dicts as { view1 {{clk1 latency} {clk2 latency}} view2 ...}}
bbset pnr.AllRoutingLayers           {M0 M1 M2 M3 M4 M5 M6 M7 M8 M9 M10 M11 M12 M13 M14 M15}          {All Routing Layers}
bbset pnr.HorizontalLayers           {M0 M2 M4 M6 M8 M10 M12 M14}                                     {Horizontal layers}
bbset pnr.VerticalLayers             {M1 M3 M5 M7 M9 M11 M13 M15}                                     {Vertial layers}
bbset pnr.MinRoutingLayer            {M0}                                                             {Global Min Routing Layer}
bbset pnr.MaxRoutingLayer            {M13}                                                            {Global Max Routing Layer}
bbset pnr.MinShieldRoutingLayer      {6}                                                              {Global min shielding layer}
bbset pnr.SwitchHorMinChannelHeight  {}                                                               {Min channel height for Switched power domain}
bbset pnr.AonHorMinChannelHeight     {}                                                               {Min channel height for AON power domain}
bbset pnr.VertMinChannelWidth        {}                                                               {Min channel width for h280/h210 cell type}
bbset pnr.RouteDBViaWeights          {}                                                               {Set Route DB Via weights }
bbset pnr.VerifyDRCModeSettings      {check_implant {true}}                                           {Set dictionary of set_verify_drc_mode settings for checks}
bbset pnr.EnablePreRouteDelayCalcFix {1}                                                              {Enable ETF from cadence on delay calc fix at preRoute stages}
bbset pnr.IgnoreAntennaFixOnIONets   {false}                                                          {Control the antenna fixing on nets of IO nets}
bbset pnr.ForceMemoryScanReordering  {0}                                                              {Enable forcibly making the memory consider for reordering}
bbset pnr.ForceScanReorderingIOPatterns {}                                                               {Provide IO patterns list for forced reodering ex:{{in1 out1} {in2 out2} .. }}
bbset pnr.MaxFanout                  {32}                                                             {Global Max Fanout }
bbset pnr.EnablePOCV                 {1}                                                              {Enable Parametrics OCV}
bbset pnr.EnableLowVPOCV             {1}                                                              {Enable Low voltage Parametrics OCV}
bbset pnr.EnableHoldMargin           {1}                                                              {Enable hold margin to set uncertainty on clock by set_clock_uncertainty command}
bbset pnr.EnableDRVConstraint        {1}                                                              {Enable DRV constraint application}
bbset pnr.EnableVTDerates            {[bbget .sta.config.derate.LocalVoltageVariation.enable]}        {Enable voltage/temperature based derating}
bbset pnr.EnableDelayBufferHoldPenalty {[bbget .sta.config.setup_margin.DelayBufferHoldPenalty.enable]} {Enable extra delay buffer hold penalty}
bbset pnr.EnableNetDerates           {[bbget .sta.config.wire_ocv.enable]}                            {Enable net derates}
bbset pnr.EnableVtMisMatchDerates    {[bbget .sta.config.derate.VtMismatch.enable]}                   {Enable vt mismatch derating}
bbset pnr.EnableAddlVtMisMatchDerates {[bbget .sta.config.derate.AddlVtMismatch.enable]}               {Enable additional vt mismatch derating}
bbset pnr.EnableOdMisMatchDerates    {[bbget .sta.config.derate.ODMismatch.enable]}                   {Enable od mismatch derating}
bbset pnr.EnableMISDerates           {[bbget .sta.config.global.MultiInputSwitch]}                    {Enable MIS based derating}
bbset pnr.EnableCustomMacroMargin    {[bbget .sta.config.custom_macro_margin.enable]}                 {Enable Custom macro margin}
bbset pnr.EnableAgingDerates         {[bbget .sta.config.derate.Aging.enable]}                        {Enable aging derating}
bbset pnr.EnableMemAgingDerates      {[bbget .sta.config.derate.Aging.Mem.enable]}                    {Enable memory aging derating}
bbset pnr.EnableShiftTemperatureDerates {[bbget .sta.config.derate.ShiftTemperature.enable]}             {Enable shift temperature derating}
bbset pnr.EnableFoundryProcessDerates {[bbget .sta.config.derate.foundry_process_addl_derate.enable]}  {Enable foundry process derating for std cells}
bbset pnr.EnableFoundryExtraDerates  {[bbget .sta.config.custom_macro_margin.foundry_extra_margin.enable]} {Enable foundry process extra derating}
bbset pnr.EnableFoundryProcessMemDerates {[bbget .sta.config.derate.foundry_process_addl_derate.mem.enable]} {Enable foundry process derating for memories}
bbset pnr.EnableIllegalCellDerates   {[bbget .sta.config.illegal_cell_margins.enable]}                {Enable cell derate for illegal cell group}
bbset pnr.EnablePOCVSlewVariation    {false}                                                          {Enable POCV slew variation}
bbset pnr.EnablePOCVConstraintVariation {false}                                                          {Enable POCV constraint variation}
bbset pnr.OptDesignArgs              {}                                                               {Extra user argmuments for optDesign}
bbset pnr.HoldPathReportLimit        {}                                                               {Number of hold paths to be reported}
bbset pnr.EnableAgressiveAreaOpt     {false}                                                          {Enable OptMode Settings for agressive area optmization}
bbset pnr.EnableAgressiveHoldOpt     {false}                                                          {Enable OptMode Settings for agressive hold optmization}
bbset pnr.EnableSequentialCRR        {true}                                                           {Enable Tool to perform Sequential Restructing by enabling CRR feature}
bbset pnr.EnableHighEffortCellOpt    {false}                                                          {Enable OptMode Settings for high effort cell optimization}
bbset pnr.HighEffortOptCells         {}                                                               {list of cells to be used for high effort cell optimization}
bbset pnr.HighEffortOptExcludeGroups {D14PlusCells DelayCells TieCells EcoCells ClockCells ReconvergentPathAdderCells BadPinAccessCells TinyCells SVTSUflopCells} {List of dont use groups to exclude from high effort opt cells}
bbset pnr.EnableViaPillar            {0}                                                              {Enable via pillar settings for each stage}
bbset pnr.ViaPillarLefFile           {}                                                               {Define via ladder lef file path}
bbset pnr.EnableClockpathViaPillar   {false}                                                          {Enable clock path via pillar by ccopt_ptoperty settings}
bbset pnr.ClockPathHighDriveViaPillarFile {}                                                               {Setting to set via pillar constraint on clock instances}
bbset pnr.TotalPowerOptimizationEffort {leakage}                                                        {Effort for FC power optimization (standard|high|ultra|none|leakage)}
bbset pnr.SequentialRestructuring    {true}                                                           {Enable Sequential Restructuring}
bbset pnr.EnableVMF                  {0}                                                              {Enable virtual metal fill flow}
bbset pnr.VMFFillPatternFile         {}                                                               {Fill pattern file used for running VMF}
bbset pnr.EnableMaxAllowedDelayUSK   {0}                                                              {Control max allowed delay threshold while optimizing for useful skew}
bbset pnr.EnableExtraViasLengthFactor {1}                                                              {Allow enablement of extra vias length factor for high speed design}
bbset pnr.ExtraViasLengthFactorValue {10}                                                             {Allow the value of -extraViasLengthFactor to be set as per block requirement}
bbset pnr.ViaPillarProcess           {N2}                                                             {Process name for gen_vp command}
bbset pnr.GeneratedViaPillarPrefix   {gen_vp_}                                                        {Prefix used to name via pillar lef files}
bbset pnr.ViaPillarSettings          {
                                      COMMON { cell_drive {4 16}    cell_pattern {CK ^BUF ^INV} force 0
                                      gen_vp_switches {vp_top_layers M6
                                      max_finger_quantity {M1 2 M2 2 M3 2 M4 2 M4 2 M5 2 M6 2 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2}}}
                                      CLOCK  { cell_drive {4 20}   cell_pattern {CK} force 0
                                      gen_vp_switches {vp_top_layers M6
                                      max_finger_quantity {M1 2 M2 2 M3 2 M4 2 M4 2 M5 2 M6 2 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2}}}
                                      CLOCK_HIGH_DRIVE { cell_drive {20 300} cell_pattern {CK} force 1
                                      gen_vp_switches {vp_top_layers M13
                                      max_finger_quantity {M1 12 M2 6 M3 4 M4 3 M5 3 M6 3 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2}
                                      vp_max_fingers_only 1}}
                                      } {Settings in dict format: vp_name {cell_drive {} cell_pattern {} gen_vp_switches {} force }}
bbset pnr.placeopt.LoadGeneratedViaPillar {true}                                                           {Load/source the via pillar association files}
bbset pnr.clock.LoadGeneratedViaPillar {true}                                                           {Load/source the via pillar association files}
bbset pnr.SPGNets                    {}                                                               {List of PG nets to be used for secondary pg routing}
bbset pnr.EnablePGPinRoute           {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.SPGNetAttributesOverride   {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.SPGCommonAttributes        {bottom_preferred_routing_layer 3 top_preferred_routing_layer 8 pattern trunk preferred_routing_layer_effort high non_default_rule CLOCK_1W_2S max_fanout 5 stripe_layer_range 3:6} {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.SPGIncrMaxFanout           {1}                                                              {Max Fanout for routePGPinUseSignalRoute used by AutoSPGFix feature}
bbset pnr.MeshSPGR.PGPinNames        {TVDD VDDS VDDL VDDR}                                            {PG pin names to be enabled for Mesh based spg routing}
bbset pnr.NRbasedSPGR.PGPinNames     {VDDS TVDD VDDL VDDR VNWELL}                                     {PG Pin names to be enabled for NR based spg routing}
bbset pnr.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.MeshSPGR.PinConfigFile     {M2 "[bbget .info.PROCESS_DIR]/pnr/innovus/m2_mesh_spg.config" M1 "[bbget .info.PROCESS_DIR]/pnr/innovus/m1_mesh_spg.config"} {Dictionary of Config file for each pg pin}
bbset pnr.MeshSPGR.TargetPGModeSettings {pins_group_distance auto share_resource true max_extension_distance 10.0} {set_add_target_pg_mode settings}
bbset pnr.EnableAONCellsPGKeepout    {1}                                                              {Enable PG Keepouts on AON instances across the block}
bbset pnr.AONCellsPGKeepoutSettings  {}                                                               {Keepout settings for each layer. Format {layer1 {{attr val}} layer2 {attr1 val}}}
bbset pnr.MeshSPGR.EnableEcoIncremental {1}                                                              {Enable incremental Mesh SPG routing on open pins only}
bbset pnr.CustomSecPGLVLBox          {}                                                               {Custom box for sec pg insertion on LVL cells. Format {G1 {{box1}} G2 {{box2}}}}
bbset pnr.MinODFiller                {}                                                               {Min size of OD filler}
bbset pnr.MinVTFiller                {}                                                               {Min size of VT filler}
bbset pnr.MinTPOFiller               {}                                                               {Min size of TPO filler}
bbset pnr.UseVirtualImplantLayer     {}                                                               {Allow use of virtual implant layer}
bbset pnr.VirtualImplantLayerMinWidth {}                                                               {Minimum width of the virtual implant layer}
bbset pnr.ViaPillarPattern           {NR_Stack_Via*}                                                  {VIA Pillar matching pattern}
bbset pnr.ClockPathViaPillarFile     {}                                                               {Via pillar addition script file for cts building}
bbset pnr.EnableDataToDataChecks     {true}                                                           {Enable data to data checks for optDesign|timeDesign}
bbset pnr.PTCorrelationSettings      {True}                                                           {Enable Settings in Innovus for better correlation with signoff}
bbset pnr.SignoffCorrelationSettings {false}                                                          {Enable Settings in Innovus for better correlation with signoff}
bbset pnr.OverrideNdr                {false}                                                          {In FC overrride NDR}
bbset pnr.HonorDontTouchTieCells     {true}                                                           {Honor don't touch attribute on macros/cell pins when adding tie cells}
bbset pnr.BlockPGPinsToEdgeDistance  {2.0}                                                            {Max distance from block edge to extend PG pins}
bbset pnr.BumpLEFFiles               {}                                                               {Bump LEF File for loading bump definitions}
bbset pnr.BumpDEFFiles               {}                                                               {Bump DEF File for inserting bumps in design}
bbset pnr.BumpLayer                  {sRDL}                                                           {Bump Layer for the technology}
bbset pnr.RDLDEFFiles                {}                                                               {RDL DEF File for inserting RDL in design}
bbset pnr.BumpPhysicalPinsExtend     {1}                                                              {Length to extend bump on all sides to create physical pins}
bbset pnr.BumpPhysicalPinLayer       {sRDL}                                                           {Layer to create physical pins for bump}
bbset pnr.EnableM0Routing            {1}                                                              {Enable M0 routing}
bbset pnr.EnableBumpLayerBlockages   {0}                                                              {Enable the bump layer blockages if bump definitions are missing}
bbset pnr.EnablePrimePower           {0}                                                              {To enable Indesign Prime Power Flow for Pnr}
bbset pnr.PrimePowerFsdb             {}                                                               {set FSDB in {{fsdb1 strippath1 {start_window end_window}} {fsdbn strippathn {start_windown end_windown}}} in this format}
bbset pnr.pinbudget.Stages           {}                                                               {PinBudget flow stages. Add pnr stages to enable pinbudgetting}
bbset pnr.scenarios.Scenarios        {[bbget .syn.scenarios.Scenarios]}                               {analysis views for lib preparation}
bbset pnr.scenarios.SaifFiles        {}                                                               {Setup saif files for scenario}
bbset pnr.scenarios.Status           {}                                                               {status of pnr scenarios}
bbset pnr.scenarios.status.Default   {
                                      {func_NM.ssgnp-NM-0-cworst_ccworst_t            {setup active max_trans max_cap min_cap}}
                                      {func_NM.ssgnp-NM-125-rcworst_ccworst_t         {setup active max_trans max_cap min_cap}}
                                      {func_NM.ffgnp-NM-125-rcworst_ccworst           {hold  active max_trans max_cap min_cap}}
                                      {func_NM.ffgnp-NM-m25-cworst_ccworst            {hold  active max_trans max_cap min_cap}}
                                      {func_NM.tt-NMP-85-cworst_ccworst_t             {leakage dynamic active}}
                                      {shift_NM.ssgnp-NM-125-rcworst_ccworst_t        {setup active max_trans max_cap min_cap}}
                                      {shift_NM.ffgnp-NM-125-rcworst_ccworst          {hold  active max_trans max_cap min_cap}}
                                      {capture_NM.ssgnp-NM-0-cworst_ccworst_t         {setup active max_trans max_cap min_cap}}
                                      {capture_NM.ffgnp-NM-125-rcworst_ccworst        {hold  active max_trans max_cap min_cap}}
                                      {capture_NM.ffgnp-NM-m25-cworst_ccworst         {hold  active max_trans max_cap min_cap}}
                                      } {analysis view for set analysis_view}
bbset pnr.scenarios.status.DefaultExport {[bbget .pnr.scenarios.status.Default]}                          {Default scenario/view status for all export stages. This is getting from .pnr.scenarios.status.Default by default}
bbset pnr.FlowEffort                 {standard}                                                       {set the flow Effort to express|standard|extreme Default:extreme}
bbset pnr.LeakageToDynamicRatio      {}                                                               {Switch to enable global value for leakage to dynamic ratio for entire PNR flow}
bbset pnr.TargetSkew                 {0}                                                              {Default skew target}
bbset pnr.EnableActivityAwareOptFlow {0}                                                              {Enable Activity aware design optimization}
bbset pnr.SIEnableLogicalCorrelation {true}                                                           {Enables the AAE-SI logical correlation}
bbset pnr.SIReselection              {all}                                                            {Specifies the SI reselection criteria during timing window iterations}
bbset pnr.EnableIOBuffer             {1}                                                              {Enable Adition buffers/inverters to the I/O pins of a block }
bbset pnr.InputPortBuffer            {BUFFD4BWP130HPNPN3P48CPDLVT PTBUFFHDCWD4BWP130HPNPN3P48CPDLVT PTBUFFHDIWGOLD1BWP130HPNPN3P48CPDLVTLL} {Specifies the cell name or a list of cell names of the input buffer/inverter pair}
bbset pnr.OutputPortBuffer           {BUFFD4BWP130HPNPN3P48CPDLVT PTBUFFHDCWD4BWP130HPNPN3P48CPDLVT PTBUFFHDIWGOLD1BWP130HPNPN3P48CPDLVTLL} {Specifies the cell name or a list of cell names of the output buffer/inverter pair}
bbset pnr.IOSuffix                   {GEN_IO_BUF}                                                     {Appends a string to name of the net or instance created.}
bbset pnr.IOBufferExcludeNetsFile    {/google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/Lajolla_ufs/block/ufs_top/Input_files/IO_Buffer_exclude_nets.tcl} {File containing list of nets to exclude from IO buffering}
bbset pnr.MBFFSeparator              {}                                                               {Mbit separator}
bbset pnr.CellStatsExp               {(.*?)D(\[0-9P\]+?)BWP(.*?)(P\[48|54\]+)CPD(.*?)$}               {Regular expression for generating the cell stats}
bbset pnr.CellStatsList              {function drive cell_height polypitch cell_vt}                   {List of cell stats to be extracted from the cell stats expression}
bbset pnr.FillCellStatsExp           {(.*?)(\[0-9\]+).*BWP(.*?)(P\[48|54\]+)CPD(.*?)$}                {Regular expression for generating the filler cell stats}
bbset pnr.rtda.ruledeck              {[bbquery get file -db pdk -mode "exact" -filter "function='drc'"]} {drc ruledeck for realtime drc analysis}
bbset pnr.rtda.layermap              {[bbquery get file -db pdk -filter "file_type=~'layermap' && tool=~'innovus' && stack=~'[bbget .Stack]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {innovus layermap for realtime drc analysis}
bbset pnr.EnableTighterMaxTransitionConstraints {0}                                                              {To enable/disable tighter max transition constraints}
bbset pnr.TighterMaxTranConstraintsFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pnr_scripts/generate_lga_max_transition_values_fc.tcl} {Script file containting the max transition settings}
bbset pnr.setup.DTCDCell             {N02_DTCD_ALL_M13_240912}                                        {DTCD Cell}     
bbset pnr.setup.InsertDTCDCells      {0}                                                              {Enable DTCD Insertion}
bbset pnr.setup.DTCDHorizontalOffset {2.16}                                                           {Horizontal DTCD Offset}
bbset pnr.setup.DTCDVerticalOffset   {2.028}                                                          {vertical DTCD Offset}
bbset pnr.setup.DTCDHorizontalSite   {0.048}                                                          {Horizontal DTCD Site}
bbset pnr.setup.DTCDVerticalSite     {0.026}                                                          {Vertical DTCD Site}
bbset pnr.setup.DTCDSpec             {[bbget .info.PROCESS_DIR]/pnr/dtcd.spec}                        {DTCD Spec}     
bbset pnr.setup.SaveCallbacks        {}                                                               {Callbacks after which we save design}
bbset pnr.setup.StartCallback        {}                                                               {Callback to start the flow from}
bbset pnr.setup.EnableASCIIFlow      {1}                                                              {Use ASCII files (DEF, Verilog and UPF) to setup the input database}
bbset pnr.setup.InputDatabase        {}                                                               {Input Database to use for setting up the PNR flow based on last synthesis stage and PNR tool}
bbset pnr.setup.InputNetlist         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.v.gz} {Input synthesized gate netlist}
bbset pnr.setup.InputDEFFile         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/setup.def} {Input DEF from physical synthesis}
bbset pnr.setup.InputUPFFile         {../synth/outs/[bbget .info.BLOCK].final.upf}                    {Design UPF file for P&R}
bbset pnr.setup.MarkPhysicalPowerDomains {}                                                               {mark_physical domains. Dict Format: {PDdefault {{phyPd lpd1 lpd2 ...} ...}}}
bbset pnr.setup.InputSDCFile         {}                                                               {Default timing constraints for all corners}
bbset pnr.setup.InputScanDEFFile     {}                                                               {Input Scandef from synthesis}
bbset pnr.setup.InputNameMapFile     {}                                                               {Input Name mapping file from the synthesis}
bbset pnr.setup.InputMMMCFile        {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/invs_libgen/outs/mmmc.tcl} {MMMC output file from libgen}
bbset pnr.setup.InputLEFListFile     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/invs_libgen/outs/lef.list} {path to lef.list file}
bbset pnr.setup.InputSAIFFile        {}                                                               {Input SAIF file}
bbset pnr.setup.InputTCFFile         {}                                                               {Input TCF file}
bbset pnr.setup.InputTCFHierSeparator {/}                                                              {Seperator for read_activity_file cmd }
bbset pnr.setup.InputTCFScope        {}                                                               {scope argument for read_activity_file cmd}
bbset pnr.setup.GatedPowerNets       {}                                                               {List of gated power nets for initializing the design}
bbset pnr.setup.UngatedPowerNets     {}                                                               {Ungated power nets for initializing the design}
bbset pnr.setup.GroundNets           {VSS}                                                            {Ground net name for initializing the design}
bbset pnr.setup.AssignBufferCell     {}                                                               {Buffer cell to insert for resolving assign statements}
bbset pnr.setup.CustomLatenciesFile  {}                                                               {Source File containing custom latencies setting}
bbset pnr.setup.UPFParsingVars       {}                                                               {vars to pars UPF}
bbset pnr.setup.KeepEmptyModules     {1}                                                              {Variable to control empty modules for hierarchial designs. Default 0}
bbset pnr.setup.SkipUniquify         {0}                                                              {Variable to control uniquification for hierarhcial designs. Default 0}
bbset pnr.setup.BlackBoxList         {}                                                               {List of black boxes in the design}
bbset pnr.setup.BlackBoxBoundaries   {}                                                               {Black box boundary definitions}
bbset pnr.setup.BlackBoxPinSpacing   {2 2 2 2}                                                        {Spacing between pin spacing per side in number of tracks {l r t b}. Default {2 2 2 2}}
bbset pnr.setup.BlackBoxPinLayers    {}                                                               {Black box pin layers per side specifcied as list of lists {{l} {r} {t} {b}}.}
bbset pnr.setup.BlackBoxCoreSpacing  {}                                                               {Black box core spacing use to generate black box def file}
bbset pnr.setup.BlackBoxReservedLayers {}                                                               {Layers reserved for black box routing}
bbset pnr.setup.BlackBoxPlacementHalo {0 0 0 0}                                                        {Black box placement halo size {l r t b}}
bbset pnr.setup.BlackBoxRoutingHalo  {0}                                                              {Black box routing halo size.}
bbset pnr.setup.BlackBoxRoutingHaloMinLayer {}                                                               {Black box min routing halo layer}
bbset pnr.setup.BlackBoxRoutingHaloMaxLayer {}                                                               {Black box max routing halo layer}
bbset pnr.setup.CustomMacros         {}                                                               {Custom cell placement & pg hookup. Ex: Custom cell placement & pg hookup. Ex:{u_esd_SH1 {cell {PESDCORE4HV_12_V} loc {694.144 1.2} orient {R0} pg_hookup {VDD12 VDD_G3D_SH VSS VSS}} cdmm1 { cell {CDMM_GoLd_beol_31x} loc {694.144 1.2} orient {R0}}}}
bbset pnr.setup.FlexILMInputTag      {latest}                                                         {Input flexilm tag}
bbset pnr.setup.FlexILMPathList      {}                                                               {Dict of block names and ilm paths. Format: {block1 ilmpath1 block2 ilmpath2 ..}}
bbset pnr.setup.FlexILMLatencyView   {}                                                               {Primary Analysis view to be used for budgetting flow}
bbset pnr.setup.FlexILMUPFFile       {}                                                               {module UPF file for budgetting flow}
bbset pnr.setup.FlexILMMMMCFile      {}                                                               {module mmmc file to set the block model}
bbset pnr.setup.ResetFlexILMPinStatus {1}                                                              {Enable flexilm block pin status resetting}
bbset pnr.setup.DeleteAssignPorts    {}                                                               {remove ack port to VSS connection}
bbset pnr.setup.UseSynthDefFile      {0}                                                              {Enable to read synth stage DEF for setup if phy synthesis is enabled}
bbset pnr.placeopt.SaveCallbacks     {sif.innovus.ExcuteStageCallback}                                {Callbacks after which we save design}
bbset pnr.placeopt.StartCallback     {}                                                               {Callback to start the flow from}
bbset pnr.placeopt.InputDatabase     {}                                                               {Input Database for placeopt stage}
bbset pnr.placeopt.EnableEarlyDerates {0}                                                              {Enable early derates for placeopt in addition to late derates}
bbset pnr.placeopt.EnableEarlyClockFlow {0}                                                              {Enable early clock flow}
bbset pnr.placeopt.EnableIncrementalOpt {0}                                                              {Enable incremental optimization}
bbset pnr.placeopt.EnableScanReorder {1}                                                              {Enable scan reorder}
bbset pnr.placeopt.EnableFinalRefinePlace {0}                                                              {Enable a final refine place after all POD's to ensure legal placement for clock}
bbset pnr.placeopt.EnableEarlyTieCellInsertion {0}                                                              {Enable early tie cell insertion after coarse place and before POD.}
bbset pnr.placeopt.EnableManualTieCellInsertion {0}                                                              {Enable manual tie cell insertion after coarse place and before POD.}
bbset pnr.placeopt.SoftfixSparesAndRemoveSpareGuides {0}                                                              {Mark all spare cells to softfixed after course place and delete spare guides}
bbset pnr.placeopt.PostPlaceTCLFile  {}                                                               {Post place TCL script used to intercept place_opt_design post place}
bbset pnr.placeopt.FlopRefPattern    {*D*FF*}                                                         {Remove DontTouch/dontUse from Flop Refname pattern}
bbset pnr.placeopt.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization}
bbset pnr.placeopt.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.placeopt.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.placeopt.CCDEffort         {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.placeopt.EnableMBFFFlow    {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.placeopt.MBFFMode          {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.placeopt.MBFFMergeTimingEffort {high}                                                           {Set MBF merge effort low/medium/high}
bbset pnr.placeopt.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.placeopt.MBFFPrefix        {}                                                               {Multibit flop prefix }
bbset pnr.placeopt.DontTouchPatterns {*dont_touch* *donttouch* *DONTTOUCH* *DONT_TOUCH* *DONT_TOUCH* *DONTTOUCH* *donttouch* *dont_touch*  *dftss*extest*buf*dont_touch* *u_dft_dont_touch_sd_edt_c0_mux_inst* *u_lcm*u_occ_*  *occ*controller*_inst* *DONT_TOUCH* *DONTTOUCH* *donttouch* *dont_touch* *_lvx_dft_anchor_buf_* } {Dont touch instance name patterns}
bbset pnr.placeopt.SizeOnlyPatterns  {*size_only* *SIZEONLY* *u_lcm*u_occ* *SIZEONLY* *SIZE_ONLY* *size_only* *sizeonly*  *edt*mux* *extest*mux* *dftss*edt_decom*dft_anchor_buf* *dftss*edt_compac*dft_anchor_buf*  *dftss*extest*buf_dont_touch* *extest_mux*dft_anchor_buf* *extest_legacy_mux*  *dftss*extest*buf*dont_touch* *u_dft_dont_touch_sd_edt_c0_mux_inst*  *edt*mux* *extest*mux* *tessent_persistent_cell_*  *u_dftss_extest_input_mux_inst* } {Size only instance name patterns}
bbset pnr.placeopt.DontMergeFlopPatterns { *scan_combiner*pipe*mux* *dftss*fescan*chan_*_pipe_*_mux_inst* *tessent_sib_sti_* *tessent_mbist_bap_inst*  *dft_tessent_shell_bisr_chain_module_*_bisr_inst* *rtl_mbist_bisr_inst* *tessent_mbis*_controller_inst*  *tessent*mux* *tessent*pipe* *tessent_sib_ssn* *receiver_1x_pipe* *u_scan_to_jtag*  *u_*_io_mux* *u_socdft_tap_bscan* *u_lcm*u_occ_* *dftss* *tdr* *tessent*edt*ext*  *tessent*edt*int* *tessent_ssn_scan_host_ssh* *tessent_ssn_mux_legacy*  *tessent_ssn_scan_host_ssh*mux* *tessent*tdr* *occ*controller*_inst*  *tessent_sib_sti_inst* *tessent_sib_occ_inst* *sib*NO_SCAN* *lpm_wrapper*scandump_u* } {Multi Bit Flop pattern to set DontMerge/DontSplit attribute}
bbset pnr.placeopt.DontMergeFlopModulePatterns { *mbisr_controller_wrapper*  *tessent_occ_parent* *dftss* *tessent*edt*ext* *tessent*edt*int*  *tessent_ssn_scan_host_ssh* *tessent_ssn_fifo* *lcm*occ* *tessent_sib* } {Multi Bit flop pattern to set DontMerge/DontSplit attribute}
bbset pnr.placeopt.DontTouchModulePatterns { *tessent_occ_parent* *lcm*occ* }                               {list of Regex patterns of hierarchial modules}
bbset pnr.placeopt.SizeOnlyModulePatterns {}                                                               {list of Regex patterns of hierarchial modules}
bbset pnr.placeopt.PreservePortsModulePatterns {  *mbisr_controller_wrapper*   *tessent_occ_parent* *tessent*edt*ext* *tessent*edt*int* *tessent_ssn_scan_host_ssh* *lcm*occ*  *tessent_sib_sti_inst* *dft_tessent_shell_bisr_chain_module_*_bisr_inst* *tessent_mbist_bap_inst*  *u_scan_to_jtag* *u_lcm*u_occ_*  *tessent*edt*ext* *tessent*edt*int* *tessent_ssn_scan_host_ssh*  *occ*controller*_inst* *tessent_sib_sti_inst* *sib*NO_SCAN* *tessent_ssn_ijtag_host_sih_* *tessent_ssn_bypasshub_mux* } {Preserve port polarity connected to listed module patterns}
bbset pnr.placeopt.EnableROIBasedMBFF {0}                                                              {Enable ROI multi bit flop banking optimization}
bbset pnr.placeopt.NdrAwareOpt       {}                                                               {Provide a list of NDR names that will be used NDR-based optimization, Default={}}
bbset pnr.placeopt.TargetSkew        {0}                                                              {Default skew target}
bbset pnr.placeopt.TargetSkewOverrides {}                                                               {Target skew overrides for each corners Format:{corner1 { skewgrp1 value1 skewgrp2 value2} }}
bbset pnr.placeopt.PlaceCoarseMaxDensity {}                                                               {Target for local bin max density}
bbset pnr.placeopt.PlaceOptMaxUtilization {}                                                               {Target for overall Max utilization}
bbset pnr.placeopt.PlaceCoarseAutoDensityControl {enhanced}                                                       {Enable coarse place auto density coontrol. Valid values:0 1 ENHANCED FALSE TRUE}
bbset pnr.placeopt.PlaceGlobalTimingEffort {medium}                                                         {Level of effort for timing driven global place. value=medium|high}
bbset pnr.placeopt.PlaceGlobalPowerDrivenEffort {high}                                                           {Effort mode for place_global_clock_power_driven}
bbset pnr.placeopt.PlaceEcoMaxDistance {0}                                                              {specify max distance (in micron) for refinePlace ECO mode}
bbset pnr.placeopt.PlaceEnablePowerDriven {true}                                                           {Enable Power driven placement. value ={true|false} }
bbset pnr.placeopt.PlacePowerDrivenEffort {high}                                                           {Set Power driven placement effort. value ={standard|high}}
bbset pnr.placeopt.PlaceEnableClockGateAware {false}                                                          {Enable clock gate aware placement. value ={true|false}}
bbset pnr.placeopt.LeakageToDynamicRatio {}                                                               {Control the priority of the power-driven optimization }
bbset pnr.placeopt.PowerEffort       {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.placeopt.EnableUltraHighPowerOpt {0}                                                              {Enable ultra high power optimization in Innovus at placeopt}
bbset pnr.placeopt.ApplyBoundaryLeakageConstraints {0}                                                              {Apply boundary leakage constraints for standard cell abutment}
bbset pnr.placeopt.EdgeInfoFiles     {}                                                               {Files for standard cells edge information}
bbset pnr.placeopt.LeakageConfigFiles {}                                                               {Files with standard cell leakage configuration}
bbset pnr.placeopt.LeakageTableFiles {}                                                               {Files with leakage config data}
bbset pnr.placeopt.EnableEEQCellsSwap {true}                                                           {Swap master cells to EEQ cells during detailed placement to improve routability.}
bbset pnr.placeopt.EnableHonorFenceConstraints {true}                                                           {Enable flow to honor fence constraints, Default = false(for SSV) | true (for MSV)}
bbset pnr.placeopt.EnableSpareInsertion {0}                                                              {Enable spare cell insertion in the flow}
bbset pnr.placeopt.SpareCellsList    {SDFQTXGD2BWP130HPNPN3P48CPDULVT 1 GFILL6SHBWP130HPNPN3P48CPDULVT 16 INVD10BWP130HPNPN3P48CPDULVT 3} {space cells list with cell count}
bbset pnr.placeopt.SpareConnectPinsTieLow {SDFQTXGD2BWP130HPNPN3P48CPDULVT:* INVD10BWP130HPNPN3P48CPDULVT:* TIELXNBWP130HPNPN3P48CPDULVT:* TIEHXPBWP130HPNPN3P48CPDULVT:*} {pins to be connected to TieLow}
bbset pnr.placeopt.SpareTieCellLibName {TIELXNBWP130HPNPN3P48CPDULVT TIEHXPBWP130HPNPN3P48CPDULVT}      { Tie lib cells to be used}
bbset pnr.placeopt.SpareStepDistanceX {50}                                                             {Horizontal step distance between spare cell modules}
bbset pnr.placeopt.SpareStepDistanceY {50}                                                             {Vertical  step distance between spare cell modules }
bbset pnr.placeopt.SpareUtilFactor   {0.03}                                                           {Utilization factor for spare module}
bbset pnr.placeopt.SpareLeftBoundaryOffset {20}                                                             {Offset from left core boundary}
bbset pnr.placeopt.SpareBottomBoundaryOffset {20}                                                             {offset from right core boundary}
bbset pnr.placeopt.SpareCellsPrefix  {SPARE_FP_}                                                      {spare cells Prefix}
bbset pnr.placeopt.EnableSpareInCoreAreaOnly {0}                                                              {Add spare cells only in the core area}
bbset pnr.placeopt.PowerDomainsForSpareInsertion {}                                                               {Power domains in which spare cells are to be added}
bbset pnr.placeopt.EnableSpareAONInsertion {0}                                                              {Enable AON spare cell insertion in the flow}
bbset pnr.placeopt.SpareAONCellsList {PTBUFFHDCWD3BWP130HPNPN3P48CPDULVT 1}                           {space cells list with cell count}
bbset pnr.placeopt.SpareAONConnectPinsTieLow {PTBUFFHDCWD3BWP130HPNPN3P48CPDULVT:*}                           {pins to be connected to TieLow}
bbset pnr.placeopt.SpareAONTieCellLibName {TIELXNBWP130HPNPN3P48CPDULVT}                                   { Tie lib cells to be used}
bbset pnr.placeopt.SpareAONStepDistanceX {100}                                                            {Horizontal step distance between spare cell modules}
bbset pnr.placeopt.SpareAONStepDistanceY {100}                                                            {Vertical  step distance between spare cell modules}
bbset pnr.placeopt.SpareAONUtilFactor {0.03}                                                           {Utilization factor for spare modules}
bbset pnr.placeopt.SpareAONLeftBoundaryOffset {30}                                                             {Offset from left core boundary}
bbset pnr.placeopt.SpareAONBottomBoundaryOffset {30}                                                             {offset from right core boundary}
bbset pnr.placeopt.SpareAONCellsPrefix {SPARE_FP_AON_}                                                  {spare cells Prefix}
bbset pnr.placeopt.SpareAONNwellPin  {VBP}                                                            {N-well pin corresponding to AON spare lib cells}
bbset pnr.placeopt.SpareAONSPGPin    {VDDR}                                                           {Secondary PG pin corresponding to AON spare lib cells}
bbset pnr.placeopt.ResizeLVLShifterAndIsoInsts {true}                                                           {Enable resizing of lvl shifters and isolation instances}
bbset pnr.placeopt.MaxLevelShifterDepth {25}                                                             {Max level-shifter distance from power-domain boundary}
bbset pnr.placeopt.EnablePlaceDetailCheckDRC {}                                                               {Enable check_drc during place detail step}
bbset pnr.placeopt.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.placeopt.ExtremeHighEffortOpt {false}                                                          {Enable extreme high effort optimization}
bbset pnr.placeopt.PlaceGlobalIOPins {false}                                                          {Enable Movement of placed and unplaced I/O pins}
bbset pnr.placeopt.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.placeopt.EnableGlobalSkewing {}                                                               {Enable Global Skewing ETF provided by Cadence}
bbset pnr.placeopt.EnableClusterSkewing {}                                                               {Enable Cluster Skewing ETF provided by Cadence for MBIT Splitting}
bbset pnr.placeopt.EnableInnovusIspatial {0}                                                              {Allow tool to enable ispatial for optimization}
bbset pnr.placeopt.SaveDBAfterIspatial {0}                                                              {Save DB after completion of ispatial step}
bbset pnr.placeopt.EnablePODV2       {1}                                                              {Enable place_opt_design V2 flow in Innovus}
bbset pnr.placeopt.EnableDpx         {false}                                                          {Enable Distributed Processing}
bbset pnr.placeopt.EnableNRBasedSPGR {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.placeopt.EnablePGPinRoute  {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.placeopt.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.placeopt.SPGCommonAttributes {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.placeopt.EnableMeshSPGR    {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.placeopt.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.placeopt.MeshSPGR.PinLayer {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.placeopt.MeshSPGR.TargetLayer {}                                                               {Dictionary of Target Layers to tap the route for each pg_pin}
bbset pnr.placeopt.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.placeopt.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.placeopt.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.placeopt.MesHSPGR.LayerWidth {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.placeopt.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.placeopt.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.placeopt.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.placeopt.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.placeopt.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.placeopt.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.placeopt.MeshSPGR.InsertPrimaryPowerVia {1}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.placeopt.FixAONInstances   {1}                                                              {Fix AON instances after secPG}
bbset pnr.placeopt.EnableExtraViasLengthFactor {1}                                                              {Allow enablement of extra vias length factor for high speed design}
bbset pnr.placeopt.ExtraViasLengthFactorValue {10}                                                             {Allow the value of -extraViasLengthFactor to be set as per block requirement}
bbset pnr.placeopt.IRAwarePlace      {0}                                                              {Switch to control running IR aware place}
bbset pnr.placeopt.IRIterations      {3}                                                              {Number of iterations of refine place after rail analysis}
bbset pnr.placeopt.EnableStaticAnalysis {0}                                                              {Switch to control running static analysis}
bbset pnr.placeopt.EnableDynamicAnalysis {0}                                                              {Switch to control running dynamic analysis}
bbset pnr.placeopt.EnableSKP         {0}                                                              {Enable SKP feature for better global placement}
bbset pnr.placeopt.EnableLIEChange   {0}                                                              {Source LIE Change ETF provided by Cadence for correlation}
bbset pnr.placeopt.EnableViaPillar   {1}                                                              {Enable via pillar setting based on process}
bbset pnr.placeopt.ViaPillarAssociationFile {}                                                               {Define Via pillar association file path}
bbset pnr.placeopt.EnableOCCBounding {false}                                                          {Enable OCC bounding}
bbset pnr.placeopt.OCCPatternsBoundRegions {}                                                               {List of instance patterns and assocated bounding region Example: {{*occ_*} {llx lly urx ury} ...}}
bbset pnr.placeopt.EnableGSPANImplementation {1}                                                              {Enable implementation of GPSAN settings in the design}
bbset pnr.placeopt.GSPANBufferSuffix {GSPAN_IO_BUF}                                                   {Prefix to be used for GSPAN IO anchor buffers}
bbset pnr.placeopt.GSPANInputBufferCell {BUFFD4BWP130HPNPN3P48CPDLVT}                                    {Library buffer cell to be used as anchor buffer for GSPAN Inputs}
bbset pnr.placeopt.GSPANOutputBufferCell {BUFFD8BWP130HPNPN3P48CPDLVT}                                    {Library buffer cell to be used as anchor buffer for GSPAN Output s}
bbset pnr.placeopt.GSPANSoftBlkgDepth {10}                                                             {Depth of soft blockage to be created around IO ports}
bbset pnr.placeopt.GSPANBufferPadding {top 1 left 2 right 2}                                           {Amount of instance padding to be applied on the GSPAN IO buffers}
bbset pnr.placeopt.GSPANFlopPatterns {*gspan_receiver_transport*}                                     {Pattern of GSPAN flops on which padding is to be applied}
bbset pnr.placeopt.GSPANPortPatterns {*_ss_*}                                                         {Pattern og GSPAN IO ports in the design}
bbset pnr.placeopt.GSPANFlopPadding  {top 1 bottom 1 left 2 right 2}                                  {Amount of instance padding to be applied on GSPAN flops}
bbset pnr.placeopt.EnableManualInstanceMerging {false}                                                          {Enable manual instance merging to mbit}
bbset pnr.placeopt.InstancesManualMergeConfig {}                                                               {Config dictionary}
bbset pnr.placeopt.InstancesManualMergeBBox {}                                                               {Area to select instances from. Default : dbget fplan.box}
bbset pnr.placeopt.CellPaddingList   {}                                                               {List of cell pattern and cell Padding number pair. Ex {{*D48* D96} {top 1 bottom 1 right 6 left 6}}}
bbset pnr.placeopt.ApplyDFTGuidelines {1}                                                              {Enable auto-generation and application of DFT placement guidelines in the flow}
bbset pnr.placeopt.EnableObsTpRecluster {0}                                                              {Enable/Disable Reclustering of OBS TPs}
bbset pnr.clock.SaveCallbacks        {sif.innovus.ExcuteStageCallback}                                {Callbacks after which we save design}
bbset pnr.clock.StartCallback        {}                                                               {Callback to start the flow from}
bbset pnr.clock.InputDatabase        {}                                                               {Input Database for clock stage}
bbset pnr.clock.NDR                  {NDR_HTREE_CLOCK_3W_3S {{ M14 M15} {3 3} {2}} NDR_SINK_CLOCK_1W_2S {{M6 M13} {1 2} {2}}  NDR_INTERNAL_CLOCK_2W_2S {{M6 M13} {2 2} {2}} NDR_ROOT_CLOCK_2W_3S {{M6 M13} {2 3} {2}}} {NDR rules. Format: {rule_name {rule_name1 {min_layer max_layer} {multiplier_width multiplier_spacing} {tapper_distance}}}}
bbset pnr.clock.CCOptDesignSwitches  { -expandedViews }                                               {ccopt design switches}
bbset pnr.clock.HierCCOptDesignSwitches { -cts -expandedViews }                                          {ccopt design switches for hier clock flow}
bbset pnr.clock.CCOptFlexHTreeSwitches { }                                                              {Additional ccopt_flexible_htre switches}
bbset pnr.clock.MaxFanout            {32}                                                             {Default max fanout}
bbset pnr.clock.MaxCapacitance       {0.1}                                                            {Default max capacitance}
bbset pnr.clock.MaxTransition        {70ps}                                                           {Default max transition}
bbset pnr.clock.MaxTransitionOnLeaf  {0.030}                                                          {Max transition set on Leaf for CTS}
bbset pnr.clock.MaxTransitionOnTop   {0.045}                                                          {max transition set on Top for CTS}
bbset pnr.clock.MaxTransitionOnTrunk {0.045}                                                          {Max transition set on Trunk for CTS}
bbset pnr.clock.RoutingTopMinFanout  {750}                                                            {Default routing_top_min_fanout ccopt property value}
bbset pnr.clock.ClockTransPercent    {0}                                                              {Percentage of clock transition}
bbset pnr.clock.DataTransPercent     {0}                                                              {Percentage of data transition}
bbset pnr.clock.EnableCellPadding    {1}                                                              {Enable cell padding}
bbset pnr.clock.CellTopPadding       {1}                                                              {Enable cell padding on the top}
bbset pnr.clock.CellBottomPadding    {1}                                                              {Enable cell padding in the bottom}
bbset pnr.clock.CellLeftPadding      {6}                                                              {Enable cell padding on the left}
bbset pnr.clock.CellRightPadding     {6}                                                              {Enable cell padding on the right}
bbset pnr.clock.CellPaddingList      {}                                                               {List of cells with padding}
bbset pnr.clock.CellPaddingDriveLimit {6}                                                              {Drive strength of cells above which padding is to be applied}
bbset pnr.clock.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization}
bbset pnr.clock.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.clock.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.clock.CCDEffort            {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.clock.PrimaryDelayCorner   {}                                                               {Primary Delay Corner which is to be used for CCOPT}
bbset pnr.clock.TargetSkewOverrides  {}                                                               {Target skew overrides for each corners Format:{corner1 { skewgrp1 value1 skewgrp2 value2} }}
bbset pnr.clock.EnableMSCTS          {0}                                                              {Enable Multi-source CTS}
bbset pnr.clock.MSCTSBoundary        {}                                                               {Multisource CTS boundary. Default = {dbget top.fplan.box}}
bbset pnr.clock.MSCTSBoundaryExclusion {}                                                               {MSCTS Grid exclusion . Tool will not add MTAPs in this regions}
bbset pnr.clock.MSCTSHTreeDriverLibCell {CKNDHZPDD24BWP130HPNPN3P48CPDULVT}                              {List of HTree driver cells}
bbset pnr.clock.MSCTSHTreeName       {flexHTREE}                                                      {Prefix for HTree driver cells}
bbset pnr.clock.MSCTSHTreeMaxRoutingLayer {M15}                                                            {HTree max routing layer}
bbset pnr.clock.MSCTSHTreeMinRoutingLayer {M14}                                                            {HTree min routing layer}
bbset pnr.clock.MSCTSSource          {}                                                               {MSCTS source}  
bbset pnr.clock.MSCTSTapDriverLibCell {CKNDHZPDD24BWP130HPNPN3P48CPDULVT}                              {MSCTS tap driver cells}
bbset pnr.clock.MSCTSTapDriverNamePrefix {flexHTREE_MTAP}                                                 {Prefix of MSCTS tap driver}
bbset pnr.clock.MSCTSTapDriverColumn {6}                                                              {MSCTS tap driver column}
bbset pnr.clock.MSCTSTapDriverRow    {6}                                                              {MSCTS tap driver row}
bbset pnr.clock.MSCTSHTreeMode       {drv}                                                            {Enable mode for HTree build value={drv|distance}}
bbset pnr.clock.MSCTSHTreeMaxRootDistance {30}                                                             {Htree Max length of the net connecting the root}
bbset pnr.clock.MSCTSHTreeMaxDriverDistance {300}                                                            {Htree maximum length of the nets connecting the H-tree drivers}
bbset pnr.clock.MSCTSHTreeSinkGridSinkArea {150 150}                                                        {Sink_grid_sink_area dimension {X Y} value}
bbset pnr.clock.MSCTSHTreeNDRRuleName {CLOCK_1W_2S_htree}                                              {HTree non default routing rule}
bbset pnr.clock.EnableMSCTSHTreeShielding {0}                                                              {Varaible to enable HTREE shielding}
bbset pnr.clock.MSCTSClockCellPaddingX {}                                                               {Htree cell horizontal padding for FIller addition. Default=2}
bbset pnr.clock.MSCTSPGKeepoutMargin {}                                                               {Dictionary list with pg_keepout for each layer}
bbset pnr.clock.MSCTSClockCellPaddingY {}                                                               {Htree cell vertical padding for FIller addition. Default=2*SiteHeight}
bbset pnr.clock.MSCTSSetZeroAnnotation {false}                                                          {Enable zero annotation delay till final_cell output}
bbset pnr.clock.MSCTSSetIdealTree    {false}                                                          {Enable settings to set ideal Htree}
bbset pnr.clock.MSCTSOverrides       {}                                                               {Dict for multiple flex_htree settings. Format: {htree_name1 {pin {val} trunk_cell {val} mode {val} .. } htree_name2 { ..} }}
bbset pnr.clock.ITAPMSCTSMSCTSScenario {}                                                               {Scenario to be used for MSCTS}
bbset pnr.clock.MSCTSCleanupScript   {}                                                               {Cleanup script after MSCTS execution}
bbset pnr.clock.CCOptFlexHTreeSwitchesOverrides {}                                                               {Dict of additional switches for flex_htree cmd.. Format:{ htree1 {switches} htree2 {switches} }}
bbset pnr.clock.InverterCellList     { DCCKNDHD4BWP130HPNPN3P48CPDULVT DCCKNDHD6BWP130HPNPN3P48CPDULVT DCCKNDHD8BWP130HPNPN3P48CPDULVT DCCKND10BWP143M169H3P48CPDULVT DCCKNDHZPDD12BWP130HPNPN3P48CPDULVT PTINVHDCWD3BWP130HPNPN3P48CPDULVT PTINVHDCWD4BWP130HPNPN3P48CPDULVT  PTINVHDCWD6BWP130HPNPN3P48CPDULVT  } {List of inverter cells}
bbset pnr.clock.TopInverterCellList  { DCCKNDHD4BWP130HPNPN3P48CPDULVT DCCKNDHD6BWP130HPNPN3P48CPDULVT DCCKNDHD8BWP130HPNPN3P48CPDULVT DCCKND10BWP143M169H3P48CPDULVT DCCKNDHZPDD12BWP130HPNPN3P48CPDULVT PTINVHDCWD3BWP130HPNPN3P48CPDULVT PTINVHDCWD4BWP130HPNPN3P48CPDULVT  PTINVHDCWD6BWP130HPNPN3P48CPDULVT } {Leaf Specific Inverter Cell List}
bbset pnr.clock.LeafInverterCellList { DCCKND4BWP143M169H3P48CPDULVT DCCKND5BWP143M169H3P48CPDULVT DCCKND6BWP143M169H3P48CPDULVT  DCCKND8BWP143M169H3P48CPDULVT DCCKND10BWP143M169H3P48CPDULVT PTINVHDCWD4BWP143M169H3P48CPDULVT PTINVHDIWOPT3FGOLD6BWP143M286H3P48CPDULVT } {Leaf specific inverter cell list}
bbset pnr.clock.BufferCellList       {DCCKBDHD4BWP130HPNPN3P48CPDULVT DCCKBDHD5BWP130HPNPN3P48CPDULVT DCCKBDHD6BWP130HPNPN3P48CPDULVT DCCKBDHD8BWP130HPNPN3P48CPDULVT DCCKBDHD10BWP130HPNPN3P48CPDULVT PTBUFFHDCWD3BWP130HPNPN3P48CPDULVT PTBUFFHDCWD4BWP130HPNPN3P48CPDULVT PTBUFFHDCWD6BWP130HPNPN3P48CPDULVT } {List of buffer cells}
bbset pnr.clock.ICGCellList          {CKLNQZPDD3BWP130HPNPN3P48CPDULVT CKLNQZPDD4BWP130HPNPN3P48CPDULVT CKLNQOPTBBZPDD4BWP130HPNPN3P48CPDULVT  CKLNQZPDD5BWP130HPNPN3P48CPDULVT CKLNQZPDD6BWP130HPNPN3P48CPDULVT CKLNQZPDD8BWP130HPNPN3P48CPDULVT  CKLNQOPTBBZPDD8BWP130HPNPN3P48CPDULVT CKLNQZPDD10BWP130HPNPN3P48CPDULVT CKLNQOPTBBZPDD10BWP130HPNPN3P48CPDULVT  CKLNQZPDD12BWP130HPNPN3P48CPDULVT CKLNQOPTBBZPDD12BWP130HPNPN3P48CPDULVT} {List of clock gating cells}
bbset pnr.clock.LogicCellList        {}                                                               {List of clock logic cells to be used during optimization}
bbset pnr.clock.ClockTreeCellListOverrides {}                                                               {ccopt cellList override for each clk_trees. Format: {clk1 {inverter_cell list1 top_inverter_cells list2 leaf_inverter_cells list3 clock_gating_cells list4}}}
bbset pnr.clock.DontTouchClockVTPatterns {}                                                               {Cells in clock path which should NOT be considered for VT mismatch swaps}
bbset pnr.clock.DontTouchICGInstances {}                                                               {List of ICG Instance patterns which need dontTouch to be set}
bbset pnr.clock.SizeOnlyICGInstances {}                                                               {List of ICG Instance patterns which need sizeOnly  to be set}
bbset pnr.clock.CellXHalo            {0.096}                                                          {Horizontal halo space for a cell}
bbset pnr.clock.CellYHalo            {0.130}                                                          {Vertical halo space for a cell}
bbset pnr.clock.CellDensity          {0.8}                                                            {Specifies the clock halo in the x direction}
bbset pnr.clock.OptInsertionDelayFactor {1.1}                                                            {Latency value} 
bbset pnr.clock.TargetSkew           {}                                                               {Default skew target}
bbset pnr.clock.GatingFanout         {64}                                                             {Fanout of ICG} 
bbset pnr.clock.TargetedFlops        {}                                                               {Targeted flops: pos_edge/neg_edge}
bbset pnr.clock.EnableWireDelayBalancing {0}                                                              {Enable balancing buffer chains intelligently}
bbset pnr.clock.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.clock.SkewPassesIdealMode  {}                                                               {Internal property to control ccopt_design flow, Default = 250}
bbset pnr.clock.UsefulSkewClockGateMovementLimit {}                                                               {multiple of clock gate height to restrict icg from its original location in ccopt flow, Default=10}
bbset pnr.clock.SkewMultiplier       {}                                                               {Skew multiplier used during CTS. Deafult = 0.7}
bbset pnr.clock.RelaxSkewTargetDelayMultiplier {3}                                                              {Multiplier that the CTS engine uses to relax the skew target based on unit delay.Default=1}
bbset pnr.clock.CloneClockGates      {true}                                                           {Enable Clock gates cloning. values = true| false,Flow Default=false}
bbset pnr.clock.GatingMinBitwidth    {1}                                                              {Minimum bit width of ICG}
bbset pnr.clock.GatingNumLevels      {2}                                                              {Number of levels of ICG}
bbset pnr.clock.TieCellMaxFanout     {16}                                                             {Max fanout of tie cell}
bbset pnr.clock.CellList             {}                                                               {cell list}     
bbset pnr.clock.DelayCell            {}                                                               {Delay cells for fixing}
bbset pnr.clock.CellSpacingX         {0.048}                                                          {Horizontal spacing for a cell}
bbset pnr.clock.CellSpacingY         {0.260}                                                          {Vertical spacing for a cell}
bbset pnr.clock.SkewPassesPerBand    {}                                                               {Skew passes per band}
bbset pnr.clock.EnableBufferDepthAwareCTS {1}                                                              {Enable buffer depth aware CTS for better average depth in clock tree}
bbset pnr.clock.RoutingRules         {
                                      
                                      CLOCK_1W_2S_leaf {
                                      spacing_multiplier { M6 2 M7 2 M8 2 M9 2 }
                                      }
                                      CLOCK_1W_2S_htree {
                                      spacing_multiplier { M14 2 M15 2 }
                                      }
                                      CLOCK_2W_2S {
                                      width_multiplier   { M6 2 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2 }
                                      spacing_multiplier { M6 2 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2 }
                                      }
                                      CLOCK_2W_3S_trunk {
                                      width_multiplier   { M6 2 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2}
                                      spacing_multiplier { M6 3 M7 3 M8 3 M9 3 M10 3 M11 3 M12 3 M13 3}
                                      }
                                      CLOCK_2W_3S {
                                      width_multiplier   {  M12 2 M13 2}
                                      spacing_multiplier {  M12 3 M13 3}
                                      }
                                      CLOCK_2W_2S_top {
                                      width_multiplier   {  M12 2 M13 2}
                                      spacing_multiplier {  M12 2 M13 2}
                                      }
                                      CLOCK_2W_1S {
                                      width_multiplier   { M6 2 M7 2 M8 2 M9 2 M10 2 M11 2 M12 2 M13 2}
                                      }
                                      } {Specify the routing rules}
bbset pnr.clock.TopRoutingRule       {CLOCK_2W_2S_top}                                                {Routing rule for the Top}
bbset pnr.clock.TopMaxRoutingLayer   {M13}                                                            {Max routing layer for the top}
bbset pnr.clock.TopMinRoutingLayer   {M12}                                                            {Min routing layer for the top}
bbset pnr.clock.TrunkRoutingRule     {CLOCK_2W_3S_trunk}                                              {Routing rule for the Trunk}
bbset pnr.clock.TrunkMaxRoutingLayer {M13}                                                            {Max routing layer for the Trunk}
bbset pnr.clock.TrunkMinRoutingLayer {M12}                                                            {Min routing layer for the Trunk}
bbset pnr.clock.TrunkInverterCellList {}                                                               {Trunk specific inverter cell list}
bbset pnr.clock.LeafRoutingRule      {CLOCK_1W_2S_leaf}                                               {Routing rule for the Leaf}
bbset pnr.clock.LeafMaxRoutingLayer  {M9}                                                             {Max routing layer for the Leaf}
bbset pnr.clock.LeafMinRoutingLayer  {M6}                                                             {Min routing layer for the Leaf}
bbset pnr.clock.EnableRouteWithSiDriven {true}                                                           {Enable si driven routing}
bbset pnr.clock.EnableRouteWithTimingDriven {true}                                                           {Enable timing driven routing}
bbset pnr.clock.EnableRouteTypeAutoTrim {false}                                                          {Enable auto trim of route type , value=true|false, Tool default: false}
bbset pnr.clock.MaxSourceToSinkNetLength {150}                                                            {maximum routing length in microns b/w source and sink pins on each CTS net, Default: auto}
bbset pnr.clock.LatencyAdjustList    {}                                                               {# LATENCY ADJUST Virtual-Clock to Clock, pairs {{mode1 {{vclk clk} {vclk2 clk2}}} {mode2 {{vclk clk} {vclk2 clk}}}} }
bbset pnr.clock.BalanceGroup         {}                                                               {# Create new clock balance group with offset {{{clk1 clk2 clk3} {0.0 0.1 -0.5}} {{clk4 clk5 clk6} {0.0 0.1 0.5}}}   }
bbset pnr.clock.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.clock.PlaceDriverCentreOfFanoutBBox {}                                                               {Enable CTS to place driver equidistant from fanout. Tool default: false}
bbset pnr.clock.TopRoutingShieldSide {both_side}                                                      {describe shield side: one_side/both_side}
bbset pnr.clock.ShieldNet            {VSS}                                                            {Shield net for clock routing. Default is VSS}
bbset pnr.clock.EnableTrunkNDRShielding {false}                                                          {Enable shielding for route_type trunk}
bbset pnr.clock.EnableTopNDRShielding {false}                                                          {Enable shielding for route_type top}
bbset pnr.clock.EnableRelaxSkewTarget {false}                                                          {Controls the CTS engine to relax the skew target}
bbset pnr.clock.PowerEffort          {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.clock.CCOptPowerEffort     {standard}                                                       { Specifies the effort to reduce the dynamic and leakage power. value={standard|high}}
bbset pnr.clock.EnableMBFFFlow       {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.clock.MBFFMode             {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.clock.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.clock.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.clock.MBFFPrefix           {}                                                               {Multibit flop prefix }
bbset pnr.clock.EnableResetGatingChecks {true}                                                           {Reset Clock gating checks}
bbset pnr.clock.ResetClockLatency    {0}                                                              {Reset Clock latencies}
bbset pnr.clock.ResetClockNetwork    {false}                                                          {Reset propagated clock delay and ideal network }
bbset pnr.clock.ForceUpdateIOLatency {false}                                                          {Update IO Clock latencies}
bbset pnr.clock.EnableClockResetDebug {false}                                                          {Enable TImeDesign reporting to check CTS QOR}
bbset pnr.clock.ScenarioOverrides    {}                                                               {Custom scanerio clock settings. dict of dicts as { scen1 { clk1 { attr1 value1 } } scen2 ...}}
bbset pnr.clock.ComputeFastestDriversForClustering {}                                                               {Compute the fastest clock drivers for clustering}
bbset pnr.clock.EnableClockSourceLatencyOverride {false}                                                          {Set Clock Latency based on PostCtsClockSourceLatency value}
bbset pnr.clock.ClockSourceLatencyOverrides {}                                                               {Custom scanerio clock IO latencys. dict of dicts as { view1 {{clk1 latency} {clk2 latency}} view2 ...}}
bbset pnr.clock.EnableViaPillar      {1}                                                              {Enable via pillar setting based on process}
bbset pnr.clock.ViaPillarAssociationFile {}                                                               {Define Via pillar association file path}
bbset pnr.clock.EnableNRBasedSPGR    {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.clock.EnablePGPinRoute     {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.clock.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.clock.SPGCommonAttributes  {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.clock.EnableMeshSPGR       {0}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.clock.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.clock.MeshSPGR.PinLayer    {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.clock.MeshSPGR.TargetLayer {}                                                               {Target Layer to tap the route}
bbset pnr.clock.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.clock.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.clock.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.clock.MesHSPGR.LayerWidth  {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.clock.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.clock.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.clock.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.clock.MeshSPGR.IgnoreDRC   {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.clock.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.clock.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.clock.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.clock.FixAONInstances      {0}                                                              {Fix AON instances after secPG}
bbset pnr.clock.EnableGlobalSkewing  {}                                                               {Enable Global Skewing ETF provided by Cadence}
bbset pnr.clock.EnableClusterSkewing {}                                                               {Enable Cluster Skewing ETF provided by Cadence for MBIT Splitting}
bbset pnr.clock.EnableSequentialCRR  {false}                                                          {Enable Sequential Restructuring settings}
bbset pnr.clock.CustomOCVMFiles      {}                                                               {lists: OCVM Files in format {{<corner> <ocvm_files>} {...}}}
bbset pnr.clock.EnableITAPMSCTS      {false}                                                          {Enable ITAPMSCTS in placeopt}
bbset pnr.clock.ITAPMSCTSClock       {}                                                               {ITAPMSCTS Clock}
bbset pnr.clock.ITAPMSCTSSource      {}                                                               {Multisource Clock root}
bbset pnr.clock.ITAPMSCTSNdrMaxRoutingLayer {M15}                                                            {Clock NDR max routing layer for MSCTS in general}
bbset pnr.clock.ITAPMSCTSSpecialNets {}                                                               {MSCTS get nets}
bbset pnr.clock.ITAPMSCTSSetupPerformanceViaLadderMaxLayer {M15}                                                            {MSCTS max layer}
bbset pnr.clock.ITAPMSCTSTapBoundary {}                                                               {MSCTS Tap Boundary}
bbset pnr.clock.AdditionalTimingExceptions {}                                                               {Additional Exceptions for CTS}
bbset pnr.clock.ITAPMSCTSHtreeMinRoutingLayer {M14}                                                            {Htree min routing layer}
bbset pnr.clock.ITAPMSCTSHtreeMaxRoutingLayer {M15}                                                            {Htree max routing layer}
bbset pnr.clock.ITAPMSCTSHtreeDriverLibCells {DCCKBDHD20BWP130HPNPN3P48CPDULVT}                               {Htree driver lib cells}
bbset pnr.clock.ITAPMSCTSTapDriverLibCells {DCCKBDHD8BWP130HPNPN3P48CPDULVT}                                {Tap driver lib cells}
bbset pnr.clock.ITAPMSCTSHtreeLayers {M14 M15}                                                        {Layers for ITAPMSCTS}
bbset pnr.clock.ITAPMSCTSTapBoxes    {}                                                               {defines no.of columns & rows location grid. The bounding box of the boundary is subdivided in equally sized boxes acc to specified rows and columns. Ex: {4 2}}
bbset pnr.clock.ITAPMSCTSEnableViaLadder {0}                                                              {Enable via ladder insertion for H-Tree cells}
bbset pnr.clock.ITAPMSCTSViaLadderAssociationFile {}                                                               {Via ladder association file path}
bbset pnr.clock.ITAPMSCTSTapSelection {auto}                                                           {defines the tap configuration mode for flexible htree synthesis in synthesize_regular_multisource_clock_trees command.Valid values are user and auto}
bbset pnr.clock.CustomRoutingRuleName {NDR_HTREE}                                                      {Routing Rule Name}
bbset pnr.clock.CustomRoutingRuleWidth {}                                                               {Routing Rule Width}
bbset pnr.clock.CustomRoutingRuleSpacings {}                                                               {Routing Rule Spacings}
bbset pnr.clock.CustomRoutingRuleTaperDistance {}                                                               {Routing Rule Taper Distance}
bbset pnr.clock.RegularMultisourceClockTreeOptionsTapBoxes {}                                                               {Multi source Clock Tree Tap Boxes}
bbset pnr.clock.RegularMultisourceClockTreeOptionsHtreeLayers {}                                                               {Multi source Clock Tree Htree Layers}
bbset pnr.clock.ExtraViasLengthFactorValue {10}                                                             {Allow the value of -extraViasLengthFactor to be set as per block requirement}
bbset pnr.clock.HierEnableEarlyClockFlow {0}                                                              {Enable earlyClockFlow Hier clock build}
bbset pnr.clock.HierClockName        {}                                                               {Clock name of hierarchical design to be build}
bbset pnr.clock.HierClockSource      {}                                                               {Source port name of the Hierarchical clock name}
bbset pnr.clock.EnablePostCCOptRouteNets {0}                                                              {Enable route optimization post HierClock clock building}
bbset pnr.clock.HierBlocksAvoidRouting {}                                                               {Blocks to  be avoided with CTS routing}
bbset pnr.clock.HierCCOptSpecFile    {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/innovus/external_scripts/hier_clock_ccopt.spec} {Spec file used for Hier Clock tree build}
bbset pnr.clock.HierPrimaryDelayCorner {}                                                               {Primary Delay Corner which is to be used for CTS optimization}
bbset pnr.clock.HierClockMaxTransition {100ps}                                                          {Target Max transition value for primary delay corner}
bbset pnr.clock.HierClockInsertionDelay {}                                                               {Trans insertion delay}
bbset pnr.clock.HierRoutingRule      {}                                                               {NDR rule to be used for clock build}
bbset pnr.clock.HierTopPreferredRoutingLayer {}                                                               {Max Preferred routing layer}
bbset pnr.clock.HierBottomPreferredRoutingLayer {}                                                               {Min Preferred routing layer}
bbset pnr.clock.EnableHierTopNDRShielding {0}                                                              {Enable NDR shielding}
bbset pnr.clock.HierShieldNet        {}                                                               {Supply net to used for shielding}
bbset pnr.clock.HierTopRoutingShieldSide {}                                                               {Shielding side}
bbset pnr.clock.HierInverterCellList {}                                                               {Hier clock Inverter cell list }
bbset pnr.clock.HierTopInverterCellList {}                                                               {Hier Top clock Inverter cell list }
bbset pnr.clock.HierLeafInverterCellList {}                                                               {Hier Leaf clock Inverter cell list }
bbset pnr.clock.HierBufferCellList   {}                                                               {Hier clock buffer cell list}
bbset pnr.clock.HierLogicCellList    {}                                                               {Hier logic cell list}
bbset pnr.clock.HierClockExclusionDrivers {}                                                               {Hier clock exclusion Drivers}
bbset pnr.clock.HierICGCellList      {}                                                               {Hier clock ICG cell list}
bbset pnr.clock.HierSourceDriverList {}                                                               {clock port Source driver pins}
bbset pnr.clock.HierClockTraceLibCellSwaps {}                                                               {Hier clock traec cell lib swaps}
bbset pnr.clock.HierSourceInputMaxTransition {}                                                               {Hier source input max transition ccopt_property}
bbset pnr.clock.HierResetPropagatedClock {1}                                                              {Reset propagated clock delay and ideal network }
bbset pnr.clock.SkewBalancePoints    {}                                                               {Dictionary of Skew_group and its associated balance pin points list}
bbset pnr.clock.HierTargetSkewOverrides {}                                                               {Target skew overrides for each corners Format:{corner1 { skewgrp1 value1 skewgrp2 value2} }}
bbset pnr.clock.SkewBalancePointsOverrides {}                                                               {Dict of SkewBalancePoints Format:{clk1 {skw_grp1 {balance_pts} {skw_grp2 {balance_pts}} } clk2 { ... } } }
bbset pnr.clock.HierClockMaxTransitionOverrides {}                                                               {Dict with target_max_trans values for each htree names}
bbset pnr.clock.HierClockSourceOverrides {}                                                               {Dict of clk_name and its source pins. format: {clk1 src1 clk2 src2 ... }}
bbset pnr.clock.HierCellXHalo        {0}                                                              {Horizontal halo space for a cell}
bbset pnr.clock.HierCellYHalo        {0}                                                              {Vertical halo space for a cell}
bbset pnr.clock.HierCellDensity      {0.8}                                                            {Specifies the clock halo in the x direction}
bbset pnr.clock.EnableGSPANImplementation {1}                                                              {Enable implementation of GSPAN clock settings in the design}
bbset pnr.clock.HinstAwareGSPANAnchorBuffer {1}                                                              {Enable addition of clock anchor buffer which is hierarchy aware}
bbset pnr.clock.GSPANOutputClockInsertionDelay {}                                                               {Amount of insertion delay to be applied to output side clock GSPAN ports. User input ONLY}
bbset pnr.clock.GSPANShieldClockList {}                                                               {List of GSPAN clock names on which shielding is to be applied}
bbset pnr.clock.EnableDFTTieCellSwap {0}                                                              {Enable DFT recommended tie cells to be swapped}
bbset pnr.clock.DFTPatternsForTieCellSwap {*/dftss_core_inst/ip_dft_cg_te_controller_inst/u_pnr_clockgate_merge_tielow/SIZEONLY_tie_lo*} {List of DFT tie cells patterns to be swapped}
bbset pnr.clock.ApplyDFTGuidelines   {1}                                                              {PARTHL : To keep others happy }
bbset pnr.clockopt.StrengthenPGHighDCC {true}                                                           {Enable to strength M1-M5 pg over hight drive D16+ clock cells}
bbset pnr.clockopt.SaveCallbacks     {sif.innovus.ExcuteStageCallback}                                {Callbacks after which we save design}
bbset pnr.clockopt.StartCallback     {}                                                               {Callback to start the flow from}
bbset pnr.clockopt.InputDatabase     {}                                                               {Input Database for clockopt stage}
bbset pnr.clockopt.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.clockopt.EnableCCDOptimization {0}                                                              {Enable concurrent clock data optimization}
bbset pnr.clockopt.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.clockopt.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.clockopt.CCDEffort         {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.clockopt.EnableHoldFix     {1}                                                              {Enable hold fix in clockopt}
bbset pnr.clockopt.EnableSetupFix    {0}                                                              {Enable setup fix in clockopt}
bbset pnr.clockopt.FixSequentialCells {1}                                                              {Mark all the sequential cells (flops/ICGs) in the design with placed status as fixed}
bbset pnr.clockopt.FixClockRoutes    {1}                                                              {Mark all the wires and vias of clock nets as minor_change after clockopt}
bbset pnr.clockopt.HoldFixThreshold  {-0.3}                                                           {Specify hold fix threshold value}
bbset pnr.clockopt.HoldFixTargetSlack {-0.030}                                                         {Specify hold fix target value}
bbset pnr.clockopt.AutoViewHoldTargetSlack {0}                                                              {Specify Auto view hold fix target value for post-cts}
bbset pnr.clockopt.HoldFixIgnorePathGroups {INPUT, OUTPUT, IN2OUT}                                          {Path groups excluded from hold fix }
bbset pnr.clockopt.TargetSkewOverrides {}                                                               {Target skew overrides for each corners Format:{corner1 { skewgrp1 value1 skewgrp2 value2} }}
bbset pnr.clockopt.FixAllFlopsBeforeRouteOpt {false}                                                          {Switch to fix the timing for flops before routeopt}
bbset pnr.clockopt.PowerEffort       {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.clockopt.EnableMBFFFlow    {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.clockopt.MBFFMode          {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.clockopt.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.clockopt.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.clockopt.MBFFPrefix        {}                                                               {Multibit flop prefix }
bbset pnr.clockopt.EnableClockSourceLatencyOverride {false}                                                          {Set Clock Latency based on PostCtsClockSourceLatency value}
bbset pnr.clockopt.ClockSourceLatencyOverrides {}                                                               {Custom scanerio clock IO latencys. dict of dicts as { view1 {{clk1 latency} {clk2 latency}} view2 ...}}
bbset pnr.clockopt.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.clockopt.EnableVoltageOpt  {false}                                                          {Enable volatge based optimization}
bbset pnr.clockopt.VoltageOptScenario {}                                                               {Scenarios for Voltage based optimization}
bbset pnr.clockopt.VoltageOptTemperature {}                                                               {Temperature for Voltage based optimization}
bbset pnr.clockopt.VoltageOptLowVoltage {}                                                               {Low Voltage for Voltage based optimization}
bbset pnr.clockopt.VoltageOptHighVoltage {}                                                               {High Voltage for Voltage based optimization}
bbset pnr.clockopt.VoltageOptSupplyNets {}                                                               {Supply Nets for Voltage based optimization}
bbset pnr.clockopt.VoltageOptMainScenario {}                                                               {Main Scenario for voltage optimization followed by target tns set as {Main_Scenario1 tns1 Main_Scenario2 tns2}}
bbset pnr.clockopt.VoltageOptScaledScenario {}                                                               {Scaled Scenario for voltage optimization followed by target tns set as {Scaled_Scenario1 tns1 Scaled_Scenario2 tns2}}
bbset pnr.clockopt.EnableNRBasedSPGR {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.clockopt.EnablePGPinRoute  {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.clockopt.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.clockopt.SPGCommonAttributes {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.clockopt.EnableMeshSPGR    {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.clockopt.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.clockopt.MeshSPGR.PinLayer {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.clockopt.MeshSPGR.TargetLayer {}                                                               {Target Layer to tap the route}
bbset pnr.clockopt.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.clockopt.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.clockopt.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.clockopt.MesHSPGR.LayerWidth {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.clockopt.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.clockopt.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.clockopt.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.clockopt.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.clockopt.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.clockopt.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.clockopt.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.clockopt.FixAONInstances   {0}                                                              {Fix AON instances after secPG}
bbset pnr.clockopt.EnableDpx         {false}                                                          {Enable Distributed Processing}
bbset pnr.clockopt.EnableViaPillar   {1}                                                              {Enable via pillar setting based on process}
bbset pnr.clockopt.ViaPillarAssociationFile {}                                                               {Define Via pillar association file path}
bbset pnr.clockopt.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.clockopt.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.route.ExtractRCEffortLevel {medium}                                                         {Control extraction effort. value:low|medium|high|signoff}
bbset pnr.route.SaveCallbacks        {sif.innovus.ExcuteStageCallback}                                {Callbacks after which we save design}
bbset pnr.route.StartCallback        {}                                                               {Callback to start the flow from}
bbset pnr.route.InputDatabase        {}                                                               {Input Database for route stage}
bbset pnr.route.ResetRouteModeSettings {false}                                                          {To reset all NanoRoute settings to default}
bbset pnr.route.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization}
bbset pnr.route.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.route.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.route.CCDEffort            {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.route.EnableMBFFFlow       {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.route.MBFFMode             {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.route.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.route.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.route.EnableViaOptimization {0}                                                              {Enable via optimization}
bbset pnr.route.EnableRouteWithSiDriven {true}                                                           {Enable si driven routing}
bbset pnr.route.EnableRouteWithTimingDriven {true}                                                           {Enable timing driven routing}
bbset pnr.route.RouteReinsertFillerCellList {}                                                               {Add Cell list for Filler Insertion}
bbset pnr.route.EnableViaOpt         {false}                                                          {Enable NanoRoute settings to control viaOpt}
bbset pnr.route.EnableTrackOpt       {false}                                                          {Enable trackOpt switch for routeDesign}
bbset pnr.route.EnableClockSourceLatencyOverride {false}                                                          {Set Clock Latency based on PostCtsClockSourceLatency value}
bbset pnr.route.ClockSourceLatencyOverrides {}                                                               {Custom scanerio clock IO latencys. dict of dicts as { view1 {{clk1 latency} {clk2 latency}} view2 ...}}
bbset pnr.route.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.route.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.route.MBFFPrefix           {}                                                               {Multibit flop prefix }
bbset pnr.route.EnableViaPillar      {1}                                                              {Enable via pillar setting based on process}
bbset pnr.route.ViaPillarAssociationFile {}                                                               {Define Via pillar association file path}
bbset pnr.route.EnableNRBasedSPGR    {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.route.EnablePGPinRoute     {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.route.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.route.SPGCommonAttributes  {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.route.ConnectVnwellLVLInsts {true}                                                           {For SOC only.  Run ::spfutils::perform_route to connect VNWELL of LVL instances}
bbset pnr.route.EnableMeshSPGR       {0}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.route.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.route.MeshSPGR.PinLayer    {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.route.MeshSPGR.TargetLayer {}                                                               {Target Layer to tap the route}
bbset pnr.route.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.route.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.route.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.route.MesHSPGR.LayerWidth  {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.route.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.route.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.route.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.route.MeshSPGR.IgnoreDRC   {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.route.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.route.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.route.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.route.FixAONInstances      {0}                                                              {Fix AON instances after secPG}
bbset pnr.route.EnableTDTA           {0}                                                              {Enable TDTA feature for routedesign -trackopt}
bbset pnr.route.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.route.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.routeopt.SaveCallbacks     {pnr.innovus.RouteOptSequentialCRRCallback pnr.innovus.RouteOptSecPGRoutingCallback} {Callbacks after which we save design}
bbset pnr.routeopt.StartCallback     {}                                                               {Callback to start the flow from}
bbset pnr.routeopt.InputDatabase     {}                                                               {Input Database for routeopt stage}
bbset pnr.routeopt.ResetRouteModeSettings {false}                                                          {To reset all NanoRoute settings to default}
bbset pnr.routeopt.SwitchingActivity { sequential 0.2 global 0.2 macro 0.2 clock 0.2 input 0.2}       {Switching activity for EM fixing}
bbset pnr.routeopt.TuneEMTFlowSA     {false}                                                          {Tune switching activities for EMT flow }
bbset pnr.routeopt.EnableDRCCleanup  {1}                                                              {Enable DRC cleanup}
bbset pnr.routeopt.EnableViaOptimization {0}                                                              {Enable via optimization}
bbset pnr.routeopt.EnableViaPillarOptimization {0}                                                              {Enable via pillar optimization}
bbset pnr.routeopt.EnableAntennaFix  {1}                                                              {Enable antenna fixing}
bbset pnr.routeopt.RouteReinsertFillerCellList {}                                                               {Add Cell list for Filler Insertion}
bbset pnr.routeopt.EnableHoldFix     {1}                                                              {Enable hold fixing}
bbset pnr.routeopt.HoldFixThreshold  {-0.3}                                                           {Specify hold fix threshold value}
bbset pnr.routeopt.HoldFixTargetSlack {-0.030}                                                         {Specify hold fix target value}
bbset pnr.routeopt.AutoViewHoldTargetSlack {0}                                                              {Specify Auto view hold fix target value for post-cts}
bbset pnr.routeopt.HoldFixIgnorePathGroups {INPUT, OUTPUT, IN2OUT}                                          {Path groups excluded from hold fix}
bbset pnr.routeopt.PowerEffort       {low}                                                            { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.routeopt.EnableSignoffDerates {0}                                                              {Use signoff ageing and memory derates to improve correlation with signoff timing}
bbset pnr.routeopt.ExtractRCEffortLevel {signoff}                                                        {Control extraction effort. value:low|medium|high|signoff}
bbset pnr.routeopt.RCScalingFactors  {}                                                               {RC scaling factors to be updated for improving correlation. Format: {{corner rc1 postRoute_res {1 1 1} postRoute_clkres {1 1 1} postRoute_cap {1 1 1} postRoute_clkcap {1 1 1} postRoute_xcap {1 1 1}} {corner rc2 postRoute_res {1 1 1} postRoute_clkres {1 1 1} postRoute_cap {1 1 1} postRoute_clkcap {1 1 1} postRoute_xcap {1 1 1}}}}
bbset pnr.routeopt.EnableMBFFFlow    {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.routeopt.MBFFMode          {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.routeopt.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.routeopt.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.routeopt.EnableCCDOptimization {0}                                                              {Enable concurrent clock data optimization}
bbset pnr.routeopt.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.routeopt.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.routeopt.CCDEffort         {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.routeopt.EnableAgressivePowerReclaimOpt {0}                                                              {Enable OptMode Settings for agressive area optmization}
bbset pnr.routeopt.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.routeopt.IncrementalOptFlowEffort {extreme}                                                        {set the flow Effort for Incremental route optimization}
bbset pnr.routeopt.EnableIncrementalOpt {0}                                                              {Enable incremental optimization for both setup and hold fix}
bbset pnr.routeopt.EnableIncrSetupFix {0}                                                              {Enable incremental setup optimization}
bbset pnr.routeopt.EnableIncrHoldFix {0}                                                              {Enable incremental hold optimization}
bbset pnr.routeopt.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.routeopt.ExtractionRealMetalfill {floating}                                                       {Extraction options real_metalfill}
bbset pnr.routeopt.ExtractionReferenceDirection {vertical}                                                       {Extraction options Reference Direction}
bbset pnr.routeopt.ExtractionEarlyCcapThreshold {0.001}                                                          {Extraction options Early Ccap Threshold}
bbset pnr.routeopt.ExtractionLateCcapThreshold {0.001}                                                          {Extraction options Late Ccap Threshold}
bbset pnr.routeopt.ExtractionEarlyCcapRatio {0.01}                                                           {Extraction options Early Ccap Ratio}
bbset pnr.routeopt.ExtractionLateCcapRatio {0.01}                                                           {Extraction options Late Ccap Ratio}
bbset pnr.routeopt.EnableDpx         {false}                                                          {Enable Distributed Processing}
bbset pnr.routeopt.EnableNRBasedSPGR {1}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.routeopt.EnablePGPinRoute  {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.routeopt.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.routeopt.SPGCommonAttributes {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.routeopt.EnableViaOpt      {none}                                                           {Enable NanoRoute settings to control viaOpt}
bbset pnr.routeopt.EnableMeshSPGR    {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.routeopt.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.routeopt.MeshSPGR.PinLayer {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.routeopt.MeshSPGR.TargetLayer {}                                                               {Target Layer to tap the route}
bbset pnr.routeopt.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.routeopt.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.routeopt.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.routeopt.MesHSPGR.LayerWidth {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.routeopt.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.routeopt.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.routeopt.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.routeopt.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.routeopt.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.routeopt.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.routeopt.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.routeopt.FixAONInstances   {1}                                                              {Fix AON instances after secPG}
bbset pnr.routeopt.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.routeopt.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.routeopt.KeepEmptyModules  {0}                                                              {Variable to control empty modules for hierarchial designs. Default 0}
bbset pnr.routeopt.SkipUniquify      {0}                                                              {Variable to control uniquification for hierarhcial designs. Default 0}
bbset pnr.routeopt.StarRCConfigFile  {}                                                               {FC in design Star RC config file}
bbset pnr.routeopt.StarRCCmdFile     {[bbget .info.PROCESS_DIR]/pnr/fc/routeopt.starrc.cmd}           {Starrc Config file for FC}
bbset pnr.routeopt.StarRCGRDFiles    {[bbquery get file -db pdk -filter "file_type=~'parasitics' && function=~'pex' && tool=~'starrc' && stack=~'[bbget .Stack]'"]} {Star RC NXTGRD Files}
bbset pnr.routeopt.StarRCLayerMap    {[bbquery get file -db pdk -filter "file_type=~'nxtgrdlayermap' && tool=~'starrc' && stack=~'[bbget .Stack]' && is_shdmim =~'[bbget .TechIsShdmim]'&& pnr_tool =~'icc2'"]} {Star RC Layer Map Files}
bbset pnr.routeopt.FCEnableCNODOpt   {0}                                                              {CNOD leakage optimization flow for FC}
bbset pnr.routeopt.FCEdgeInfoFiles   {[glob -nocomplain /google/gchips/lib/foundry/tsmc/n3e/tsmc/dk/[bbget .DkVersion]/edgeinfo/*/*_celledge_sidefile]} {Files for standard cells edge information}
bbset pnr.routeopt.FCLeakageConfigFiles {[glob -nocomplain /google/gchips/lib/foundry/tsmc/n3e/tsmc/dk/[bbget .DkVersion]/leakage_config/*/*_leakage_config.txt]} {Files with standard cell leakage configuration}
bbset pnr.routeopt.FCLeakageInfoFiles {[glob -nocomplain /google/gchips/lib/foundry/tsmc/n3e/tsmc/dk/[bbget .DkVersion]/leakinfo/*/*_leakinfo.txt]} {Files with leakage config data}
bbset pnr.routeopt.WritePortTiming   {0}                                                              {Write port timing information}
bbset pnr.routeopt.GlitchPowerOptimization.InputActivityFile {}                                                               {Input RTL stimulus file}
bbset pnr.routeopt.GlitchPowerOptimization.FSDBInstanceName {}                                                               {dut hierarchy in rtl stimulus}
bbset pnr.routeopt.GlitchPowerOptimization.FSDBStartTime {}                                                               {Input RTL stimulus file start time. Ex: 10ns}
bbset pnr.routeopt.GlitchPowerOptimization.FSDBEndTime {}                                                               {Input RTL stimulus file end time. Ex: 20ns}
bbset pnr.routeopt.GlitchPowerOptimization.XReplayPreTCL {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/innovus/pre_xreplay.tcl} {XReplay pre sutup files}
bbset pnr.routeoptdesign.SaveCallbacks {pnr.innovus.RouteOptSequentialCRRCallback pnr.innovus.RouteOptSecPGRoutingCallback} {Callbacks after which we save design}
bbset pnr.routeoptdesign.StartCallback {}                                                               {Callback to start the flow from}
bbset pnr.routeoptdesign.InputDatabase {}                                                               {Input Database for routeopt stage}
bbset pnr.routeoptdesign.SwitchingActivity { sequential 0.2 global 0.2 macro 0.2 clock 0.2 input 0.2}       {Switching activity for EM fixing}
bbset pnr.routeoptdesign.TuneEMTFlowSA {false}                                                          {Tune switching activities for EMT flow }
bbset pnr.routeoptdesign.EnableDRCCleanup {1}                                                              {Enable DRC cleanup}
bbset pnr.routeoptdesign.EnableViaOptimization {0}                                                              {Enable via optimization}
bbset pnr.routeoptdesign.EnableViaPillarOptimization {0}                                                              {Enable via pillar optimization}
bbset pnr.routeoptdesign.EnableAntennaFix {1}                                                              {Enable antenna fixing}
bbset pnr.routeoptdesign.RouteReinsertFillerCellList {}                                                               {Add Cell list for Filler Insertion}
bbset pnr.routeoptdesign.EnableHoldFix {1}                                                              {Enable hold fix}
bbset pnr.routeoptdesign.HoldFixThreshold {-0.6}                                                           {Specify hold fix threshold value}
bbset pnr.routeoptdesign.HoldFixTargetSlack {-0.01}                                                          {Specify hold fix target value}
bbset pnr.routeoptdesign.AutoViewHoldTargetSlack {0}                                                              {Specify Auto view hold fix target value for post-cts}
bbset pnr.routeoptdesign.HoldFixIgnorePathGroups {INPUT, OUTPUT, IN2OUT}                                          {Path groups excluded from hold fix}
bbset pnr.routeoptdesign.PowerEffort {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.routeoptdesign.EnableEPBA  {0}                                                              {Enable EPBA based optimization for routeoptdesign step}
bbset pnr.routeoptdesign.EnableSignoffDerates {0}                                                              {Use signoff ageing and memory derates to improve correlation with signoff timing}
bbset pnr.routeoptdesign.EnableSignoffCorrSettings {0}                                                              {Use signoff correlation settings at post-route stage}
bbset pnr.routeoptdesign.ExtractRCEffortLevel {signoff}                                                        {Control extraction effort. value:low|medium|high|signoff}
bbset pnr.routeoptdesign.RCScalingFactors {}                                                               {RC scaling factors to be updated for improving correlation. Format: {{corner rc1 postRoute_res {1 1 1} postRoute_clkres {1 1 1} postRoute_cap {1 1 1} postRoute_clkcap {1 1 1} postRoute_xcap {1 1 1}} {corner rc2 postRoute_res {1 1 1} postRoute_clkres {1 1 1} postRoute_cap {1 1 1} postRoute_clkcap {1 1 1} postRoute_xcap {1 1 1}}}}
bbset pnr.routeoptdesign.EnableMBFFFlow {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.routeoptdesign.MBFFMode    {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.routeoptdesign.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.routeoptdesign.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.routeoptdesign.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization}
bbset pnr.routeoptdesign.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.routeoptdesign.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.routeoptdesign.CCDEffort   {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.routeoptdesign.EnableAgressivePowerReclaimOpt {0}                                                              {Enable OptMode Settings for agressive area optmization}
bbset pnr.routeoptdesign.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.routeoptdesign.IncrementalOptFlowEffort {extreme}                                                        {set the flow Effort for Incremental route optimization}
bbset pnr.routeoptdesign.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.routeoptdesign.EnableNRBasedSPGR {1}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.routeoptdesign.EnablePGPinRoute {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.routeoptdesign.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.routeoptdesign.SPGCommonAttributes {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.routeoptdesign.EnableMeshSPGR {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.routeoptdesign.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.routeoptdesign.MeshSPGR.PinLayer {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.routeoptdesign.MeshSPGR.TargetLayer {}                                                               {Target Layer to tap the route}
bbset pnr.routeoptdesign.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.routeoptdesign.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.routeoptdesign.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.routeoptdesign.MesHSPGR.LayerWidth {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.routeoptdesign.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.routeoptdesign.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.routeoptdesign.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.routeoptdesign.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.routeoptdesign.MeshSPGR.EnableEcoRoute {1}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.routeoptdesign.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.routeoptdesign.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.routeoptdesign.FixAONInstances {1}                                                              {Fix AON instances after secPG}
bbset pnr.routeoptdesign.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.routeoptdesign.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.routeoptdesign.KeepEmptyModules {0}                                                              {Variable to control empty modules for hierarchial designs. Default 0}
bbset pnr.routeoptdesign.SkipUniquify {0}                                                              {Variable to control uniquification for hierarhcial designs. Default 0}
bbset pnr.routeoptdesign.WritePortTiming {0}                                                              {Write port timing information}
bbset pnr.routeoptdesign.GlitchPowerOptimization.InputActivityFile {}                                                               {Input RTL stimulus file}
bbset pnr.routeoptdesign.GlitchPowerOptimization.FSDBInstanceName {}                                                               {dut hierarchy in rtl stimulus}
bbset pnr.routeoptdesign.GlitchPowerOptimization.FSDBStartTime {}                                                               {Input RTL stimulus file start time. Ex: 10ns}
bbset pnr.routeoptdesign.GlitchPowerOptimization.FSDBEndTime {}                                                               {Input RTL stimulus file end time. Ex: 20ns}
bbset pnr.routeoptdesign.GlitchPowerOptimization.XReplayPreTCL {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/innovus/pre_xreplay.tcl} {XReplay pre sutup files}
bbset pnr.routeoptdesign.EnablePostRodDrcFix {false}                                                          {Run drc fix post rod}
bbset pnr.routeoptdesign.ResetRouteModeSettings {false}                                                          {To reset all NanoRoute settings to default}
bbset pnr.routeoptdesign.EnableRouteWithSiDriven {true}                                                           {Enable si driven routing}
bbset pnr.routeoptdesign.EnableRouteWithTimingDriven {true}                                                           {Enable timing driven routing}
bbset pnr.routeoptdesign.EnableViaOpt {false}                                                          {Enable NanoRoute settings to control viaOpt}
bbset pnr.routeoptdesign.EnableTrackOpt {true}                                                           {Enable trackOpt switch for routeDesign}
bbset pnr.routeoptdesign.EnableTDTA  {1}                                                              {Enable TDTA feature for routedesign -trackopt}
bbset pnr.routeoptdesign.EnableSetupFix {1}                                                              {Enable setup fix}
bbset pnr.routeoptdesign.RODCommandArgs {}                                                               {additional arguments for rod}
bbset pnr.applyeco.Stages            {applyeco chipfinish}                                            {Appleco flow stages list}
bbset pnr.applyeco.SaveCallbacks     {sif.innovus.ExcuteStageCallback}                                {Callbacks after which we save design}
bbset pnr.applyeco.InputDatabase     {}                                                               {Input Database for applyeco stage}
bbset pnr.applyeco.ECOChangeFile     {}                                                               {ECO change file path}
bbset pnr.applyeco.ECODEFFile        {}                                                               {Input ECO DEF file}
bbset pnr.applyeco.PreserveExistingFillerCells {0}                                                              {Preserve Filler cells before the eco place and route}
bbset pnr.applyeco.DeleteChipfinishStapleVias {1}                                                              {Preserve staple vias before the eco place and route}
bbset pnr.applyeco.ECOPrefix         {}                                                               {Set EcoMode Prefix}
bbset pnr.applyeco.LEQCheck          {true}                                                           {LEQ check in Innovus for incoming ECOs}
bbset pnr.applyeco.PowerIntentCheck  {true}                                                           {Power intent check in Innovus for incoming ECOs}
bbset pnr.applyeco.ECORefinePlaceInstances {}                                                               {Instance patterns for refinePlace}
bbset pnr.applyeco.PlaceDetailECOMaxDistance {}                                                               {Max displacement for instances for refinePlace}
bbset pnr.applyeco.EnableIncrementalPlace {1}                                                              {Enable incremental place}
bbset pnr.applyeco.EnableIncrementalRoute {1}                                                              {Enable incremental route}
bbset pnr.applyeco.EnableRouteWithTimingDriven {true}                                                           {Enable Route with timing driven}
bbset pnr.applyeco.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.applyeco.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.applyeco.EnableNRBasedSPGR {1}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.applyeco.EnablePGPinRoute  {}                                                               {List of pg pins to be enable spgr . Pattern: {cells1:pins cells2:pins}}
bbset pnr.applyeco.SPGNetAttributesOverride {}                                                               {Atrribute stettings for each pg nets. Pattern: {pgNet { subnet {settings as dict {key value}}}...}}
bbset pnr.applyeco.SPGCommonAttributes {}                                                               {Common attributes for all pgNets. Pattern: {attribute1 value1 attr2 value2 ..}}
bbset pnr.applyeco.EnableMeshSPGR    {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.applyeco.MeshSPGR.CellsPinList {}                                                               {Cells:Pin list for routing}
bbset pnr.applyeco.MeshSPGR.PinLayer {}                                                               {Pin layer of the secondary pg pin}
bbset pnr.applyeco.MeshSPGR.TargetLayer {}                                                               {Target Layer to tap the route}
bbset pnr.applyeco.MeshSPGR.ExtensionLayer {}                                                               {Extension Layer for SPG routing}
bbset pnr.applyeco.MesgSPGR.StripesCountList {}                                                               {specify stripe count for layer . Default 1 for all layer}
bbset pnr.applyeco.MeshSPGR.PitchScalingList {}                                                               {specify pitch scaling factor for each layer. Default 1}
bbset pnr.applyeco.MesHSPGR.LayerWidth {}                                                               {specify width value for layer  Default :  layer.minWidth}
bbset pnr.applyeco.MeshSPGR.LayerWidthScalingFactor {}                                                               {specify width scale factor value for layer . Default 1 for all layer}
bbset pnr.applyeco.MesHSPGR.LayerSpacing {}                                                               {specifed spacing value for layer.Default : layer.minSpacing}
bbset pnr.applyeco.MeshSPGR.LayerSpacingScalingFactor {}                                                               {specify spacing scale factor value for layer . Default 1 for all layer}
bbset pnr.applyeco.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.applyeco.MeshSPGR.EnableEcoRoute {1}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.applyeco.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.applyeco.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.applyeco.FixAONInstances   {1}                                                              {Fix AON instances after secPG}
bbset pnr.macro_ai_assistant.InputDatabase {}                                                               {# No Comment}  
bbset pnr.macro_ai_assistant.InputScripts {/google/gchips/tools/morpheus/ai-tool/version_5/Latest/}        {# No Comment}  
bbset pnr.macro_ai_assistant.ModelScripts {/google/gchips/tools/morpheus/ai-tool/version_5/}               {# No Comment}  
bbset pnr.macro_ai_assistant.DeleteMbist {1}                                                              {# No Comment}  
bbset pnr.macro_ai_assistant.MbistPattern {{*mbist*} {*BIST*} {*dftss*} {*_edt_*} {*tessent*}}             {# No Comment}  
bbset pnr.macro_ai_assistant.ReleaseData {0}                                                              {# No Comment}  
bbset pnr.macro_ai_assistant.MorpheusCSVTOBQ {[bbget .info.REPO_TOP]/cad/pd-tools/sif/bin/csv_to_bq_morpheus.py} {# No Comment}  
bbset pnr.macro_ai_assistant.MorpheusMetrics {[bbget .info.REPO_TOP]/cad/pd-tools/sif/bin/morpheus_metrics.yaml} {# No Comment}  
bbset pnr.macro_ai_verifier.InputDatabase {}                                                               {# No Comment}  
bbset pnr.macro_ai_verifier.InputScripts {/google/gchips/tools/morpheus/ai-tool/version_5/Latest/}        {# No Comment}  
bbset pnr.macro_ai_verifier.ModelScripts {/google/gchips/tools/morpheus/ai-tool/version_5/}               {# No Comment}  
bbset pnr.macro_ai_verifier.DeleteMbist {1}                                                              {# No Comment}  
bbset pnr.macro_ai_verifier.MbistPattern {{*mbist*} {*BIST*} {*dftss*} {*_edt_*} {*tessent*}}             {# No Comment}  
bbset pnr.macro_ai_verifier.ReleaseData {0}                                                              {# No Comment}  
bbset pnr.signoffopt.EnableHoldEPExclude {0}                                                              {If enabled exclude the endpoints not present in PT user need to provide file here ::pnr.signoffopt.HoldSlackEPFiles}
bbset pnr.signoffopt.HoldTargetOverride {}                                                               {hold target for hold optimisation only considered during hold opt}
bbset pnr.signoffopt.EnableSOD2Round {false}                                                          {Enable SOD 2nd round}
bbset pnr.signoffopt.EnableOnlySetupHoldSOD2Round {false}                                                          {Enable only setup and hold fixing in 2nd round}
bbset pnr.signoffopt.EnableAggrSetupFixPostHoldFix {false}                                                          {If Hold fixing and ecoroute causing setup degradation then enable this for setup fixing}
bbset pnr.signoffopt.FixHoldAvoidSetupDegradation {false}                                                          {Enable this to decrease setup degradation dueing setup fixing}
bbset pnr.signoffopt.EPMarginCalScript {[bbget .info.REPO_TOP]/cad/pd-tools/sif/bin/sod_ep_margin.py}   {Python API to calculate endpoint based margin}
bbset pnr.signoffopt.EPBasedSetupOpt {false}                                                          {Enable End point based setup optimisation}
bbset pnr.signoffopt.EPBasedHoldOpt  {false}                                                          {Enable End point based hold optimisation}
bbset pnr.signoffopt.SetupSlackEPFiles {}                                                               {Create a dict in format <view> <file> <view> <file> where file is primetime generated can be found in  sta/sta.bb_summary/save_rptx/save_rpt}
bbset pnr.signoffopt.HoldSlackEPFiles {}                                                               {Create a dict in format <view> <file> <view> <file> where file is primetime generated can be found in  sta/sta.bb_summary/save_rptx/save_rpt}
bbset pnr.signoffopt.PowerEffort     {none}                                                           {Power effort for power optimization during default SOD flow}
bbset pnr.signoffopt.SODMaxOptRunTime {0}                                                              {Maximum eco steps runtime in minutes}
bbset pnr.signoffopt.EnableAreaReclaim {0}                                                              {Enable area optimization during default SOD flow}
bbset pnr.signoffopt.FixSISlew       {0}                                                              {Enable Si induced slew fixing}
bbset pnr.signoffopt.FlowEffort      {standard}                                                       {setDesignMode for signoffopt}
bbset pnr.signoffopt.EnableClockMaxLevel {false}                                                          {If set to true then doesn't allow clock path fixing beyond 20 level}
bbset pnr.signoffopt.PowerOptFocus   {total}                                                          {set power optimisation focus of SOD valid values total | leakage | dynamic | leakageOnly | dynamicOnly}
bbset pnr.signoffopt.EnableSetupFixWHold {0}                                                              {If Hold fixing causing setup degradation then enable this for setup fixing}
bbset pnr.signoffopt.EnablePowerRecoveryWHold {false}                                                          {Run power recovery post final hold fixing in SOD all mode}
bbset pnr.signoffopt.EnableCorrDebug {0}                                                              {Enable for tempus to innovus correlation}
bbset pnr.signoffopt.EnableAdvanceMIS {True}                                                           {Advance MIS derate}
bbset pnr.signoffopt.SaveCallbacks   {}                                                               {Callbacks after which we save design}
bbset pnr.signoffopt.StartCallback   {}                                                               {Callback to start the flow from}
bbset pnr.signoffopt.InputDatabase   {}                                                               {Input Database for signoffopt stage}
bbset pnr.signoffopt.CpuPerRemoteHost {16}                                                             {CPU cores to be used on each remote host}
bbset pnr.signoffopt.RAMPerRemoteHost {128000}                                                         {RAM to be used on each remote host}
bbset pnr.signoffopt.InputUncertaintyFile {}                                                               {Signoff uncertaintties to be used}
bbset pnr.signoffopt.InputPreSTAFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/pre_sta.tcl} {STA settings to be applied/reset before running signoffopt}
bbset pnr.signoffopt.InputPostSTAFile {}                                                               {STA settings to be applied/reset after running signoffopt}
bbset pnr.signoffopt.QRCCmdFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/signoffopt.qrc.cmd} {Quantus RC Cmd file used for RC extraction at SignoffOpt stage}
bbset pnr.signoffopt.ExtractEnableVirtualMetalFill {0}                                                              {Enable Virtual Metal Fill in extraction.}
bbset pnr.signoffopt.QRCVMFCmdFile   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/signoffopt.ivmf.qrc.cmd} {Quantus RC Cmd file used for RC extraction with virtual metal fill at SignoffOpt stage}
bbset pnr.signoffopt.RCScalingFactors {}                                                               {RC scaling factors to be updated for improving correlation. Format: {{corner rc1 postRoute_res {1 1 1} postRoute_clkres {1 1 1} postRoute_cap {1 1 1} postRoute_clkcap {1 1 1} postRoute_xcap {1 1 1}} {corner rc2 postRoute_res {1 1 1} postRoute_clkres {1 1 1} postRoute_cap {1 1 1} postRoute_clkcap {1 1 1} postRoute_xcap {1 1 1}}}}
bbset pnr.signoffopt.PrePowerOptTCL  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_prePowerOpt.tcl} {Pre-power opt TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostPowerOptTCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postPowerOpt.tcl} {Post-power opt TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreDrvOpt2TCL   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preDrvOpt2.tcl} {Pre-hold opt 1 TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreHoldOptTCL   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preHoldOpt.tcl} {Pre-DRV opt TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostHoldOpt2TCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postHoldOpt2.tcl} {Post-hold opt 2 TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreAreaOptTCL   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preAreaOpt.tcl} {Pre-area opt TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostAreaOptTCL  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postAreaOpt.tcl} {Post-area opt  TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostHoldOptTCL  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postHoldOpt.tcl} {Post-hold opt TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreEcoRouteTCL  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preEcoRoute.tcl} {Pre-ECOroute TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreInitSTDOptTCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preInitSTD.tcl} {PreInitSTDOptTCL TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostInitSTDOptTCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postInitSTD.tcl} {PostInitSTDOptTCL TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreSetupOptTCL  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preSetupOpt.tcl} {PreSetupOptTCL TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostSetupOptTCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postSetupOpt.tcl} {PostSetupOptTCL TCL file for signoffoptdesign}
bbset pnr.signoffopt.PreSetupOpt2TCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_preSetupOpt2.tcl} {PreSetupOpt2TCL TCL file for signoffoptdesign}
bbset pnr.signoffopt.PostSetupOpt2TCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_postSetupOpt2.tcl} {PostSetupOpt2TCL TCL file for signoffoptdesign}
bbset pnr.signoffopt.EnableCNODPowerOptimization {1}                                                              {Perform CNOD based leakage power reporting and optimization}
bbset pnr.signoffopt.HoldTargetSlack {0}                                                              {Hold target slack value to be used for signoffopt flow}
bbset pnr.signoffopt.EnableIOSetupFixing {0}                                                              {Enable signoffopt flow to fix setup violations on IO paths}
bbset pnr.signoffopt.EnableIOHoldFixing {0}                                                              {Enable signoffopt flow to fix hold violations on IO paths}
bbset pnr.signoffopt.EnableOptReplicatedMod {1}                                                              {Enable signoffopt flow to optimize replicated modules}
bbset pnr.signoffopt.EnableClockDrvFixing {0}                                                              {Enable fixing of clock DRV during optimization}
bbset pnr.signoffopt.CustomRecipes   {}                                                               {Custom recipes to run for signoffopt stage}
bbset pnr.signoffopt.CustomRecipesTCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/chip/lajolla/pnr/innovus/signoffopt_custom_recipes/signoffopt_recipes.tcl} {Custom recipes TCL for individual optimizations in signoffopt stage}
bbset pnr.signoffopt.EnableSignoffTimedesign {1}                                                              {Run signoff time design on final DB}
bbset pnr.signoffopt.EnablePostOptRCOut {0}                                                              {Enable post-optimization SPEF writing}
bbset pnr.signoffopt.SignoffTimedesignMaxpaths {10000000}                                                       {Max paths to be reported for final signoffTimeDesign}
bbset pnr.signoffopt.SignoffTimedesignNworst {50}                                                             {Number of worst paths to be reported for final signoffTimeDesign}
bbset pnr.signoffopt.StarrcConfig    {}                                                               {Starrc Config} 
bbset pnr.signoffopt.PrimeTimeExecutable {}                                                               {PT executable binary}
bbset pnr.signoffopt.PrimeTimeWorkDir {signoffopt_eco}                                                 {Work dir for PT exectution}
bbset pnr.signoffopt.SearchPath      {}                                                               {Search Path for dbs}
bbset pnr.signoffopt.Types           {leakage_power dynamic_power total_power buffer_removal setup hold} {Starrc Config} 
bbset pnr.signoffopt.PbaMode         {path}                                                           {ECO opt pba mode}
bbset pnr.signoffopt.PreEcoScript    {}                                                               {Script to setup, prehook commands before starting eco opt}
bbset pnr.signoffopt.PhysicalMode    {occupied_site}                                                  {Mode for ecoopt}
bbset pnr.signoffopt.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.signoffopt.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.signoffopt.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization during SOD}
bbset pnr.signoffopt.CustomPreSetupTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreSetup.tcl} {CustomPreSetupTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostSetupTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostSetup.tcl} {CustomPreSetupTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreSetupOptAggrTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreSetupAggr.tcl} {CustomPreSetupAggrTcl TCL file for custom setupAggr recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostSetupOptAggrTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostSetupAggr.tcl} {CustomPostSetupAggrTcl TCL file for custom setupAggr recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreEcoRouteTDTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreEcoRouteTD.tcl} {CustomPreEcoRouteTDTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostEcoRouteTDTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostEcoRouteTD.tcl} {CustomPostEcoRouteTDTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreEcoRouteNoTDTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreEcoRouteNoTD.tcl} {CustomPreEcoRouteNoTDTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostEcoRouteNoTDTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostEcoRouteNoTD.tcl} {CustomPostEcoRouteNoTDTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreHoldTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreHold.tcl} {CustomPreHoldTcl TCL file for custom hold recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostHoldTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostHold.tcl} {CustomPostHoldTcl TCL file for custom hold recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreHoldAggrTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreHoldAggr.tcl} {CustomPreHoldAggrTcl TCL file for custom hold recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostHoldAggrTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostHoldAggr.tcl} {CustomPostHoldAggrTcl TCL file for custom hold recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPrePowerTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPrePower.tcl} {CustomPrePowerTcl TCL file for custom power recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostPowerTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostPower.tcl} {CustomPostPowerTcl TCL file for custom power recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreAreaTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreArea.tcl} {CustomPreAreaTcl TCL file for custom area recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostAreaTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostArea.tcl} {CustomPostAreaTcl TCL file for custom area recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreSetupRecoveryTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreSetupRecovery.tcl} {CustomPreSetupRecoveryTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostSetupRecoveryTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostSetupRecovery.tcl} {CustomPostSetupRecoveryTcl TCL file for custom setup recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPreDrvTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPreDrv.tcl} {CustomPreDrvTcl TCL file for custom sdrv recipe in signoffOptDesign}
bbset pnr.signoffopt.CustomPostDrvTcl {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/tempus/external_scripts/signoffopt_customPostDrv.tcl} {CustomPostDrvTcl TCL file for custom sdrv recipe in signoffOptDesign}
bbset pnr.signoffdrc.PGFillConfiguration {}                                                               {Specify the power domains and metal layers for running PG fill. Ex: {{VVDD {window area for PG fill} {M1 M2 M3}} {VSS {} {}}}}
bbset pnr.signoffdrc.ICVRunset       {}                                                               {ICV runsets to be used for the signoffdrc stage}
bbset pnr.signoffdrc.ICVStreamfilePath {}                                                               {List of paths pointing to stream files for macros and standard cells}
bbset pnr.signoffdrc.ICVFillRunset   {}                                                               {ICV fill runset}
bbset pnr.signoffdrc.ICVRunDFMPath   {}                                                               {Path to ICV DFM runset}
bbset pnr.signoffdrc.ICVFillCellPath {}                                                               {List of paths to FEOL fill cells}
bbset pnr.signoffdrc.ICVFillLayerMap {}                                                               {Layer map file used for running fill runset}
bbset pnr.signoffdrc.ICVStreamoutMap {}                                                               {Stream out map file used in write_oasis}
bbset pnr.signoffdrc.PowerNet        {}                                                               {Primary power net used for PG augmentation}
bbset pnr.signoffdrc.GroundNet       {}                                                               {Primary ground net used for PG augmentation}
bbset pnr.signoffdrc.PGAParamFile    {[bbget .info.PROCESS_DIR]/pnr/fc/icv_files/track_fill_params.rh} {Param file for PG augmentation}
bbset pnr.signoffdrc.EnableADRnonDPTDRCFix {1}                                                              {Enable fixing of ADR non-DPT DRC violations}
bbset pnr.signoffdrc.EnableADRDPTDRCFix {1}                                                              {Enable fixing of ADR DPT DRC violations}
bbset pnr.signoffdrc.EnableDFMDRCFix {0}                                                              {Enable fixing of DFM (pattern match) DRC violations}
bbset pnr.signoffdrc.EnablePGA       {0}                                                              {Enable PG augmentation for improving IR drop issues}
bbset pnr.signoffdrc.EnableISOViaFix {0}                                                              {Enable fixing of isloated via DRC}
bbset pnr.signoffdrc.EnablePrefillSignoffDRCCheck {0}                                                              {Enable checking of pre-fill signoff DRC. Density checks will be excluded}
bbset pnr.signoffdrc.EnableMetalFill {0}                                                              {Enable metal fill insertion in design}
bbset pnr.signoffdrc.EnableIncrementalMetalFill {0}                                                              {Enable incremental metal fill insertion in design}
bbset pnr.signoffdrc.EnablePostfillSignoffDRCCheck {0}                                                              {Enable checking of post-fill signoff DRC. Density checks will be performed}
bbset pnr.signoffdrc.EnableICVLive   {0}                                                              {Invoke ICV Live in the design for interactive checking of DRC}
bbset pnr.signoffdrc.DensityRules    {}                                                               {Density rule set for fill checks}
bbset pnr.signoffdrc.ExcludeRulesForADRnonDPTChecks {}                                                               {Rules to exclude from the non-DPT ADR checks}
bbset pnr.signoffdrc.IncludeRulesForADRDPTChecks {}                                                               {Rules to include from the DPT ADR checks}
bbset pnr.signoffdrc.ExcludeRulesForADRDPTChecks {}                                                               {Rules to exclude from the DPT ADR checks}
bbset pnr.signoffdrc.ISOViaMaxRange  {}                                                               {Maximum range for searching and fixing ISO vias}
bbset pnr.signoffdrc.PGANode         {tsmc2}                                                          {Node reference variable to be used for PG augmentation}
bbset pnr.signoffdrc.FixIsoViaNode   {}                                                               {Node reference variable to be used for Iso via fixes}
bbset pnr.signoffdrc.NDMDefaultLayer {}                                                               {NDM default layer to be signoff DRC checks}
bbset pnr.signoffdrc.PegasusTurboMode {1}                                                              {Configure the number of Pegasus licenses to be used in turbo mode}
bbset pnr.signoffdrc.CpuPerRemoteHost {16}                                                             {CPU cores to be used on each remote host}
bbset pnr.signoffdrc.RAMPerRemoteHost {120000}                                                         {RAM to be used on each remote host}
bbset pnr.signoffdrc.EnablePGFill    {0}                                                              {Enable Pegasus based PG metal fill insertion flow}
bbset pnr.signoffdrc.EnableIncrPGFill {0}                                                              {Enable Pegasus based incremental PG metal fill insertion flow}
bbset pnr.signoffdrc.PGNetsForPGFill {}                                                               {PG nets in design for which PG fill needs to be run}
bbset pnr.signoffdrc.PGHookupOptions {PG_ONLY}                                                        {Fill flows to run. Valid options: PG_ONLY, FLOATING_ONLY, ALL}
bbset pnr.signoffdrc.PGFillWindows   {}                                                               {Specify windows for PG fill }
bbset pnr.signoffdrc.PGFillSkipLayers {}                                                               {Skip metal layers of PG fill insertion}
bbset pnr.signoffdrc.PGFillAddOportunisticVias {no}                                                             {set yes to enable opportunistic vias and set no to avoid this}
bbset pnr.signoffdrc.FillBlockageForClockNets {M1 0.22 M2 0.22 M3 0.22 M4 0.22 M5 0.22 M6 0.114 M7 0.114 M8 0.114 M9 0.114 M10 0.114 M11 0.114 M12 0.138 M13 0.138 M14 0.36 M15 0.36} {Specify the fill blockages to be created around clock nets as a dict for each layer}
bbset pnr.signoffdrc.PGFillProcessorsCount {8}                                                              {Specify the number of CPU's on which each pg_fill threads will be launched}
bbset pnr.signoffdrc.PGFillThreadsCount {2}                                                              {Specify the number  of threads on which pg_fill addition process will be started}
bbset pnr.signoffdrc.FillBlockageForDataNets {M1 0.04 M2 0.028 M3 0.034 M4 0.034 M5 0.044 M6 0.076 M7 0.076 M8 0.076 M9 0.076 M10 0.076 M11 0.076 M12 0.128 M13 0.128 M14 0.36 M15 0.36} {Specify the fill blockages to be created around data nets as a dict for each layer}
bbset pnr.signoffdrc.TrimFillSpacingBelow {0.01}                                                           {Trim fill spacing below a net}
bbset pnr.signoffdrc.TrimFillSpacingAbove {0.01}                                                           {Trim fill spacing above a net}
bbset pnr.signoffdrc.PegasusPGFillLayerMapFile {}                                                               {Pegasus layer map file to be used for PG Fill}
bbset pnr.signoffdrc.PegasusPGFillConfigFile {[bbget .info.PROCESS_DIR]/pnr/innovus/pegasus_files/pegasus_pgfill.config} {Pegasus PG fill config file}
bbset pnr.signoffdrc.EnableDNetTrimFirstPassPGFill {1}                                                              {Enable applying fill blockages on critical data nets in first pass of pg-fill}
bbset pnr.signoffdrc.SlackThresholdDNetsFirstPass {100}                                                            {Slack threshold to be used for applying fill blockages on critical data nets in first pass of pg-fill}
bbset pnr.signoffdrc.SlackThresholdDNetsIncrPass {0}                                                              {Slack threshold to be used for applying fill blockages on critical data nets in incremental pass of pg-fill}
bbset pnr.signoffdrc.EnableDebug     {0}                                                              {Enable intermediate timing reports and DB saves}
bbset pnr.signoffdrc.EnableIncrOptimization {0}                                                              {Enable incremental post-route optimization to recover timing}
bbset pnr.signoffdrc.RunSVDDRCCheck  {0}                                                              {Run Pegasus based signoff_verify_design DRC check}
bbset pnr.signoffdrc.RunSVDLVSCheck  {0}                                                              {Run Pegasus based signoff_verify_design LVS check}
bbset pnr.signoffdrc.RunSVRDRCFix    {0}                                                              {Run Pegasus based signoff_verify_design DRC fix}
bbset pnr.signoffdrc.SVDNode         {}                                                               {Pegasus SVD node reference variable}
bbset pnr.signoffdrc.PegasusSVDRuleFile {}                                                               {Pegasus SVD rule deck for DRC checks}
bbset pnr.signoffdrc.PegasusSVDLayerMapFile {}                                                               {Pegasus SVD layer map file}
bbset pnr.signoffdrc.PegasusSVDWorkDir {svd_drc}                                                        {Run directory for Pegasus SVD DRC check}
bbset pnr.signoffdrc.PegasusSVDCTLFile {}                                                               {Pegasus SVD control file}
bbset pnr.signoffdrc.PegasusSVDIgnoreRules {}                                                               {DRC rules to ignore for SVD DRC check}
bbset pnr.signoffdrc.PegasusSVDLayerRange {}                                                               {Metal layer range to check DRCs using Pegasus SVD}
bbset pnr.signoffdrc.PegasusLVSRuleFile {}                                                               {Pegasus SVD rule file for LVS checks}
bbset pnr.signoffdrc.PegasusLVSWorkDir {svd_lvs}                                                        {Run directory for Pegasus SVD LVS check}
bbset pnr.signoffdrc.PegasusSVDRFSDMapFile {}                                                               {Pegasus SVD RFSD map file}
bbset pnr.signoffdrc.PegasusSRDCTLFile {}                                                               {Pegasus SRD control file}
bbset pnr.chipfinish.SaveCallbacks   {}                                                               {Callbacks after which we save design}
bbset pnr.chipfinish.StartCallback   {}                                                               {Callback to start the flow from}
bbset pnr.chipfinish.KeepEmptyModules {0}                                                              {Variable to control empty modules for hierarchial designs. Default 0}
bbset pnr.chipfinish.SkipUniquify    {0}                                                              {Variable to control uniquification for hierarhcial designs. Default 0}
bbset pnr.chipfinish.Stages          {}                                                               {List of extra stages to run chipfinish other than final pre chipfinish stage}
bbset pnr.chipfinish.InputDatabase   {}                                                               {Input Database for chipfinish stage}
bbset pnr.chipfinish.EnableLIBCarryOver {0}                                                              {Enable linking out output .lib from routeopt stage or from input area used to run chipfinish}
bbset pnr.chipfinish.EnableSTDUHDBlockage {0}                                                              {Enable the insertion of std_uhd_blockage}
bbset pnr.chipfinish.EnableQuickPlace {0}                                                              {Enable quick placement}
bbset pnr.chipfinish.DeleteTrialRoute {0}                                                              {Enable to delete TrialRoutes post QuickPlace}
bbset pnr.chipfinish.FillerAvoidAbutmentPatterns {}                                                               {Sequence of filler cells that should not be abutted}
bbset pnr.chipfinish.FillerVerticalStackMaxLength {0}                                                              {Filler Vertical Stack Max Length}
bbset pnr.chipfinish.XCCAPFillerCells {}                                                               {List of xccap filler cells}
bbset pnr.chipfinish.HighLeakageDECAPFillerCells {DCAP64XPRBWP130HPNPN3P48CPDLVTLL DCAP16XPRBWP130HPNPN3P48CPDLVTLL DCAP32XPRBWP130HPNPN3P48CPDLVTLL DCAP4XPRBWP130HPNPN3P48CPDLVTLL DCAP8XPRBWP130HPNPN3P48CPDLVTLL} {List of high leakage Decap filler cells}
bbset pnr.chipfinish.LowLeakageDECAPFillerCells {DCAP8XPRBWP130HPNPN3P48CPDLVTLL DCAP8XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP16XPRBWP130HPNPN3P48CPDLVTLL DCAP16XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP4XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP32XPRBWP130HPNPN3P48CPDLVTLL } {List of low leakage Decap filler cells}
bbset pnr.chipfinish.ECOFillerCells  {GFILL7DHBWP130HPNPN3P48CPDULVT GFILL6SHBWP130HPNPN3P48CPDULVT GFILL6DHBWP130HPNPN3P48CPDULVT GFILL5DHBWP130HPNPN3P48CPDULVT GFILL4DHBWP130HPNPN3P48CPDULVT GFILL3DHBWP130HPNPN3P48CPDULVT GFILL3SHBWP130HPNPN3P48CPDULVT GFILL2DHBWP130HPNPN3P48CPDULVT GFILL2SHBWP130HPNPN3P48CPDULVT GFILL1SHBWP130HPNPN3P48CPDULVT GFILL1DHBWP130HPNPN3P48CPDULVT GFILL7DHBWP130HPNPN3P48CPDULVTLL GFILL6SHBWP130HPNPN3P48CPDULVTLL GFILL6DHBWP130HPNPN3P48CPDULVTLL GFILL5DHBWP130HPNPN3P48CPDULVTLL GFILL4DHBWP130HPNPN3P48CPDULVTLL GFILL3DHBWP130HPNPN3P48CPDULVTLL GFILL3SHBWP130HPNPN3P48CPDULVTLL GFILL2DHBWP130HPNPN3P48CPDULVTLL GFILL2SHBWP130HPNPN3P48CPDULVTLL GFILL1SHBWP130HPNPN3P48CPDULVTLL GFILL1DHBWP130HPNPN3P48CPDULVTLL} {List of ECO filler cells}
bbset pnr.chipfinish.ECOFillerPattern {ECO_FILL 2 DECAP_ECO_FILL 1 DECAP_FILL 1}                       {Placement percentage of ECO filler cells}
bbset pnr.chipfinish.PadFillerCells  {FILL4BWP130HNPPN3P48CPDSVT FILL4BWP130HNPPN3P48CPDLVTLL FILL4BWP130HNPPN3P48CPDLVT FILL4BWP130HNPPN3P48CPDULVTLL FILL4BWP130HNPPN3P48CPDULVT FILL4BWP130HNPPN3P48CPDELVT FILL4BWP130HPNNP3P48CPDSVT FILL4BWP130HPNNP3P48CPDLVTLL FILL4BWP130HPNNP3P48CPDLVT FILL4BWP130HPNNP3P48CPDULVTLL FILL4BWP130HPNNP3P48CPDULVT FILL4BWP130HPNNP3P48CPDELVT FILL4BWP130HPPNN3P48CPDSVT FILL4BWP130HPPNN3P48CPDLVTLL FILL4BWP130HPPNN3P48CPDLVT FILL4BWP130HPPNN3P48CPDULVTLL FILL4BWP130HPPNN3P48CPDULVT FILL4BWP130HPPNN3P48CPDELVT FILL3BWP130HNPPN3P48CPDSVT FILL3BWP130HNPPN3P48CPDLVTLL FILL3BWP130HNPPN3P48CPDLVT FILL3BWP130HNPPN3P48CPDULVTLL FILL3BWP130HNPPN3P48CPDULVT FILL3BWP130HNPPN3P48CPDELVT FILL3BWP130HPNNP3P48CPDSVT FILL3BWP130HPNNP3P48CPDLVTLL FILL3BWP130HPNNP3P48CPDLVT FILL3BWP130HPNNP3P48CPDULVTLL FILL3BWP130HPNNP3P48CPDULVT FILL3BWP130HPNNP3P48CPDELVT FILL3BWP130HPPNN3P48CPDSVT FILL3BWP130HPPNN3P48CPDLVTLL FILL3BWP130HPPNN3P48CPDLVT FILL3BWP130HPPNN3P48CPDULVTLL FILL3BWP130HPPNN3P48CPDULVT FILL3BWP130HPPNN3P48CPDELVT FILL2BWP130HNPPN3P48CPDSVT FILL2BWP130HNPPN3P48CPDLVTLL FILL2BWP130HNPPN3P48CPDLVT FILL2BWP130HNPPN3P48CPDULVTLL FILL2BWP130HNPPN3P48CPDULVT FILL2BWP130HNPPN3P48CPDELVT FILL2BWP130HPNNP3P48CPDSVT FILL2BWP130HPNNP3P48CPDLVTLL FILL2BWP130HPNNP3P48CPDLVT FILL2BWP130HPNNP3P48CPDULVTLL FILL2BWP130HPNNP3P48CPDULVT FILL2BWP130HPNNP3P48CPDELVT FILL2BWP130HPPNN3P48CPDSVT FILL2BWP130HPPNN3P48CPDLVTLL FILL2BWP130HPPNN3P48CPDLVT FILL2BWP130HPPNN3P48CPDULVTLL FILL2BWP130HPPNN3P48CPDULVT FILL2BWP130HPPNN3P48CPDELVT FILL1BWP130HNPPN3P48CPDSVT FILL1BWP130HNPPN3P48CPDLVTLL FILL1BWP130HNPPN3P48CPDLVT FILL1BWP130HNPPN3P48CPDULVTLL FILL1BWP130HNPPN3P48CPDULVT FILL1BWP130HNPPN3P48CPDELVT FILL1BWP130HPNNP3P48CPDSVT FILL1BWP130HPNNP3P48CPDLVTLL FILL1BWP130HPNNP3P48CPDLVT FILL1BWP130HPNNP3P48CPDULVTLL FILL1BWP130HPNNP3P48CPDULVT FILL1BWP130HPNNP3P48CPDELVT FILL1BWP130HPPNN3P48CPDSVT FILL1BWP130HPPNN3P48CPDLVTLL FILL1BWP130HPPNN3P48CPDLVT FILL1BWP130HPPNN3P48CPDULVTLL FILL1BWP130HPPNN3P48CPDULVT FILL1BWP130HPPNN3P48CPDELVT FILL2PADBWP130HNPPN3P48CPDSVT FILL2PADBWP130HNPPN3P48CPDLVTLL FILL2PADBWP130HNPPN3P48CPDLVT FILL2PADBWP130HNPPN3P48CPDULVTLL FILL2PADBWP130HNPPN3P48CPDULVT FILL2PADBWP130HNPPN3P48CPDELVT FILL2PADBWP130HPNNP3P48CPDSVT FILL2PADBWP130HPNNP3P48CPDLVTLL FILL2PADBWP130HPNNP3P48CPDLVT FILL2PADBWP130HPNNP3P48CPDULVTLL FILL2PADBWP130HPNNP3P48CPDULVT FILL2PADBWP130HPNNP3P48CPDELVT FILL2PPPADBWP130HPPNN3P48CPDSVT FILL2PPPADBWP130HPPNN3P48CPDLVTLL FILL2PPPADBWP130HPPNN3P48CPDLVT FILL2PPPADBWP130HPPNN3P48CPDULVTLL FILL2PPPADBWP130HPPNN3P48CPDULVT FILL2PPPADBWP130HPPNN3P48CPDELVT FILL2NNPADBWP130HPPNN3P48CPDSVT FILL2NNPADBWP130HPPNN3P48CPDLVTLL FILL2NNPADBWP130HPPNN3P48CPDLVT FILL2NNPADBWP130HPPNN3P48CPDULVTLL FILL2NNPADBWP130HPPNN3P48CPDULVT FILL2NNPADBWP130HPPNN3P48CPDELVT FILL1PADBWP130HNPPN3P48CPDSVT FILL1PADBWP130HNPPN3P48CPDLVTLL FILL1PADBWP130HNPPN3P48CPDLVT FILL1PADBWP130HNPPN3P48CPDULVTLL FILL1PADBWP130HNPPN3P48CPDULVT FILL1PADBWP130HNPPN3P48CPDELVT FILL1PADBWP130HPNNP3P48CPDSVT FILL1PADBWP130HPNNP3P48CPDLVTLL FILL1PADBWP130HPNNP3P48CPDLVT FILL1PADBWP130HPNNP3P48CPDULVTLL FILL1PADBWP130HPNNP3P48CPDULVT FILL1PADBWP130HPNNP3P48CPDELVT FILL1PPPADPNPBWP130HPNNP3P48CPDSVT FILL1PPPADPNPBWP130HPNNP3P48CPDLVTLL FILL1PPPADPNPBWP130HPNNP3P48CPDLVT FILL1PPPADPNPBWP130HPNNP3P48CPDULVTLL FILL1PPPADPNPBWP130HPNNP3P48CPDULVT FILL1PPPADPNPBWP130HPNNP3P48CPDELVT FILL1PPPADNPNBWP130HNPPN3P48CPDSVT FILL1PPPADNPNBWP130HNPPN3P48CPDLVTLL FILL1PPPADNPNBWP130HNPPN3P48CPDLVT FILL1PPPADNPNBWP130HNPPN3P48CPDULVTLL FILL1PPPADNPNBWP130HNPPN3P48CPDULVT FILL1PPPADNPNBWP130HNPPN3P48CPDELVT FILL1NNPADPNPBWP130HPNNP3P48CPDSVT FILL1NNPADPNPBWP130HPNNP3P48CPDLVTLL FILL1NNPADPNPBWP130HPNNP3P48CPDLVT FILL1NNPADPNPBWP130HPNNP3P48CPDULVTLL FILL1NNPADPNPBWP130HPNNP3P48CPDULVT FILL1NNPADPNPBWP130HPNNP3P48CPDELVT FILL1NNPADNPNBWP130HNPPN3P48CPDSVT FILL1NNPADNPNBWP130HNPPN3P48CPDLVTLL FILL1NNPADNPNBWP130HNPPN3P48CPDLVT FILL1NNPADNPNBWP130HNPPN3P48CPDULVTLL FILL1NNPADNPNBWP130HNPPN3P48CPDULVT FILL1NNPADNPNBWP130HNPPN3P48CPDELVT FILL1PPADBWP130HPNNP3P48CPDSVT FILL1PPADBWP130HPNNP3P48CPDLVTLL FILL1PPADBWP130HPNNP3P48CPDLVT FILL1PPADBWP130HPNNP3P48CPDULVTLL FILL1PPADBWP130HPNNP3P48CPDULVT FILL1PPADBWP130HPNNP3P48CPDELVT FILL1NPADBWP130HNPPN3P48CPDSVT FILL1NPADBWP130HNPPN3P48CPDLVTLL FILL1NPADBWP130HNPPN3P48CPDLVT FILL1NPADBWP130HNPPN3P48CPDULVTLL FILL1NPADBWP130HNPPN3P48CPDULVT FILL1NPADBWP130HNPPN3P48CPDELVT FILL1PPPADBWP130HPPNN3P48CPDSVT FILL1PPPADBWP130HPPNN3P48CPDLVTLL FILL1PPPADBWP130HPPNN3P48CPDLVT FILL1PPPADBWP130HPPNN3P48CPDULVTLL FILL1PPPADBWP130HPPNN3P48CPDULVT FILL1PPPADBWP130HPPNN3P48CPDELVT FILL1NNPADBWP130HPPNN3P48CPDSVT FILL1NNPADBWP130HPPNN3P48CPDLVTLL FILL1NNPADBWP130HPPNN3P48CPDLVT FILL1NNPADBWP130HPPNN3P48CPDULVTLL FILL1NNPADBWP130HPPNN3P48CPDULVT FILL1NNPADBWP130HPPNN3P48CPDELVT} {List of PAD filler cells specific to N2P when multiple ODs are used in design}
bbset pnr.chipfinish.FillerCells     {FILL64BWP130HPNPN3P48CPDSVT FILL64BWP130HPNPN3P48CPDLVTLL FILL64BWP130HPNPN3P48CPDLVT FILL64BWP130HPNPN3P48CPDULVTLL FILL64BWP130HPNPN3P48CPDULVT FILL64BWP130HPNPN3P48CPDELVT FILL32BWP130HPNPN3P48CPDSVT FILL32BWP130HPNPN3P48CPDLVTLL FILL32BWP130HPNPN3P48CPDLVT FILL32BWP130HPNPN3P48CPDULVTLL FILL32BWP130HPNPN3P48CPDULVT FILL32BWP130HPNPN3P48CPDELVT FILL16BWP130HPNPN3P48CPDSVT FILL16BWP130HPNPN3P48CPDLVTLL FILL16BWP130HPNPN3P48CPDLVT FILL16BWP130HPNPN3P48CPDULVTLL FILL16BWP130HPNPN3P48CPDULVT FILL16BWP130HPNPN3P48CPDELVT FILL12BWP130HPNPN3P48CPDSVT FILL12BWP130HPNPN3P48CPDLVTLL FILL12BWP130HPNPN3P48CPDLVT FILL12BWP130HPNPN3P48CPDULVTLL FILL12BWP130HPNPN3P48CPDULVT FILL12BWP130HPNPN3P48CPDELVT FILL8BWP130HPNPN3P48CPDSVT FILL8BWP130HPNPN3P48CPDLVTLL FILL8BWP130HPNPN3P48CPDLVT FILL8BWP130HPNPN3P48CPDULVTLL FILL8BWP130HPNPN3P48CPDULVT FILL8BWP130HPNPN3P48CPDELVT FILL5BWP130HPNPN3P48CPDSVT FILL5BWP130HPNPN3P48CPDLVTLL FILL5BWP130HPNPN3P48CPDLVT FILL5BWP130HPNPN3P48CPDULVTLL FILL5BWP130HPNPN3P48CPDULVT FILL5BWP130HPNPN3P48CPDELVT FILL4BWP130HPNPN3P48CPDSVT FILL4BWP130HPNPN3P48CPDLVTLL FILL4BWP130HPNPN3P48CPDLVT FILL4BWP130HPNPN3P48CPDULVTLL FILL4BWP130HPNPN3P48CPDULVT FILL4BWP130HPNPN3P48CPDELVT FILL3BWP130HPNPN3P48CPDSVT FILL3BWP130HPNPN3P48CPDLVTLL FILL3BWP130HPNPN3P48CPDLVT FILL3BWP130HPNPN3P48CPDULVTLL FILL3BWP130HPNPN3P48CPDULVT FILL3BWP130HPNPN3P48CPDELVT FILL2DODBWP130HPNPN3P48CPDSVT FILL2DODBWP130HPNPN3P48CPDLVTLL FILL2DODBWP130HPNPN3P48CPDLVT FILL2DODBWP130HPNPN3P48CPDULVTLL FILL2DODBWP130HPNPN3P48CPDULVT FILL2DODBWP130HPNPN3P48CPDELVT FILL1DODBWP130HPNPN3P48CPDSVT FILL1DODBWP130HPNPN3P48CPDLVTLL FILL1DODBWP130HPNPN3P48CPDLVT FILL1DODBWP130HPNPN3P48CPDULVTLL FILL1DODBWP130HPNPN3P48CPDULVT FILL1DODBWP130HPNPN3P48CPDELVT FILL64PBWP130HPPNN3P48CPDSVT FILL64PBWP130HPPNN3P48CPDLVTLL FILL64PBWP130HPPNN3P48CPDLVT FILL64PBWP130HPPNN3P48CPDULVTLL FILL64PBWP130HPPNN3P48CPDULVT FILL64PBWP130HPPNN3P48CPDELVT FILL64NBWP130HPPNN3P48CPDSVT FILL64NBWP130HPPNN3P48CPDLVTLL FILL64NBWP130HPPNN3P48CPDLVT FILL64NBWP130HPPNN3P48CPDULVTLL FILL64NBWP130HPPNN3P48CPDULVT FILL64NBWP130HPPNN3P48CPDELVT FILL32PBWP130HPPNN3P48CPDSVT FILL32PBWP130HPPNN3P48CPDLVTLL FILL32PBWP130HPPNN3P48CPDLVT FILL32PBWP130HPPNN3P48CPDULVTLL FILL32PBWP130HPPNN3P48CPDULVT FILL32PBWP130HPPNN3P48CPDELVT FILL32NBWP130HPPNN3P48CPDSVT FILL32NBWP130HPPNN3P48CPDLVTLL FILL32NBWP130HPPNN3P48CPDLVT FILL32NBWP130HPPNN3P48CPDULVTLL FILL32NBWP130HPPNN3P48CPDULVT FILL32NBWP130HPPNN3P48CPDELVT FILL16PBWP130HPPNN3P48CPDSVT FILL16PBWP130HPPNN3P48CPDLVTLL FILL16PBWP130HPPNN3P48CPDLVT FILL16PBWP130HPPNN3P48CPDULVTLL FILL16PBWP130HPPNN3P48CPDULVT FILL16PBWP130HPPNN3P48CPDELVT FILL16NBWP130HPPNN3P48CPDSVT FILL16NBWP130HPPNN3P48CPDLVTLL FILL16NBWP130HPPNN3P48CPDLVT FILL16NBWP130HPPNN3P48CPDULVTLL FILL16NBWP130HPPNN3P48CPDULVT FILL16NBWP130HPPNN3P48CPDELVT FILL12PBWP130HPPNN3P48CPDSVT FILL12PBWP130HPPNN3P48CPDLVTLL FILL12PBWP130HPPNN3P48CPDLVT FILL12PBWP130HPPNN3P48CPDULVTLL FILL12PBWP130HPPNN3P48CPDULVT FILL12PBWP130HPPNN3P48CPDELVT FILL12NBWP130HPPNN3P48CPDSVT FILL12NBWP130HPPNN3P48CPDLVTLL FILL12NBWP130HPPNN3P48CPDLVT FILL12NBWP130HPPNN3P48CPDULVTLL FILL12NBWP130HPPNN3P48CPDULVT FILL12NBWP130HPPNN3P48CPDELVT FILL8PBWP130HPPNN3P48CPDSVT FILL8PBWP130HPPNN3P48CPDLVTLL FILL8PBWP130HPPNN3P48CPDLVT FILL8PBWP130HPPNN3P48CPDULVTLL FILL8PBWP130HPPNN3P48CPDULVT FILL8PBWP130HPPNN3P48CPDELVT FILL8NBWP130HPPNN3P48CPDSVT FILL8NBWP130HPPNN3P48CPDLVTLL FILL8NBWP130HPPNN3P48CPDLVT FILL8NBWP130HPPNN3P48CPDULVTLL FILL8NBWP130HPPNN3P48CPDULVT FILL8NBWP130HPPNN3P48CPDELVT FILL5PBWP130HPPNN3P48CPDSVT FILL5PBWP130HPPNN3P48CPDLVTLL FILL5PBWP130HPPNN3P48CPDLVT FILL5PBWP130HPPNN3P48CPDULVTLL FILL5PBWP130HPPNN3P48CPDULVT FILL5PBWP130HPPNN3P48CPDELVT FILL5NBWP130HPPNN3P48CPDSVT FILL5NBWP130HPPNN3P48CPDLVTLL FILL5NBWP130HPPNN3P48CPDLVT FILL5NBWP130HPPNN3P48CPDULVTLL FILL5NBWP130HPPNN3P48CPDULVT FILL5NBWP130HPPNN3P48CPDELVT FILL4PBWP130HPPNN3P48CPDSVT FILL4PBWP130HPPNN3P48CPDLVTLL FILL4PBWP130HPPNN3P48CPDLVT FILL4PBWP130HPPNN3P48CPDULVTLL FILL4PBWP130HPPNN3P48CPDULVT FILL4PBWP130HPPNN3P48CPDELVT FILL4NBWP130HPPNN3P48CPDSVT FILL4NBWP130HPPNN3P48CPDLVTLL FILL4NBWP130HPPNN3P48CPDLVT FILL4NBWP130HPPNN3P48CPDULVTLL FILL4NBWP130HPPNN3P48CPDULVT FILL4NBWP130HPPNN3P48CPDELVT FILL3PBWP130HPPNN3P48CPDSVT FILL3PBWP130HPPNN3P48CPDLVTLL FILL3PBWP130HPPNN3P48CPDLVT FILL3PBWP130HPPNN3P48CPDULVTLL FILL3PBWP130HPPNN3P48CPDULVT FILL3PBWP130HPPNN3P48CPDELVT FILL3NBWP130HPPNN3P48CPDSVT FILL3NBWP130HPPNN3P48CPDLVTLL FILL3NBWP130HPPNN3P48CPDLVT FILL3NBWP130HPPNN3P48CPDULVTLL FILL3NBWP130HPPNN3P48CPDULVT FILL3NBWP130HPPNN3P48CPDELVT FILL2PBWP130HPPNN3P48CPDSVT FILL2PBWP130HPPNN3P48CPDLVTLL FILL2PBWP130HPPNN3P48CPDLVT FILL2PBWP130HPPNN3P48CPDULVTLL FILL2PBWP130HPPNN3P48CPDULVT FILL2PBWP130HPPNN3P48CPDELVT FILL2NBWP130HPPNN3P48CPDSVT FILL2NBWP130HPPNN3P48CPDLVTLL FILL2NBWP130HPPNN3P48CPDLVT FILL2NBWP130HPPNN3P48CPDULVTLL FILL2NBWP130HPPNN3P48CPDULVT FILL2NBWP130HPPNN3P48CPDELVT FILL1PBWP130HPPNN3P48CPDSVT FILL1PBWP130HPPNN3P48CPDLVTLL FILL1PBWP130HPPNN3P48CPDLVT FILL1PBWP130HPPNN3P48CPDULVTLL FILL1PBWP130HPPNN3P48CPDULVT FILL1PBWP130HPPNN3P48CPDELVT FILL1NBWP130HPPNN3P48CPDSVT FILL1NBWP130HPPNN3P48CPDLVTLL FILL1NBWP130HPPNN3P48CPDLVT FILL1NBWP130HPPNN3P48CPDULVTLL FILL1NBWP130HPPNN3P48CPDULVT FILL1NBWP130HPPNN3P48CPDELVT} {List of regular filler cells}
bbset pnr.chipfinish.FillerVTExcludeCategories {SVT ELVT}                                                       {List of VT categories to be excluded from filler cell list depending on presence of functional cells in the design}
bbset pnr.chipfinish.FillerODExcludeCategories {PPNN}                                                           {List of OD categories to be excluded from filler cell list depending on presence of functional cells in the design}
bbset pnr.chipfinish.FillerInsertionByPowerDomain {0}                                                              {Insert filler step by power domain}
bbset pnr.chipfinish.FillerDRCsCategories {}                                                               {Filler DRCs. dict value {M1 drc_type M2 drc_type ...}}
bbset pnr.chipfinish.EnableFixIsoVia {0}                                                              {Enable chipfinish ISO Via Fix}
bbset pnr.chipfinish.FixIsoViaFile   {}                                                               {Rule file to fix iso via}
bbset pnr.chipfinish.EnableStapleVias {1}                                                              {Flag to enable post route via stapling}
bbset pnr.chipfinish.StapleViaList   {V1_STAPLE_VIA V2_STAPLE_VIA}                                    {List of vias used for stapling}
bbset pnr.chipfinish.StapleViaMinPitch {0.192}                                                          {Staple Via Min Distance. Default is M2 pitch}
bbset pnr.chipfinish.StapleViaPitch  {0.192 0.192 0.072}                                              {Staple via Pitch}
bbset pnr.chipfinish.StapleViaLowerLayer {M0}                                                             {Staple Via Lower Layer}
bbset pnr.chipfinish.StapleViaUpperLayer {M2}                                                             {Staple Via Upper Layer}
bbset pnr.chipfinish.StapleViaGridSnap {M0 grid M1 grid}                                                {Settings for staple via snapping to grid}
bbset pnr.chipfinish.StapleViaIntermediateLayer {M1}                                                             {Intermediate layer used for creating staple vias}
bbset pnr.chipfinish.StapleViaMaxArraySize {20}                                                             {Max array size to be used while creating staple vias}
bbset pnr.chipfinish.StapleViaArrayDimension {1 1}                                                            {Via array dimension to be used while creating staple vias}
bbset pnr.chipfinish.StapleViaContactCodeDFM {VIA01_1cut_BW14_UW20 VIA12_1cut_BW20_UW20}                      {DFM via contact codes to be used for creating staple vias}
bbset pnr.chipfinish.StapleViaContactCodeRegular {VIA01_1cut_BW14_UW20 VIA12_1cut_BW20_UW20}                      {Regular via contact codes to be used for creating staple vias}
bbset pnr.chipfinish.StapleViaDRCCheckArea {}                                                               {Enable Staple via drc cleanup in specified area}
bbset pnr.chipfinish.StapleViaColorized {1}                                                              {Do colorizePowerMesh in last step of insert_staple_vias proc}
bbset pnr.chipfinish.StapleViaOnCells {}                                                               {Cell pattern that staple via will be added with minimum pitch}
bbset pnr.chipfinish.FillerDRCCheckArea {}                                                               {Enable Filler related drc cleanup in specified area}
bbset pnr.chipfinish.IsoDRCCheckArea {}                                                               {Enable Iso related drc cleanup in specified area}
bbset pnr.chipfinish.FillerOrientationCheckArea {}                                                               {Enable filler orientation fix in specified area}
bbset pnr.chipfinish.EnablePMVFix    {0}                                                              {Flag to Enable fixing DFM Pattern Matching Violations}
bbset pnr.chipfinish.LPAConfigFile   {}                                                               {LPA Config file for fixing DFM Pattern Matching Violation hotspots}
bbset pnr.chipfinish.LPATCLFile      {}                                                               {LPA TCL File fixing DFM Pattern Matching Violation hotspots}
bbset pnr.chipfinish.LPAMaxIter      {5}                                                              {Max iterations for fixing DFM Pattern Matching Violation hotspots}
bbset pnr.chipfinish.STDUHDLayerExtension {0}                                                              {std_uhd layer extension}
bbset pnr.chipfinish.EnableClockMFB  {1}                                                              {Enable creating metal fill blockages for critical clock nets}
bbset pnr.chipfinish.EnableDataMFB   {0}                                                              {Enable creating metal fill blockages for critical data nets}
bbset pnr.chipfinish.MFBCriticalClockNetsFile {}                                                               {List of critical clock nets for creating metal fill blockages. Takes precedence over slack limit}
bbset pnr.chipfinish.MFBClockSlackLimit {}                                                               {Clock slack limit for finding critical clock nets. If not specifcied all clock nets will be included}
bbset pnr.chipfinish.MFBClockNetSpacing {0.076}                                                          {Blockage spacing to clock net wire shapes on same layer}
bbset pnr.chipfinish.MFBClockNetLowerSpacing {0.038}                                                          {Blockage spacing to clock net wire shapes on lower layer}
bbset pnr.chipfinish.MFBClockNetUpperSpacing {0.038}                                                          {Blockage spacing to clock net wire shapes on upper layer}
bbset pnr.chipfinish.MFBClockNetLayers {M6 M7 M8 M9 M10 M11 M12 M13}                                    {Blockage layers for clock nets}
bbset pnr.chipfinish.MFBClockSameLayerOnly {1}                                                              {Control blockage layers on same/above and below included}
bbset pnr.chipfinish.MFBCriticalDataNetsFile {}                                                               {List of critical data nets for creating metal fill blockages. Takes precedence over slack limit}
bbset pnr.chipfinish.MFBDataSlackLimit {}                                                               {Data slack limit for finding critical clock nets. If not specifcied skip fill blockages on clock nets.}
bbset pnr.chipfinish.MFBDataNetSpacing {0}                                                              {Blockage spacing to data net wire shapes on same layer}
bbset pnr.chipfinish.MFBDataNetLowerSpacing {0}                                                              {Blockage spacing to data net wire shapes on lower layer}
bbset pnr.chipfinish.MFBDataNetUpperSpacing {0}                                                              {Blockage spacing to data net wire shapes on upper layer}
bbset pnr.chipfinish.MFBDataNetLayers {}                                                               {Blockage layers for data nets}
bbset pnr.chipfinish.MFBShapeType    {virtual}                                                        {Blockage shape type virtual or real. Virtual shapes are written out to a exclude shapes}
bbset pnr.chipfinish.MFBSpacingOverrides {}                                                               {Overrides for spacing to blockages {layer1 {SLS LLS ULS} layer2 {SLS LLS ULS} ...}}
bbset pnr.chipfinish.EnableFillerInsertion {1}                                                              {Enable filler insertion}
bbset pnr.chipfinish.FillerPD        {}                                                               {PDs for filler insertion}
bbset pnr.chipfinish.PhysicalCellHier {}                                                               {Option to add physical cells in flat/hierarchical mode}
bbset pnr.chipfinish.EnablePGFill    {0}                                                              {Enable PG Fill}
bbset pnr.chipfinish.PGFillLayers    {M13 M14}                                                        {Metal layers where opportunistic PG fills will be added}
bbset pnr.chipfinish.PGFillLayerOverrides {M13  {width 0.81 net_name vss  pitch 12 track 6 spacing {1 1}} M14 {width 1.8 pitch 4 track 3  net_name vss  spacing {1 1}}} {specify overrides for pg fills available options net_name width pitch track min_length spacing}
bbset pnr.chipfinish.PGFillViaOverrides {}                                                               {PG Fill VIA Overrides}
bbset pnr.chipfinish.RunStaticAnalysis {0}                                                              {Switch to control running static analysis}
bbset pnr.chipfinish.RunDynamicAnalysis {0}                                                              {Switch to control running dynamic analysis}
bbset pnr.chipfinish.StapleViaFixDRCErrors {Adjacent_Cut_Four_Cuts {M0:M2}}                                 {switch to fix drcs caused by post staple vias. Format: {drc_type {metal_layer}}, For ex: {Same_Metal_Aligned_Cuts {M2}}}
bbset pnr.chipfinish.EnableStapleViaCleanup {0}                                                              {Enable fixing of drcs caused by post staple vias}
bbset pnr.chipfinish.InsertOverlayCells {0}                                                              {Enable adding of overlay cells over the macros}
bbset pnr.chipfinish.AbutXSpacing    {0}                                                              {Legal X spacing between macros for overlay cell addition}
bbset pnr.chipfinish.EnableFixFillerOrientation {0}                                                              {Run addFiller with add_fillers_with_drc set to true to fix filler cells orientation errors}
bbset pnr.chipfinish.LowLeakageDecapFiller {0}                                                              {Default setting 0 to insert high decap fillers}
bbset pnr.chipfinish.GoldenNetlistForLEC {}                                                               {Golden netlist to do_lec}
bbset pnr.chipfinish.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.chipfinish.EnableUnroutedPassiveFill {0}                                                              {Enable Passive fill and filler DRC patch for unrouted db.}
bbset pnr.earlyrails.RailAnalysisNetVoltage {}                                                               {Net voltage setting {pd1 {net1 voltage1 net2 voltage2} pd2 {net1 voltage1}}}
bbset pnr.earlyrails.RailAnalysisNetThreshold {}                                                               {Net voltage threshold setting {pd1 {net1 threshold1 net2 threshold2} pd2 {net1 threshold1}}}
bbset pnr.earlyrails.PowerAnalysisView {}                                                               {View for power analysis}
bbset pnr.earlyrails.PlocFiles       {}                                                               {Ploc files list {{net1 file1} {net2 file2}}}
bbset pnr.earlyrails.RailAnalysisDomains {}                                                               {Power Domains to run Rail Analysis}
bbset pnr.earlyrails.PowerPadTopLayer {M13}                                                            {Top layer to create power pad}
bbset pnr.earlyrails.PowerPadPitch   {155 155}                                                        {Power pad pitch}
bbset pnr.earlyrails.ClusterViaRule  {{VIA0 1} {VIA1 1} {VIA2 1} {VIA3 1} {VIA4 1} {VIA5 1} {VIA6 1} {VIA7 1} {VIA8 1} {VIA9 1} {VIA10 1} {VIA11 1} {VIA12 1}} {Via clustering rule for rail analysis}
bbset pnr.earlyrails.PowerAnalysisSimulationPeriod {}                                                               {Simulation period for power analysis}
bbset pnr.earlyrails.RailAnalysisTemperature {}                                                               {Temperature for rail analysis}
bbset pnr.earlyrails.RailAnalysisQrcTech {}                                                               {Rail Analysis QRC tech file}
bbset pnr.earlyrails.LEFLayerMap     {}                                                               {LEF Layermap file}
bbset pnr.earlyrails.SwitchingActivity {static {default 0.22 sequential 0.12 global 0.12 macro 0.12 clock 2 input 0.12}  dynamic {default 0.22 sequential 0.5 global 0.12 macro 0.12 clock 2 input 0.12} } {Switching activity for Rail Analysis}
bbset pnr.earlyrails.LibraryPGVFiles {[bbquery get file -filter "file_type=='pgv' && category=='stdlib'"]} {PGV file list provided by the user}
bbset pnr.earlyrails.EMIctFile       {[bbquery get file -db pdk -filter "file_type=='rulefile' && tool=='voltus' && function=='em'"]} {EM ICT file pointer}
bbset pnr.poweranalysis.Cores        {16}                                                             {NC cores for the run}
bbset pnr.poweranalysis.ClockPort    {}                                                               {clock port for replay stimulus}
bbset pnr.poweranalysis.InputActivityFile {}                                                               {Path to the activity file}
bbset pnr.poweranalysis.FSDBStartTime {}                                                               {FSDB start time}
bbset pnr.poweranalysis.FSDBEndTime  {}                                                               {FSDB End time} 
bbset pnr.poweranalysis.FSDBInstanceName {}                                                               {FSDB Instance time}
bbset pnr.poweranalysis.InputMMMCFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/libgen/outs/mmmc.tcl} {Path to mmmc.tcl for capturing libs}
bbset pnr.poweranalysis.Stages       {}                                                               {Stages to run poweranalysis}
bbset pnr.poweranalysis.scenario     {}                                                               {Scenario to consider for poweranalysis}
bbset pnr.poweranalysis.setup.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/setup/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.setup.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.setup.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.setup.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/setup/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.setup.IsStageAfterPOD {False}                                                          {to know if stage is after or before POD}
bbset pnr.poweranalysis.floorplan.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/floorplan/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.floorplan.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.floorplan.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.floorplan.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/floorplan/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.placeopt.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/placeopt/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.placeopt.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.placeopt.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.placeopt.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/placeopt/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.clock.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clock/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.clock.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.clock.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.clock.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clock/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.clockopt.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.clockopt.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.clockopt.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.clockopt.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.route.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/route/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.route.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.route.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.route.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/route/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.routeopt.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.routeopt.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.routeopt.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.routeopt.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.poweranalysis.routeoptdesign.NetlistFile {[bbget .pnr.poweranalysis.routeopt.NetlistFile]}                {clone by bbnsclone -from "routeopt" -to ".pnr.poweranalysis.routeoptdesign"}
bbset pnr.poweranalysis.routeoptdesign.InputSDCFile {[bbget .pnr.poweranalysis.routeopt.InputSDCFile]}               {clone by bbnsclone -from "routeopt" -to ".pnr.poweranalysis.routeoptdesign"}
bbset pnr.poweranalysis.routeoptdesign.InputSPEFFile {[bbget .pnr.poweranalysis.routeopt.InputSPEFFile]}              {clone by bbnsclone -from "routeopt" -to ".pnr.poweranalysis.routeoptdesign"}
bbset pnr.poweranalysis.routeoptdesign.InputMappingFile {[bbget .pnr.poweranalysis.routeopt.InputMappingFile]}           {clone by bbnsclone -from "routeopt" -to ".pnr.poweranalysis.routeoptdesign"}
bbset pnr.poweranalysis.chipfinish.NetlistFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/chipfinish/outs/ufs_top.v.gz} {Input netlist file}
bbset pnr.poweranalysis.chipfinish.InputSDCFile {}                                                               {Input SDC File, default will be picked up from enc database}
bbset pnr.poweranalysis.chipfinish.InputSPEFFile {}                                                               {Input SPEF File}
bbset pnr.poweranalysis.chipfinish.InputMappingFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/chipfinish/outs/ufs_top.namemap} {Input Name mapping file}
bbset pnr.Reports                    {dont_touch design_utilization powervar}                         {Export stage reports}
bbset pnr.setup.Reports              {timing}                                                         {Default reporting in setup stage}
bbset pnr.placeopt.Reports           {cell_stats 1design lib_cell_purpose qor 2timing power zcongestion cell_density_gif pin_density_gif app_options job_info activity clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells protean} {Default reporting in placeopt stage}
bbset pnr.clock.Reports              {cell_stats 1design lib_cell_purpose qor 2timing power zcongestion cell_density_gif pin_density_gif app_options job_info clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells clock_summary protean clock_qor} {Default reporting in clock stage}
bbset pnr.clockopt.Reports           {cell_stats 1design lib_cell_purpose qor 2timing power zcongestion cell_density_gif pin_density_gif app_options job_info clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells clock_summary protean clock_qor} {Default reporting in clockopt stage}
bbset pnr.route.Reports              {cell_stats 1design lib_cell_purpose qor 2timing power app_options job_info clock_constraints drc drc_gif protean} {Default reporting in route stage}
bbset pnr.routeopt.Reports           {cell_stats 1design lib_cell_purpose qor 2timing power app_options job_info clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells drc drc_gif protean} {Default reporting in routeopt stage}
bbset pnr.routeoptdesign.Reports     {timing gif clock_qor high_fanout_nets setup_and_hold antenna_violations multicut_vias timing_violators_histogram routed_net_stats via_pillar_stats power ndr_stats clocks clock_skewgroups route_type_constraints lec bar_vias scantrace spare_cells area area_gif PG_redundant_via redundant_via congestion clock_shield iob_distance gspan_port_list track_opt_related} {Default reporting in routeopt stage}
bbset pnr.applyeco.Reports           {power}                                                          {Default reporting in applyeco stage}
bbset pnr.pinbudget.Reports          {}                                                               {Default reporting in  pinbudget stage}
bbset pnr.signoffopt.Reports         {}                                                               {Default reporting in signoffopt stage}
bbset pnr.signoffdrc.Reports         {}                                                               {Default reporting in signoffdrc stage}
bbset pnr.chipfinish.Reports         {cell_stats 1design lib_cell_purpose qor power app_options dont_touch_size_only job_info} {Default reporting in chipfinish stage}
bbset pnr.InlineReports              {var_overwrite_check protean}                                    {Main stage inline reports}
bbset pnr.placeopt.InlineReports     {protean}                                                        {placeopt stage inline reports}
bbset pnr.clock.InlineReports        {protean}                                                        {placeopt stage inline reports}
bbset pnr.clockopt.InlineReports     {protean}                                                        {clockopt stage inline reports}
bbset pnr.route.InlineReports        {protean}                                                        {Routeopt stage inline reports}
bbset pnr.routeopt.InlineReports     {protean}                                                        {Routeopt stage inline reports}
bbset pnr.routeoptdesign.InlineReports {spgr}                                                           {Routeopt stage inline reports}
bbset pnr.applyeco.InlineReports     {spgr}                                                           {Applyeco stage inline reports}
bbset pnr.chipfinish.InlineReports   {spgr}                                                           {Chipfinish stage inline reports}
bbset pnr.socclocks.InlineReports    {}                                                               {socclocks stage inlie reports}
bbset pnr.report.PrioritizeStageList {0}                                                              {By default the report sequence is pnr.Reports and then pnr.STAGE.Reports . pnr.STAGE.Reports will be done first if this is enabled}
bbset pnr.report.Hierarchy.ReportLevel {4}                                                              {hierarchical level that been reported if a hierarchy donesn't belong to any defined hierarchy.}
bbset pnr.report.Hierarchy.HierarchyPatterns {}                                                               {hierarchy patterns for generate_cell_area_count_report}
bbset pnr.report.Hierarchy.ValidCategories {
                                      aux
                                      aux_pg
                                      aux_aon
                                      core_ip_top
                                      tbu_wrapper
                                      tcu_wrapper
                                      lpcm_lpm
                                      lpcm_lcm
                                      lpcm_mna
                                      ra
                                      rfw
                                      mfw_init
                                      mfw_tgt
                                      iis
                                      fabip_dataplane
                                      fabip_controlplane
                                      fabip_configplane
                                      fabip_debugplane
                                      fabip_traceplane
                                      gspan_dataplane
                                      gspan_controlplane
                                      gspan_configplane
                                      gspan_debugplane
                                      gspan_traceplane
                                      gspan_misc
                                      dvfsmon
                                      emon
                                      perfmon
                                      qbox
                                      addr_remapper
                                      gia
                                      mba
                                      dta
                                      dft
                                      gmrc
                                      IOBK
                                      PHY
                                      Sensor
                                      ICD
                                      GPCSR
                                      q-chn_aggregator
                                      core
                                      sram
                                      } {List of categories names that is valid for hierarchy generate_cell_area_count_report}
bbset pnr.report.CriticalNetCount    {100}                                                            {Pin placement constraint overrides. All fields are optional. eg. {M* {min_pitch 2 min_tbpitch 1} D* {min_length 0.300}}}
bbset pnr.report.EnableGUI           {1}                                                              {Enable tool gui mode to dump the snapshots}
bbset pnr.report.CustomGUIFile       {}                                                               {Custom Gui highlight and settings provided by user prior to dump snapshot}
bbset pnr.report.TimingNumPaths      {1000}                                                           {Number of paths to be dumped during reporting at each stage of PNR flow}
bbset pnr.report.TimingFormat        {timing_point fanout edge cell slew total_derate load incr_delay delay_mean delay_sigma delay arrival pin_location} {Timing format to be used while reporting timing data in PNR flow}
bbset pnr.report.StdcellPatterns.Physical {
                                      powerswitch    HDR*
                                      tap            TAPCELL*
                                      decap          *DCAP*
                                      boundary       BOUND*
                                      filler         {GFILL* FILL*}
                                      } {physical stdcell category and pattern for generate_cell_area_count_report}
bbset pnr.report.StdcellPatterns.NonPhysical {
                                      levelshifter   *LVL*
                                      stdcell_elvt   *BWP*CPDELVT
                                      stdcell_lvt    *BWP*CPDLVT
                                      stdcell_lvtll  *BWP*CPDLVTLL
                                      stdcell_svt    *BWP*CPDSVT
                                      stdcell_ulvt   *BWP*CPDULVT
                                      stdcell_ulvtll *BWP*CPDULVTLL
                                      stdcell_nppn_elvt   *BWP*NPPN*CPDELVT
                                      stdcell_nppn_lvt    *BWP*NPPN*CPDLVT
                                      stdcell_nppn_lvtll  *BWP*NPPN*CPDLVTLL
                                      stdcell_nppn_svt    *BWP*NPPN*CPDSVT
                                      stdcell_nppn_ulvt   *BWP*NPPN*CPDULVT
                                      stdcell_nppn_ulvtll *BWP*NPPN*CPDULVTLL
                                      stdcell_pnnp_elvt   *BWP*PNNP*CPDELVT
                                      stdcell_pnnp_lvt    *BWP*PNNP*CPDLVT
                                      stdcell_pnnp_lvtll  *BWP*PNNP*CPDLVTLL
                                      stdcell_pnnp_svt    *BWP*PNNP*CPDSVT
                                      stdcell_pnnp_ulvt   *BWP*PNNP*CPDULVT
                                      stdcell_pnnp_ulvtll *BWP*PNNP*CPDULVTLL
                                      stdcell_pnpn_elvt   *BWP*PNPN*CPDELVT
                                      stdcell_pnpn_lvt    *BWP*PNPN*CPDLVT
                                      stdcell_pnpn_lvtll  *BWP*PNPN*CPDLVTLL
                                      stdcell_pnpn_svt    *BWP*PNPN*CPDSVT
                                      stdcell_pnpn_ulvt   *BWP*PNPN*CPDULVT
                                      stdcell_pnpn_ulvtll *BWP*PNPN*CPDULVTLL
                                      stdcell_ppnn_elvt   *BWP*PPNN*CPDELVT
                                      stdcell_ppnn_lvt    *BWP*PPNN*CPDLVT
                                      stdcell_ppnn_lvtll  *BWP*PPNN*CPDLVTLL
                                      stdcell_ppnn_svt    *BWP*PPNN*CPDSVT
                                      stdcell_ppnn_ulvt   *BWP*PPNN*CPDULVT
                                      stdcell_ppnn_ulvtll *BWP*PPNN*CPDULVTLL
                                      stdcell_h130        *BWP130H*
                                      stdcell_h156        *BWP156H*
                                      } {nonphysical stdcell category and pattern for generate_cell_area_count_report}
bbset pnr.report.StdcellPatterns.NonPhysicalCellHeight {
                                      stdcell_h130_x0p5 {*BWP130H* 0.065}
                                      stdcell_h130_x1   {*BWP130H* 0.13 }
                                      stdcell_h130_x2   {*BWP130H* 0.26 }
                                      stdcell_h130_x3   {*BWP130H* 0.39 }
                                      stdcell_h130_x4   {*BWP130H* 0.52 }
                                      stdcell_h130_x6   {*BWP130H* 0.78 }
                                      stdcell_h130_x8   {*BWP130H* 1.04 }
                                      stdcell_h156_x0p5 {*BWP156H* 0.078}
                                      stdcell_h156_x1   {*BWP156H* 0.078}
                                      stdcell_h156_x2   {*BWP156H* 0.156}
                                      stdcell_h156_x3   {*BWP156H* 0.312}
                                      stdcell_h156_x4   {*BWP156H* 0.468}
                                      stdcell_h156_x5   {*BWP156H* 0.624}
                                      } {nonphysical stdcell category and pattern for cell height in generate_cell_area_count_report}
bbset pnr.report.IOPatterns.IO       {}                                                               {IO category and pattern for generate_cell_area_count_report}
bbset pnr.report.MacroPatterns.Memory {
                                      rom           {ts3n*_rom TS3N*_ROM}
                                      register_file {ts5n* ts6n* TS5N* TS6N*}
                                      sram          {ts1n* TS1N*}
                                      dp_sram       {tsdn* TSDN*}
                                      google_custom_memory {tsgn* TSGN*}
                                      } {memory macros category and pattern for generate_cell_area_count_report}
bbset pnr.report.MacroPatterns.Ip    {
                                      pll PLL*
                                      phy dwc_*phy*
                                      fll fll*
                                      aging_sensor    aging_sensor*
                                      temp_sensor     temp_sensor*
                                      esd *PCLAMP*
                                      thermal_sensor  dwc_sensors*
                                      process_sensor  prtn_*
                                      current_sensor  boxcar_cs*
                                      tcd *_DTCD_*
                                      b2b ESD_B2B*
                                      efuse TEF*
                                      oscilator OSCT*
                                      droop_detector ABKRT*
                                      ols ols*
                                      amux amux*
                                      thermal_diode tdiode*
                                      tcxo_clock_buffer tcxo_clock_buffer*
                                      fiducial fiducial*
                                      } {ip macros category and pattern for generate_cell_area_count_report}
bbset pnr.report.MacroPatterns.PhysicalMacro {
                                      CLAMP PCLAMP.*
                                      TCD .*_DTCD_.*
                                      B2B ESD_B2B.*
                                      EFUSE TEF.*
                                      } {physical ip macro ategory and pattern for physical_macro_info_report}
bbset pnr.socclocks_dataprep.InputDatabase {}                                                               {Input DB for soc data prep stage}
bbset pnr.socclocks_dataprep.PartitionLefFile {}                                                               {Lef list of all the partitions}
bbset pnr.socclocks.HorizontalLayers {M6 M8 M10 M12 M14}                                              {Horizontal Routing Layers}
bbset pnr.socclocks.VerticalLayers   {M7 M9 M11 M13 M15}                                              {Vertical Routing Layers}
bbset pnr.socclocks.MinChannelHeight {1.44}                                                           {Min narrow channel height/width}
bbset pnr.socclocks.ClockVerticalLayer {M15}                                                            {Clock routing vertical layer}
bbset pnr.socclocks.ClockHorizontalLayer {M14}                                                            {Clock routing horizontal layer}
bbset pnr.socclocks.ClockCellName    {CKBGOLD96BWP143M286H3P48CPDULVT}                                {Clock cell name}
bbset pnr.socclocks.ClockCellOutPin  {Z}                                                              {Clock cell output pin name}
bbset pnr.socclocks.ClockNdrInfo     {{socclk_2w2s_1w1s {M6:M13 2} {M6:M13 2}} {socclk_2w2s_1w3s {M6:M13 2} {M6:M13 2 M14:M15 3}}} {Clock NDR}     
bbset pnr.socclocks.BusGuideTcl      {}                                                               {Bus guide tcl} 
bbset pnr.socclocks.RblkgTcl         {}                                                               {Routing blockage tcl}
bbset pnr.socclocks.PblkgTcl         {}                                                               {Placement blockage tcl}
bbset pnr.socclocks.PblkgName        {socclock pBlkg_GPSAN_Myy}                                       {Placement blockage pattern}
bbset pnr.socclocks.RblkgName        {sswrp_blkg rBlkg_GSPAN_Myy}                                     {Routing blockage pattern}
bbset pnr.socclocks.SocClockDir      {}                                                               {soc clock routing scripts directory}
bbset pnr.socclocks.ViaPillarLefFile {}                                                               {clock via pillar file}
bbset pnr.socclocks.BlockPlaceBlockageExtend {5}                                                              {sswrp place blockage extend}
bbset pnr.socclocks.BlockPlaceBlockageLayers {{M12 M13 M14 M15}}                                              {sswrp place blockage layers}
bbset pnr.socclocks.RetimerOffset    {27}                                                             {# No Comment}  
bbset pnr.socclocks.DefaultNdr       {socclk_2w2s_1w3s}                                               {Default clock NDR}
bbset pnr.socclocks.TopRoutingLayer  {M15}                                                            {Top routing layer}
bbset pnr.socclocks.ViaPillarInfo    {{VPPERF_CK_H143_M1_M12_VPPERF_M1_M12_1_2_2_2_2_2_2_2_2_2_2_1 CKBGOLD96BWP143M286H3P48CPDULVT in 0} {CLOCK_HIGH_DRIVE_VPPERF_M1_M13_4_5_4_3_3_2_2_2_2_2_2_2_1 CKBGOLD96BWP143M286H3P48CPDULVT out 1}} {Via pillar info {via_pillar_name cellname termname in/out 0/1(required)}}
bbset pnr.socclocks.SkipBufferLength {150}                                                            {Skip buffering nets less than this length}
bbset pnr.socclocks.ClkCellPad       {{10 11 5 6}}                                                    {Clock cell pad {right left top bottom}}
bbset pnr.socclocks.PlaceEcoMaxDistance {30}                                                             {place_detail_eco_max_distance}
bbset pnr.socclocks.ExtraClockNets   {}                                                               {User provided nets to route}
bbset pnr.socclocks_impl.InputDatabase {}                                                               {Input database for soc clocks implementation stage}
bbset pnr.socclocks_impl.InputClockEcoTcl {[bbget .info.BOB_RUN_DIR]/pnr/socclocks/outs/[bbget .info.BLOCK].invs_change_file.txt} {Input clock eco.tcl}
bbset pnr.socclocks_impl.InputClockDef {[bbget .info.BOB_RUN_DIR]/pnr/socclocks/outs/[bbget .info.BLOCK].clk.def} {Input clock DEF}
bbset pnr.socclocks_impl.MaxRoutingLayer {}                                                               {Clock net max routing layer}
bbset pnr.socclocks_impl.MinRoutingLayer {}                                                               {Clock net min routing layer}
bbset pnr.socclocks_impl.ClockNetNdr {name {spacing_multiplier {layer1 multiplier1 layer2 multiplier2} width_multiplier {layer1 multiplier1 layer2 multiplier2}}} {Clock net NDR for implementation}
bbset pnr.socclocks_impl.ShieldNet   {VSS}                                                            {Shield net name for clocks}
bbset pnr.socclocks_impl.NetOverrides {}                                                               {Net constraint overrides format: {net1 {ndr1 bottomlayer1 toplayer1} net2 {ndr2 bottomlayer2 toplayer2}}}
bbset pnr.socclocks_impl.EcoMaxDist  {10}                                                             {Legalize cell max eco distance}
bbset pnr.import2fc.PartitionLefFile {[bbget .info.BOB_RUN_DIR]/pnr/socclocks_dataprep/outs/partition_ndm.list} {Lef list of all the partitions}
bbset pnr.hsbplace.InputDatabase     {}                                                               {Input Database for HSB place stage}
bbset pnr.gspanroute.InputDatabase   {[bbget .info.BOB_RUN_DIR]/pnr/floorplan/outs/[bbget .info.BLOCK].enc.dat/} {Input DB for hsbroute}
bbset pnr.gspanroute.PinstoRoute     {}                                                               {Selected bus pins to be routed}
bbset pnr.gspanroute.PreferredVias   {{M5 VIA56_1cut_BW20_UW38} {M6 VIA67_1cut_BW38_UW38_ISO} {M7 VIA78_1cut_BW38_UW38_ISO} {M8 VIA89_1cut_BW38_UW38_ISO} {M9 VIA910_1cut_BW38_UW38_ISO} {M10 VIA1011_1cut_BW38_UW38_ISO} {M11 VIA1112_1cut_BW38_UW44_ISO} {M12 VIA1213_1cut40_BW44_UW44}} {Preferred vias per layer}
bbset pnr.gspanroute.SpacingFromPG   {{SSB_BUS_2W_4S {M5 2 M6 2 M7 2 M8 2 M9 2 M10 2 M11 2}} {SSB_BUS_1p5W_2S {M12 2.5 M13 5.5}} {SSB_BUS_1W_2S {M5 1 M6 1 M7 1 M8 1 M9 1 M10 1 M11 1 M12 1.5 M13 4.5}} {SSB_BUS_1W_1S {M5 1 M6 1 M7 1 M8 1 M9 1 M10 1 M11 1 M12 1 M13 1}}} {Customroute spacing from PG}
bbset pnr.gspanroute.NdrSpacing      {SSB_BUS_2W_4S {2 4} SSB_BUS_1p5W_2S {1.5 3} SSB_BUS_1W_2S {1 2} SSB_BUS_1W_1S {1 2}} {ndr_rule {width spacing}}
bbset pnr.gspanroute.ShieldPullback  {1}                                                              {shield pull back distance}
bbset pnr.gspanroute.CustomRouteDir  {}                                                               {HSB place custom route pins output}
bbset pnr.gspanroute.IncludeInstTermPattern {{*station* *Z*} {*station* *I*}}                                {Set of inst & term pattern matching included for detail route {*inst pattern 1* *term pattern 1*} {*inst pattern 2* *term pattern 2*}}
bbset pnr.gspanroute.IncludeCellTermPattern {}                                                               {Set of cell & term pattern matching included for detail route {*cell pattern 1* *term pattern 1*} {*inst pattern 2* *term pattern 2*}}
bbset pnr.gspanroute.ExcludeInstTermPattern {}                                                               {Set of inst & term pattern matching excluded for detail route {*inst pattern 1* *term pattern 1*} {*inst pattern 2* *term pattern 2*}}
bbset pnr.gspanroute.ExcludeCellTermPattern {}                                                               {Set of cell & term pattern matching excluded for detail route {*cell pattern 1* *term pattern 1*} {*inst pattern 2* *term pattern 2*}}
bbset pnr.gspanroute.TrimRouteOverBlockage {{M11 Myy_pins}}                                                 {Layer to trim over blockage pattern {{layer1 pattern1} {layer2 pattern2}}}
bbset pnr.gspanroute.RouteIteration  {10}                                                             {setNanoRoute drouteEndIteration option}
bbset pnr.gspanroute.TimingDriven    {false}                                                          {setNanoRoute -routeWithTimingDriven}
bbset pnr.gspanroute.SIDriven        {false}                                                          {setNanoRoute -routeWithSIDriven}
bbset pnr.gspanroute.MegaCellPBlkgName {station}                                                        {megacell placement blockage name}
bbset pnr.gspanroute.SpreadPatterns  {}                                                               {Buses to spread {{pin_identifier1 layer1 tracks_to_jump1} {pin_identifier2 layer2 tracks_to_jump2}}}
bbset pnr.gspanroute.MegaCellPattern {rep}                                                            {Mega cell pattern for placement check}
bbset pnr.gspanroute.ClockTopPreferredLayerNum {14}                                                             {Clock top preferred layer}
bbset pnr.gspanroute.ClockBottomPreferredLayerNum {7}                                                              {Clock bottom preferred layer}
bbset pnr.gspanroute.SignalNetTopPreferredLayerNum {14}                                                             {Signal net top preferred layer}
bbset pnr.gspanroute.SignalNetBottomPreferredLayerNum {7}                                                              {Signal net bottom preferred layer}
bbset pnr.gspanroute.LSBClkLayers    {M6 M7}                                                          {LSB clock layers name list}
bbset pnr.gspanroute.MyyLayers       {M11 M12}                                                        {Myy layers list}
bbset pnr.gspanroute.ShieldViaPullback {2}                                                              {Pull back shield via wires and add vias on shield via length ANDNOT pullback wire}
bbset pnr.gspanroute.LowMetalLayers  {M1 M2 M3 M4}                                                    {HSB route low metal layers}
bbset pnr.gspanroute.HighMetalLayers {M5 M6 M7 M8 M9 M10 M11 M12 M13}                                 {HSB route high metal layers}
bbset pnr.gspanroute.LowMetalRatio   {0.2}                                                            {HSB route low metal ratio}
bbset pnr.gspanroute.MinClockShieldRatio {0.8}                                                            {HSB Min clock shield ratio}
bbset pnr.gspanroute.PGReinforceExclude {}                                                               {Blockage names excluded from PG-reinforce insertion}
bbset pnr.gspanroute.PGReinforceUserClass {hsb_reinforce}                                                  {PG reinforce user-class}
bbset pnr.gspanroute.PGReinforceLayer {M3 M2}                                                          {PG reinforce metal layers}
bbset pnr.gspanroute.AddPGReinforce  {false}                                                          {Source the block.hsb_pg_reinforce.tcl to insert PG}
bbset pnr.gspanroute.CreatePGReinforceAreas {}                                                               {Set bbox areas where PG reinforce is inserted}
bbset pnr.gspanroute.SOCClockPblkgFile {}                                                               {SOC Clock placement blockage information}
bbset pnr.gspanroute.SOCClockPblkgPattern {SOC*CLOCK}                                                      {SOC Clock cell name pattern}
bbset pnr.gspanroute.ExtractRCEffortLevel {medium}                                                         {HSB route RC effort level}
bbset pnr.gspanroute.GspanConfig     {}                                                               {GSPAN cfg file for timing report}
bbset pnr.gspanroute.GspanPathGroupFile {}                                                               {GSPAN Path groups for timing}
bbset pnr.gspanroute.EcoSlackThreshold {-0.1}                                                           {Setup & Hold ecos will be generated for all paths with slack below this threshold}
bbset pnr.gspanroute.EcoXtalkThreshold {-0.005}                                                         {If Avg xtalk in a path if higher than this threshold in hold mode, then the cells are not swapped for that path}
bbset pnr.gspanroute.EcoCellSwapMethod {2}                                                              {1/var cells are eligible for swap in a path. 100% for 1, 50% for 2, 33% for 3 and so on.}
bbset pnr.gspanroute.GspanClkSuffixPattern {__txclk}                                                        {Gspan clock suffix pattern}
bbset pnr.gspanroute.HandOffPNR      {1}                                                              {Handoff data to PNR/do not continue with PNR in the same flow graph}
bbset pnr.gspanroute.ZClkNetIdentifier {ZCNET}                                                          {Pattern to identify zero cycle clock net}
bbset pnr.gspanroute.ZClkCellIdentifier {ZCINVERTER}                                                     {Pattern to identify zero cycle clock cell}
bbset pnr.gspanroute.ZClkNetPullback {1.5}                                                            {zclk routes pullback before detail routing}
bbset pnr.gspanroute.EnableTimingReports {0}                                                              {switch to enable writing gspan timing reports}
bbset pnr.gspanroute.FilterOpenLength {2}                                                              {Filter length of open nets}
bbset pnr.gspanroute.ClkRouteIteration {5}                                                              {Clock route end iteration}
bbset pnr.gspanroute.PriorityDrBottomLayer {M6}                                                             {Priority detail route bottom layer}
bbset pnr.Checks                     {pin_placement cell_orientation bump_placement snap_settings floorplan  channel_switches macro_halo esd_connectivity boundary_routing_blockages overlap abutment_constraints design_boundary dont_use_cells black_box timing_attribute legality_status radial_spacing radial_spacing_coverage} {Export stage checks}
bbset pnr.setup.Checks               {}                                                               {Default checks in setup stage}
bbset pnr.floorplan.Checks           {tap_cell_type boundary_routing_blockage trace_hammer_end_logic power_switch_chains m15_m14_vss_on_track pg_ring pd_overlap placement io_assignment macro_placement pg_drc pg_quality preplaced_cells endcap_placement pg_continuity tap_placement open_short design_precondition lib_bind_to_pd missing_iso_on_nets inst_pg_connectivity macro_pg_pin_connectivity missing_power_switches min_channel_height_pd min_channel_width_hcell custom_pg_stats analog_3pip_route_stats logo_cell {wall_pitch_uniformity -highlight } pg_alignment core_switch_grid_continuity_m1m3m5 channel_switch_grid_continuity_m1m3m5 vss_hookup_over_psw_m1m2 power_switch_missing_areas channels_below_min ufc_rules {fiducial_coverage -highlight}} {Default checks in floorplan stage}
bbset pnr.placeopt.Checks            {pre_clock_tree boundary_routing_blockage}                       {Default checks in placeopt stage}
bbset pnr.clock.Checks               {pre_clock_tree boundary_routing_blockage}                       {Default checks in clock stage}
bbset pnr.clockopt.Checks            {pre_route boundary_routing_blockage}                            {Default checks in clockopt stage}
bbset pnr.route.Checks               {pre_route boundary_routing_blockage}                            {Default checks in route stage}
bbset pnr.routeopt.Checks            {boundary_routing_blockage}                                      {Default checks in routeopt stage}
bbset pnr.routeoptdesign.Checks      {boundary_routing_blockage placement drc open_short wire_length timing_constraint design_precondition lib_bind_to_pd missing_iso_on_nets inst_pg_connectivity clock_si sub_block_ant_rule boundary_routing_blockages io_nets_rc io_ports_buffer io_buffer_pushdown io_buffer_distance io_net_length io_timing_slack gspan_input_clock_latency gspan_output_clock_timing} {Default checks in routeopt stage}
bbset pnr.applyeco.Checks            {}                                                               {Default checks in applyeco stage}
bbset pnr.pinbudget.Checks           {}                                                               {Default checks in pinbudget stage}
bbset pnr.signoffopt.Checks          {}                                                               {Default checks in signoffopt stage}
bbset pnr.signoffdrc.Checks          {}                                                               {Default checks in signoffdrc stage}
bbset pnr.chipfinish.Checks          {tap_cell_type boundary_routing_blockage pd_overlap pg_drc pg_quality endcap_placement tap_placement placement clock_tree_cells drc filler lib_dk_freshness open_short wire_length timing_constraint design_precondition lib_bind_to_pd missing_iso_on_nets logo_cell io_ports_buffer io_buffer_pushdown io_buffer_distance io_net_length upf lef netlist io_timing_slack gspan_input_clock_latency gspan_output_clock_timing custom_pg_stats analog_3pip_route_stats {fiducial_coverage -highlight} pg_quality missing_vias_on_power_switch missing_power_switches dangling_power_switch macro_chains power_switch_chains channel_switches pg_continuity esd_connectivity radial_spacing radial_spacing_coverage macro_pg_pin_connectivity min_channel_height_pd min_channel_width_hcell wall_pitch_uniformity analog_3pip_route_stats custom_pg_stats memory_m5_width_and_pitch core_switch_grid_continuity_m3m5 channel_switch_grid_continuity_m3m5 } {Default checks in chipfinish stage}
bbset pnr.InlineChecks               {protean}                                                        {All stage inline checks (Adds to runtime)}
bbset pnr.chipfinish.InlineChecks    {netlist upf io_net_length io_ports_buffer io_buffer_distance io_nets_rc pg_alignment pg_ring boundary_routing_blockages} {chipfinish stage inline checks (Adds to runtime)}
bbset pnr.socclocks.InlineChecks     {}                                                               {SOCclocks inline checks (Adds to runtime)}
bbset pnr.check.PrioritizeStageList  {0}                                                              {By default the check sequence is pnr.Checks and then pnr.STAGE.Checks . pnr.STAGE.Checks will be done first if this is enabled}
bbset pnr.check.PinPlacementConstraints {}                                                               {Pin placement constraint overrides. All fields are optional. eg. {M* {min_pitch 2 min_tbpitch 1} D* {min_length 0.300}}}
bbset pnr.check.OrientationConstraints {*mc* {R90 R270 MX90 MY90} *slsi* {R0 R180 MX180 MY180} HEADBUFTIE* {MY R0} *CDMM* {R0} *sf_em* {R0} PESD*_V {R0 MX} PESD*_H {R90}} {Specify as {*cell_ref_name* {legal_orientations}}. Ex, { *HEADBUFTIESQ* {MY} }. Cell's full ref name preferred}
bbset pnr.check.BumpPlacementConstraints {PESDCORE4LV_18_V CDMM_CDU_DMM_4Mx sf_tem0501xr_ln05lpe}         {Specify cell names that must not overlap with bumps. Pls give full ref name. Ex, {sf_tem0501xr_ln04lpe HEADBUFTIESQ}}
bbset pnr.check.PrePlacedCellNames   {PESDCORE4LV_18_V CDMM_CDU_DMM_4Mx sf_tem0501xr_ln05lpe}         {specify complete cell ref name}
bbset pnr.check.MaxStripeGap         {20.0}                                                           {specify the max gap in pg stripes for pg continuity check}
bbset pnr.check.ContinuityLayers     {}                                                               {Specify the layers in pg stripes for pg continuity check}
bbset pnr.check.ESDConnectivity      {}                                                               {specify PG net connection spec for ESD cell in format {esd_cell_ref {pg_net1 pg_net2}}.Ex, {PESDCORE4LV_18_V {VDD_CORE VDD_MACRO}}}
bbset pnr.check.MacroPGPinConnectivity {}                                                               {List of macro cell name to check PG pin connection.}
bbset pnr.check.VerticesDivisibility {}                                                               {Specify value that the core & die vertices must be a multiple of. Ex {core {pitch_x pitch_y} die {pitch_x pitch_y}}}
bbset pnr.check.EnableSnapSettings   {0}                                                              {Enabling this, will update design snap settings to values specified in CustomSnapSettings}
bbset pnr.check.CustomSnapSettings   {block {inst} halo {inst} pd {inst} core {inst} die {inst}}      {Set snap grid for block, halo, pd, core, die. For Ex {block {inst} halo {inst} pd {inst} core {userdefine} die {userdefine}}}
bbset pnr.check.UserDefinedGrid      {}                                                               {Provide user defined grid settings {pitch_x pitch_y offset_x offset_y}.All values required. pitch_x & pitch_y value cant be <= 0}
bbset pnr.check.AbutmentConstraints  {*mc* {vertical {{MX90 MX90} {MX90 R270} {R270 MX90} {R270 R270} {MY90 MY90} {MY90 R90} {R90 MY90} {R90 R90}} horizontal {{MX90 R90} {R270 MY90}}} *slsi* {vertical {{MX180 MX180} {MX180 R180} {MX180 MY180} {MX180 R180} {R180 MX0} {R180 R180} {R180 MY180} {R180 R0} {MY180 MX180} {R180 R0} {MY180 MX180} {MY180 R180} {MY180 MY180} {MY180 R0} {R0 MX180} {R0 R180} {R0 R180} {R0 MY180} {R0 R0}} horizontal {{MX180 MX180} {MX0 R0} {R180 R180} {R180 MY180} {MY180 MX180} {MY180 R0} {R0 R180} {R0 MY180}}}} {Specify Abutment coonstraints like {*mc* {vertical {{MX90 MX90} {MX90 R270} {R270 MX90}} horizontal {{MX90 R90}}}}}
bbset pnr.check.RadialSpacing        {*PCLAMP* {1500}}                                                {Specify constraints for Radial spacing chk in format {cell_type {radius} CDMM_CDU_DMM_4Mx {1200}}}
bbset pnr.check.CoreHeightDivisibility {}                                                               {specify value, which core vertical rects height must be a multiple of.}
bbset pnr.check.RowMultiplier        {1}                                                              {Specify value of which the rows box must be multiple of. For ex: 4 for 7p94t design}
bbset pnr.check.MacroPGPinToPGStripeAlignmentConstraints {{{*} {M14 M15}}}                                                {Specify the macros which we need to align the PG with current design PG stripe. Specify as: {*cell_ref_name* {layer_name ...}} Eg. {{macro_1 Macro* ...} {M14 M15 ..}}. If a macro match more than one constraints, the later one has higher precedence}
bbset pnr.check.AbuttedMacrosPGPinAlignmentConstraints {{{*} {M14 M15}}}                                                {Specify the macros which we need to align the PG pins together when abutted. Specify as: {*cell_ref_name* {layer_name ...}} Eg. {{macro_1 Macro* ...} {M14 M15 ..}}. If two macros are not aligned, check is not performed}
bbset pnr.check.MaximumWireLength    {150}                                                            {Maximum wire length for wire_length check. Wire length over this number will be reported}
bbset pnr.check.ClockMinMaxLayerSpec {clock}                                                          {Preferred bottom/top metal layers for routing clock nets}
bbset pnr.check.SSwrpPortIdentifier  {_ss_}                                                           {Identifier for sswrp ports}
bbset pnr.check.LVLIdentifier        {LVLDBUF}                                                        {Identifier for level shifter cells}
bbset pnr.check.BufStationIdentifier {_station_*buf}                                                  {Identifier for buffer stations}
bbset pnr.check.MuxIdentifier        {_MUX}                                                           {Identifier for MUX}
bbset pnr.check.LogoCellName         {LOGO}                                                           {Logo cell name}
bbset pnr.check.MaxIONetsRC          {500.0}                                                          {Max IO Nets RC}
bbset pnr.check.BufferToIOMaxDistance {70.0}                                                           {Max distance IO terminals to buffers}
bbset pnr.check.IOBufferIgnorePorts  {}                                                               {Lis of IO ports naming that can skip the IO buffer checking}
bbset pnr.check.IOBufferDontUseCellType {SVT ELVT}                                                       {Dont use cell type for IO buffers}
bbset pnr.check.IOBufferIgnoreCells  {}                                                               {List of cell type naming can be ignore when it is connect to IO but not a buffer/inverter}
bbset pnr.check.IOTimingSlackThreshold {0.05}                                                           {Threshold of the IO port timing slack for io_timing_slack check}
bbset pnr.check.CellDriveConvention  {D(\[0-9\]+)}                                                    {Cell drive convention pattern}
bbset pnr.check.MinInputBufferDriveStrength {4}                                                              {Min input buffer drive strength}
bbset pnr.check.MinOutputBufferDriveStrength {6}                                                              {Min output buffer drive strength}
bbset pnr.check.GspanInputClockPatterns {*_SS_*}                                                         {GSPAN input clock latency criteria}
bbset pnr.check.GspanOutputClockPatterns {GENGSPAN_*}                                                     {List of GSPAN clock patterns to identify the gspan input clock}
bbset pnr.check.GspanCheckScenarios  {func*ssgnp-NM-*}                                                {List of scenario patterns to check gspan}
bbset pnr.check.GspanInputClockLatencyConstraint {0.300}                                                          {GSPAN input clock latency criteria}
bbset pnr.check.GspanOutputClockLatencyConstraint {0.250}                                                          {GSPAN output clock latency criteria}
bbset pnr.check.GspanOutputClockCrosstalkConstraint {0.0025}                                                         {GSPAN output clock accumulated crosstalk delay criteria}
bbset pnr.check.MemoryM5MinWidth     {0.02}                                                           {Minimum Width of M5 PG stripes on memory macros}
bbset pnr.check.MemoryM5MaxPitch     {1.30}                                                           {Maximum Pitch of M5 PG stripes on VDDM pins on memory macros}
bbset pnr.check.EsdMetalAndViaCheckCellList {PCLAMPC_H_C220928 PCLAMPC_RBD_H_C220928 PCLAMPC_RBD_V_C220928 PCLAMPC_V_C220928 PCLAMP_H_C220928 PCLAMP_RBD_H_C220928 PCLAMP_RBD_V_C220928 PCLAMP_V_C220928 ESD_B2B_1_M6 TEF03FEESD_P ABKBCKL2 ABKXTLL2} {List of macros to be checked for ESD metal and via width requirements}
bbset pnr.check.EsdMinCutAreaVal     {{VIA5 0.1744} {VIA6 0.30324} {VIA7 0.30324} {VIA8 0.30324} {VIA9 0.30324} {VIA10 0.30324} {VIA11 0.73036} {VIA12 0.73036} {VIA13 1.04976} {VIA14 1.04976}} {# No Comment}  
bbset pnr.check.AnalogIpSignal       {{ABKBCKL2 {{TCKN M9} {TCKP M9}}} {ABKXTLL2 {{XTAL_IN M9} {XTAL_OUT M9}}}} {# No Comment}  
bbset pnr.check.Esd3PIPMetalLengthThreshold {{M9 20} {M10 20} {M11 20} {M12 10} {M13 10} {M14 2.2} {M15 2.2}} {# No Comment}  
bbset pnr.check.IOBufferPushdownCsv  {[bbget .info.CHIP_DIR]/pnr/common/abutment_route_transiLimit.csv} {csv file from soc team to pushdown sswrp IO buffer cell type based on transition limitation estimation}
bbset pnr.check.FloorplanPushdownDef {}                                                               {Top level floorplan pushdown def used to check the consistency between pushdown def and output lef}
bbset pnr.check.PGVSSOffsetFileVariable {pnr.floorplan.PGM14M15OffsetFile}                               {Variable to get PG Offset definition file}
bbset pnr.check.PGVSSOffsetVariables {pnr.floorplan.PGM14VSSOffset pnr.floorplan.PGM15VSSOffset}      {Variable to get PG Offset value}
bbset pnr.check.DesignDataComparisonCheckOptions {
                                      { {floorplan chipfinish} {
                                      --golden_data_path [bbget .pnr.check.FloorplanPushdownDef]
                                      --revised_data_path ./outs/[bbget .info.BLOCK].lef
                                      --tech_files [bbget .pnr.TechLEFFile]
                                      --golden_type def
                                      --revised_type lef
                                      --golden_design_name [bbget .info.BLOCK]
                                      --pin_exclude_patterns VDD VSS
                                      --out_dir ./ddc/fp
                                      --log_dir ./ddc/fp
                                      --rpt_dir ./rpts
                                      --rpt_name [bbget .pnr.Stage].check_floorplan_pushdown.rpt
                                      }
                                      }
                                      { {floorplan chipfinish} {
                                      --golden_data_path ./outs/[bbget .info.BLOCK].top.v.gz
                                      --revised_data_path ./outs/[bbget .info.BLOCK].lef
                                      --tech_files [bbget .pnr.TechLEFFile]
                                      --golden_type verilog
                                      --revised_type lef
                                      --golden_design_name [bbget .info.BLOCK]
                                      --items pin_count
                                      --out_dir ./ddc/vlg_lef
                                      --log_dir ./ddc/vlf_lef
                                      --rpt_dir ./rpts
                                      --rpt_name [bbget .pnr.Stage].check_verilog_lef_port_matched.rpt
                                      }
                                      }
                                      } {List of Options of Design Data Comparison to check the consistency between floorplan pushdown def and output lef. Format: {{stages} {options}}}
bbset pnr.check.MinSswrpInputDriveStrength {6}                                                              {Min strength of drivers of SSWRP blocks inputs}
bbset pnr.check.MaxSswrpInputNetLength {50.0}                                                           {Max length of nets driving SSWRP blocks inputs}
bbset pnr.check.MaxSswrpOutputNetLength {50.0}                                                           {Max length of nets driven by SSWRP blocks outputs}
bbset pnr.check.PinLayerCheckExcludeHardMacros {0}                                                              {When set to 1,excludes memories, custom macros and fiducial cells from check_macro_pin_layer check. Enable this to run on sub-blocks at SSWRP level}
bbset pnr.check.MissingPGCheckerPitch {M0 0.26 M1 0.768 M2 0.26 M3 0.768 M4 0.26 M5 0.768 M6 1.86 M7 1.86 M8 1.86 M9 1.86 M10 1.86 M11 1.86 M12 2.0 M13 5.22 M14 2.88 M15 10.08} {metal & pitch to check if any PG stripes/staples are missing, format: {metal1 pitch1 metal2 pitch2}}
bbset pnr.check.MissingPGCheckerConfig {M0 stripe M1 staple M2 stripe M3 stripe M4 staple M5 stripe M6 stripe M7 stripe M8 stripe M9 stripe M10 stripe M11 stripe M12 stripe M13 stripe M14 stripe M15 stripe} {pg configuration as stripe or staple, format: {metal1 stripe metal2 stripe metal3 staple}}
bbset pnr.check.MissingPGCheckerStapleExtend {2}                                                              {extend staples for missing pg check}
bbset pnr.Exports                    {}                                                               {stage exports. Ex: {netlist def hcell_list lef upf spef etm}}
bbset pnr.setup.Exports              {}                                                               {Default exports in setup stage}
bbset pnr.placeopt.Exports           {netlist lec_map macro_list spef}                                {Default exports in placeopt stage}
bbset pnr.clock.Exports              {stage_netlist netlist def upf lightdb lef lec_map}              {Default exports in clock stage}
bbset pnr.clockopt.Exports           {stage_netlist netlist def scan_def upf lightdb lef lec_map}     {Default exports in clockopt stage}
bbset pnr.route.Exports              {stage_netlist netlist def upf lightdb lef lec_map}              {Default exports in route stage}
bbset pnr.routeopt.Exports           {stage_netlist netlist def scan_def upf lightdb lef lec_map}     {Default exports in routeopt stage}
bbset pnr.routeoptdesign.Exports     {netlist def lef upf scandef namemap}                            {Default exports in routeoptdesign stage}
bbset pnr.applyeco.Exports           {}                                                               {Default exports in applyeco stage}
bbset pnr.pinbudget.Exports          {}                                                               {Default exports in pinbudget stage}
bbset pnr.signoffopt.Exports         {}                                                               {Default exports in signoffopt stage}
bbset pnr.signoffdrc.Exports         {}                                                               {Default exports in signoffdrc stage}
bbset pnr.chipfinish.Exports         {sdc spc_rule}                                                   {Default exports in chipfinish stage}
bbset pnr.socclocks_dataprep.Exports {}                                                               {Default exports in socclocks dataprep stage}
bbset pnr.socclocks.Exports          {}                                                               {Default exports in socclocks stage}
bbset pnr.socclocks_impl.Exports     {}                                                               {Default exports in socclocks implementation stage}
bbset pnr.hsbroute.Exports           {}                                                               {Default exports in hsbroute stage}
bbset pnr.InlineExports              {pd_to_tweaker}                                                  {Main stage inline exports (Adds to runtime)}
bbset pnr.setup.InlineExports        {}                                                               {Inline exports in setup stage}
bbset pnr.placeopt.InlineExports     {}                                                               {Inline exports in placeopt stage}
bbset pnr.clock.InlineExports        {}                                                               {Inline exports in clock stage}
bbset pnr.clockopt.InlineExports     {}                                                               {Inline exports in clockopt stage}
bbset pnr.route.InlineExports        {}                                                               {Inline exports in route stage}
bbset pnr.routeopt.InlineExports     {}                                                               {Inline exports in routeopt stage}
bbset pnr.routeoptdesign.InlineExports {}                                                               {Inline exports in routeopt stage}
bbset pnr.applyeco.InlineExports     {}                                                               {Inline exports in applyeco stage}
bbset pnr.pinbudget.InlineExports    {}                                                               {Inline exports in pinbudget stage}
bbset pnr.signoffopt.InlineExports   {}                                                               {Inline exports in signoffopt stage}
bbset pnr.signoffdrc.InlineExports   {}                                                               {Inline exports in signoffdrc stage}
bbset pnr.chipfinish.InlineExports   {oasis stage_netlist netlist namemap hcell_list upf macro_list def voltage_text_include_file scan_def spef flat_netlist lef} {Inline exports in chipfinish stage}
bbset pnr.socclocks_dataprep.InlineExports {}                                                               {Inline exports in socclocks dataprep stage}
bbset pnr.socclocks.InlineExports    {}                                                               {Inline exports in socclocks stage}
bbset pnr.socclocks_impl.InlineExports {}                                                               {Inline exports in socclocks impl stage}
bbset pnr.hsbroute.InlineExports     {}                                                               {Inline exports in hsbroute stage}
bbset pnr.chipfinish.PriorityExports {netlist oasis}                                                  {Prioritise the exports for dumping sequence}
bbset pnr.export.SkipStages          {}                                                               {List of stages for which to skip export}
bbset pnr.export.WriteLEFExtraOptions {}                                                               {write_lef_abstract extra tool arguments}
bbset pnr.export.NetlistExcludeCells {*_DTCD_* *PCLAMP* *PESDCORE* *_CAPTN* *_FILL? *_FILL_MVT* *_TAPDS_* *FILLTIE*  *FILLBIAS* *TOPBOTTOM* ENDCAP* INCNRCAP* WELLANTENNA* FILL* FILL?_DX_* CDMM_CDU_DMM_4Mx BOUNDARYLEFTBWP* BOUNDARYNCORNERBWP* BOUNDARYNINCORNERBWP* BOUNDARYNROW?BWP*   BOUNDARYPROW?BWP* BOUNDARYNROWWALLBWP* BOUNDARYPCORNERBWP* BOUNDARYPINCORNERBWP* BOUNDARYPROWWALLBWP* BOUNDARYRIGHTBWP* *TAPWALL* *TAPCELL* *BOUNDARY* *B2B* fiducial_h130 fiducial_h156} {List of cells to exclude when writing a netlist}
bbset pnr.export.PGNetlistExcludeCells {*PESDCORE* *_CAPTN* *_FILL? *_FILL_MVT* *_TAPDS_* *FILLTIE* *FILLBIAS* *TOPBOTTOM* ENDCAP* INCNRCAP* WELLANTENNA* FILL* FILL?_DX_* CDMM_CDU_DMM_4Mx BOUNDARYLEFTBWP* BOUNDARYLEFTPADBWP* BOUNDARYLEFTVBBTAPBWP* BOUNDARYLEFTVPPTAPBWP* BOUNDARYNCORNERBWP* BOUNDARYNCORNERVPPTAPBWP* BOUNDARYNINCORNERBWP* BOUNDARYNINCORNERPADBWP* BOUNDARYNINCORNERVBBTAPBWP* BOUNDARYNINCORNERVPPTAPBWP* BOUNDARYNROW1BWP* BOUNDARYNROW2BWP* BOUNDARYNROW4BWP* BOUNDARYNROW8BWP* BOUNDARYNROWVPPTAPBWP* BOUNDARYNROWVPPTAPWALLBWP* BOUNDARYNROWWALLBWP* BOUNDARYRIGHTBWP* BOUNDARYRIGHTPADBWP* BOUNDARYRIGHTVBBTAPBWP* BOUNDARYRIGHTVPPTAPBWP* *CAPB1* *CAPTNPB* TAPCELLVBBBWP* TAPCELLVBBWALLBWP* TAPCELLVPPBWP* TAPCELLVPPWALLBWP* LUP_V* LUP_H* LUPOD_H* LUPOD_V* *_DTCD_* fiducial_h130 fiducial_h156 PFILLERSTRAPOD_V* PFILLERROUTEOD02064DMY_V* PRCUT_V* PFILLERSTRAPOD_H* PFILLERROUTEOD02064DMY_H* PRCUT_H* LUP_1D8_GR_FB1* PENDCAPOD_H* PENDCAPOD_V* PENDCAP_H* PENDCAP_V* PCORNER_V_C220928 PCORNEROD_V_C220928} {List of cells to exclude when writing a PG netlist}
bbset pnr.export.NetlistGenericDecapExcludePatterns {GFILL*}                                                         {List of generic exclude decap patterns}
bbset pnr.export.WriteFlatPGandLVSNetlist {1}                                                              {Write flat PG and LVS netlists}
bbset pnr.export.EdtextOutputNetRegex {vdd*|VDD*|vss*|VSS*}                                            {Regular expression to identify nets for writing out Edtext for PDV}
bbset pnr.export.ExposePinLayers     {[bbget .pnr.floorplan.PGPinLayers]}                             {write out PG stripes on these layers}
bbset pnr.export.LEFVersion          {5.8}                                                            {write out LEF version}
bbset pnr.export.LEFTopLayerName     {}                                                               {Option to specify top layer name during writing of block level LEF files}
bbset pnr.export.ExtractBlockObs     {0}                                                              {Extract OBS from BLOCK, RING, PAD macro above top layer, and write to the LEF file}
bbset pnr.export.ExtractBlockPGPinLayers {M14 M15}                                                        {Extract PG pins from BLOCK, RING, PAD, COVER macros on these layers}
bbset pnr.export.CutObsMinSpacing    {1}                                                              {Cut OBS around pin shapes by min-spacing}
bbset pnr.export.CustomStreamOutMode {-merge_trim true -trim_layer CM0 -trim_mask {1 2} -trim_number {3} -trim_gap 0.002 -cellInstanceColor true} {add custom stream out mode settings}
bbset pnr.export.EnableUPFFix        {0}                                                              {Enable UPF Fix to remove duplicate macro pin connections}
bbset pnr.export.GNCUpdateFile       {}                                                               {User input with list of instances and corresponding leaf pin and pgPin to perform GNC updates on Innovus db}
bbset pnr.export.UPFUpdatePowerIntent {1}                                                              {Running update_power_intent before exporting UPF for Innovus db}
bbset pnr.export.lightdb.IncludeCells {}                                                               {List of lib cell patterns included in light def/vlg}
bbset pnr.export.lightdb.IncludeAllMacroCells {1}                                                              {1(default)|0. Include all block type cells into light def/vlg automatically}
bbset pnr.export.lightdb.PGStripeLayers {}                                                               {List of PG stripe layers that will be included in def/vlg. If not specified, not PG shape will be included in light def}
bbset pnr.export.RTLAMacroPinLocation {1}                                                              {Dump the macro pin locations in the rtla.floorplan.tcl}
bbset pnr.export.ant_lef.AntennaModelLef {[bbget .info.PROCESS_DIR]/pnr/antenna/antenna_model.lef}        {Anntenna Model in lef format to hack floorplan lef}
bbset pnr.export.ant_lef.NoAntennaPinOnly {0}                                                              {0(default)|1. When turn on, add antenna model to pins that has no antenna model only. Default is add model to all the pins}
bbset pnr.assemble.Stages            {floorplan chipfinish}                                           {Stages to perform subblock data assembling and generate lightdb.}
bbset pnr.assemble.AssembleBlocks    {[bbfiles -level 1 -legacy_mode subblocks -block [bbget .info.BLOCK]]} {List of sub block to assemble back to curent top desgin. The subblock are assembled by the sequence of this variable}
bbset pnr.assemble.AssembleCategory  {assemble}                                                       {assemgle(default)|light|light_assemble. lightdb category that is used for assemble}
bbset pnr.assemble.AssembleDesignData {[bbfiles -bundles fc_chipfinish -filetype database -hierarchy -annotated]} {List of sub block light def/vlg(innovus) or ndm(fc) to assemble back to curent top desgin}
bbset pnr.assemble.AssembleDesignLefs {[bbquery get file -db dk -mode regexp -filter "file_type=~'lef' && file=~'/lef/mem_.*' && track=~'([bbget .Track]|^$)'"]} {List of extra lef files need to be loaded during block data assembling. By default all the lef file from DK that is not in current databased would be loaded to avoid missing any cell from subblocks}
bbset pnr.assemble.AssembleDesignLefLists {[bbfiles -bundles chipfinish -purpose assemble -filetype macro_file_list -subblocks [bbfiles -legacy_mode subblocks]]} {macro lef list generated when written out assembledb. This file can used use to help loading the lef when top level do the design assemble}
bbset pnr.assemble.AssembleReplaceBlocks {}                                                               {List of sub blocks to do the replace block in top desgin. This is workaround for pin mismatch issue during assembleDesign}
bbset pnr.assemble.AssembleReplaceBlockData {
                                      [bbfiles -bundles chipfinish -filetype verilog -purpose assemble -category light -hierarchy -annotated]
                                      [bbfiles -bundles chipfinish -filetype lef -purpose signoff -hierarchy -annotated]
                                      } {List of sub block lef and verilog to replace the design in top desgin. This is workaround for pin mismatch issue during assembleDesign}
bbset pnr.Metrics                    {info phystats design_utilization}                               {Export stage metrics}
bbset pnr.setup.Metrics              {power timing}                                                   {Default metrics in setup}
bbset pnr.placeopt.Metrics           {timing power layout route}                                      {Default metrics in placeopt}
bbset pnr.clock.Metrics              {timing clock power layout route}                                {Default metrics in clock}
bbset pnr.clockopt.Metrics           {timing clock power layout route}                                {Default metrics in clockopt}
bbset pnr.route.Metrics              {power timing layout route}                                      {Default metrics in route}
bbset pnr.routeopt.Metrics           {power timing layout route}                                      {Default metrics in routeopt}
bbset pnr.routeoptdesign.Metrics     {power timing layout route}                                      {Default metrics in routeopt}
bbset pnr.applyeco.Metrics           {power timing layout route}                                      {Default metrics in applyeco}
bbset pnr.pinbudget.Metrics          {power timing layout}                                            {Default metrics in pinbudget}
bbset pnr.signoffopt.Metrics         {power timing layout route}                                      {Default metrics in signoffopt}
bbset pnr.signoffdrc.Metrics         {power timing layout route}                                      {Default metrics in signoffdrc}
bbset pnr.chipfinish.Metrics         {power timing layout route}                                      {Default metrics in chipfinish}
bbset pnr.MetricPhystatsCellType     {all combinatorial sequential buffer inverter macro physical std_cell io level_shifter icg always_on blackbox isolation logical power_switch register iso_ls} {variable for generating phystats - cell types}
bbset pnr.MetricPowerType            {all clock_combinational clock_sequential combinational sequential io macro} {Variable for generating power - cell types}
bbset pnr.MetricPowerCategory        {internal switching leakage}                                     {variable for generating power - power types}
bbset pnr.metric.MinSignalNetThreshold {1000}                                                           {Min signal net length threshold for reporting}
bbset pnr.EnableRVI                  {false}                                                          {To enable Redundant Via Insertion Flow}
bbset pnr.RVIEffort                  {high}                                                           {Effort can be high | medium | low}
bbset pnr.RVIMode                    {reserve_space}                                                  {reserve_space|insert_at_high_cost}
bbset pnr.RVIMappingFile             {}                                                               {VIA mapping file from foundry. Ex: PRTF_ICC2_N5_DFM_via_swap_reference_command_modified.11a.tcl}
bbset pnr.EnablePswChainingInFc      {1}                                                              {To enable PSW chaining in FC and skipping it in Innovus}
bbset pnr.GspanInputClockPatterns    {*GSPAN*}                                                        {Specifying clock patterns for GSPAN clocks}
bbset pnr.RemoveAssigns              {1}                                                              {To remove assign statements during optimization}
bbset pnr.EnableMBFFFlow             {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.MBFFExcludeRegsWithExceptions {false}                                                          {To exclude the mbit merging on cells with exceptions}
bbset pnr.MBFFIgnoreExceptions       {PATH_GROUP ANNOTATION CLOCK_LATENCY LATENCY_OFFSET}             {To ignore exceptions when banking and debanking multi-bit flops}
bbset pnr.DumpSpefOnlyAtPreRoute     {false}                                                          {To dump SPEF file only at pre-route stages. Set this to false to dump SPEF even at route and postroute stages}
bbset pnr.IgnoreOutOfDesignShapes    {false}                                                          {Set this to true to not exit the flow when there are shapes outside the design boundary}
bbset pnr.PostCmd.PowerStatsReportParser.Enable {1}                                                              {# No Comment}  
bbset pnr.ApplyGSPANHierVtSettings   {1}                                                              {Set this to 1 to enable GSPAN VT implementation based on SOC configuration}
bbset pnr.GSPANVtConfigYaml          {[bbget .info.CHIP_DIR]/config/gspan_vt_config.yaml}             {Yaml input for SOC GSPAN VT configuration}
bbset pnr.LimitLegalizeTrials        {0}                                                              {Set this to 1 to limit the number of legalization trials to be tried}
bbset pnr.NumLegalizeTrials          {5000}                                                           {Set this to control how many number of legalization trials to be tried before giving up}
bbset pnr.ReducedSetupScenarios      {1}                                                              {Set this to 1 to speed up setup stage runtime by enabling only one scenario}
bbset pnr.insight.analysis.EnableDRCCheck {0}                                                              {Run the DRC checks before and after VI}
bbset pnr.insight.analysis.EnableIRCheck {1}                                                              {Run the final IR checks after VI}
bbset pnr.insight.analysis.ViewName  {}                                                               {Analysis view to be used for IR checks in VI}
bbset pnr.fc.EnableInlineMetrics     {1}                                                              {Enable stage inline metrics generation and upload}
bbset pnr.fc.EnableQORSummary        {true}                                                           {Enable QoR dumping}
bbset pnr.fc.QORReportGroups         {setup placed floorplan placed placeopt placed clock cts clockopt cts route routed routeopt routed chipfinish routed} {QoR Reporting Groups}
bbset pnr.fc.AntennaRuleFile         {[bbquery get file -db pdk -mode regexp -filter "file_type=~'antenna' && function=~'pnr' && purpose=~'antenna' && tool=~'icc2'"]} {antenna rule file}
bbset pnr.fc.TBCFile                 {}                                                               {TBC file for all stages}
bbset pnr.fc.placeopt.TBCFile        {}                                                               {TBC file for placeopt}
bbset pnr.fc.clockopt.TBCFile        {}                                                               {TBC file for clockopt}
bbset pnr.fc.routeopt.TBCFile        {}                                                               {TBC file for routeopt}
bbset pnr.fc.DpxWorkerCores          {[bbget .pnr.Cores]}                                             {CPUs for Worker of Dpx}
bbset pnr.fc.DpxWorkerRAM            {[bbget .pnr.RAM]}                                               {RAM  for Worker of Dpx}
bbset pnr.fc.DpxNumProcess           {4}                                                              {Number of Workers for Dpx}
bbset pnr.fc.DpxSubmitCommand        {/usr/local/google/home/rtda-nc-sa/vovroot/vovdir/scripts/nc run -e SNAPSHOT -r+ CORES/[bbget .pnr.fc.DpxWorkerCores] -r+ RAM/[bbget .pnr.fc.DpxWorkerRAM] --} {nc machine command}
bbset pnr.fc.LogRules                {
                                      {FC-80 INFO  {\s+(Fusion Compiler|Version)}}
                                      {FC-81 INFO  {Start|.*((H|V) routing|TOTAL VIOLATIONS|FLW-80\\\\d\\\\d|LIC_INFO)}}
                                      {FC-90 ERROR {Error}}
                                      {FC-91 ERROR {FC-ERROR}}
                                      {FC-92 FATAL {FC-FATAL}}
                                      {FC-93 INFO  {FC-INFO}}
                                      } {List of Fusion Compiler rules used to process the log file}
bbset pnr.fc.MetricPhystatsCellType  {all combinatorial sequential buffer inverter macro physical std_cell io level_shifter icg always_on blackbox isolation power_switch register iso_ls} {variable for generating phystats - cell types}
bbset pnr.fc.MetricPowerType         {Total io_pad memory black_box clock_network register sequential combinational} {Variable for generating power - cell types}
bbset pnr.fc.MetricPowerCategory     {internal switching leakage}                                     {variable for generating power - power types}
bbset pnr.lm.LogRules                {}                                                               {List of Library Compiler rules used to process the log file}
bbset pnr.innovus.EnableUnifiedMetrics {0}                                                              {Enable unified metrics}
bbset pnr.innovus.UploadToDashboard  {1}                                                              {upload results to dashboard}
bbset pnr.innovus.EnableInlineMetrics {1}                                                              {Enable stage inline metrics generation and upload}
bbset pnr.innovus.UnifiedMetricsCategories {design area setup hold power route check}                       {Categories of metrics}
bbset pnr.innovus.CleanupFiles       {ufs_top_init_shield.rpt
                                      ufs_top.antenna.lef
                                      rc_model.bin
                                      ufs_top.geom.rpt} {Temporary files cleanup at the end of each stage}
bbset pnr.innovus.SaveDesignArgs     {-def}                                                           {Arguments needed for saving Design.}
bbset pnr.innovus.RestoreDesignArgs  {}                                                               {Additional arguments for loading design such as -noTiming }
bbset pnr.innovus.AutosaveDesign     {0}                                                              {Enable autosave at 180 minutes for SOC only}
bbset pnr.innovus.LogRules           {
                                      {INNOVUS-77 INFO  {Verification Complete.*}}
                                      {INNOVUS-78 ERROR {\\\\*\\\\*WARN: .IMPCCOPT-2030.}}
                                      {INNOVUS-79 INFO  {#   number of violations}}
                                      {INNOVUS-80 INFO  {.* optimization (Phase|summary|complete)}}
                                      {INNOVUS-81 INFO  {\\\\*\\\\*\\\\* (Start|Finish)}}
                                      {INNOVUS-82 INFO  {\\\\*\\\\* GigaOpt| Begin: }}
                                      {INNOVUS-94 FATAL {.*ERROR:.*IMPMSMV-7402.*  No\\ \\power\\ \\intent\\ \\is\\ \\loaded.*}}
                                      {INNOVUS-78 FATAL {\\\\*\\\\*WARN: .IMPOPT-665.}}
                                      {INNOVUS-90 ERROR {\\\\*\\\\*ERROR}}
                                      {INNOVUS-91 ERROR {INNOVUS-ERROR}}
                                      {INNOVUS-92 FATAL {INNOVUS-FATAL}}
                                      {INNOVUS-93 INFO  {INNOVUS-INFO}}
                                      {INNOVUS-94 ERROR {Innovus terminated by internal .*SEGV.* error}}
                                      } {List of Innovus rules used to process the log file}
bbset pnr.tcic.TcicDir               {n2p/pnr/innovus/tcic}                                           {Location of run_Tcic.tcl script}
bbset pnr.esa.nodes                  {
                                      [regexp -all -inline {pnr/\S+} [ lsort -u [eval "join \"[regsub -all {(\S+)} [regsub -all {pnr} [bbget esa.flows] {} ] {[bbget \1.esa.nodes]}]\""]]]
                                      } {ESA flow that need to create pnr chipfinish nodes. onlt consider flow in esa.flows}
bbset libgen.pnr.NDMSearchPath       {}                                                               {Use already generated NDMs in runs}
bbset libgen.pnr.EnableLinkingNDM    {False}                                                          {When set to True, flow link NDMs from single area specified in libgen.syn.NDMSearchPath }
bbset libgen.pnr.EnableMultiThreading {1}                                                              {Reduce NDM generation time}
bbset libgen.pnr.ThreadCount         {4}                                                              {NDM geeration speed up factor}
bbset libgen.pnr.EnableExtraNDMGeneration {1}                                                              {NDM are generated by for the lef file listed in pnr.ExtraLibs.libgen.lef var }
bbset libgen.pnr.NDMGenerationUsingLEF {0}                                                              {NDM are generated by for the lef file}
bbset pnr.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/pnr/CIA/[bbget pnr.Tool]/checkers } {CIA checker search path for PNR stage}
bbset pnr.config.CIA.ConsolidateSummary { [bbget .info.BOB_RUN_DIR]/pnr/*/logs/cia.summary }             {cia.summary path for Bob Audit System}
bbset pnr.config.CIA.CheckDKVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.CheckDKVersion.FunctionMap {
                                      {PNR_1_1 DKVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.CheckPDKVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.CheckPDKVersion.FunctionMap {
                                      {PNR_1_2 PDKVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.CheckToolVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.CheckToolVersion.FunctionMap {
                                      {PNR_1_3 ToolVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.CheckLayerAlignment.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.CheckLayerAlignment.FunctionMap {
                                      {PNR_2_42 LayerAlignment}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.CheckLeakageVsDynamicRatio.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.CheckLeakageVsDynamicRatio.FunctionMap {
                                      {PNR_7_6 LeakageVsDynamicRatio}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPGConnectivity.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPGConnectivity.FunctionMap {
                                      {PNR_2_21 ViaMissing}
                                      {PNR_2_27 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPGDrc.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPGDrc.FunctionMap {
                                      {PNR_2_24 Drc}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckSpacingViolations.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.floorplan.CheckSpacingViolations.FunctionMap {
                                      {PNR_2_29 SpacingViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckLog.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckLog.FunctionMap {
                                      {PNR_2_34 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckDontUseCells.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckDontUseCells.FunctionMap {
                                      {PNR_2_35 DontUseCellViols}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckLogoCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckLogoCell.FunctionMap {
                                      {PNR_2_36 VerifyLogoCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckFloorplanPushdown.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckFloorplanPushdown.FunctionMap {
                                      {PNR_2_37 VerifyFloorplanPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckVerilogLefPort.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckVerilogLefPort.FunctionMap {
                                      {PNR_2_38 VerifyVerilogLefPort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPGAlignment.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPGAlignment.FunctionMap {
                                      {PNR_2_39 PGAlignment}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPDOverlap.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPDOverlap.FunctionMap {
                                      {PNR_2_40 PDOverlap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPGRing.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPGRing.FunctionMap {
                                      {PNR_2_41 CheckPGRing}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckLayerAlignment.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.floorplan.CheckLayerAlignment.FunctionMap {
                                      {PNR_2_42 LayerAlignment}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPowerSwitchChain.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.floorplan.CheckPowerSwitchChain.FunctionMap {
                                      {PNR_2_15 PowerSwitchChain}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckMissingPowerSwitches.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.floorplan.CheckMissingPowerSwitches.FunctionMap {
                                      {PNR_2_43 MissingPowerSwitches}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckESDStructuralChecks.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.floorplan.CheckESDStructuralChecks.FunctionMap {
                                      {PNR_2_46 ESDStructuralChecks}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckBlockBoundaryRoutingBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckBlockBoundaryRoutingBlockage.FunctionMap {
                                      {PNR_2_53 BlockBoundaryRoutingBlockage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckTLEFVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckTLEFVersion.FunctionMap {
                                      {PNR_2_54 TLEFVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckFPlan.Enable {True}                                                           {M15/M14 layer alignment and Offsets from SoC team are consumed}
bbset pnr.config.CIA.floorplan.CheckFPlan.FunctionMap {
                                      {PNR_2_23 FloorPlanCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPlacement.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPlacement.FunctionMap {
                                      {PNR_SOC_2_2 PlacementVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckDesign.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckDesign.FunctionMap {
                                      {PNR_SOC_2_4 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPDConn.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPDConn.FunctionMap {
                                      {PNR_SOC_2_5 VerifyInstPGConn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPDLibBind.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPDLibBind.FunctionMap {
                                      {PNR_SOC_2_6 VerifyLibBinding}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckPDMissingIso.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckPDMissingIso.FunctionMap {
                                      {PNR_SOC_2_7 VerifyMissingIsoOnNets}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckChannelWidth_Hcell.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckChannelWidth_Hcell.FunctionMap {
                                      {PNR_SOC_2_8 MinChannelWidth_Hcell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckChannelHeight_PD.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckChannelHeight_PD.FunctionMap {
                                      {PNR_SOC_2_9 MinChannelHeight_PD}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckMacroPGPinConnectivity.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckMacroPGPinConnectivity.FunctionMap {
                                      {PNR_SOC_2_12 MacroPGPinConnectivity}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.ChecktCIC.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.ChecktCIC.FunctionMap {
                                      {PNR_SOC_2_13 VerifytCIC}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckTapCell.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckTapCell.FunctionMap {
                                      {PNR_SOC_2_14 CheckTap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckEndcapCell.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckEndcapCell.FunctionMap {
                                      {PNR_SOC_2_15 CheckEndcap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckBlackBoxCell.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckBlackBoxCell.FunctionMap {
                                      {PNR_SOC_2_16 BlackBoxCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.floorplan.CheckVTCell.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.floorplan.CheckVTCell.FunctionMap {
                                      {PNR_SOC_2_17 VTCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckLog.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckLog.FunctionMap {
                                      {PNR_3_5 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckScanDEF.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckScanDEF.FunctionMap {
                                      {PNR_3_6 ScanDEFEnabled}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckScanReorder.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckScanReorder.FunctionMap {
                                      {PNR_3_7 ScanReorderEnabled}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckPlacement.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckPlacement.FunctionMap {
                                      {PNR_3_8 PlacementVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckECF.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckECF.FunctionMap {
                                      {PNR_3_9 ECFEnabled}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckCCDOptMaxAllowedDelay.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckCCDOptMaxAllowedDelay.FunctionMap {
                                      {PNR_3_10 CCDOptMaxAllowedDelay}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckTieCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckTieCell.FunctionMap {
                                      {PNR_3_12 VerifyTieCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckSpareCells.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckSpareCells.FunctionMap {
                                      {PNR_3_13 SpareCells}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckTimeDesign.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckTimeDesign.FunctionMap {
                                      {PNR_3_14 Summary}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckDonttouchcells.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckDonttouchcells.FunctionMap {
                                      {PNR_3_16 Donttouchcells}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckCongestion.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckCongestion.FunctionMap {
                                      {PNR_3_18 VerifyCongestionOverflow}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckDensityMap.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckDensityMap.FunctionMap {
                                      {PNR_3_19 DensityMap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckMultibitMergeSplit.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckMultibitMergeSplit.FunctionMap {
                                      {PNR_3_20 MultibitMergeSplit}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckMBFFCoverage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckMBFFCoverage.FunctionMap {
                                      {PNR_3_21 MBFFPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckCellUtilization.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckCellUtilization.FunctionMap {
                                      {PNR_3_25 CellUtilization}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckVTPercentage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckVTPercentage.FunctionMap {
                                      {PNR_3_26 VTPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckClockUncertainty.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckClockUncertainty.FunctionMap {
                                      {PNR_3_27 VerifyClockUncertainty}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckCTSMaxTranViolation.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckCTSMaxTranViolation.FunctionMap {
                                      {PNR_3_29 PreCTSTranViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckHoldBuffersCount.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckHoldBuffersCount.FunctionMap {
                                      {PNR_3_30 AONBufferDRVFixing}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckLeakageToDynamicRatio.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckLeakageToDynamicRatio.FunctionMap {
                                      {PNR_3_32 LeakageToDynamicRatio}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckClockNDR.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckClockNDR.FunctionMap {
                                      {PNR_3_33 ClockNDRCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckPower.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckPower.FunctionMap {
                                      {PNR_3_37 DynamicPower}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckWaterMark.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckWaterMark.FunctionMap {
                                      {PNR_3_39 ValidWatermark}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckBoundaryRouteBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckBoundaryRouteBlockage.FunctionMap {
                                      {PNR_3_42 VerifyBoundaryRouteBlockage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckIOPortsBuffer.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckIOPortsBuffer.FunctionMap {
                                      {PNR_3_43 IOPortsBuffer}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckIOBufferDistance.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckIOBufferDistance.FunctionMap {
                                      {PNR_3_44 IOBufferDistance}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckIOBufferPushdown.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckIOBufferPushdown.FunctionMap {
                                      {PNR_3_45 IOBufferPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckSpgOpens.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckSpgOpens.FunctionMap {
                                      {PNR_3_46 SpgOpens}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckConnectivity.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckConnectivity.FunctionMap {
                                      {PNR_SOC_3_4 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckDesign.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckDesign.FunctionMap {
                                      {PNR_SOC_3_5 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckPDConn.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckPDConn.FunctionMap {
                                      {PNR_SOC_3_7 VerifyInstPGConn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckPDLibBind.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckPDLibBind.FunctionMap {
                                      {PNR_SOC_3_8 VerifyLibBinding}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckPDMissingIso.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckPDMissingIso.FunctionMap {
                                      {PNR_SOC_3_9 VerifyMissingIsoOnNets}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckDontUseCells.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckDontUseCells.FunctionMap {
                                      {PNR_SOC_3_10 DontUseCellViols}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckCellDensity.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckCellDensity.FunctionMap {
                                      {PNR_SOC_3_12 VerifyCellDensityMap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckRetimerCellVth.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckRetimerCellVth.FunctionMap {
                                      {PNR_SOC_3_13 VerifyRetimerCellVth}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckHighFanout.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckHighFanout.FunctionMap {
                                      {PNR_SOC_3_14 VerifyHighFanout}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.placeopt.CheckPDMissingLvl.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.placeopt.CheckPDMissingLvl.FunctionMap {
                                      {PNR_SOC_3_15 VerifyMissingLvl}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockSkewLatency.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockSkewLatency.FunctionMap {
                                      {PNR_4_2 VerifyClockLatency}
                                      {PNR_4_4 VerifyClockSkew}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckSkewHistogram.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckSkewHistogram.FunctionMap {
                                      {PNR_4_3 LocalSkewHistogram}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckTinyCellStats.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckTinyCellStats.FunctionMap {
                                      {PNR_4_6 TinyCellStats}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockGateAggregation.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockGateAggregation.FunctionMap {
                                      {PNR_4_9 ClockGateAggregation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckLog.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckLog.FunctionMap {
                                      {PNR_4_13 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckTimeDesign.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckTimeDesign.FunctionMap {
                                      {PNR_4_14 Summary}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckCTSScenarios.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckCTSScenarios.FunctionMap {
                                      {PNR_4_15 CTSScenarios}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockTreeImplementation.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockTreeImplementation.FunctionMap {
                                      {PNR_4_16 ClockTreeImplementation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckScanTrace.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckScanTrace.FunctionMap {
                                      {PNR_4_17 DFTScanTrace}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckMTAP.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckMTAP.FunctionMap {
                                      {PNR_4_18 MTAP}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckHoldViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckHoldViolations.FunctionMap {
                                      {PNR_4_19 HoldViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckHoldTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckHoldTiming.FunctionMap {
                                      {PNR_4_21 HoldFixEnabled}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockMinMaxLayer.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockMinMaxLayer.FunctionMap {
                                      {PNR_4_26 ClockMinMaxLayerCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockRouteNDR.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockRouteNDR.FunctionMap {
                                      {PNR_4_27 ClockRouteNDR}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockNDR.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockNDR.FunctionMap {
                                      {PNR_SOC_4_15 ClockNDRCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockTreeViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockTreeViolations.FunctionMap {
                                      {PNR_4_34 ClockTreeViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckDesign.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckDesign.FunctionMap {
                                      {PNR_SOC_4_4 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockShield.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockShield.FunctionMap {
                                      {PNR_4_36 ClockShieldPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckSetupViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckSetupViolations.FunctionMap {
                                      {PNR_4_40 SetupViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockCell.FunctionMap {
                                      {PNR_4_41 VerifyClockCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckBoundaryRouteBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckBoundaryRouteBlockage.FunctionMap {
                                      {PNR_4_42 VerifyBoundaryRouteBlockage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckIOPortsBuffer.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckIOPortsBuffer.FunctionMap {
                                      {PNR_4_43 IOPortsBuffer}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckIOBufferDistance.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckIOBufferDistance.FunctionMap {
                                      {PNR_4_44 IOBufferDistance}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckIOBufferPushdown.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckIOBufferPushdown.FunctionMap {
                                      {PNR_4_45 IOBufferPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckDriveStrength.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckDriveStrength.FunctionMap {
                                      {PNR_4_47 DriveStrength}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckPlacement.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckPlacement.FunctionMap {
                                      {PNR_SOC_4_2 PlacementVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckConnectivity.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckConnectivity.FunctionMap {
                                      {PNR_SOC_4_3 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckTimingConstraint.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckTimingConstraint.FunctionMap {
                                      {PNR_SOC_4_5 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckCongestion.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckCongestion.FunctionMap {
                                      {PNR_SOC_4_7 VerifyCongestionOverflow}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckPDConn.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckPDConn.FunctionMap {
                                      {PNR_SOC_4_8 VerifyInstPGConn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckPDLibBind.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckPDLibBind.FunctionMap {
                                      {PNR_SOC_4_9 VerifyLibBinding}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckPDMissingIso.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckPDMissingIso.FunctionMap {
                                      {PNR_SOC_4_10 VerifyMissingIsoOnNets}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckDontUseCells.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckDontUseCells.FunctionMap {
                                      {PNR_SOC_4_13 DontUseCellViols}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clock.CheckClockMaxTrans.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clock.CheckClockMaxTrans.FunctionMap {
                                      {PNR_SOC_4_16 ClockMaxTransCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockSkewLatency.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockSkewLatency.FunctionMap {
                                      {PNR_4_2 VerifyClockLatency}
                                      {PNR_4_4 VerifyClockSkew}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckSkewHistogram.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckSkewHistogram.FunctionMap {
                                      {PNR_4_3 LocalSkewHistogram}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckTinyCellStats.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckTinyCellStats.FunctionMap {
                                      {PNR_4_6 TinyCellStats}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockGateAggregation.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockGateAggregation.FunctionMap {
                                      {PNR_4_9 ClockGateAggregation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckLog.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckLog.FunctionMap {
                                      {PNR_4_13 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckTimeDesign.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckTimeDesign.FunctionMap {
                                      {PNR_4_14 Summary}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckCTSScenarios.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckCTSScenarios.FunctionMap {
                                      {PNR_4_15 CTSScenarios}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockTreeImplementation.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockTreeImplementation.FunctionMap {
                                      {PNR_4_16 ClockTreeImplementation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckScanTrace.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckScanTrace.FunctionMap {
                                      {PNR_4_17 DFTScanTrace}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckMTAP.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckMTAP.FunctionMap {
                                      {PNR_4_18 MTAP}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckHoldViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckHoldViolations.FunctionMap {
                                      {PNR_4_19 HoldViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckHoldTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckHoldTiming.FunctionMap {
                                      {PNR_4_21 HoldFixEnabled}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockRouteNDR.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockRouteNDR.FunctionMap {
                                      {PNR_4_27 ClockRouteNDR}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockNDR.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockNDR.FunctionMap {
                                      {PNR_SOC_4_15 ClockNDRCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockTreeViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockTreeViolations.FunctionMap {
                                      {PNR_4_34 ClockTreeViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckDesign.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckDesign.FunctionMap {
                                      {PNR_SOC_4_4 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockShield.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockShield.FunctionMap {
                                      {PNR_4_36 ClockShieldPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckSetupViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckSetupViolations.FunctionMap {
                                      {PNR_4_40 SetupViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockCell.FunctionMap {
                                      {PNR_4_41 VerifyClockCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckBoundaryRouteBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckBoundaryRouteBlockage.FunctionMap {
                                      {PNR_4_42 VerifyBoundaryRouteBlockage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckIOPortsBuffer.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckIOPortsBuffer.FunctionMap {
                                      {PNR_4_43 IOPortsBuffer}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckIOBufferDistance.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckIOBufferDistance.FunctionMap {
                                      {PNR_4_44 IOBufferDistance}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckIOBufferPushdown.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckIOBufferPushdown.FunctionMap {
                                      {PNR_4_45 IOBufferPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckPlacement.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckPlacement.FunctionMap {
                                      {PNR_SOC_4_2 PlacementVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckConnectivity.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckConnectivity.FunctionMap {
                                      {PNR_SOC_4_3 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckTimingConstraint.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckTimingConstraint.FunctionMap {
                                      {PNR_SOC_4_5 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckCongestion.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckCongestion.FunctionMap {
                                      {PNR_SOC_4_7 VerifyCongestionOverflow}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckPDConn.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckPDConn.FunctionMap {
                                      {PNR_SOC_4_8 VerifyInstPGConn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckPDLibBind.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckPDLibBind.FunctionMap {
                                      {PNR_SOC_4_9 VerifyLibBinding}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckPDMissingIso.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckPDMissingIso.FunctionMap {
                                      {PNR_SOC_4_10 VerifyMissingIsoOnNets}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckDontUseCells.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckDontUseCells.FunctionMap {
                                      {PNR_SOC_4_13 DontUseCellViols}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.clockopt.CheckClockMaxTrans.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.clockopt.CheckClockMaxTrans.FunctionMap {
                                      {PNR_SOC_4_16 ClockMaxTransCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckCongestion.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckCongestion.FunctionMap {
                                      {PNR_5_1 VerifyCongestionOverflow}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckClockShield.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckClockShield.FunctionMap {
                                      {PNR_5_2 ClockShieldPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckBarVias.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckBarVias.FunctionMap {
                                      {PNR_5_3 BarViasCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckConnectivity.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckConnectivity.FunctionMap {
                                      {PNR_5_4 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckDRCcounts.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckDRCcounts.FunctionMap {
                                      {PNR_5_5 DRCcounts}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckTimeDesign.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckTimeDesign.FunctionMap {
                                      {PNR_5_7 Summary}
                                      {PNR_5_8 Summary}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckWireLength.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckWireLength.FunctionMap {
                                      {PNR_5_9 WireLength}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckClockSI.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckClockSI.FunctionMap {
                                      {PNR_5_10 ClockSI}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckScanTrace.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckScanTrace.FunctionMap {
                                      {PNR_5_11 DFTScanTrace}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckRouteRedundantVia.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckRouteRedundantVia.FunctionMap {
                                      {PNR_5_12 RouteRedundantViaPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckDRVViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckDRVViolations.FunctionMap {
                                      {PNR_5_14 DRVViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckVTPercentage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckVTPercentage.FunctionMap {
                                      {PNR_5_17 VTPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckAntenna.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckAntenna.FunctionMap {
                                      {PNR_5_18 AntennaVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckViaPillarTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckViaPillarTiming.FunctionMap {
                                      {PNR_5_20 ViaPillarTimingCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckTimingAwareRouting.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckTimingAwareRouting.FunctionMap {
                                      {PNR_5_21 TimingAwareRouting}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckSiAwareRouting.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckSiAwareRouting.FunctionMap {
                                      {PNR_5_22 SiAwareRouting}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckCellUtilization.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckCellUtilization.FunctionMap {
                                      {PNR_5_24 CellUtilization}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckDrc.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckDrc.FunctionMap {
                                      {PNR_5_25 Drc}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckSpareCells.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckSpareCells.FunctionMap {
                                      {PNR_5_26 SpareCells}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckHoldTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckHoldTiming.FunctionMap {
                                      {PNR_5_27 HoldFixEnabled}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckHoldBuffersCount.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckHoldBuffersCount.FunctionMap {
                                      {PNR_5_28 HoldBuffersCount}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckSPGRouting.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckSPGRouting.FunctionMap {
                                      {PNR_5_30 VerifySPGOpens}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckPGRedundantVia.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckPGRedundantVia.FunctionMap {
                                      {PNR_5_31 PGRedundantViaPercentage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckBoundaryRouteBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckBoundaryRouteBlockage.FunctionMap {
                                      {PNR_5_32 VerifyBoundaryRouteBlockage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckIONetsRC.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckIONetsRC.FunctionMap {
                                      {PNR_5_33 IONetsRC}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckIOPortsBuffer.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckIOPortsBuffer.FunctionMap {
                                      {PNR_5_34 IOPortsBuffer}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckIOBufferDistance.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckIOBufferDistance.FunctionMap {
                                      {PNR_5_35 IOBufferDistance}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckIONetLength.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckIONetLength.FunctionMap {
                                      {PNR_5_36 IONetLength}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckIOTimingSlack.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckIOTimingSlack.FunctionMap {
                                      {PNR_5_37 VerifyIOTimingSlack}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckIOBufferPushdown.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckIOBufferPushdown.FunctionMap {
                                      {PNR_5_38 IOBufferPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckLog.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckLog.FunctionMap {
                                      {PNR_SOC_5_1 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckPlacement.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckPlacement.FunctionMap {
                                      {PNR_SOC_5_6 PlacementVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckDesign.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckDesign.FunctionMap {
                                      {PNR_SOC_5_7 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckTimingConstraint.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckTimingConstraint.FunctionMap {
                                      {PNR_SOC_5_8 Warn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckPDConn.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckPDConn.FunctionMap {
                                      {PNR_SOC_5_10 VerifyInstPGConn}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckPDLibBind.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckPDLibBind.FunctionMap {
                                      {PNR_SOC_5_11 VerifyLibBinding}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckPDMissingIso.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckPDMissingIso.FunctionMap {
                                      {PNR_SOC_5_12 VerifyMissingIsoOnNets}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckDontUseCells.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckDontUseCells.FunctionMap {
                                      {PNR_SOC_5_16 DontUseCellViols}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.route.CheckAntennaSubSystemLEF.Enable {False}                                                          {Flag to enable checker or not}
bbset pnr.config.CIA.route.CheckAntennaSubSystemLEF.FunctionMap {
                                      {PNR_SOC_5_17 VerifyAntennaSubSystemLEF}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.routeopt.CheckCongestion.Enable {[bbget .pnr.config.CIA.route.CheckCongestion.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckCongestion.FunctionMap {[bbget .pnr.config.CIA.route.CheckCongestion.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckClockShield.Enable {[bbget .pnr.config.CIA.route.CheckClockShield.Enable]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckClockShield.FunctionMap {[bbget .pnr.config.CIA.route.CheckClockShield.FunctionMap]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckBarVias.Enable {[bbget .pnr.config.CIA.route.CheckBarVias.Enable]}              {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckBarVias.FunctionMap {[bbget .pnr.config.CIA.route.CheckBarVias.FunctionMap]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckConnectivity.Enable {[bbget .pnr.config.CIA.route.CheckConnectivity.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckConnectivity.FunctionMap {[bbget .pnr.config.CIA.route.CheckConnectivity.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDRCcounts.Enable {[bbget .pnr.config.CIA.route.CheckDRCcounts.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDRCcounts.FunctionMap {[bbget .pnr.config.CIA.route.CheckDRCcounts.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckTimeDesign.Enable {[bbget .pnr.config.CIA.route.CheckTimeDesign.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckTimeDesign.FunctionMap {[bbget .pnr.config.CIA.route.CheckTimeDesign.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckWireLength.Enable {[bbget .pnr.config.CIA.route.CheckWireLength.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckWireLength.FunctionMap {[bbget .pnr.config.CIA.route.CheckWireLength.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckClockSI.Enable {[bbget .pnr.config.CIA.route.CheckClockSI.Enable]}              {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckClockSI.FunctionMap {[bbget .pnr.config.CIA.route.CheckClockSI.FunctionMap]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckScanTrace.Enable {[bbget .pnr.config.CIA.route.CheckScanTrace.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckScanTrace.FunctionMap {[bbget .pnr.config.CIA.route.CheckScanTrace.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckRouteRedundantVia.Enable {[bbget .pnr.config.CIA.route.CheckRouteRedundantVia.Enable]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckRouteRedundantVia.FunctionMap {[bbget .pnr.config.CIA.route.CheckRouteRedundantVia.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDRVViolations.Enable {[bbget .pnr.config.CIA.route.CheckDRVViolations.Enable]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDRVViolations.FunctionMap {[bbget .pnr.config.CIA.route.CheckDRVViolations.FunctionMap]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckVTPercentage.Enable {[bbget .pnr.config.CIA.route.CheckVTPercentage.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckVTPercentage.FunctionMap {[bbget .pnr.config.CIA.route.CheckVTPercentage.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckAntenna.Enable {[bbget .pnr.config.CIA.route.CheckAntenna.Enable]}              {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckAntenna.FunctionMap {[bbget .pnr.config.CIA.route.CheckAntenna.FunctionMap]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckViaPillarTiming.Enable {[bbget .pnr.config.CIA.route.CheckViaPillarTiming.Enable]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckViaPillarTiming.FunctionMap {[bbget .pnr.config.CIA.route.CheckViaPillarTiming.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckTimingAwareRouting.Enable {[bbget .pnr.config.CIA.route.CheckTimingAwareRouting.Enable]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckTimingAwareRouting.FunctionMap {[bbget .pnr.config.CIA.route.CheckTimingAwareRouting.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckSiAwareRouting.Enable {[bbget .pnr.config.CIA.route.CheckSiAwareRouting.Enable]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckSiAwareRouting.FunctionMap {[bbget .pnr.config.CIA.route.CheckSiAwareRouting.FunctionMap]}  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckCellUtilization.Enable {[bbget .pnr.config.CIA.route.CheckCellUtilization.Enable]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckCellUtilization.FunctionMap {[bbget .pnr.config.CIA.route.CheckCellUtilization.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDrc.Enable {[bbget .pnr.config.CIA.route.CheckDrc.Enable]}                  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDrc.FunctionMap {[bbget .pnr.config.CIA.route.CheckDrc.FunctionMap]}             {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckSpareCells.Enable {[bbget .pnr.config.CIA.route.CheckSpareCells.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckSpareCells.FunctionMap {[bbget .pnr.config.CIA.route.CheckSpareCells.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckHoldTiming.Enable {[bbget .pnr.config.CIA.route.CheckHoldTiming.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckHoldTiming.FunctionMap {[bbget .pnr.config.CIA.route.CheckHoldTiming.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckHoldBuffersCount.Enable {[bbget .pnr.config.CIA.route.CheckHoldBuffersCount.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckHoldBuffersCount.FunctionMap {[bbget .pnr.config.CIA.route.CheckHoldBuffersCount.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckSPGRouting.Enable {[bbget .pnr.config.CIA.route.CheckSPGRouting.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckSPGRouting.FunctionMap {[bbget .pnr.config.CIA.route.CheckSPGRouting.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPGRedundantVia.Enable {[bbget .pnr.config.CIA.route.CheckPGRedundantVia.Enable]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPGRedundantVia.FunctionMap {[bbget .pnr.config.CIA.route.CheckPGRedundantVia.FunctionMap]}  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckBoundaryRouteBlockage.Enable {[bbget .pnr.config.CIA.route.CheckBoundaryRouteBlockage.Enable]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckBoundaryRouteBlockage.FunctionMap {[bbget .pnr.config.CIA.route.CheckBoundaryRouteBlockage.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIONetsRC.Enable {[bbget .pnr.config.CIA.route.CheckIONetsRC.Enable]}             {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIONetsRC.FunctionMap {[bbget .pnr.config.CIA.route.CheckIONetsRC.FunctionMap]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOPortsBuffer.Enable {[bbget .pnr.config.CIA.route.CheckIOPortsBuffer.Enable]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOPortsBuffer.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOPortsBuffer.FunctionMap]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOBufferDistance.Enable {[bbget .pnr.config.CIA.route.CheckIOBufferDistance.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOBufferDistance.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOBufferDistance.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIONetLength.Enable {[bbget .pnr.config.CIA.route.CheckIONetLength.Enable]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIONetLength.FunctionMap {[bbget .pnr.config.CIA.route.CheckIONetLength.FunctionMap]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOTimingSlack.Enable {[bbget .pnr.config.CIA.route.CheckIOTimingSlack.Enable]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOTimingSlack.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOTimingSlack.FunctionMap]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOBufferPushdown.Enable {[bbget .pnr.config.CIA.route.CheckIOBufferPushdown.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckIOBufferPushdown.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOBufferPushdown.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckLog.Enable {[bbget .pnr.config.CIA.route.CheckLog.Enable]}                  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckLog.FunctionMap {[bbget .pnr.config.CIA.route.CheckLog.FunctionMap]}             {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPlacement.Enable {[bbget .pnr.config.CIA.route.CheckPlacement.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPlacement.FunctionMap {[bbget .pnr.config.CIA.route.CheckPlacement.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDesign.Enable {[bbget .pnr.config.CIA.route.CheckDesign.Enable]}               {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDesign.FunctionMap {[bbget .pnr.config.CIA.route.CheckDesign.FunctionMap]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckTimingConstraint.Enable {[bbget .pnr.config.CIA.route.CheckTimingConstraint.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckTimingConstraint.FunctionMap {[bbget .pnr.config.CIA.route.CheckTimingConstraint.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPDConn.Enable {[bbget .pnr.config.CIA.route.CheckPDConn.Enable]}               {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPDConn.FunctionMap {[bbget .pnr.config.CIA.route.CheckPDConn.FunctionMap]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPDLibBind.Enable {[bbget .pnr.config.CIA.route.CheckPDLibBind.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPDLibBind.FunctionMap {[bbget .pnr.config.CIA.route.CheckPDLibBind.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPDMissingIso.Enable {[bbget .pnr.config.CIA.route.CheckPDMissingIso.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckPDMissingIso.FunctionMap {[bbget .pnr.config.CIA.route.CheckPDMissingIso.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDontUseCells.Enable {[bbget .pnr.config.CIA.route.CheckDontUseCells.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckDontUseCells.FunctionMap {[bbget .pnr.config.CIA.route.CheckDontUseCells.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckAntennaSubSystemLEF.Enable {[bbget .pnr.config.CIA.route.CheckAntennaSubSystemLEF.Enable]}  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeopt.CheckAntennaSubSystemLEF.FunctionMap {[bbget .pnr.config.CIA.route.CheckAntennaSubSystemLEF.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeopt"}
bbset pnr.config.CIA.routeoptdesign.CheckCongestion.Enable {[bbget .pnr.config.CIA.route.CheckCongestion.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckCongestion.FunctionMap {[bbget .pnr.config.CIA.route.CheckCongestion.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckClockShield.Enable {[bbget .pnr.config.CIA.route.CheckClockShield.Enable]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckClockShield.FunctionMap {[bbget .pnr.config.CIA.route.CheckClockShield.FunctionMap]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckBarVias.Enable {[bbget .pnr.config.CIA.route.CheckBarVias.Enable]}              {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckBarVias.FunctionMap {[bbget .pnr.config.CIA.route.CheckBarVias.FunctionMap]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckConnectivity.Enable {[bbget .pnr.config.CIA.route.CheckConnectivity.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckConnectivity.FunctionMap {[bbget .pnr.config.CIA.route.CheckConnectivity.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDRCcounts.Enable {[bbget .pnr.config.CIA.route.CheckDRCcounts.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDRCcounts.FunctionMap {[bbget .pnr.config.CIA.route.CheckDRCcounts.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckTimeDesign.Enable {[bbget .pnr.config.CIA.route.CheckTimeDesign.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckTimeDesign.FunctionMap {[bbget .pnr.config.CIA.route.CheckTimeDesign.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckWireLength.Enable {[bbget .pnr.config.CIA.route.CheckWireLength.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckWireLength.FunctionMap {[bbget .pnr.config.CIA.route.CheckWireLength.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckClockSI.Enable {[bbget .pnr.config.CIA.route.CheckClockSI.Enable]}              {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckClockSI.FunctionMap {[bbget .pnr.config.CIA.route.CheckClockSI.FunctionMap]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckScanTrace.Enable {[bbget .pnr.config.CIA.route.CheckScanTrace.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckScanTrace.FunctionMap {[bbget .pnr.config.CIA.route.CheckScanTrace.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckRouteRedundantVia.Enable {[bbget .pnr.config.CIA.route.CheckRouteRedundantVia.Enable]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckRouteRedundantVia.FunctionMap {[bbget .pnr.config.CIA.route.CheckRouteRedundantVia.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDRVViolations.Enable {[bbget .pnr.config.CIA.route.CheckDRVViolations.Enable]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDRVViolations.FunctionMap {[bbget .pnr.config.CIA.route.CheckDRVViolations.FunctionMap]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckVTPercentage.Enable {[bbget .pnr.config.CIA.route.CheckVTPercentage.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckVTPercentage.FunctionMap {[bbget .pnr.config.CIA.route.CheckVTPercentage.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckAntenna.Enable {[bbget .pnr.config.CIA.route.CheckAntenna.Enable]}              {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckAntenna.FunctionMap {[bbget .pnr.config.CIA.route.CheckAntenna.FunctionMap]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckViaPillarTiming.Enable {[bbget .pnr.config.CIA.route.CheckViaPillarTiming.Enable]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckViaPillarTiming.FunctionMap {[bbget .pnr.config.CIA.route.CheckViaPillarTiming.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckTimingAwareRouting.Enable {[bbget .pnr.config.CIA.route.CheckTimingAwareRouting.Enable]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckTimingAwareRouting.FunctionMap {[bbget .pnr.config.CIA.route.CheckTimingAwareRouting.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckSiAwareRouting.Enable {[bbget .pnr.config.CIA.route.CheckSiAwareRouting.Enable]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckSiAwareRouting.FunctionMap {[bbget .pnr.config.CIA.route.CheckSiAwareRouting.FunctionMap]}  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckCellUtilization.Enable {[bbget .pnr.config.CIA.route.CheckCellUtilization.Enable]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckCellUtilization.FunctionMap {[bbget .pnr.config.CIA.route.CheckCellUtilization.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDrc.Enable {[bbget .pnr.config.CIA.route.CheckDrc.Enable]}                  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDrc.FunctionMap {[bbget .pnr.config.CIA.route.CheckDrc.FunctionMap]}             {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckSpareCells.Enable {[bbget .pnr.config.CIA.route.CheckSpareCells.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckSpareCells.FunctionMap {[bbget .pnr.config.CIA.route.CheckSpareCells.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckHoldTiming.Enable {[bbget .pnr.config.CIA.route.CheckHoldTiming.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckHoldTiming.FunctionMap {[bbget .pnr.config.CIA.route.CheckHoldTiming.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckHoldBuffersCount.Enable {[bbget .pnr.config.CIA.route.CheckHoldBuffersCount.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckHoldBuffersCount.FunctionMap {[bbget .pnr.config.CIA.route.CheckHoldBuffersCount.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckSPGRouting.Enable {[bbget .pnr.config.CIA.route.CheckSPGRouting.Enable]}           {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckSPGRouting.FunctionMap {[bbget .pnr.config.CIA.route.CheckSPGRouting.FunctionMap]}      {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPGRedundantVia.Enable {[bbget .pnr.config.CIA.route.CheckPGRedundantVia.Enable]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPGRedundantVia.FunctionMap {[bbget .pnr.config.CIA.route.CheckPGRedundantVia.FunctionMap]}  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckBoundaryRouteBlockage.Enable {[bbget .pnr.config.CIA.route.CheckBoundaryRouteBlockage.Enable]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckBoundaryRouteBlockage.FunctionMap {[bbget .pnr.config.CIA.route.CheckBoundaryRouteBlockage.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIONetsRC.Enable {[bbget .pnr.config.CIA.route.CheckIONetsRC.Enable]}             {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIONetsRC.FunctionMap {[bbget .pnr.config.CIA.route.CheckIONetsRC.FunctionMap]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOPortsBuffer.Enable {[bbget .pnr.config.CIA.route.CheckIOPortsBuffer.Enable]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOPortsBuffer.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOPortsBuffer.FunctionMap]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOBufferDistance.Enable {[bbget .pnr.config.CIA.route.CheckIOBufferDistance.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOBufferDistance.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOBufferDistance.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIONetLength.Enable {[bbget .pnr.config.CIA.route.CheckIONetLength.Enable]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIONetLength.FunctionMap {[bbget .pnr.config.CIA.route.CheckIONetLength.FunctionMap]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOTimingSlack.Enable {[bbget .pnr.config.CIA.route.CheckIOTimingSlack.Enable]}        {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOTimingSlack.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOTimingSlack.FunctionMap]}   {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOBufferPushdown.Enable {[bbget .pnr.config.CIA.route.CheckIOBufferPushdown.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckIOBufferPushdown.FunctionMap {[bbget .pnr.config.CIA.route.CheckIOBufferPushdown.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckLog.Enable {[bbget .pnr.config.CIA.route.CheckLog.Enable]}                  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckLog.FunctionMap {[bbget .pnr.config.CIA.route.CheckLog.FunctionMap]}             {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPlacement.Enable {[bbget .pnr.config.CIA.route.CheckPlacement.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPlacement.FunctionMap {[bbget .pnr.config.CIA.route.CheckPlacement.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDesign.Enable {[bbget .pnr.config.CIA.route.CheckDesign.Enable]}               {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDesign.FunctionMap {[bbget .pnr.config.CIA.route.CheckDesign.FunctionMap]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckTimingConstraint.Enable {[bbget .pnr.config.CIA.route.CheckTimingConstraint.Enable]}     {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckTimingConstraint.FunctionMap {[bbget .pnr.config.CIA.route.CheckTimingConstraint.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPDConn.Enable {[bbget .pnr.config.CIA.route.CheckPDConn.Enable]}               {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPDConn.FunctionMap {[bbget .pnr.config.CIA.route.CheckPDConn.FunctionMap]}          {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPDLibBind.Enable {[bbget .pnr.config.CIA.route.CheckPDLibBind.Enable]}            {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPDLibBind.FunctionMap {[bbget .pnr.config.CIA.route.CheckPDLibBind.FunctionMap]}       {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPDMissingIso.Enable {[bbget .pnr.config.CIA.route.CheckPDMissingIso.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckPDMissingIso.FunctionMap {[bbget .pnr.config.CIA.route.CheckPDMissingIso.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDontUseCells.Enable {[bbget .pnr.config.CIA.route.CheckDontUseCells.Enable]}         {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckDontUseCells.FunctionMap {[bbget .pnr.config.CIA.route.CheckDontUseCells.FunctionMap]}    {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckAntennaSubSystemLEF.Enable {[bbget .pnr.config.CIA.route.CheckAntennaSubSystemLEF.Enable]}  {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.routeoptdesign.CheckAntennaSubSystemLEF.FunctionMap {[bbget .pnr.config.CIA.route.CheckAntennaSubSystemLEF.FunctionMap]} {clone by bbnsclone -from "route" -to ".pnr.config.CIA.routeoptdesign"}
bbset pnr.config.CIA.chipfinish.CheckWaterMark.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckWaterMark.FunctionMap {
                                      {PNR_6_3 WatermarkTag}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckVTCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckVTCell.FunctionMap {
                                      {PNR_6_4 VTCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckDecapCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckDecapCell.FunctionMap {
                                      {PNR_6_5 DecapCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckStapleVia.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckStapleVia.FunctionMap {
                                      {PNR_6_6 StapleVia}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckPlacement.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckPlacement.FunctionMap {
                                      {PNR_6_7 PlacementVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckTapCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckTapCell.FunctionMap {
                                      {PNR_6_8 CheckTap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckEndcapCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckEndcapCell.FunctionMap {
                                      {PNR_6_9 CheckEndcap}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckBoundaryRoutingBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckBoundaryRoutingBlockage.FunctionMap {
                                      {PNR_6_39 BoundaryRoutingBlockage }
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckConnectivity.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckConnectivity.FunctionMap {
                                      {PNR_6_10 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckPGConnectivity.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckPGConnectivity.FunctionMap {
                                      {PNR_6_11 OpenShort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckPGRing.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckPGRing.FunctionMap {
                                      {PNR_6_35 CheckPGRing}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckIOBufferPushdown.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckIOBufferPushdown.FunctionMap {
                                      {PNR_6_36 IOBufferPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckAntenna.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckAntenna.FunctionMap {
                                      {PNR_6_12 AntennaVioCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckDrc.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckDrc.FunctionMap {
                                      {PNR_6_13 Drc}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckLogoCell.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckLogoCell.FunctionMap {
                                      {PNR_6_14 VerifyLogoCell}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckBoundaryRouteBlockage.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckBoundaryRouteBlockage.FunctionMap {
                                      {PNR_6_15 VerifyBoundaryRouteBlockage}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckIOPortsBuffer.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckIOPortsBuffer.FunctionMap {
                                      {PNR_6_16 IOPortsBuffer}
                                      } {define 1:1 mapping for check_id and function. check_io_ports_buffer}
bbset pnr.config.CIA.chipfinish.CheckIOBufferDistance.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckIOBufferDistance.FunctionMap {
                                      {PNR_6_17 IOBufferDistance}
                                      } {define 1:1 mapping for check_id and function. check_io_buffer_distance}
bbset pnr.config.CIA.chipfinish.CheckIONetLength.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckIONetLength.FunctionMap {
                                      {PNR_6_18 IONetLength}
                                      } {define 1:1 mapping for check_id and function. check_io_net_length}
bbset pnr.config.CIA.chipfinish.CheckUPF.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckUPF.FunctionMap {
                                      {PNR_6_19 VerifyNoSetScope}
                                      {PNR_6_23 VerifyNoSupplyPortForInternalPowerPin}
                                      } {define 1:1 mapping for check_id and function. check_upf}
bbset pnr.config.CIA.chipfinish.CheckLEF.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckLEF.FunctionMap {
                                      {PNR_6_20 VerifyNoPinForInternalPowerPin}
                                      {PNR_6_21 VerifyPinGeometry}
                                      {PNR_6_22 VerifyPinAntennaForNonPGPin}
                                      {PNR_6_34 VerifyPinRDLLayer}
                                      {PNR_6_37 VerifyOBSCount}
                                      } {define 1:1 mapping for check_id and function. check_lef}
bbset pnr.config.CIA.chipfinish.CheckNetlist.Enable {True}                                                           {Flag to enable checker or not. }
bbset pnr.config.CIA.chipfinish.CheckNetlist.FunctionMap {
                                      {PNR_6_24 VerifyNoAssignStatement}
                                      } {define 1:1 mapping for check_id and function. check_netlist}
bbset pnr.config.CIA.chipfinish.CheckFloorplanPushdown.Enable {True}                                                           {Flag to enable checker or not.}
bbset pnr.config.CIA.chipfinish.CheckFloorplanPushdown.FunctionMap {
                                      {PNR_6_25 VerifyFloorplanPushdown}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckVerilogLefPort.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckVerilogLefPort.FunctionMap {
                                      {PNR_6_26 VerifyVerilogLefPort}
                                      } {define 1:1 mapping for check_id and function}
bbset pnr.config.CIA.chipfinish.CheckIONetsRC.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckIONetsRC.FunctionMap {
                                      {PNR_6_27 IONetsRC}
                                      } {define 1:1 mapping for check_id and function. check_io_nets_rc}
bbset pnr.config.CIA.chipfinish.CheckIOTimingSlack.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckIOTimingSlack.FunctionMap {
                                      {PNR_6_28 VerifyIOTimingSlack}
                                      } {define 1:1 mapping for check_id and function. check_io_timing_slack}
bbset pnr.config.CIA.chipfinish.CheckPGAlignment.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckPGAlignment.FunctionMap {
                                      {PNR_6_29 PGAlignment}
                                      } {define 1:1 mapping for check_id and function. check_pg_alignment}
bbset pnr.config.CIA.chipfinish.CheckGspanInputClockLatency.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckGspanInputClockLatency.FunctionMap {
                                      {PNR_6_30 GspanInputClockLatency}
                                      } {define 1:1 mapping for check_id and function. check_gspan_input_clock_latency}
bbset pnr.config.CIA.chipfinish.CheckGspanOutputClockTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckGspanOutputClockTiming.FunctionMap {
                                      {PNR_6_31 GspanOutputClockLatency}
                                      {PNR_6_32 GspanOutputClockCrosstalk}
                                      } {define 1:1 mapping for check_id and function. check_gspan_output_clock_timing}
bbset pnr.config.CIA.chipfinish.CheckPDOverlap.Enable {True}                                                           {Flag to enable checker or not}
bbset pnr.config.CIA.chipfinish.CheckPDOverlap.FunctionMap {
                                      {PNR_6_33 PDOverlap}
                                      } {define 1:1 mapping for check_id and function. check_pd_overlap}
bbset sod.Tool                       {innovus}                                                        {PNR/SOD Tool Name}
bbset pnr.fc.ECOConsumptionPreProcessCallback {
    set i 1
    foreach_in_collection CEL [get_flat_cells * -filter "is_power_switch"] {
        create_placement_blockage -name "TMP_SNPS_CSW_blk_${i}" -type hard -boundary [resize_polygons [get_attr $CEL boundary] -size {0 0.117}]
        incr i
    }
} {# No Comment}  
bbset pnr.innovus.SignoffOptFinalPreProcessCallback {

            setSignoffOptMode -fixMaxTran  false -fixMaxCap  false -fixClockDrv  false  -fixDataDrv false
           # setNanoRouteMode  -drouteAutoStop  true
           # setNanoRouteMode -drouteEndIteration 10

        } {# No Comment}  
bbset syn.Stages                     {libgen elaborate synth setup floorplan synthopt testpoint synthdft synthdftopt} {Synthesis flow stages}
bbset syn.Tool                       {fc}                                                             {Synthesis tool name}
bbset syn.WriteDBTCL                 {0}                                                              {Dump the db.tcl while saving design}
bbset syn.LoadPrvsStageDBTCl         {0}                                                              {Load previous stage db.tcl file as well while restoring the design}
bbset syn.LicenseWaitTime            {360}                                                            {License wait time in minutes}
bbset syn.EnableCompus               {1}                                                              {Enable/disable compus flow}
bbset syn.TempDir                    {}                                                               {Optional temp directory path to work around default TMP_DIR issues}
bbset syn.EnablePhysicalSynthesis    {0}                                                              {Enable/disable Physical synthesis}
bbset syn.SynthOptEffort             {extreme}                                                        {Effort for synthesis optimisation}
bbset syn.SynthGenEffort             {medium}                                                         {Effort for syn_gen stage}
bbset syn.SynthIspatialEffort        {extreme}                                                        {Synth Ispatial Effort}
bbset syn.SynthMapEffort             {high}                                                           {Effort for syn_map stage}
bbset syn.TotalPowerOptimizationEffort {leakage}                                                        {Effort for FC power optimization (standard|high|ultra|none|leakage)}
bbset syn.EnableMBFFFlow             {1}                                                              {Enable/disable mbff flow}
bbset syn.CreateAbstractILM          {False}                                                          {create abstract ilm}
bbset syn.Cores                      {32}                                                             {Cores for each stage}
bbset syn.RAM                        {128000}                                                         {RAM for each run}
bbset syn.Resources                  {}                                                               {NC resources}  
bbset syn.ExportCores                {16}                                                             {Cores for each stage}
bbset syn.ExportRAM                  {128000}                                                         {RAM for each run}
bbset syn.ExportResources            {}                                                               {NC Resources}  
bbset syn.PrimePowerFsdb             {}                                                               {set FSDB in {{fsdb1 strippath1 {start_window end_window}} {fsdbn strippathn {start_windown end_windown}}} in this format}
bbset syn.XReplayPreTCL              {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/pre_xreplay.tcl} {# No Comment}  
bbset syn.EnableXReplayFlow          {false}                                                          {Enable Xreplay activity aware flow}
bbset syn.VerilogModelFile           {../elaborate/outs/vlg.list}                                     {Std cell verilog file for Xreplay activity aware flow}
bbset syn.EnableRealHandling         {false}                                                          {Eanble real support}
bbset syn.EnableMultiplierOpt        {false}                                                          {Enable group of settings that optimize multiplier implementation}
bbset syn.EnableLiteElab             {False}                                                          {Enable Lite wait elab for RPG-release}
bbset syn.ElabLiteScript             {[bbget .info.PD_TOOLS_DIR ]/sif/tcl/genus/elaborate_lite.tcl}   {Elab-lite script}
bbset syn.StdLibraryFileInclude      {.*bwph130.*l3p48cpd.*}                                          {use to include standard cell libraries match this regexp}
bbset syn.StdLibraryFileExclude      {}                                                               { use to exclude libraries match this regep}
bbset syn.MacroLibraryFileInclude    {ts1n02pmblvtb4096x32m8twzhodxcp|ts6n02psvtb64x132m1bzhocp|ts6n02psvta512x128m2sbzhocp|ts6n02psvta144x128m2sbzhocp|ts6n02psvta200x128m2sbzhocp|ts1n02pmbsvta4096x16m4qbzhocp|ts1n02psbsvta512x118m2bzhocp|ts6n02psvtb512x128m2bzhocp|ts6n02psvtb256x132m1bzhocp|ts6n02psvtb64x180m1bzhocp|ts3n02psvta16384x16m16bzo_hsios_mphy_rom|ts3n02psvta4096x16m16bzo_hsios_mphy_rom|dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns|ts6n02psvtb256x264m1bzhocp|ts6n02psvtb64x264m1bzhocp|ts1n02pmbsvta16384x16m16qbzhocp|ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom|ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom|tphn02p_075od12gpio.*|fiducial.*|ts6n02psvta256x256m1sbzhocp|ts6n02psvta32x256m1sbzhocp|ts6n02psvta80x256m1sbzhocp|ts6n02psvtb256x256m1bzhocp|ts6n02psvtb32x264m1bzhocp} {Exclude all macros till we get a memory compiler}
bbset syn.MacroLibraryFileExclude    {}                                                               {use to exclude macro libraries match this regep}
bbset syn.TargetSkewOverrides        {}                                                               {Target skew overrides for each corners Format:{corner1 { skewgrp1 value1 skewgrp2 value2} }}
bbset syn.Experiments                {}                                                               {To execute parallel experiments}
bbset syn.NonMMMCRun                 {False}                                                          {Source view settings based on this For Non mmmc run set this to 1}
bbset syn.IncrementalSDC             {}                                                               {Reading incremental sdc at each stage to control uncertainity}
bbset syn.ReportTimingSplitMaxPaths  {100}                                                            {Split timing reports}
bbset syn.EnableSelfGating           {0}                                                              {In FC enable self gating}
bbset syn.EnableAggresiveSelfGating  {0}                                                              {In FC enable enable aggressive self gating}
bbset syn.PreventSelfGatingOnShiftRegs {0}                                                              {In FC to disable self gate logic insertion on shift registers based on coverage impact wrt power benefits}
bbset syn.OverrideNdr                {true}                                                           {In FC overrride NDR}
bbset syn.EnableWaterMarkInsertion   {true}                                                           {Enable watermark cell insertion}
bbset syn.WatermarkRTLTag            {LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT}                           {RTL Tag name for watermark cell insertion}
bbset syn.WatermarkPushdownTag       {NoPDTag}                                                        {Pushdown Tag name for watermark cell insertion}
bbset syn.WatermarkCell              {TIELXNBWP130HPNPN3P48CPDLVT}                                    {Cell for watermark insertion}
bbset syn.EnableQRCTechMapReading    {True}                                                           {To enable/disable QrcTechMapFile reading}
bbset syn.WriteSPEFFile              {False}                                                          {To enable/disable Writing out spef file}
bbset syn.WriteLIBFile               {False}                                                          {To enable/disable Writing out lib file}
bbset syn.GeneratePowerAwareLIBFile  {False}                                                          {To enable/disable dumping power-aware attributes in lib file}
bbset syn.WriteIntermediateDB        {False}                                                          {True to save intermediate DB file}
bbset syn.EnableNotifications        {False}                                                          {Enable notifications for stage completion}
bbset syn.EnableUPFBraceFix          {True}                                                           {Workaround to convert double braces in UPF to single brace}
bbset syn.JoulesLaunchInitialWaitTime {100}                                                            {To set Joules launch wait time}
bbset syn.JoulesETFFiles             {}                                                               {Joules ETF File list provided by Cadence}
bbset syn.PreRunScripts              {}                                                               {Pre run scripts to intercept the run before main flow execution}
bbset syn.PostRunScripts             {}                                                               {Post run scripts to intercept the run after main flow execution}
bbset syn.PreExportRunScripts        {}                                                               {Pre export run scripts to intercept the run before export flow execution}
bbset syn.PostExportRunScripts       {}                                                               {Post export run scripts to intercept the run after export flow execution}
bbset syn.PreserveMainCallbacks      {0}                                                              {Preserve the main callbacks defined in the flow}
bbset syn.EnablePOCVSlewVariation    {false}                                                          {Enable POCV slew variation}
bbset syn.EnablePOCVConstraintVariation {false}                                                          {Enable POCV constraint variation}
bbset syn.EnableMultiClockGating     {false}                                                          {Enable Multi level Clock Gating}
bbset syn.EnableSequentialClockGating {false}                                                          {Enable Sequential Clock Gating}
bbset syn.EnableGenerateRows         {false}                                                          {To generate rows if not present in DEF}
bbset syn.WriteInnovusDB             {true}                                                           {To enable dumping out innovus enc database}
bbset syn.EnableSocv                 {false}                                                          {To enable socv in Genus}
bbset syn.EnableSeqBoundaryOpt       {false}                                                          {To enable sequential boundary optimisation}
bbset syn.EnableECGHierCG            {True}                                                           {To enalbe Early clock gating}
bbset syn.EnableHierClockGating      {False}                                                          {To eable Hier clock gating}
bbset syn.EnableMultiStageClockGating {False}                                                          {To eable Multi Stage clock gating}
bbset syn.MSCGETF                    {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/compus/mcg.etf} {ETF for Multi stage clock gating}
bbset syn.EnableDynamicPincap        {false}                                                          {To enable dynamic pin cap modeling}
bbset syn.DumpUserMetricsCSV         {true}                                                           {dump a csv with key user metrics}
bbset syn.EnableDRVConstraint        {1}                                                              {Enable DRV constraint application}
bbset syn.EnableVTDerates            {[bbget .sta.config.derate.LocalVoltageVariation.enable]}        {Enable voltage/temperature based derating}
bbset syn.EnableDelayBufferHoldPenalty {[bbget .sta.config.setup_margin.DelayBufferHoldPenalty.enable]} {Enable extra delay buffer hold penalty}
bbset syn.EnableVtMisMatchDerates    {[bbget .sta.config.derate.VtMismatch.enable]}                   {Enable vt mismatch derating}
bbset syn.EnableAddlVtMisMatchDerates {[bbget .sta.config.derate.AddlVtMismatch.enable]}               {Enable additional vt mismatch derating}
bbset syn.EnableOdMisMatchDerates    {[bbget .sta.config.derate.ODMismatch.enable]}                   {Enable od mismatch derating}
bbset syn.EnableCustomMacroMargin    {[bbget .sta.config.custom_macro_margin.enable]}                 {Enable Custom macro margin}
bbset syn.EnableAgingDerates         {[bbget .sta.config.derate.Aging.enable]}                        {Enable aging derating}
bbset syn.EnableMemAgingDerates      {[bbget .sta.config.derate.Aging.Mem.enable]}                    {Enable memory aging derating}
bbset syn.EnableNetDerates           {[bbget .sta.config.wire_ocv.enable]}                            {Enable net derates}
bbset syn.EnableShiftTemperatureDerates {[bbget .sta.config.derate.ShiftTemperature.enable]}             {Enable shift temperature derating}
bbset syn.EnableFoundryProcessDerates {[bbget .sta.config.derate.foundry_process_addl_derate.enable]}  {Enable foundry process derating for std cells}
bbset syn.EnableFoundryExtraDerates  {[bbget .sta.config.custom_macro_margin.foundry_extra_margin.enable]} {Enable foundry process extra derating}
bbset syn.EnableFoundryProcessMemDerates {[bbget .sta.config.derate.foundry_process_addl_derate.mem.enable]} {Enable foundry process derating for memories}
bbset syn.EnableIllegalCellDerates   {[bbget .sta.config.illegal_cell_margins.enable]}                {Enable cell derate for illegal cell group}
bbset syn.SoftAlowEEQCElls           {true}                                                           {Clock gating cell list}
bbset syn.CellStatsExp               {(.*?)D(\[0-9P\]+?)BWP(.*?)(P\[48|54\]+)CPD(.*?)$}               {Regular expression for generating the cell stats}
bbset syn.CellStatsList              {function drive cell_height polypitch cell_vt}                   {List of cell stats to be extracted from the cell stats expression}
bbset syn.DontUseCellListFiles       {}                                                               {GLobal dont use cell list}
bbset syn.NDMCountHardCheck          {0}                                                              {If Enabled, then ndms generated are counted against total count in lef.list and if no match then run is killed}
bbset syn.EnableGKCNode              {0}                                                              {bool: set it to 1 to enable GKC in synthdft stage}
bbset syn.GkcRunBy                   {pd}                                                             {Indicates GkcRunBy pd or dft}
bbset syn.EnablePreSynthdftNode      {0}                                                              {bool: Enable separate collateral check}
bbset syn.subblock.Lefs              {[bbfiles -bundles chipfinish -filetype lef -purpose signoff -hierarchy -subblocks all]} {List of subblock lef files that feed into ExtraLibs feature}
bbset syn.subblock.Libs              {[bbfiles -bundles chipfinish -filetype lib -subblocks all]}     {List of subblock lib files that feed into ExtraLibs feature}
bbset syn.ExtraLibs.Enable           {True}                                                           {# enable the extra-lib function for PNR subblocks}
bbset syn.ExtraLibs.bbquery.ip.lef   {[bbget .syn.subblock.Lefs]}                                     {# lef for subblock. Getten from .syn.subblock.Lefs by default}
bbset syn.ExtraLibs.bbquery.ip.ccs_lib {[bbget .syn.subblock.Libs]}                                     {# ccs_lib for subblock. Getten from .syn.subblock.Libs by default}
bbset syn.holdmargin.UncertaintyTableName {[bbget .sta.config.additional_hold_margin.UncertaintyTableName]} {# provide one of the table name in .sta.config.additional_hold_margin.Uncertainty, or leave empty to get default table}
bbset syn.holdmargin.Uncertainty.Value {[bbget ".sta.config.additional_hold_margin.[bbget .pnr.holdmargin.UncertaintyTableName].Uncertainty" -traverse 1]} {# Hold margin scenario pattern and value list. Align STA format. go/rdo-timing-signoff}
bbset syn.holdmargin.custom_macro_margin.HoldUncertaintyRatio {[bbget .sta.config.custom_macro_margin.HoldUncertaintyRatio]}   {# Add extra hold uncertainty on custom macros's clock pin, multiply hold_uncertainty_ratio with original hold uncertainty}
bbset syn.holdmargin.FlowSettingMethod {[bbget .sta.config.additional_hold_margin.FlowSettingMethod]}   {# value : var|csv}
bbset syn.holdmargin.UncertaintyTable {[bbget .sta.config.additional_hold_margin.UncertaintyTable]}    {# default table name for hold uncertainty}
bbset syn.holdmargin.CsvInput        {[bbget .sta.config.additional_hold_margin.CsvInput]}            {# CSV folder for hold uncertainty}
bbset syn.drv.ClockConstraintDenominator {[bbget .sta.config.drv_constraint.ClockConstraintDividedBy]}    {default clock slew constraint is T/6, which T is clock period}
bbset syn.drv.DataConstraintDenominator {[bbget .sta.config.drv_constraint.DataConstraintDividedBy]}     {default data  slew constraint is T/3, which T is clock period}
bbset syn.DerateScriptsSkipStages    {libgen}                                                         {Default: libgen. List of stages to skip createDerateScript. 'all' can be used to skip in all the stages}
bbset syn.DerateFiles                {./srcs/inputs/reduce_table.yaml}                                {Derate YAML files path from timing team}
bbset syn.DerateTCLFiles             {}                                                               {User defined IP Specific Derate TCL files}
bbset syn.DerateLibNameMappingFiles  {[bbget .pnr.DerateLibNameMappingFiles]}                         {Library name to vt_derate table lookup key mapping TCL files.}
bbset syn.DerateLibNameMappingLibs   {[bbget .sta.DerateLibNameMappingLibs]}                          {Lib files bbquery filtering pattern for generating library name to vt_derate_lookup key mapping dict}
bbset syn.derate.RevisableDerate     {temperature voltage aging}                                      {Derate that is revisable through revise derate process.}
bbset syn.derate.Value               {}                                                               {Global default derate value for revise derating across all the stages, corners, clock/data, cell_type and rise/fall}
bbset syn.derate.CheckPowerDomain    {1}                                                              {# No Comment}  
bbset syn.derate.vt_mismatch.dominate_vt.Value {ulvt}                                                           {PARTH : This is set to ultvll in existing vars, overriding this to ulvt}
bbset syn.derate.vt_mismatch.penalty.Value {[bbget .sta.config.derate.VtMismatch.Penalty]}                  {# additional increment derate on non-dominate vt cells. Default is from .sta.config.derate.VtMismatch.Penalty}
bbset syn.derate.vt_mismatch.DerateCsvInput {[bbget .sta.config.derate.VtMismatch.DerateCsvInput]}           {# No Comment}  
bbset syn.derate.od_mismatch.DerateCsvInput {[bbget .sta.config.derate.ODMismatch.DerateCsvInput]}           {# No Comment}  
bbset syn.derate.aging.StressCondition {[bbget .sta.config.derate.Aging.StressCondition]}               {# Stress condition selection, pf[\d+] or default, default=default}
bbset syn.derate.aging.MemStressCondition {[bbget .sta.config.derate.Aging.Mem.StressCondition]}           {# Stress condition selection, pf[\d+] or default, default=default}
bbset syn.derate.aging.MemApplyMapping {[bbget .sta.config.derate.Aging.Mem.ApplyMapping]}              {# applied derate mapping rules}
bbset syn.derate.aging.DerateCsvInput {[bbget .sta.config.derate.Aging.DerateCsvInput]}                {# No Comment}  
bbset syn.derate.shifttemperature.InputYaml {[bbget .sta.config.derate.ShiftTemperature.InputYaml]}          {# input reference temperature yaml}
bbset syn.derate.shifttemperature.BaseTemperature {[bbget .sta.config.derate.ShiftTemperature.BaseTemperature]}    {# base reference temperature derate source}
bbset syn.derate.shifttemperature.ToTemperature {[bbget .sta.config.derate.ShiftTemperature.ToTemperature]}      {# shift to temperature derate}
bbset syn.derate.shifttemperature.TemperatureShift {[bbget .sta.config.derate.ShiftTemperature.TemperatureShift]}   {# degree of temperature shift}
bbset syn.derate.shifttemperature.TargetPvts {[bbget .sta.config.derate.ShiftTemperature.TargetPvts]}         {# targeting PVTs to be scaled}
bbset syn.derate.foundryprocess.DefaultInputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.DefaultYaml]} {# default input derate foundry process addl derate yaml}
bbset syn.derate.foundryprocess.InputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.yaml]}    {# input derate foundry process addl derate yaml}
bbset syn.derate.foundryprocess.IncludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.IncludeRcCorner]} {# regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset syn.derate.foundryprocess.ExcludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.ExcludeRcCorner]} {# regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset syn.derate.foundryprocess.TableName {[bbget .sta.config.derate.foundry_process_addl_derate.TableName]} {# table name in yaml file}
bbset syn.derate.foundryprocess.ApplyMapping {
                                      {early_clock {set_timing_derate -cell_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -cell_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -cell_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -cell_delay -increment -late -data} }
                                      {setup       {set_timing_derate -cell_check -increment -late} }
                                      {hold        {set_timing_derate -cell_check -increment -early} }
                                      } {# applied derate mapping rules}
bbset syn.derate.foundryprocess.mem.InputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.mem.yaml]} {# input derate foundry process addl derate yaml}
bbset syn.derate.foundryprocess.mem.DefaultInputYaml {[bbget .sta.config.derate.foundry_process_addl_derate.mem.DefaultYaml]} {# input derate foundry process addl derate yaml}
bbset syn.derate.foundryprocess.mem.IncludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.mem.IncludeRcCorner]} {# regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset syn.derate.foundryprocess.mem.ExcludeRcCorner {[bbget .sta.config.derate.foundry_process_addl_derate.mem.ExcludeRcCorner]} {# regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset syn.derate.foundryprocess.mem.TableName {[bbget sta.config.derate.foundry_process_addl_derate.mem.TableName]} {# table name in yaml file}
bbset syn.derate.foundryprocess.mem.ApplyMapping {
                                      {tcd_late_derate    {set_timing_derate -cell_delay -increment -late} }
                                      {min_period_derate_total_with_aging {set_timing_derate -min_period} }
                                      {mpw_derate_with_aging {set_timing_derate -min_pulse_width} }
                                      {setup_path         {set_path_margin -setup} }
                                      {hold_path          {set_path_margin -hold} }
                                      } {# applied derate mapping rules}
bbset syn.derate.illegal_cell.CellGroups {[bbget .sta.config.illegal_cell_margins.types]}                 {Cell groups for illegal cell derate}
bbset syn.derate.illegal_cell.InputYaml {[bbget .sta.config.illegal_cell_margins.yaml]}                  {inpiut derate for illegal cell yaml}
bbset syn.derate.illegal_cell.ApplyMapping {
                                      {early_clock {set_timing_derate -cell_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -cell_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -cell_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -cell_delay -increment -late -data} }
                                      } {# applied derate mapping rules}
bbset syn.derate.net.InputCsv        {[bbget .sta.config.wire_ocv.Derate.File]}                       {Input derate for net flat derate}
bbset syn.derate.net.ApplyMapping    {
                                      {early_clock {set_timing_derate -net_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -net_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -net_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -net_delay -increment -late -data} }
                                      } {# applied derate mapping rules}
bbset syn.derate.socvrcfactor.Value  { { * {early 0.10 late 0.10} } }                                 {Defines the value of interconnect delay variation factor. This value applies global variation as percentage of the nominal delay by command set_socv_rc_variation_factor. The value range from 1.0 to 0.0. eg. { {*NM* {early 0.10 late 0.10} } {*SUD* {early 0.10 late 0.10}} }}
bbset syn.derate.delay_buffer_hold_penalty.DeratePenaltyValue {[bbget .sta.config.setup_margin.DelayBufferHoldPenalty.DeratePenaltyValue]} {# delay hold buffer penalty value}
bbset syn.derate.delay_buffer_hold_penalty.Pattern {[bbget .sta.config.setup_margin.DelayBufferHoldPenalty.Pattern]} {# DELAY Buffer Patterns, ex: *DEL*}
bbset syn.derate.custom_macro_margin.EarlyDerate {[bbget .sta.config.custom_macro_margin.EarlyDerate]}            {# Add extra derate on early path of custom macro}
bbset syn.derate.custom_macro_margin.VoltageTemperatureDerateMap {[bbget .sta.config.custom_macro_margin.VoltageTemperatureDerateMap]} {# mapping the macro to stdcell type for vt variation and agining derate}
bbset syn.derate.custom_macro_margin.foundry_extra_margin.CellRegexp {[bbget .sta.config.custom_macro_margin.foundry_extra_margin.CellRegexp]} {# List of cell regexp}
bbset syn.derate.custom_macro_margin.foundry_extra_margin.Derate {[bbget .sta.config.custom_macro_margin.foundry_extra_margin.Derate]} {# cell_delay derate value to be applied}
bbset syn.WireOCVMFile               {[bbquery get file -filter "file_type=='pocvm' && library_name=='wire'"]} {wire.pocvm file for FC read_ocvm}
bbset syn.EnablePrimePower           {0}                                                              {To enable Indesign Prime Power Flow for Syn stages}
bbset syn.PrimePowerFSDB             {}                                                               {FSDB path for PrimePower}
bbset syn.PrimePowerStripPath        {}                                                               {path  prefix  that  is to be stripped from all the object names read from the FSDB file}
bbset syn.PrimePowerFSDBInterval     {}                                                               {starttime endtime. Ex: {201654 202654}}
bbset syn.PrimePowerCustomScript     {}                                                               {path to custom script}
bbset syn.EnableActivityFlow         {0}                                                              {To enable/disable activity flow}
bbset syn.InputActivityFile          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/inputs/ufs_top.fsdb} {Input acitvity file saif/fsdb}
bbset syn.SaifActivityFile           {}                                                               {To enable Saif Activty file in FC - {{saif1 instance1} {saif2 instance2} ..{.. .. }}}
bbset syn.FSDBMergeArgs              {-parallel -mode max}                                            {Stimulus merge options -series -parallel -mode avg|max|sum}
bbset syn.InputSAIFInstanceName      {}                                                               {Saif instance name for activity reading}
bbset syn.FSDBStartTime              {}                                                               {FSDB start for acticity flow}
bbset syn.FSDBEndTime                {}                                                               {FSDB End time for activity}
bbset syn.FSDBInstanceName           {}                                                               {FSDB Instance Name}
bbset syn.ClockPort                  {}                                                               {clock port for fsdb annotation}
bbset syn.InputSAIFScenario          {}                                                               {Scenario for Saif reading}
bbset syn.elaborate.EnablePDDerateFix {false}                                                          {Turn on the power domain based derates fix}
bbset syn.elaborate.AlphaNumericalCharactersFix {true}                                                           {Replace dollars in module name with dash}
bbset syn.elaborate.FEQualityChecker {0}                                                              {Check if there is any critical timing lint violation}
bbset syn.elaborate.LimitPinsWOClock {1000}                                                           {Allowed sequential  clock pin without waveform}
bbset syn.elaborate.ElaborateStructuredNetlist {0}                                                              {Enable this if entire design is mapped netlist}
bbset syn.elaborate.StructuredNetlist {}                                                               {Give the mapped netlist path here}
bbset syn.elaborate.CreateTestCase   {0}                                                              {Create test case for cadence}
bbset syn.elaborate.MuxReorderETF    {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/compus/mux_reorder.etf} {ETF to source when at elab muxreordering TAT is huge}
bbset syn.elaborate.EnablePortUpdateName {true}                                                           {update ports naming style}
bbset syn.elaborate.UnifiedMetricsCategories {all}                                                            {Specify metrics categories to compute, when all category decided by current state of design}
bbset syn.elaborate.VoltageThresholdGroup {SVT *SVT normal_vt LVT *LVT low_vt ULVT *ULVT low_vt LVTLL *LVTLL low_vt ULVTLL *ULVTLL low_vt ELVT *ELT low_vt} {Threshold voltge group for a technology node search pattern for base cell and voltage group type}
bbset syn.elaborate.MixedLanguageFileList {1}                                                              {Mixed language filelist containing verilog and VHDL source files}
bbset syn.elaborate.SaveCallbacks    {}                                                               {Callbacks after which we save design}
bbset syn.elaborate.StartCallback    {}                                                               {Callback to start the flow from}
bbset syn.elaborate.ContinueOnError  {0}                                                              {to enable app var continue_on_error}
bbset syn.elaborate.InputMMMCFile    {../libgen/outs/mmmc.tcl}                                        {Path to mmmc file}
bbset syn.elaborate.InputLEFListFile {../libgen/outs/lef.list}                                        {Path to LEF list file}
bbset syn.elaborate.InputLibListFile {../libgen/outs/ccs_lib.list}                                    {Path to lib list file}
bbset syn.elaborate.RTLFileList      {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_rtl/synth/ufs_top.vf} {Path to RTL filelist}
bbset syn.elaborate.VHDLRTLFileList  {}                                                               {Path to VHDL RTL filelist}
bbset syn.elaborate.RTLSearchPath    {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_rtl/} {Search path for rtl files}
bbset syn.elaborate.RTLParsingVars   {}                                                               {vars to parse RTL}
bbset syn.elaborate.UPFParsingVars   {}                                                               {vars to pars UPF}
bbset syn.elaborate.PreReadRTLFiles  {}                                                               {Files to read before reading RTLFileList}
bbset syn.elaborate.PostReadRTLFiles {}                                                               {Files to read after reading RTLFileList}
bbset syn.elaborate.DerateFiles      {./srcs/inputs/reduce_table.yaml}                                {Derate YAML files path from timing team}
bbset syn.elaborate.DerateTCLFiles   {}                                                               {User Derate TCL files path}
bbset syn.elaborate.DerateLibNameMappingFiles {[bbget .pnr.DerateLibNameMappingFiles]}                         {Library name to vt_derate table lookup key mapping TCL files.}
bbset syn.elaborate.DerateLibNameMappingLibs {[bbget .sta.DerateLibNameMappingLibs]}                          {Lib files bbquery filtering pattern for generating library name to vt_derate_lookup key mapping dict}
bbset syn.elaborate.RTLDefines       {}                                                               {RTL Defines}   
bbset syn.elaborate.BlockAbstractionDesigns {}                                                               {Block abstraction designs}
bbset syn.elaborate.HDLParams        {}                                                               {HDL Parameters }
bbset syn.elaborate.ExitOnLinkError  {1}                                                              {To enable exit on link error}
bbset syn.elaborate.HDLMaxLoopLimit  {4096}                                                           {HDL max loop limit app var}
bbset syn.elaborate.InputUPFFile     {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_upf/ufs_top/ufs_top.upf} {Path to UPF File}
bbset syn.elaborate.InputSDCFile     {}                                                               {Path to SDC File for non mmmc run or sourcing SDC in mmmc method}
bbset syn.elaborate.CustomLatenciesFile {}                                                               {Path to custom latency file}
bbset syn.elaborate.ReadDEFArgs      {-keep_welltap_cells -add_power_switch}                          {Args for read_def command}
bbset syn.elaborate.RtlModulesToPreserve {*DTSO*}                                                         {RTL modules to be preserved in synthesis}
bbset syn.elaborate.RtlSeqModulesToPreserve {*whicpu*}                                                       {RTL Sequential modules to preserved in synthesis}
bbset syn.elaborate.InputDEFFile     {}                                                               {Floorplan DEF File}
bbset syn.elaborate.FloorplanTCLFiles {}                                                               {Floorplan TCL Files}
bbset syn.elaborate.RTLSourceFiles   {}                                                               {List of RTL files to load instead of FileList}
bbset syn.elaborate.RTLDontTouchPatterns {*dont_touch* *donttouch* *DONTTOUCH*}                           {RTL Dont touch patterns}
bbset syn.elaborate.RTLSizeOnlyPatterns {*size_only* *SIZEONLY*  *_hand_bcm_*   *_hand_bcm_* }           {PARTH : As some of the constraints are applied on these cells}
bbset syn.elaborate.SkipSDCErrorChecks {1}                                                              {Disable/enable sdc error checks. 1 to enable and 0 to disable}
bbset syn.elaborate.IgnoreSDCErrorPatterns {1}                                                              {To ignore if these error codes are there when sourcing SDCs. If multiple error patterns have to be skipped, separate them using spaces.}
bbset syn.elaborate.RTLExcludePattern {}                                                               {To specify rtl file exclude patterns}
bbset syn.elaborate.EnableFilenameTracing {True}                                                           {Track RTL file name, row and col}
bbset syn.elaborate.EnableViolatingPathTracing {True}                                                           {Track violating paths to RTL}
bbset syn.elaborate.BlackBoxList     {}                                                               {List of modules to black box in the design}
bbset syn.elaborate.ForceLinkToClockGate {}                                                               {Force tool to map to ICG, RTL ICG behavioural module to ICG libcell}
bbset syn.elaborate.ForceLinkToClockGatePinMap {}                                                               {Force tool to map to ICG, pin_map for pins which name are not matching}
bbset syn.elaborate.WritePortWrapper {false}                                                          {To connect the original I/O interfaces in netlist}
bbset syn.elaborate.SuffixModulesWithDate {false}                                                          {If module name starts with block name , suffix it with date}
bbset syn.elaborate.FixDesignMisMatch {0}                                                              {Enable only for incomplete RTL designs. Design mismatches are automatically either ignored or repaired. Ex: missing modules are blackboxed}
bbset syn.elaborate.FixDesignMisMatchMode {}                                                               {Valid modes are: library, netlist, upf, routing. Keep empty for auto_fix}
bbset syn.synth.DumpB2BFlopRPT       {true}                                                           {Enable it to dump back to back flop reports}
bbset syn.synth.QTypeFlopInstPattern {}                                                               {inst pattern list to map with q type function flip-flop}
bbset syn.synth.MBFFExcludeRegsWithExceptions {false}                                                          {To exclude the mbit merging on cells with exceptions}
bbset syn.synth.MBFFIgnoreExceptions {PATH_GROUP ANNOTATION CLOCK_LATENCY LATENCY_OFFSET}             {To ignore exceptions when banking and debanking multi-bit flops}
bbset syn.synth.MBFFIgnoreMatchSeqSyncCTRL {false}                                                          {To ignore exact match on seq control signal}
bbset syn.synth.MBFFAllowUnusedBit   {True}                                                           {To allow unused bit during mbit merging}
bbset syn.synth.EnableIsoLvlMerging  {0}                                                              {To enable multi-bit merging of power cells level shifters and isolators}
bbset syn.synth.CreateTestCase       {0}                                                              {Create test case for cadence}
bbset syn.synth.ProcessVTPatterns    {svt {.*SVT$} lvt {.*\[^UE\]LVT$} ult {.*ULVT$} lvtll {.*\[^UE\]LVTLL$} ulvtll {.*ULVTLL$} elt {.*ELVT$}} {Vt type and pattern to detact}
bbset syn.synth.EnableFlopPruning    {false}                                                          {To source ETF for sequential map optimisation, pruning flops based on PPA (use when TAT is huge at syn_map)}
bbset syn.synth.GenerateMacroOnlyNetlist {False}                                                          {To dump a netlist with only macro instances, other instances are deleted}
bbset syn.synth.UnifiedMetricsCategories {all}                                                            {Specifies the metrics categories to compute. Valid options{all|{check|clock|design|flow|hold|power|route|setup}} }
bbset syn.synth.PBSEvenPartitionSizeETFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/genus/compus/even_pbs_size.etf} {ETF file for even size partitions during syn_gen}
bbset syn.synth.EnableFixForHighGenOptPartition {false}                                                          {If Partitions sizes are uneven causing high genopt timing then enable this}
bbset syn.synth.TNSOpto              {true}                                                           {Forces the tool to consider all the endpoints for the TNS optimization}
bbset syn.synth.TreeFormatTimingReport {False}                                                          {Display rtl hierarchy in tree format in timing reports}
bbset syn.synth.PreserveRTLHierarchy {False}                                                          {To preserve user defined RTL hierarchy}
bbset syn.synth.SaveCallbacks        {}                                                               {Callbacks after which we save design}
bbset syn.synth.StartCallback        {}                                                               {Callback to start the flow from}
bbset syn.synth.InputDatabase        {}                                                               {Input database path}
bbset syn.synth.ContinueOnError      {0}                                                              {to enable/disable continue_on_error app var}
bbset syn.synth.CustomCostGroupsFile {}                                                               {Path to Custom Cost Groups file}
bbset syn.synth.DontMergeFlopPatterns {
                                      *tessent_occ_parent* *u_lcm*u_occ_*  *dftss* *occ*controller*_inst* *_tessent_sib_sti_* *occ_*_custom_tdr*  *u_lcm_core*tdr*
                                      *dft_mem_margin_override*tdr* *dft_pm_override*tdr* *tessent*tdr* *tessent_ssn_scan_host_ssh* *tessent_ssn_fifo* *tessent_sib* *lcm*occ*
                                      *tessent_ssn_pipe_output* *tessent_ssn_pipe_input* *receiver_1x_pipe* *sib*NO_SCAN* *lpm_wrapper*scandump_u* *tessent_ssn_ijtag_host_sih_*_inst* *tessent_ssn_bypasshub_mux* 
                                      } {list: No multibit optimization for given patterns}
bbset syn.synth.PreserveFlopList     {*SCAN_OBS_FLOP*}                                                {Preserve flop list}
bbset syn.synth.RetimeModules        {}                                                               {Enable Retiming on these modules}
bbset syn.synth.HardPreservesOnDFTModules {false}                                                          {To prevent complete optimisation of dft modules}
bbset syn.synth.DFTPreserveModules   {
                                      *tessent* 
                                      } {list: DFT preserve module patterns}
bbset syn.synth.DFTPreserveHierModules {
                                      *mbisr_controller_wrapper*
                                      *BK_bscan*
                                      } {list: Ungroup false preserves instance pins and no special}
bbset syn.synth.DFTPreserveHierModulesNoOpto {
                                      *tessent_occ_parent*  *dftss* *tessent*edt*ext* *tessent*edt*int* *tessent_ssn_scan_host_ssh* *tessent_ssn_fifo* *lcm*occ* *tessent_sib* *BK_bscan* *lcm_core_cg_sc_control*
                                      } {list: Ungroup false and preserves pins, as well as restricts boundary optimization as set by DFTBoundayOpto variable}
bbset syn.synth.DFTBoundaryOpto      {strict_no}                                                      {list: Control Boundary opto for DFT PreserveHierModulesOpto valid values false | true | strict_no}
bbset syn.synth.DFTPreserveVerboseLevel {0}                                                              {Controls message while applying preserve attributes. set 1 to print instance names }
bbset syn.synth.DFTPreserveInstances {
                                      *DONT_TOUCH* *DONTTOUCH* *donttouch* *dont_touch* *SIZEONLY* *SIZE_ONLY* *size_only* *sizeonly*
                                      *tessent* *dont_touch* *u_dftss_extest_input_mux_inst* *tessent* *tessent_sib_sti_inst *tessent_mbist_bap_inst* *tessent_mbist*_controller_inst*      } {list: DFT preserve module patterns}
bbset syn.synth.DFTPreserveHierInstances {
                                      *scan_combiner*pipe*mux* *dftss*fescan*chan_*_pipe_*_mux_inst* *tessent_sib_sti_inst* *dft_tessent_shell_bisr_chain_module_*_bisr_inst* *rtl_mbist_bisr_inst* *tessent_mbist_bap_inst* *tessent_mbis*_controller_inst* *tessent_sib_ssn* *tessent_ssn_pipe_output* *tessent_ssn_pipe_input* *receiver_1x_pipe*
                                      } {list: DFT preserve inst patterns}
bbset syn.synth.DFTPreserveHierInstancesNoOpto {
                                      *DONT_TOUCH* *DONTTOUCH* *donttouch* *dont_touch* *SIZEONLY* *SIZE_ONLY* *size_only* *sizeonly*  *dftss*extest*buf*dont_touch* *u_dft_dont_touch_sd_edt_c0_mux_inst* *edt*mux* *extest*mux* *u_lcm*u_occ_*   *dftss*edt_decom*dft_anchor_buf* *dftss*edt_compac*dft_anchor_buf* *dftss*extest*buf_dont_touch* *extest_mux*dft_anchor_buf* *extest_legacy_mux* *dftss* *lcm_core*tdr* *lpm_wrapper*tdr* *dftss_core_inst*tdr* *tessent*tdr* *io_bank*tdr* *tessent*edt*ext* *tessent*edt*int* *tessent_ssn_scan_host_ssh*  *tessent_ssn_mux_legacy* *tessent_ssn_scan_host_ssh*mux* *_lvx_dft_anchor_buf_* *dftss*extest*buf*dont_touch* *u_dft_dont_touch_sd_edt_c0_mux_inst* *edt*mux* *extest*mux*   *sib*NO_SCAN* *tessent_persistent_cell_*  *occ*controller*_inst* *tessent_sib_sti_inst* *tessent_sib_occ_inst* *u_glitchless_clk_mux* *u_occ_test_clk* *ssn_legacy_and_steering_logic_inst* *u_ulp_dftss* *u_sos_gated_scan_enable_inst* *gmrc_rx_dft_override_inst* *gmrc_tx_dft_override_inst* *ctrl_tdr_NO_SCAN* *obs_tdr_NO_SCAN* *abkrta*_dft_wrapper* *abkx*_dft_wrapper* *u_*_dyn_se_or* *u_*_scan_enable_anchor_buf* *_msip_override_gate_DONTTOUCH_or* *tessent_ssn_ijtag_host_sih_*_inst* *tessent_ssn_bypasshub_mux* 
                                      } {list: DFT preserve inst patterns}
bbset syn.synth.DftFullPreserveHierModule {
                                      *u_pnr_clockgate_merge_tielow *_lvx_dft_anchor_buf_* } {list: DFT complete preserve module paterns}
bbset syn.synth.DFTHardPreserveHierFlopInstancesNoOpto {}                                                               {DFT preserve flops insts matching patterns, control top instance boundary optimization, add preserve on d and q pins, and disable phase inversion}
bbset syn.synth.write_dft_constraints_csv {1}                                                              {Dump out a CSV file expanding all DFT hints/modules on which synth preserve constraints are applied}
bbset syn.synth.SkipCollateralChecks {1}                                                              {To skip DFT collateral checks during synth handoff to synthdft}
bbset syn.synth.ProceedWithCollateralCheckFailure {1}                                                              {To proceed with DFT collateral checks failure during synth handoff to synthdft}
bbset syn.synth.SkipICGInsertionInstPatterns {
                                      *tessent*edt*ext*
                                      *tessent*edt*int*
                                      *u_lcm*u_occ_*
                                      *occ*controller*_inst*
                                      *tessent_mbist_bap*tdr_inst* 
                                      *_tessent_sib_sti_*
                                      *_tessent_tdr_occ_inst*
                                      *dftss*
                                      *u_socdft_tap_bscan*
                                      *u_scan_to_jtag*
                                      *u_scan_packetizer*
                                      *u_glitchless_clk_mux*
                                      *tessent_tdr*
                                      *tessent_sib*
                                      } {list: Skip ICG insertion on given inst patterns}
bbset syn.synth.SkipICGInsertionModulePatterns {
                                      *dftss*
                                      *mbisr_controller_wrapper*
                                      } {list: Skip ICG insertion on given module patterns}
bbset syn.synth.LowPowerRetentionFlops {}                                                               {list of low power retention flops}
bbset syn.synth.LPClockGatingMinFlops {3}                                                              {Min flops for Clock gating}
bbset syn.synth.LPClockGatingMaxFlops {}                                                               {Max flops for LP clock gating}
bbset syn.synth.LpCGFixedDelayPercentage {10}                                                             {Clock gating delay percentage}
bbset syn.synth.LevelOneICGConstraintScaling {0.25}                                                           {ICG level 1 scaling}
bbset syn.synth.LevelTwoICGConstraintScaling {0.15}                                                           {ICG level 2 scaling}
bbset syn.synth.ClockGatingMaxFanout {16}                                                             {Clock gating max fanout}
bbset syn.synth.TargetedFlops        {}                                                               {Clock gating targeted flops}
bbset syn.synth.ClockGatingMinBitwidth {4}                                                              {Clock gating min bit width}
bbset syn.synth.ClockGatingNumLevels {8}                                                              {Clock gating max number of levels}
bbset syn.synth.EnableDFTInsertion   {0}                                                              {Enable DFT insertion during synthesis}
bbset syn.synth.InsertDFTTcl         {}                                                               {Insert DFT TCL Script}
bbset syn.synth.ReportDFTTcl         {}                                                               {Report DFT TCL Script}
bbset syn.synth.EnableSynthOpt       {0}                                                              {To enable syn_opt optimisation}
bbset syn.synth.EnableIspatial       {0}                                                              {to do syn_opt spatial run}
bbset syn.synth.DesignPowerEffort    {low}                                                            {Design power effort}
bbset syn.synth.LeakageToDynamicRatio {0.5}                                                            {Leakage to dynamic ratio}
bbset syn.synth.InstanceNameUpdateList {}                                                               {{bracket slash} Changes square bracket, backslash in inst name to _ and _ung_}
bbset syn.synth.UploadToDashboard    {1}                                                              {upload results to dashboard}
bbset syn.synth.EnableEdgeBasedLPClockGating {false}                                                          {Enable edge based selection of ICG rather than lp_clock_gating cell based}
bbset syn.synth.DontConvertToScanFlop {}                                                               {list: Flops which should not be mapped to scan flop}
bbset syn.synth.MBWToChoose          {3}                                                              {To read mbw from joules }
bbset syn.synth.MBWTclFile           {outs/[bbget .info.BLOCK].xor_gating_impl.mbw4.mean_sigma.tcl}   {File to be sourced after xor gating}
bbset syn.synth.EnableMBFFDifferentBusses {true}                                                           {To enable multibit cells from different buses}
bbset syn.synth.PAMNetDelayEffort    {}                                                               {It will increase complex cell usage in critical path improving ppa}
bbset syn.synth.LPClockGatingHierDeclone {false}                                                          {CG decloning during opt}
bbset syn.synth.TNSCriticalRange     {}                                                               {TNS critical range app var}
bbset syn.synth.EnableHEOC           {false}                                                          {To enable HEOC cells}
bbset syn.synth.HEOCCells            {}                                                               {List of HEOC Cells}
bbset syn.synth.DisableBoundaryOptimizationModules {}                                                               {To enable/disable boundary optimization}
bbset syn.synth.QuickRtlFeedback     {0}                                                              {To enable/disable Quick RTL Feedback}
bbset syn.synthopt.SaveCallbacks     {}                                                               {Callbacks after which we save design}
bbset syn.synthopt.StartCallback     {}                                                               {Callback to start the flow from}
bbset syn.synthopt.InputDatabase     {}                                                               {Input database path}
bbset syn.synthopt.ContinueOnError   {0}                                                              {to enable/disable continue_on_error app var}
bbset syn.synthopt.Cores             {32}                                                             {no of cores for the run}
bbset syn.synthopt.EnableActivityFlow {0}                                                              {to enable activity flow}
bbset syn.synthopt.EnableSynthOptReports {false}                                                          {To enable/disable reporting after syn_opt stage}
bbset syn.synthopt.QuickRtlFeedback  {0}                                                              {To enable/disable Quick RTL Feedback}
bbset syn.synthdftopt.UploadToDashboard {1}                                                              {upload results to dashboard}
bbset syn.synthdftopt.EnableObsTpRecluster {0}                                                              {Enable/Disable Reclustering of OBS TPs}
bbset syn.synthdft.UploadToDashboard {1}                                                              {upload results to dashboard}
bbset syn.synthdft.CreateTestCase    {0}                                                              {Create test case for cadence}
bbset syn.synthdft.SaveCallbacks     {}                                                               {Callbacks after which we save design}
bbset syn.synthdft.StartCallback     {}                                                               {Callback to start the flow from}
bbset syn.synthdft.InputDatabase     {}                                                               {Input database path}
bbset syn.synthdft.Flow              {sif}                                                            {choose between gcid or sif}
bbset syn.synthdft.InputCTLFile      {../libgen/outs/ctl.list}                                        {file: Path to CTL list}
bbset syn.synthdft.EnableWrapper     {0}                                                              {bool: Enable DFT Wrapper}
bbset syn.synthdft.EnableNetlistWrapper {true}                                                           {bool: Enable DFT Wrapper cells insertion at netlist level, other dft components like mode decoder in rtl}
bbset syn.synthdft.EnableUPFscanstitch {true}                                                           {bool: Enable UPF aware scan stitch}
bbset syn.synthdft.EnableBurnInTest  {0}                                                              {bool: Enable Burn In Test}
bbset syn.synthdft.EnableICGHookUp   {1}                                                              {bool: Enable ICG Hook Up}
bbset syn.synthdft.EnableCreatePort  {0}                                                              {bool: Enable Create Port}
bbset syn.synthdft.OCCEnable         {0}                                                              {bool: OCC Enable}
bbset syn.synthdft.EnableCodec       {0}                                                              {bool: Codec Enable}
bbset syn.synthdft.EnableScanClockMixing {0}                                                              {bool: Set 1 to enable clock mixing for both intest and extest mode}
bbset syn.synthdft.ClockStrobe       {4}                                                              {int: Clock Strobe value for DFT}
bbset syn.synthdft.ClockRise         {12}                                                             {int: Clock Rise value}
bbset syn.synthdft.ClockFall         {17}                                                             {int: Clock Fall value}
bbset syn.synthdft.ClockPeriod       {25}                                                             {int: Clock Period value}
bbset syn.synthdft.MaxChainLength    {140}                                                            {int: Max chain length specificatio for scan insertion}
bbset syn.synthdft.MaxQTestpoints    {500}                                                            {int: Number of Q- Gating test points to be inserted. Default 500}
bbset syn.synthdft.IsShiftQgateEnable {false}                                                          {bool: Q Gating to reduce shift IR. Default Disabled}
bbset syn.synthdft.InsertDFTModeAnchorBuf {false}                                                          {bool: Anchor BUF on: internal scan chain in/out. Wrap mode controls And Mode decode logic. Default Enabled}
bbset syn.synthdft.QgatingExcludeElemets {}                                                               {Exclude elements for scan shift Qgating feature}
bbset syn.synthdft.BypassDftWrpOfPipes {false}                                                          {bool: Remove wrp_of pipe registers and bypass with a buffer. Default Disabled}
bbset syn.synthdft.BypassLockupExChains {false}                                                          {bool: Connect the extest chain output ports direct to the terminal core-wrapper flops, bypassing the terminal lockup latch in extest mode terminal. Default Disabled}
bbset syn.synthdft.SharedIOBypassPipeLineConfig {}                                                               {list: Additional/custom configuration to bypass pipelines}
bbset syn.synthdft.Macros            {dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns }                         {list: List of IP or sub core. These core will have CTL files for hierarchical DFT }
bbset syn.synthdft.MacrosTestMode    {wrp_of}                                                         {Macros/ sub design wrapper mode ctl for wrapper chains}
bbset syn.synthdft.MacrosCTLPath     {[bbget .info.REPO_TOP]/hsio/ufs_top/vars/ctl}                   {file: Search directory for subCore/Macro CTL file. Search for files in this naming convention order ${Macro}_{MacrosTestMode}.ctl, ${Macro}.ctl}
bbset syn.synthdft.BurnInScanInput   {}                                                               {Burn in scan input}
bbset syn.synthdft.BurnInScanOutput  {}                                                               {Burn in scan output}
bbset syn.synthdft.ScanInput         {I_DFT_SI}                                                       {Scan Input}    
bbset syn.synthdft.ScanOutput        {O_DFT_SO}                                                       {Scan Output}   
bbset syn.synthdft.ExternalScanOutput {}                                                               {External Scan Output}
bbset syn.synthdft.MinNumberOfScanChains {}                                                               {int: Min Number of Scan Chains}
bbset syn.synthdft.SharedIODesignModulePattern {*Fabric_DFTTopIP*_shared*}                                      {str: Module pattern to detect shared io design}
bbset syn.synthdft.WrapperScanInput  {I_DFT_EX_SI}                                                    {str: Wrapper Scan Input}
bbset syn.synthdft.WrapperScanOutput {O_DFT_EX_SO}                                                    {str: Wrapper Scan Output}
bbset syn.synthdft.WrapperMode       {I_DFT_WRP_MODE}                                                 {Wrapper Mode}  
bbset syn.synthdft.WrapperClock      {}                                                               {Wrapper Clock} 
bbset syn.synthdft.WrapperScanEnable {}                                                               {Wrapper Scan Enable}
bbset syn.synthdft.ICGHookupControl  {}                                                               {ICG Control}   
bbset syn.synthdft.FFHookupControl   {}                                                               {FF Control}    
bbset syn.synthdft.OCCScanInput      {}                                                               {OCC Scan Input}
bbset syn.synthdft.OCCScanOutput     {}                                                               {OCC Scan Output}
bbset syn.synthdft.OCCScanEnable     {}                                                               {OCC Scan Enable}
bbset syn.synthdft.OCCReset          {}                                                               {OCC Reset}     
bbset syn.synthdft.OCCBypass         {}                                                               {OCC Bypass}    
bbset syn.synthdft.OCCTestMode       {}                                                               {OCC Test Mode} 
bbset syn.synthdft.InternalChainCount {2}                                                              {int: Internal Chain Count}
bbset syn.synthdft.ExcludeWrapperPorts { idft* odft* *_dft* *_clk *odfd* idfd* mem_* imem_* *mem_rst_disable* cpm_*_retention_n cpm_*_isolation_n lpcm_iso_en rop_* fiso ls ds sd poff wds ls_disable *power_down_pre* *power_down_pre_ack* *power_down_all* *power_down_all_and_ack* *power_down_all_or_ack* *pwrdwn_all_and_ack* *pwrdwn_pre_ack* pll_lock* *bisr_ret* *ram_pwr_on* *ram_ret_on* *ram_iso_on* *ram_iso_suspend* idft* odft* *_dft* *_clk *odfd* idfd* mem_* *imem_* *mem_rst_disable* cpm_*_retention_n cpm_*_isolation_n lpcm_iso_en rop_* fiso ls ds sd poff wds ls_disable *power_down_pre* *power_down_pre_ack* *power_down_all* *power_down_all_and_ack* *power_down_all_or_ack* *pwrdwn_all_and_ack* *pwrdwn_pre_ack* pll_lock* *bisr_ret* *ram_pwr_on* *ram_ret_on* *ram_iso_on* *ram_iso_suspend*} {list: Exclude Wrapper ports}
bbset syn.synthdft.ScanEnables       {}                                                               {Scan Enables}  
bbset syn.synthdft.CreateOutputPorts {}                                                               {list: Create Output ports}
bbset syn.synthdft.CreateInputPorts  { }                                                              {list: Create Input ports}
bbset syn.synthdft.MemBaseCellRegEx  {TS*N0*X* ts*n0*x*}                                              {synthdft MemCell patterns}
bbset syn.synthdft.PortHookupMap     { }                                                              {dict: Port and its internal hookup pin in pairs. Example { I_DFT_ICG_SE dft_glue/DFT_ICG_SE  I_DFT_SE dft_glue/ICG_SE } }
bbset syn.synthdft.Constant0         {
                                      idfd_smmu_cachedump_mode
                                      idfd_sd_mode
                                      ufs_top_pdom_isolation_en
                                      ufs_pcs_psw_pdom_isolation_en
                                      u_ufs_top_u_ufs_ss_LP_isol_en
                                      u_dftss_ufs/dftss_core_inst/ip_dft_control_inst/ip_dft_control_tdr_inst_NO_SCAN/ijtag_data_out_38_anchor_buf/SIZEONLY_buf/Z
                                      u_dftss_ufs/dftss_core_inst/ip_dft_tdr_inst/ip_dft_tdr_ctrl_base_tdr_inst_NO_SCAN_1/ijtag_data_out_4_anchor_buf/SIZEONLY_buf/Z
                                      ufs_top_pdom_isolation_en_dft_o 
                                      u_ufs_top_u_ufs_ss_LP_isol_en_async
                                      } {list: Constant 0}
bbset syn.synthdft.Constant1         { 
                                      u_dftss_ufs/dftss_core_inst/ip_dft_mode_gen_inst/u_odft_logic_test_mode_or/SIZEONLY_or/Z
                                      u_dftss_ufs/dftss_core_inst/ip_dft_rst_mux_inst/ip_dft_rst_mux_tdr_inst_NO_SCAN/ijtag_data_out_28_anchor_buf/SIZEONLY_buf/Z
                                      cpm_hsios_isolation_n
                                      } {list: Constant 1}
bbset syn.synthdft.ATEClocks         {u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_div16p5_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_div33_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_div66_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_div_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_div_fr_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_dword_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_hdmi_pixel_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_oword_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_qword_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_word_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/mplla_word_fr_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/ref_dig_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/ref_dig_fr_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_div16p5_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_pwm_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_pwm_word_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_div16p5_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_pwm_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_pwm_word_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx_pwm_bit_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx_pwm_clk
                                      u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx_pwm_word_clk} {list: ATE clocks}
bbset syn.synthdft.TestModes         { }                                                              {list: Test Modes ports expanded}
bbset syn.synthdft.ResetsAlow        {}                                                               {list: Resets low}
bbset syn.synthdft.ResetsAhigh       {}                                                               {list: Resets high}
bbset syn.synthdft.TestModesLEC1     {}                                                               {list: Test Modes lec 1}
bbset syn.synthdft.TestModesLEC0     {}                                                               {list: Test Modes lec 0}
bbset syn.synthdft.EncodeMode        {
                                      InternalScan_mode    { 0  1  1 }
                                      wrp_if               { 1  0  0 }
                                      wrp_of               { 0  1  0 }
                                      BurnInTest           { 1  1  0 }
                                      ScanCompression_mode { 1  0  1 }
                                      } {Encode Mode}   
bbset syn.synthdft.NonScanFlops      {
                                      *NO_SCAN*
                                      DONT_SCAN*
                                      *tessent*edt*ext*
                                      *tessent*edt*int*
                                      *tessent_ssn_scan_host_ssh*inst*
                                      *tessent_ssn*pipe*
                                      *tessent*fifo*
                                      *tessent_sib_int*
                                      *tessent_sib_ext*
                                      *tessent_sib_mbist*
                                      *tessent_ssn_receiver_1x_pipe_input_inst*
                                      *lcm*u_occ_*
                                      *gateway_sib*
                                      *tessent_sib_ssn_inst*
                                      *_tessent_sib_sri_inst*
                                      *sti_inst*sib*reg
                                      *sti_inst*to_enable_int_reg
                                      *sti_inst*retiming_so_reg
                                      *tessent_tdr_occ_inst*
                                      *tessent_ssn_mux_down_inst*
                                      *tessent_sib_occ_inst*
                                      *tessent_sib_sri_ctrl_inst*
                                      *tessent_tdr_sri_ctrl_inst*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_glitchless_clk_mux_*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_clk_div50_*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_sync_clk_div_0*
                                      *gspan_receiver_*gspan_receiver_transport*gsl_rst_sync_in*
                                      *gspan_receiver_*gspan_receiver_transport*gsl_sync_flop_clkstop*
                                      *gspan_receiver_*gspan_receiver_transport*gsl_sync_flop_dfd_clkstop*
                                      *gspan_sender*clk_div*preg_reg*
                                      *gspan_sender*clk_div*nreg_reg*
                                      *dftss*scan_combiner_inst*
                                      *scan_combiner_inst*fixed_pi*
                                      *bisr*inst*
                                      *end_of_chain_bisr_pipeline_inst*
                                      *start_of_chain_bisr_pipeline_inst*
                                      
                                      *dft_feedthrough_bisr_pipe*
                                      *u_lcm_core_pll*u_iso_sync_reg*gpl_syncffr*
                                      *u_lcm_core_pll*u_pll_rst_sync*gsl_sync_flop_rst_*gpl_syncffr*
                                      
                                      *u_glitchless_clk_mux*
                                      *lpcm_*_wrapper*u_mna_wrapper*sib*
                                      *u_lpm_wrapper*u_lpm_dft_mem_margin_override*ip_dft_mem_margin_ovrd_tdr_inst_NO_SCAN*
                                      *u_lpm_wrapper*u_lpm_dft_mem_margin_override*ip_dft_mem_margin_ovrd_sib_inst_NO_SCAN*
                                      *u_lpm_wrapper*u_lpm_dft_pm_override*sib*
                                      *u_lpm_wrapper*u_lpm_dft_pm_override*tdr*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*tdr*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*sib*
                                      *dft_pm_override*sib*
                                      *dft_pm_override*tdr*
                                      *ip_dft_mem_margin_ovrd*
                                      *tessent_sib_sri_local_inst*
                                      *tessent_tdr_sri_tdr*_inst*
                                      *tessent_tdr_sti_ctrl_inst*
                                      
                                      *tessent_ssn_mux_sih*inst*
                                      *dftss*_dyn_tdr_clk*
                                      *dftss*_occ_test_clk*
                                      *fescan_tessent_ssn_ijtag_host_sih_*_inst*
                                      *fescan_tessent_*_bypass_hub_inst*
                                      *tessent_sib_sti_inst*occ_ctrl_*
                                      *rtl_fescan_tessent_ssn_bypasshub_receiver_*
                                      *rtl_fescan_tessent_ssn_bypasshub_mux_*
                                      *rtl_fescan_tessent_sib_occ_*
                                      *rtl_fescan_tessent_tdr_occ_*
                                      *_rtl_fescan_tessent_sib_edt_inst*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_lcm_core_pll*u_m_vect_async*rdata*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_lcm_core_pll*u_m_vect_async*gsl_vect*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_lcm_core_pll*u_frac_vect_async*gsl_wrst*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_lcm_core_pll*u_iso_sync_reg*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_lcm_core_pll*u_pll_rst_sync*
                                      *u_lcm_wrapper*u_lcm*u_lcm_core*u_fll_sup_fll*_clk*u_fll_top_dft_wrapper*tessent_sib*            
                                      *u_mna_wrapper*u_fcc_wrapper_1*u_prtn_fc_top*prtn_fc_cpu_inst*prtn_fc_top*prtn_ijtag_tdr_apb_bridge*tdr*
                                      *u_mna_wrapper*u_fcc_wrapper_1*u_prtn_fc_top*prtn_fc_cpu_inst*prtn_fc_top*prtn_ijtag_tdr_apb_bridge*prtn_sdc_sync_apb_op_done_s1_t1
                                      *u_mna_wrapper*u_fcc_wrapper_1*u_prtn_fc_top*prtn_fc_cpu_inst*prtn_fc_top*prtn_ijtag_tdr_apb_bridge*active_req_reg_reg            
                                      *occ_sync_trig*
                                      
                                      *rtl_fescan_tessent_sib_occ_u_occ_*inst
                                      *rtl_fescan_tessent_tdr_occ_u_occ_*inst
                                      u_ijtag2jtag_bridge/tdr_inst*
                                      } {list: Non Scan Flops, flops which tool need not connect to scan chain}
bbset syn.synthdft.EnableActivityFlow {0}                                                              {bool: Enable Acitivty Flow}
bbset syn.synthdft.EnableShadowScan  {0}                                                              {bool: Enable Acitivty Flow}
bbset syn.synthdft.IsRTLDFTInserted  {True}                                                           {bool: TestMax has inserted DFT in RTL}
bbset syn.synthdft.IsInternalClockControllable {True}                                                           {bool: Internal ATE Clock pins defined as scannable}
bbset syn.synthdft.TopIpInstance     {
                                      {u_dftss_ufs/fescan_tessent_edt_int_c0_dft_wrapper_inst/ufs_top_rtl_fescan_tessent_edt_int_c0_inst} {fescan_tessent_edt_int_c1_dft_wrapper_inst/ufs_top_rtl_fescan_tessent_edt_int_c1_inst u_ufs_ss/u_DWC_ufs_host_controller/PSW u_ufs_ss/u_ufshc_mem_wrapper_psw} {u_dftss_ufs/fescan_tessent_edt_ext_dft_wrapper_inst/ufs_top_rtl_fescan_tessent_edt_ext_inst "__wrapper_cell__"}} {list: Top IP Instance}
bbset syn.synthdft.EnableCollectDftPowerMetrics {True}                                                           {bool: false disables the power metrics generation}
bbset syn.synthdft.WrapperConfig     {}                                                               {list: DFT Wrapper Config}
bbset syn.synthdft.CodecWrapperStartIndex {}                                                               {list: Start index of wrapper chains in each codec. Format { codec1 5 codec2 2 }}
bbset syn.synthdft.UserDefinedChainConfig {
                                      { -codec u_dftss_ufs/fescan_tessent_edt_int_c0_dft_wrapper_inst/ufs_top_rtl_fescan_tessent_edt_int_c0_inst -tag pma_chains_bypass -pats {u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma} -n_chains 437 }
                                      } {list: Used defined chains. Format List command arguments { { -codec U_DFT_TOP_IP_0  -n 3 -tag pat1bisr -pats { *bisr*ShiftReg* } -elements { } } }}
bbset syn.synthdft.cotestConfig      {}                                                               {list: COTEST configuration.Format List command arguments { { -codec U_DFT_TOP_IP_0 -max_len 250 -se I_DFT_WRP_SE -clk I_DFT_WRP_CLK -reset I_COTEST_RESET -test_mode I_DFT_COTEST_MODE -pats { } } }}
bbset syn.synthdft.InsertBypassChainConfig {}                                                               {list: Arguments to bypass chain { { -chains cotest -mode <pin/port> -clk <optional> -reset <optional> -loc <optional> -invert_mux <optional> } }}
bbset syn.synthdft.EnhancedInsertDftFlow {true}                                                           {bool: Set True to Scan group based Scan insert flow. This enable UDC and multiple codec hierarchy}
bbset syn.synthdft.EnableSynthdftHandoff {true}                                                           {bool: Set false to disable the scandef and export view handoff step}
bbset syn.synthdft.EnableTestPointFlow {True}                                                           {bool: Enable Test Point insertion flow}
bbset syn.synthdft.InsertTestPointConfig {
                                      { -max_share 8 -mem_pins { A\\\[* RA\\\[* WA\\\[* WEN REN CSN } }
                                      } {list: list of configurations like { { -lib_cell <MemBaseCellRegEx> -inst <pat> -mem_pins <optional> -max_share <8> } } }
bbset syn.synthdft.ExternalCoreChainConfig {}                                                               {list: Configure the core chains outside block. Reserves the codec chains after core wrapper cells chains and pull connections outside block}
bbset syn.synthdft.OCCInternalClockPins {*OCCMUX*/clk_0}                                                 {list: OCC Internal clock pins regex list}
bbset syn.synthdft.AssociatedClocks  {}                                                               {list: Associated Clocks in format {{<clk_p> <asso_clk>} {...}}}
bbset syn.synthdft.qcVerboseLevel    {0}                                                              {int: Set the quality check verbose level like 0, 1 (Detailed message), 2 (prints all messages) }
bbset syn.synthdft.hasMultiPowerDomain {0}                                                              {bool: Set True/1 if IP have Multi power domain and has power aware wrapper cell insertion }
bbset syn.synthdft.DFTTopModules     {
                                      dft_scan_codec { *gdft*custom*pipelines }
                                      dft_scan { *abkrta*_dft_wrapper* *abkx*_dft_wrapper* }
                                      dft_mbist_bist { *rtl_tessent_mbist_*_interface* }
                                      dft_mbist { gdft_* }
                                      } {list: All DFT Top modules patterns}
bbset syn.synthdft.DFTTopInstances   {
                                      dft_scan_dftss { *dftss* }
                                      dft_scan_codec { *tessent*edt*ext* *tessent*edt*int* *tessent*edt*chan_* *tessent_ssn_scan_host_ssh_*_inst* *tessent_ssn_fifo* *sd_chain_control* *tessent_ssn_receiver_1x_pipe* *tessent_ssn_pipe* *_lvx_dft_anchor_buf_* *tessent_ssn_mux_legacy_inst* *tessent_ssn*_inst* *extest_mux* }
                                      dft_scan_occ { *u_lcm*u_occ_* *occ*controller*_inst* *occ_test_clk* *dyn_tdr_clk* }
                                      dft_scan_jtag { *tessent_sib*inst* *lcm*tdr* *lcm*sib* *mna_spare_tdr_NO_SCAN* *mna_*wrapper*dft_wrapper*ctrl_mux_inst* *ctrl_tdr_NO_SCAN* *_obs_tdr_NO_SCAN* *gateway_sib* *lpm*tdr* *lpm*sib* *mem_margin_ovrd_sib* *mem_margin_ovrd_tdr* *prtn_*_ctrl_mux_inst* *boxcar_cs_top_ctrl_mux* *aging_sensor_top_ctrl_mux* *fll_top_ctrl_mux* *temp_sensor_top_ctrl_mux* *OSCT*_ctrl_mux_inst* *jitter_monitor_ctrl_mux_inst* *tessent_ssn_ijtag_host_sih_*_inst* *tessent_ssn_bypasshub_mux* }
                                      dft_scan_wrapper { *GNL_WC_D1_ieee1500_* *GNL_WC_D1_testpoint_* *wrp0*state_reg* *swc_hold_mux* *wrp_hold_mux* }
                                      dft_scan_testpoint { *testpoint_xor_sizeonly* *testpoint_and_sizeonly* *testpoint_flop_SIZEONLY* *testpoint_inv_SIZEONLY* *testpoint_control_*_SIZEONLY* *XOR_testpoint_* }
                                      dft_scan_bypass { *chain_byp*dff_SIZEONLY* *chain_byp*_mux_SIZEONLY* *_bypass*_dff_donttouch* *_bypass*_mux_donttouch* *_CTL_input_pipeline_ff* *_CTL_output_pipeline_ff* *u_dft_*llatch_SIZEONLY* *u_dft_*llatch_donttouch* *_msip_override_gate_DONTTOUCH_or* *u_dft_*_icg_donttouch *u_dft_*_icg_SIZEONLY }
                                      dft_scan { *CHAIN_lockup_latch* *GNL_WC_D1_*lockup_* *DFT_ADDED_RESYNC* *VCLP_feedthru_SIZEONLY_buffer* }
                                      
                                      dft_mbist_bist { *dft_tessent_shell_*_module* *tessent_mbist_bap_inst* *tessent_mbis*_controller_inst* *tessent_mbist_*_shared_bus_assembly_inst* *ram_interface_inst* *mem_interface_inst* *rom_interface_inst* }
                                      dft_mbist_bisr { *bisr_inst* *bisr_pipeline_inst* *dft_feedthrough_bisr* }
                                      dft_mbist_gmrc { *gmrc_rx_dft_override_inst* *gmrc_tx_dft_override_inst* }
                                      dft_mbist_otp { *otp_shadow_mem_trimrepair_override_module_inst* }
                                      dft_mbist { }
                                      
                                      dft { }
                                      } {list: All DFT Top instance patterns}
bbset syn.synthdft.ICGSkipScanEnableConnectInstances { *tessent*edt*ext* *tessent*edt*int*  *lcm*u_occ_* *u_glitchless_clk_mux* *u_lcm_core*u_clk_div*  *core_clk_div_tdr* *u_occ_sync_trig* *tessent_ssn_ijtag_host_sih_*_inst* 
                                      *dftss*
                                      *tessent*edt*ext*
                                      *tessent*edt*int*
                                      *u_lcm*u_occ_*
                                      *u_glitchless_clk_mux*
                                      *core_clk_div_tdr*
                                      *u_lcm_core*u_clk_div*
                                      *u_lcm_core*u_glitchless_clk_mux*
                                      *u_lcm_core*tdr*
                                      *dft_mem_margin_override*
                                      *occ*controller*_inst*
                                      *lcm_wrapper*u_glitchless_clk_mux*
                                      *lcm_wrapper*u_*clk_div*
                                      *lcm_wrapper*mem_inrush_kill*
                                      *lcm_wrapper*sync_clk_div*
                                      } {list: Skip ICG scan enable connection on given inst patterns}
bbset syn.synthdft.MemoryRepairPins  {REDENIO FADIO CRE FCA}                                          {list: Memory repair pins. Will create memory connection report needed for simulations}
bbset syn.synthdft.MemoryRepairFanInPat {*}                                                              {str: Pattern to filter the start point of fan-in cone of Repair Port}
bbset syn.synthdft.MemoryMarginPins  {RTSEL WTSEL WASENB WASSEL DSLPLV MTSEL RCT WCT KP CKHE CKLE SKP DT WESEL SAPW ECEB TURBO} {list: Memory margin pins. Will create memory connection report needed for simulations}
bbset syn.synthdft.MemoryMarginFanInPat {I_R* i_r*}                                                      {str: Pattern to filter the start point of fan-in cone of margin Port}
bbset syn.synthdft.DontMergeFlopPatterns {}                                                               {No multibit optimization for given patterns}
bbset syn.synthdft.PreserveFlopList  {}                                                               {list: Preserve flop list}
bbset syn.synthdft.InputUPFFile      {/google/gchips/workspace/redondo-asia/tpe/user/vemireddyv/LAJ_SCAN/UFS_TOP/M3V2/LAJ_A0_UFS_TOP_M3_V2_R1_D1_RTLDFT_CHECKIN/repo/hsio/ufs_top/vars/synthdft_inc_strategy.upf} {SynthDFT flow will use the UPF rolled in the DB from Synth. For incremental UPF strategy(s), user can provide a small UPF with the below variable}
bbset syn.poweropt.CreateTestCase    {0}                                                              {Create test case for cadence}
bbset syn.poweropt.StartCallback     {}                                                               {To start flow from a particular stage}
bbset syn.poweropt.SaveCallbacks     {}                                                               {Callbacks after which we save design}
bbset syn.poweropt.InputDatabase     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.db} {Path to mapped db}
bbset syn.poweropt.InputElaborateDatabase {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/elaborate/outs/ufs_top.final.db} {Path to elaborate database}
bbset syn.poweropt.InputTCFFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.tcf} {Path to tcf file if synth is Activity enabled}
bbset syn.poweropt.XORFlopsLocationScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/rpts/xor_gating_flops_location.rpt} {XOR Gating flops location report}
bbset syn.poweropt.XORFlopsSlackScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/rpts/xor_gating_flops_slack.rpt} {XOR Gating flops slack report}
bbset syn.poweropt.XORFlopsCGSlackScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/rpts/xor_gating_cg_slack.rpt} {XOR Gating flops cg slack report}
bbset syn.poweropt.SigmaValue        {1}                                                              {Sigma value for filtering on save_power}
bbset syn.poweropt.LPClockGatingMinFlops {1}                                                              {LP clock gating min flops}
bbset syn.poweropt.DpinActivityThreshold {0.01}                                                           {Activity toggle threshold d/clk}
bbset syn.poweropt.PowerSaveStart    {0}                                                              {Percentage saving of power inital value, only for reporting}
bbset syn.poweropt.PowerSaveStep     {0.05}                                                           {Power saving step value for histogram, only for reporting}
bbset syn.poweropt.PowerSaveThresholdPercentage {0.80}                                                           {To actually filter XOR gating candidate, percentage value}
bbset syn.poweropt.PowerSaveAbsoluteValue {.00000000001}                                                   {Aboslute value of power for filtering XOR gating candidate}
bbset syn.poweropt.PreXORGatingMinSlackMargin {50}                                                             {Min slack margin for filtering XOR gating candidate}
bbset syn.poweropt.PostXORGatingMinSlackMargin {20}                                                             {After implementing XOR gating, min slack margin for filtering XOR gatind candidate}
bbset syn.poweropt.Distance          {100}                                                            {max distance to group flops}
bbset syn.poweropt.AddXOROptions     { -skip_async_check -force -max_distance 100000}                 {XOR options }  
bbset syn.poweropt.ReportingFields   {flops +icgcs +gates avg_data_freq clk_freq enable_freq orig_power cglar_power save_power clock_power_save pct_redn orig_slack new_slack slack_penalty orig_cgen_slack cgen_new_slack cgen_slack_penalty} {Fields for reporting}
bbset syn.poweropt.DebugReportingFields {flops +icgcs +gates avg_data_freq clk_freq enable_freq orig_power cglar_power save_power clock_power_save pct_redn min_data_freq max_data_freq design_slack user_slack orig_slack new_slack slack_penalty design_cgen_slack user_cgen_slack orig_cgen_slack cgen_new_slack cgen_slack_penalty design_location user_location} {Fields for debug reports}
bbset syn.poweropt.scenario          {}                                                               {scenario for lib setup}
bbset syn.poweropt.XORGatingLibCells {ALICG_D8_N_* XOR?_D?_N_* XNOR?_D?_N_* OR?_D?_N_* AND?_D?_N_*}   {Libs for xor gating}
bbset syn.poweropt.EnableActivityFlow {0}                                                              {To enable Acitivty flow}
bbset syn.Checks                     {timing_attribute}                                               {Export stage checks}
bbset syn.InlineChecks               {protean}                                                        {All stage inline checks (Adds to runtime)}
bbset syn.check.PrioritizeStageList  {0}                                                              {By default the check sequence is syn.Checks and then syn.STAGE.Checks . syn.STAGE.Checks will be done first if this is enabled}
bbset syn.EnableExportNode           {True}                                                           {To enable parallel reporting}
bbset syn.InlineReports              {var_overwrite_check protean}                                    {Main stage inline reports}
bbset syn.Reports                    {dont_use_rtl dont_touch}                                        {Export stage reports}
bbset syn.elaborate.Reports          {netlist_summary dont_touch_size_only_rtl min_pulse_width min_period_violations latch} {Default reporting in elaborate stage}
bbset syn.synth.Reports              {app_options job_info lib_cell_purpose min_pulse_width min_period_violations activity layer_info clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells check_mv_design b2b_flop} {Default reporting in synth stage}
bbset syn.synthdft.Reports           {nonreset_flops flop_count cell_hierarchy_stats 1design power}   {Default reporting in synthdft stage}
bbset syn.poweropt.Reports           {cell_hierarchy_stats cell_stats memory_stats datapath power timing multibit clock dont_use_touch design_rule_violation synchronizer io_constraints} {Default reporting in synthdft stage}
bbset syn.report.PrioritizeStageList {0}                                                              {By default the report sequence is syn.Reports and then syn.STAGE.Reports . syn.STAGE.Reports will be done first if this is enabled}
bbset syn.report.Hierarchy.ReportLevel {4}                                                              {hierarchical level that been reported if a hierarchy donesn't belong to any defined hierarchy.}
bbset syn.report.Hierarchy.HierarchyPatterns {[bbget .pnr.report.Hierarchy.HierarchyPatterns]}                {hierarchy patterns for generate_cell_area_count_report}
bbset syn.report.Hierarchy.ValidCategories {[bbget .pnr.report.Hierarchy.ValidCategories]}                  {List of categories names that is valid for hierarchy generate_cell_area_count_report}
bbset syn.report.StdcellPatterns.Physical {[bbget .pnr.report.StdcellPatterns.Physical]}                   {physical stdcell category and pattern for generate_cell_area_count_report}
bbset syn.report.StdcellPatterns.NonPhysical {[bbget .pnr.report.StdcellPatterns.NonPhysical]}                {nonphysical stdcell category and pattern for generate_cell_area_count_report}
bbset syn.report.StdcellPatterns.NonPhysicalCellHeight {[bbget .pnr.report.StdcellPatterns.NonPhysicalCellHeight]}      {nonphysical stdcell category and pattern for cell height in generate_cell_area_count_report}
bbset syn.report.IOPatterns.IO       {[bbget .pnr.report.IOPatterns.IO]}                              {IO category and pattern for generate_cell_area_count_report}
bbset syn.report.MacroPatterns.Memory {[bbget .pnr.report.MacroPatterns.Memory]}                       {memory macros category and pattern for generate_cell_area_count_report}
bbset syn.report.MacroPatterns.Ip    {[bbget .pnr.report.MacroPatterns.Ip]}                           {ip macros category and pattern for generate_cell_area_count_report}
bbset syn.scenarios.Scenarios        { func_NM.ssgnp-NM-0-cworst_ccworst_t func_NM.ssgnp-NM-125-rcworst_ccworst_t func_NM.ffgnp-NM-125-rcworst_ccworst func_NM.ffgnp-NM-m25-cworst_ccworst func_NM.tt-NMP-85-cworst_ccworst_t shift_NM.ssgnp-NM-125-rcworst_ccworst_t shift_NM.ffgnp-NM-125-rcworst_ccworst_t shift_NM.ffgnp-NM-125-rcworst_ccworst capture_NM.ssgnp-NM-125-rcworst_ccworst_t capture_NM.ffgnp-NM-125-rcworst_ccworst capture_NM.ffgnp-NM-m25-cworst_ccworst capture_NM.ssgnp-NM-0-cworst_ccworst_t } {analysis views for lib preparation}
bbset syn.scenarios.IncrementalScenarios {}                                                               { # define incremental scenarios that been added in implementation stages}
bbset syn.scenarios.SaifFiles        {}                                                               { # SaifFile definition: {scenario instance_name saif_file}}
bbset syn.scenarios.status.Default   {
                                      {func_NM.ssgnp-NM-0-cworst_ccworst_t            {setup active max_trans max_cap min_cap}}
                                      {func_NM.ssgnp-NM-125-rcworst_ccworst_t         {setup        max_trans max_cap min_cap}}
                                      {func_NM.ffgnp-NM-125-rcworst_ccworst           {hold         max_trans max_cap min_cap}}
                                      {func_NM.ffgnp-NM-m25-cworst_ccworst            {hold         max_trans max_cap min_cap}}
                                      {func_NM.tt-NMP-85-cworst_ccworst_t             {leakage dynamic active}}
                                      {shift_NM.ssgnp-NM-125-rcworst_ccworst_t        {setup active max_trans max_cap min_cap}}
                                      {shift_NM.ffgnp-NM-125-rcworst_ccworst          {hold         max_trans max_cap min_cap}}
                                      {capture_NM.ssgnp-NM-0-cworst_ccworst_t         {setup        max_trans max_cap min_cap}}
                                      {capture_NM.ffgnp-NM-125-rcworst_ccworst        {hold         max_trans max_cap min_cap}}
                                      {capture_NM.ffgnp-NM-m25-cworst_ccworst         {hold         max_trans max_cap min_cap}}
                                      } {analysis view for set analysis_view}
bbset syn.scenarios.status.DefaultExport {[bbget .syn.scenarios.status.Default]}                          {Default scenario/view status for all export stages. This is getting from .syn.scenarios.status.Default by default}
bbset syn.Exports                    {stage_netlist netlist lec_map macro_list}                       {stage exports} 
bbset syn.elaborate.Exports          {script def lef}                                                 {Default exports in setup stage}
bbset syn.synth.Exports              {}                                                               {Default exports in floorplan stage}
bbset syn.synthopt.Exports           {}                                                               {Default exports in floorplan stage}
bbset syn.synthdft.Exports           {}                                                               {Default exports in placeopt stage}
bbset syn.synthdftopt.Exports        {netlist lec_map macro_list spef}                                {Default exports in placeopt stage}
bbset syn.floorplan.Exports          {}                                                               {Default exports in placeopt stage}
bbset syn.InlineExports              {upf macro_list}                                                 {Main stage inline exports (Adds to runtime)}
bbset syn.elaborate.InlineExports    {stage_netlist}                                                  {Inline exports in setup stage}
bbset syn.synth.InlineExports        {stage_netlist netlist macro_list def}                           {Inline exports in floorplan stage}
bbset syn.synthopt.InlineExports     {pd_to_tweaker macro_list stage_netlist}                         {Inline exports in placeopt stage}
bbset syn.synthdft.InlineExports     {pd_to_tweaker macro_list}                                       {Inline exports in clockopt stage}
bbset syn.synthdftopt.InlineExports  {pd_to_tweaker def scan_def lef netlist macro_list}              {Inline exports in clockopt stage}
bbset syn.floorplan.InlineExports    {def upf}                                                        {Default exports in placeopt stage}
bbset syn.fc2genushandoff.CreateTestCase {0}                                                              {Create test case for cadence}
bbset syn.fc2genushandoff.Tool       {genus}                                                          {Tool for fc2genushandoff satge}
bbset syn.fc2genushandoff.SaveCallbacks {}                                                               {Callbacks after which we save design}
bbset syn.fc2genushandoff.StartCallback {}                                                               {Callback to start the flow from}
bbset syn.fc2genushandoff.ContinueOnError {0}                                                              {to enable/disable continue_on_error app var}
bbset syn.fc2genushandoff.RtlModulesToPreserve {[bbget .syn.elaborate.RtlModulesToPreserve]}                    {RTL modules to be preserved in synthesis}
bbset syn.fc2genushandoff.RtlSeqModulesToPreserve {[bbget .syn.elaborate.RtlSeqModulesToPreserve]}                 {RTL Sequential modules to preserved in synthesis}
bbset syn.fc2genushandoff.RTLDontTouchPatterns {[bbget .syn.elaborate.RTLDontTouchPatterns]}                    {RTL Dont touch patterns}
bbset syn.fc2genushandoff.RTLSizeOnlyPatterns {[bbget .syn.elaborate.RTLSizeOnlyPatterns]}                     {RTL size only patterns}
bbset syn.fc2genushandoff.InputMMMCFile {[bbget .info.BOB_RUN_DIR]/syn/fc2genushandoff/outs/mmmc.tcl}    {Input MMMC file}
bbset syn.fc2genushandoff.InputLEFListFile {[bbget .info.BOB_RUN_DIR]/syn/fc2genushandoff/outs/lef.list}    {Input lef file}
bbset syn.fc2genushandoff.BlockAbstractionDesigns {[bbget .syn.elaborate.BlockAbstractionDesigns]}                 {Block abstraction designs}
bbset syn.fc2genushandoff.PreviousStage {[lindex [bbget .syn.Stages] [expr [lsearch [bbget .syn.Stages] "fc2genushandoff"] - 1]]} {Stage before fc2genushandoff}
bbset syn.fc2genushandoff.InputUPFFile {[bbget .info.BOB_RUN_DIR]/syn/[bbget .syn.fc2genushandoff.PreviousStage]/outs/[bbget .info.BLOCK].final.upf} {Input UPF file}
bbset syn.fc2genushandoff.InputNetlist {[bbget .info.BOB_RUN_DIR]/syn/[bbget .syn.fc2genushandoff.PreviousStage]/outs/[bbget .info.BLOCK].logical.v.gz} {Mapped Netlist path from fc}
bbset syn.fc2genushandoff.InputDEFFile {[bbget .info.BOB_RUN_DIR]/syn/[bbget .syn.fc2genushandoff.PreviousStage]/outs/[bbget .info.BLOCK].def.gz} {Input def file}
bbset syn.fc2genushandoff.ReadDEFArgs {[bbget .syn.elaborate.ReadDEFArgs]}                             {Args for read_def command}
bbset syn.genus.LogRules             {
                                      {GENUS-78 INFO  {.* optimization (Phase|summary|complete)}}
                                      {GENUS-79 INFO  {\\\\*\\\\*\\\\* (Start|Finish)}}
                                      {GENUS-80 INFO  {\\\\*\\\\* GigaOpt| Begin: }}
                                      {GENUS-88 ERROR {Error}}
                                      {GENUS-89 ERROR {\\\\*\\\\*Error}}
                                      {GENUS-90 ERROR {GENUS-ERROR}}
                                      {GENUS-92 FATAL {GENUS-FATAL}}
                                      {GENUS-93 INFO  {GENUS-INFO}}
                                      } {List of Genus rules used to process the log file}
bbset syn.genus.EnableUnifiedMetrics {False}                                                          {To dump cadence um metrics file}
bbset syn.genus.EnableInlineMetrics  {1}                                                              {Enable stage inline metrics generation and upload}
bbset syn.fc.EnableQORSummary        {True}                                                           {Enable QoR dumping}
bbset syn.fc.QORReportGroups         {elaborate unmapped synth mapped synthopt mapped synthdft mapped synthdftopt placed} {QOR Report Groups}
bbset syn.fc.EnableCompileRuntime    {false}                                                          {to enable compile run time}
bbset syn.fc.LogRules                {
                                      {FC-80 INFO  {\s+(Fusion Compiler|Version)}}
                                      {FC-81 INFO  {Start|.*((H|V) routing|TOTAL VIOLATIONS|FLW-80\\\\d\\\\d|LIC_INFO)}}
                                      {FC-90 ERROR {Error}}
                                      {FC-91 ERROR {FC-ERROR}}
                                      {FC-92 FATAL {FC-FATAL}}
                                      {FC-93 INFO  {FC-INFO}}
                                      } {List of Fusion Compiler rules used to process the log file}
bbset syn.fc.TBCFile                 {}                                                               {TBC file for all synth stages}
bbset syn.fc.synth.TBCFile           {}                                                               {TBC file for synth stage}
bbset syn.fc.LecCompliant            {false}                                                          {FC Lec compliant optimization control}
bbset syn.fc.CompileAutoUngroup      {true}                                                           {FC Lec compliant optimization, auto ungroup control}
bbset syn.fc.CompileBoundaryOptimization {true}                                                           {FC Lec compliant optimization, boundary optimization control}
bbset syn.fc.CompileEnableOutputInversion {true}                                                           {FC Lec compliant optimization, output inversion control}
bbset syn.fc.FormalityLec            {false}                                                          {Run formality lec during every bob svf-export stage node in syn}
bbset syn.fc.EnableDPX               {true}                                                           {Enable DPX solver strategy for Formality lec}
bbset syn.EarlyDesignFlow            {0}                                                              {Used for flow -flushing early designs. Automatically either ignores or repairs input constraints. Helps in runtime reduction by effort reduction}
bbset syn.RemoveAssigns              {1}                                                              {To remove assign statements during optimization}
bbset syn.MBFFExcludeRegsWithExceptions {false}                                                          {To exclude the mbit merging on cells with exceptions}
bbset syn.MBFFIgnoreExceptions       {PATH_GROUP ANNOTATION CLOCK_LATENCY LATENCY_OFFSET}             {To ignore exceptions when banking and debanking multi-bit flops}
bbset syn.IgnoreOutOfDesignShapes    {false}                                                          {Set this to true to not exit the flow when there are shapes outside the design boundary}
bbset syn.PostCmd.PowerStatsReportParser.Enable {1}                                                              {# No Comment}  
bbset syn.ApplyGSPANHierVtSettings   {1}                                                              {Set this to 1 to enable GSPAN VT implementation based on SOC configuration}
bbset syn.GSPANVtConfigYaml          {[bbget .info.CHIP_DIR]/config/gspan_vt_config.yaml}             {Yaml input for SOC GSPAN VT configuration}
bbset syn.LimitLegalizeTrials        {0}                                                              {Set this to 1 to limit the number of legalization trials to be tried}
bbset syn.NumLegalizeTrials          {5000}                                                           {Set this to control how many number of legalization trials to be tried before giving up}
bbset syn.IsDesignAON                {0}                                                              {Set this to 1 if design is AON and there are no PSWs}
bbset syn.PswPreStrategyPattern      {_(PRE|T)_}                                                      {Regexp pattern for PRE or T switch cell strategy}
bbset syn.PswAllStrategyPattern      {_ALL}                                                           {Regexp pattern for ALL switch cell strategy}
bbset libgen.syn.NDMSearchPath       {}                                                               {Use already generated NDMs in runs}
bbset libgen.syn.EnableLinkingNDM    {False}                                                          {When set to True, flow link NDMs from single area specified in libgen.syn.NDMSearchPath }
bbset libgen.syn.EnableMultiThreading {1}                                                              {Reduce NDM generation time}
bbset libgen.syn.ThreadCount         {4}                                                              {NDM geeration speed up factor}
bbset libgen.syn.EnableExtraNDMGeneration {0}                                                              {NDM are generated by for the lef file listed in syn.ExtraLibs.libgen.lef var }
bbset libgen.syn.NDMGenerationUsingLEF {0}                                                              {NDM are generated by for the lef file}
bbset syn.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/syn/CIA/[bbget syn.Tool]/checkers } {CIA checker search path for SYN stage}
bbset syn.config.CIA.ConsolidateSummary {[bbget .info.BOB_RUN_DIR]/syn/synth/logs/cia.summary }          {cia.summary path for Bob Audit System}
bbset syn.config.CIA.CheckDKVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckDKVersion.FunctionMap {
                                      {SYN_1_1 DKVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckPDKVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckPDKVersion.FunctionMap {
                                      {SYN_1_2 PDKVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckGenusVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckGenusVersion.FunctionMap {
                                      {SYN_1_3 GenusVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckLP.Enable  {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckLP.FunctionMap {
                                      {SYN_2_2 LPViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.TimingLint.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.TimingLint.FunctionMap {
                                      {SYN_1_5 TimingLoop}
                                      {SYN_1_6 UnconnectedClock}
                                      {SYN_1_7 DataDrivenbyClock}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckActivityFlowEnabled.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckActivityFlowEnabled.FunctionMap {  { SYN_4_8 ActivityFlowEnabled}  }                             {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckRunTime.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckRunTime.FunctionMap {  { SYN_2_21 RunTime}  }                                        {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckMemories.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckMemories.FunctionMap {  { SYN_4_1 Memories}  }                                        {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckIOConstraints.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckIOConstraints.FunctionMap {  { SYN_3_2 IOConstraints}  }                                   {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckWaterMark.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckWaterMark.FunctionMap {
                                      {SYN_5_3 ValidWatermark}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.CheckLog.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.CheckLog.FunctionMap {
                                      {SYN_2_20 ErrorWarn}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.elaborate.CheckDerates.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.elaborate.CheckDerates.FunctionMap {  { SYN_3_9 Derates}  }                                         {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.elaborate.CheckFloorplan.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.elaborate.CheckFloorplan.FunctionMap {  { SYN_2_22 Floorplan}  }                                      {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.MultibitBanking.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.MultibitBanking.FunctionMap {
                                      {SYN_4_15 MBFFEnabled}
                                      {SYN_4_16 MBFFPercentage}
                                      {SYN_4_17 TimingCritical}
                                      {SYN_4_18 NoMultiBitFlopLibCell}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckLatchCount.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckLatchCount.FunctionMap {
                                      {SYN_2_9 LatchCount}    } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckVtHistogram.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckVtHistogram.FunctionMap {
                                      {SYN_4_2 VtHistogram}    } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckStdCellStats.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckStdCellStats.FunctionMap {
                                      {SYN_4_12 StdCellStats}    } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckClockGating.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckClockGating.FunctionMap {
                                      {SYN_4_5 ClockGating}
                                      {SYN_4_7 ClockGateFanout}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckUngatedFlops.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckUngatedFlops.FunctionMap {
                                      {SYN_4_6 UngatedFlops}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckSynchronizerCount.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckSynchronizerCount.FunctionMap {
                                      {SYN_2_10  TotalSynchronizer}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckTiming.FunctionMap {
                                      {SYN_3_4  WNS}
                                      {SYN_3_5 OptimisationCorner}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckBoundaryOpto.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckBoundaryOpto.FunctionMap {
                                      {SYN_4_4  BoundaryOpto}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckPowerIntent.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckPowerIntent.FunctionMap {  { SYN_2_2 PowerIntent}  }                                     {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckNoBlackbox.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckNoBlackbox.FunctionMap {   {SYN_2_17 NoBlackbox}    }                                   {No synthesis blackboxes}
bbset syn.config.CIA.synth.CheckScanFlops.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckScanFlops.FunctionMap {
                                      {SYN_2_15 ScanFlops}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckAnnotation.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckAnnotation.FunctionMap {
                                      {SYN_4_19 AnnotationPercent}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckClockGatingCoverage.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckClockGatingCoverage.FunctionMap {
                                      {SYN_4_22 ClockGatingCoverage}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synth.CheckTimingLoops.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synth.CheckTimingLoops.FunctionMap {
                                      {SYN_2_14 timingLoops}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckPowerIntent.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckPowerIntent.FunctionMap {  { SYN_2_2 PowerIntent}  }                                     {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.MultibitBanking.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.MultibitBanking.FunctionMap {
                                      {SYN_4_15 MBFFEnabled}
                                      {SYN_4_16 MBFFPercentage}
                                      {SYN_4_17 TimingCritical}
                                      {SYN_4_18 NoMultiBitFlopLibCell}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckLatchCount.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckLatchCount.FunctionMap {
                                      {SYN_2_9 LatchCount}    } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckVtHistogram.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckVtHistogram.FunctionMap {
                                      {SYN_4_2 VtHistogram}    } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckClockGating.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckClockGating.FunctionMap {
                                      {SYN_4_5 ClockGating}
                                      {SYN_4_7 ClockGateFanout}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckUngatedFlops.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckUngatedFlops.FunctionMap {
                                      {SYN_4_6 UngatedFlops}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckAnnotation.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckAnnotation.FunctionMap {
                                      {SYN_4_19 AnnotationPercent}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckClockGatingCoverage.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckClockGatingCoverage.FunctionMap {
                                      {SYN_4_22 ClockGatingCoverage}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckTimingLoops.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckTimingLoops.FunctionMap {
                                      {SYN_2_14 timingLoops}        } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckSynchronizerCount.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckSynchronizerCount.FunctionMap {
                                      {SYN_2_10  TotalSynchronizer}
                                      {SYN_2_11  B2BFlipFlopSynchronizer}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckTiming.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckTiming.FunctionMap {
                                      {SYN_3_4  WNS}
                                      {SYN_3_5 OptimisationCorner}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckBoundaryOpto.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckBoundaryOpto.FunctionMap {
                                      {SYN_4_4  BoundaryOpto}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckDFTViolations.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckDFTViolations.FunctionMap {
                                      {SYN_2_23  DFTViolations}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.synthdft.CheckScanFlops.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.synthdft.CheckScanFlops.FunctionMap {
                                      {SYN_2_15 ScanFlops}
                                      } {define 1:1 mapping for check_id and function}
bbset syn.config.CIA.floorplan.CheckDontTouchCells.Enable {True}                                                           {Flag to enable checker or not}
bbset syn.config.CIA.floorplan.CheckDontTouchCells.FunctionMap {   {SYN_2_6 DontTouchCells}    }                                {Dont Touch Cells are not there}
bbset syn.synthopt.Metrics           {info phystats timing power}                                     {Export stage metrics}
bbset syn.synthdftopt.Metrics        {info phystats timing power}                                     {Export stage metrics}
bbset syn.synthdft.EnableMinimummDistributedScanChains {0}                                                              {bool: User can set it to 1 to enable chain restriction within big hierarchies at the cost of runtime}
bbset syn.synthdft.EnableAutoNoISO   {false}                                                          {bool: Enable dumping and auto application of no_iso strategy(s) on newly created DFT crossings, during complete_dft_power_intent by setting it to true}
bbset syn.synthdft.AutoInsertFeedthruBuffers {1}                                                              {bool: Enables the identification and insertion of buffers in feedthrough location}
bbset syn.synthdft.CustomFeedthruBufferInertionPins {}                                                               {list: User to pass the list of pins based on VCLP feedback where they want flow to analyze and break path with buffer insertion on in between paths}
bbset syn.synthdft.DftIsoCheckerPins {}                                                               {list: User to pass the pin list wanted to check on DFT isolation on - specially meant for SSN ISO cell}
bbset syn.synthdft.AutoConstraintMemoryRopPin {1}                                                              {bool: Enabling auto ROP settings of memory from libs. If user sees runtime hit, can be disabled}
bbset syn.synthdft.ScanClockMixingConfig {none}                                                           {list: Set intest and/or extest to enable clock mixing for that mode(s) only}
bbset syn.synthdft.ExtestMaxChainLength {140}                                                            {int: Extest Max chain length specificatio for scan insertion}
bbset syn.synthdft.IsShiftQgateExcludeEnable {false}                                                          {bool: Q Gating exclusion enable on certain hierarchies}
bbset syn.synthdft.ScanPowerGatingExcludeList {}                                                               {list: list of hierarchies to disable the qgating insertion}
bbset syn.synthdft.ScanPowerGatingMinSlack {1}                                                              {int: Minimum slack above which flop is considered for Q-gating}
bbset syn.synthdft.EnableWrapBypassInSDMode {0}                                                              {bool: to enable wrapper chain bypass with Scan Dump mode signal for non-sswrp blocks without EXT EDT}
bbset syn.synthdft.CtlPipelineConfig {}                                                               {list: List of configs in the form of { -inst <> -module <> -clk <> -input_stages <> -output_stages <> -hier <> }}
bbset syn.synthdft.AutoInferChainConfig {1}                                                              {Enable/Disable Auto Chain assignment}
bbset syn.synthdft.ExtestMode        {}                                                               {Extest Mode}   
bbset syn.synthdft.IntestMode        {}                                                               {Intest Mode}   
bbset syn.synthdft.CodecScanIn       {edt_scan_in}                                                    {Codec/EDT Interncal scan In ports}
bbset syn.synthdft.CodecScanOut      {edt_scan_out}                                                   {Codec/EDT Interncal Scan Out Ports}
bbset syn.synthdft.write_dft_constraints_csv {1}                                                              {Dump out a CSV file expanding all DFT hints/modules on which synth preserve constraints / non-scan are applied}
bbset syn.synthdft.PortsWithForcedDWC {}                                                               {Allow flow to forcibly insert DWC on the port overriding threshold value}
bbset syn.synthdft.GSpanExtClks      {}                                                               {list: Define GSPAN Related external RX clocks}
bbset syn.synthdft.GspanChainPadding {0}                                                              {int: Number of extra chain required for GSPAN for optimal chain count. Can be negative too}
bbset syn.synthdft.GspanPortsRegex   {*_ss_* *__gspan_*}                                              {list: regex that accounts all ports of gspan logic}
bbset syn.synthdft.NonScanFlopsFalse { *u_lcm_core*u_root_clk_gate_dyn_tdr_clk* }                     {list: Hierarchies to set dont_scan_flop attribute as false}
bbset syn.synthdft.CtlFileMap        {}                                                               {list: OCC CTL Module configuration}
bbset syn.synthdft.CtlSearchDir      {[bbget .info.REPO_TOP]/cad/pd-tools/sif/config/ctl }            {list: OCC CTL search path}
bbset syn.synthdft.EnableGTEC        {True}                                                           {bool: Set True to enable Granular TE Control (GTEC) methodology }
bbset syn.synthdft.EnableMAndLBasedGTEC {true}                                                           {bool: to enable intermediate and leaf filtering of GTEC}
bbset syn.synthdft.EnableToolBasedGTEC {0}                                                              {bool: Enable GTEC feature with the virtue of tool methodology and commands}
bbset syn.synthdft.PowerGateTestEnable {}                                                               {Str: Granualar Scan enable pattern list}
bbset syn.synthdft.PowerGateConnectTestEnableConfig {
                                      {-insts *RC_CGIC*}
                                      } {list: GTEC Scan Enable configuration, Example { { -inst <instRegEx> -name <nameConfig> -n_groups <#> } }}
bbset syn.synthdft.EnableArchGTEC    {false}                                                          {bool: Set True to enable Granular TE Control (GTEC) methodology on arch_cg_te (this needs updated manual LEC constraints to pass LEC)}
bbset syn.synthdft.EnableToolBasedPartitionEstimation {1}                                                              {bool: enabling chain calculation for partitions like GSPAN via tool, and vice-versa wrt flow}
bbset syn.synthdft.EnableWaForRtlIcgTeModification {1}                                                              {bool: enabled for a tool bug of modifying RTL ICG TE during wrapping, comment to 0 if tool is fixed with some ETFs}
bbset syn.synthdft.IsoFixOnTPPath    {0}                                                              {bool: user to enable this when it sees ISO or LS cell redundancy due to Testpoint insertion in the path}
bbset syn.synthdft.BypassSecureChainConfig {}                                                               {list: Arguments to bypass chain { { -chains secure_chain_name -mode <pin/port> -clk <optional> -reset <optional> -sff <optional, inserts scan flop> -loc <optional> } }}
bbset syn.synthdft.BypassScanSegmentConfig {}                                                               {list: List of scan segment bypass configs { { -segments <pattern> -name <name> -mode <mode> -clk <clk> -add_lockup true -loc <optional> }}}
bbset syn.synthdft.MsipBypassChainConfig { 
                                      { -chains *pma_chains_bypass* -mode idfd_byp_partition_msip -add_lockup true -tdr_override u_dftss_ufs/dftss_core_inst/ip_dft_mode_gen_inst/ip_dft_mode_gen_tdr_inst_NO_SCAN/ijtag_data_out_19_anchor_buf/SIZEONLY_buf/Z -clk u_dftss_ufs/dftss_core_inst/u_dftss_ufs_ip_dft_wrapper_clk_gen_ap_inst/u_dftss_ufs_ap_occ_test_clk/tessent_persistent_cell_clock_out_mux/SIZEONLY_mux_u0/Z -loc u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns } 
                                      } {list: Arguments to bypass chain { { -chains cotest -mode <pin/port> -tdr_override -clk <optional> -reset <optional> -loc <optional> -add_lockup <optional> } }}
bbset syn.synthdft.SkipLulCheckBetweenPDCrossing {false}                                                          {bool: skip the check for lockup latch in scan chains between flops}
bbset syn.synthdft.ConcatenateOCCDftssChainControl {}                                                               {list: to use a TDR which will be used to for concatenating OCC and DFTSS chains}
bbset syn.synthdft.ScandefWaiver     {fll|pll|phy|mini_occ|prtn|boxcar_cs|aging_sensor|pma|temp_sensor|occ_chain|default_partition_occ} {list: regex of HM which can be skipped for scandef partition check}
bbset syn.synthdft.TestPointTool     {tessent}                                                        {bool: it could be tessent or FC or genus}
bbset syn.synthdft.InputTestPointFile {../testpoint/outs/ufs_top.test_point*.rpt}                      {list: pass the file for testpoint insertion nodes}
bbset syn.synthdft.ControlEnablePin  {[bbget syn.testpoint.ControlEnablePin]}                         {Control pin from all the control TPs}
bbset syn.synthdft.ObserveEnablePin  {[bbget syn.testpoint.ObserveEnablePin]}                         {Control pin from all the observe TPs}
bbset syn.synthdft.RomTestPointModules {}                                                               {list: list of configurations like { { -module <ROMs> -pins <Q*> -sharing <1> } }}
bbset syn.synthdft.SkipRomTestPointInstance {}                                                               {list: list of instances which needed to be skipped, full_name to be provided and no wildcard accepted}
bbset syn.synthdft.RomTestPointControlEnablePin {}                                                               {Control pin from all the ROM based control TPs}
bbset syn.synthdft.RomTestPointClock {}                                                               {Clock for the ROM TPs}
bbset syn.synthdft.EnableXorTestPointInsertion {1}                                                              {bool: Enable testpoint insertion for XOR self-gating logic}
bbset syn.synthdft.XorTestPointEnablePin {}                                                               {list: control pin for XOR gating TPs (not to use the control for default TPI as constraint wise, it is adviced to have separate for granularity and flexibility)}
bbset syn.synthdft.EnableSRLatchBypass {true}                                                           {bool: user can turn it off based on any issue seen wrt the feature}
bbset syn.synthdft.SubCoreWrapChainBypControl {}                                                               {Port/pin to control subcore bypass feature}
bbset syn.synthdft.ReserveEdtChainConfig {}                                                               {list: Configure the EDT to reserve certain chains for scan stitching in format { { <edt1_name>  <chain_count_to_reserve> } { <edt1_name>  <chain_count_to_reserve> } }}
bbset syn.synthdft.TckClock          {idft_ijtag_tck}                                                 {Clcoks used for test setup in the design}
bbset syn.synthdft.InsertSelfGatingSEOverride {0}                                                              {bool: set it to 1 to enable gating of SE for self-gating coverage in capture mode}
bbset syn.synthdft.SelfGatingSEOverrideTdr {}                                                               {provide the TDR to be used as Mux select line for controlling SE override}
bbset syn.synthdft.CSRClockGateTestEnableOverrideTDR {}                                                               {list: provide a spare TDR for controlling the OR override logic of TE pin of CSR clock gate}
bbset syn.synthdft.ForceRehookResyncFlop {1}                                                              {bool: set to 1 to enable rehooking of resync flop via flow methodology}
bbset syn.synthdft.EnableExtensiveReporting {0}                                                              {to enable more reporting in the flow}
bbset syn.synthdft.BufferPattern     {BUFF*}                                                          {synthdft buffer patterns}
bbset syn.synthdft.ICGPattern        {*CKLNQZPDD*}                                                    {synthdft ICG patterns}
bbset syn.synthdft.MuxPattern        {*MUX2D*}                                                        {synthdft Mux patterns}
bbset syn.synthdft.OrPattern         {*OR2D*}                                                         {synthdft OR patterns}
bbset syn.synthdft.AndPattern        {*AN2D*}                                                         {synthdft AND patterns}
bbset syn.synthdft.InvPattern        {INV*}                                                           {synthdft Inverter patterns}
bbset syn.synthdft.XorPattern        {*XOR2D*}                                                        {synthdft Xor patterns}
bbset syn.synthdft.SDFFPattern       {SDFQT*}                                                         {synthdft SDFF patterns}
bbset syn.synthdft.DFFPattern        {DF*}                                                            {synthdft DFF pattern posedge Q, without reset}
bbset syn.synthdft.NegLatchPattern   { LNQ*  }                                                        {synthdft Negative Latch patterns}
bbset syn.synthdft.SecurityInstanceConfig {{ -codec u_dftss_ufs/fescan_tessent_edt_int_c0_dft_wrapper_inst/ufs_top_rtl_fescan_tessent_edt_int_c0_inst -pats {*AO*KMM*crypto_cfg_reg_i*}} } {list: Used defined chains. Format List command arguments { { -codec U_DFT_TOP_IP_0 -pats {Secure Hier Regexps} -tdr_override {} } }}
bbset syn.synthdft.ScanDumpMode      {idfd_sd_mode}                                                   {Scan Dump mode pin. Ex idfd_sd_mode}
bbset syn.synthdft.EnableSecurityInstanceFiltering {1}                                                              {bool: turn it off for faster runtime when the patterns' EDT are known}
bbset syn.synthdft.OptimizeDFTDRC    {1}                                                              {bool: To eliminate redundant DFT DRC checks in the flow}
bbset syn.synthdft.DisableCtlConstraints {1}                                                              {Disable the controllability and observability check for internal cutpoints during write_dft_abstract_model}
bbset syn.synthdft.WriteCTL          {0}                                                              {Enable CTL write out during synthdft}
bbset syn.synthdft.ProceedWithMissingCTLs {0}                                                              {Enable this for designs which has some CTLs missing or has nonscan memories}
bbset syn.synthdft.SynthdftEtfPathConfig { {-version 23.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/23_13_ETF_CCR_3111407_3112986_3114370_3118526_3120244_3053853.etf} {-version 23.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCR3117367_2503130515_cloning_icg_13mar.etf} {-version 21.15 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/BugId_243739096_245062865_1500_Genus_21.15.etf} {-version 22.12 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCR2787295_2305160559.etf} {-version 22.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCR2809336_2306120835.etf} {-version 22.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCR2923636_318462312_2213.etf} {-version 22.15 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCR2923636_318462312_2215.etf} {-version 22.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/318462312_270712190_CCR2923636_CCR2907761_2213.etf } {-version 22.15 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/318462312_270712190_CCR2923636_CCR2907761_2215.etf} {-version 22.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/315733069_CCR2914001_2213.etf} {-version 22.15 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/315733069_CCR2914001_2215.etf} {-version 22.13 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCMPR02971012_CCMPR02923636_CCMPR02907761_CCMPR02914001_CCMPR02943510_merged_2213.etf} {-version 22.15 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCMPR02971012_CCMPR02923636_CCMPR02907761_CCMPR02914001_CCMPR02943510_merged_2215.etf} {-version 22.16 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/CCMPR02971012_2216.etf} {-version 22.16 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/merged_348575550_347156113_349375003_321015768_2216-e075.etf} {-version 23.12 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/genus/synthdft/merged_etf_19nov24_Genus_23.12-e060_1.etf} {-version U-2022.12-SP6 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/fc/external_scripts/tbc_customer_final_wa_fc_mux_temporary_fix_for_tool_exit_at_dft.tbc -tool fc} {-version U-2022.12-SP6 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/fc/external_scripts/tbc_customer_final_wa_fc_dft_skip_latch_based_iso_cells_during_wrapper_analysis.tbc -tool fc} {-version V-2023.12 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/fc/external_scripts/tbc_customer_final_wa_fc_dft_skip_latch_based_iso_cells_during_wrapper_analysis.tbc -tool fc} {-version V-2023.12 -etf [bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/fc/external_scripts/tbc_customer_final_wa_fc_dft_scan_allow_reconnecting_se_pins_of_hierarchical_ctl_instances_20241121.tbc -tool fc} } {path to Wrapper Cell analysis bug fix on dont_scan flops and feedthru paths crossing multi PDs}
bbset syn.synthdft.GspanClkHookupPin {*gspan*GEN_CLOCK_LOOP*gsl_clk_mux_dft*gpl_clk_mux*SIZEONLY_mux_u0} {Gspan Hookup mux string}
bbset syn.synthdft.AllowMBITCustomSegmentCreation {0}                                                              {Enabling custom scan segment creation on MBIT cells for unusable lib-cells, to proceed with scan stitching}
bbset syn.synthdft.DftPseudoStaticPorts {[bbget .syn.synthdft.ICGHookupControl]  [bbget .syn.synthdft.FFHookupControl]  [bbget .syn.synthdft.Constant0]  [bbget .syn.synthdft.Constant1]  [bbget .syn.synthdft.ScanEnables]  [bbget .syn.synthdft.TestModes]  [bbget .syn.synthdft.ResetsAlow]  [bbget .syn.synthdft.ResetsAhigh]  [bbget .syn.synthdft.TestModesLEC0]  [bbget .syn.synthdft.TestModesLEC1]  [bbget .syn.synthdft.ExcludeWrapperPorts]} {#pseudo static ports}
bbset syn.synthdft.EnablePowerAwareStitching {1}                                                              {bool: Enable power aware chain stitching - each chain having flops belonging to single power domain}
bbset syn.synthdft.feScanTool        {tessent}                                                        {Front-end Scan insertion tool}
bbset syn.synthdft.SkipCollateralChecks {0}                                                              {To skip collateral checks during synthdft}
bbset syn.synthdft.ProceedWithCollateralCheckFailure {1}                                                              {To proceed with collateral checks failure during synthdft}
bbset syn.synthdft.SharedBoundingEn  {1}                                                              { Shared bounding En/Dis}
bbset syn.synthdft.WrapperSWCInTh    {3000}                                                           {Shared WC input threshould}
bbset syn.synthdft.WrapperSWCOutTh   {3000}                                                           {Shared WC input threshould}
bbset syn.synthdft.WrapperExFeedThr  {0}                                                              { Feedthrough default included}
bbset syn.synthdft.WrapperHMFeedbackOpt {}                                                               { default invertor else choose xor }
bbset syn.synthdft.WrapperGSPANPorts {}                                                               { User should update regexps covering all ports where SWC analysis will be done. Note, this can be risky as it will restrict SWC analysis for all other ports which is not covered here. Only if we are certain, use it}
bbset syn.synthdft.WrapperPreview    {0}                                                              { WC preview. No insertion take place. Tool suspends after showing the preview. Can be useful for experiment}
bbset syn.synthdft.InternalBlocks    {}                                                               {Users to set lower PPs/APs for proper wrapper analysis}
bbset syn.synthdft.WrapperForceDWCOnDanglingPorts {0}                                                              {bool: set it to 1 in FC for inserting wrappers on dangling ports}
bbset syn.synthdft.ExtSWCSynthCGTEControl {}                                                               {Extest mode Capture ICG control Ex. odft_synth_ext_cg_te}
bbset syn.synthdft.EnableHybridICGCloning {1}                                                              {bool: set it to 0 to disable hybrid ICG cloning and just do hookup of wrapper ICG with ExtSWCSynthCGTEControl (synth_ext_cg_te)}
bbset syn.synthdft.ICGSafeFlopLimit  {30}                                                             {value: this is to set the fair limit of flops that can be driven by an ICG}
bbset syn.synthdft.ExtCoreCGEnControlReg {ip_dft_cg_te_controller}                                        {DFTSS elements to be stitched in seperate scan chains instance regexp }
bbset syn.synthdft.ExtCoreDftssElements {ip_dft_rst_mux_inst ip_dft_control_inst ip_dft_wrapper_clk_gen_inst} {DFTSS elements to be stitched in seperate scan chains instance regexp }
bbset syn.synthdft.ExtestCoreCGReWireEn {1}                                                              { External Core CG Enable Feature. Set to 0 to SWC Flops ICG SE control to odft_synth_ext_cg_te}
bbset syn.synthdft.EnableExtCgcCloning {0}                                                              {bool: to enable cloning of CGCs driving both EXT and INT flops}
bbset syn.synthdft.RevertToOldWrapperCgcHookupCommand {1}                                                              {bool: enabling older wrapper CGC hookup methodology - b/265651942}
bbset syn.synthdft.ShareWChainsAdjacentCountNoExEDT {0}                                                              {integer: Allocate and Connect Wrapper chains when No ExEDT}
bbset syn.synthdft.ReserveWChainsAdjacentCountExEDT {0}                                                              {integer: Allocate and Connect Wrapper chains when No ExEDT}
bbset syn.synthdft.WrapperGuardConfig {}                                                               {list: { { -state < 0 | 1 > -guard_control <some_tdr> -ports {*} } }}
bbset syn.synthdft.EnableScanGroupingFlow {0}                                                              {bool: Enable chain stitching with latest scan group flow}
bbset syn.synthdft.EnableRetentionAwareStitching {0}                                                              {bool: Enable separate chains per group with only retention flops and adding special bypass}
bbset syn.synthdft.LogicRetentionBypassMode {}                                                               {Provide the TDR output pin or port used for driving logic retention test mode}
bbset syn.synthdft.EnableFlowBasedHeterogeneityFix {1}                                                              {Make the connections homogeneous forcefully by port cloning}
bbset syn.synthdft.OCCInstName       {}                                                               {OCC instance regexp }
bbset syn.synthdft.DFTSSChainElementsName {dftss*dftss_core_inst}                                          {DFTSS elements to be stitched in seperate scan chains instance regexp }
bbset syn.synthdft.ErrScanChainHookup {0}                                                              {Scan Chain Stitching error. }
bbset syn.synthdft.GenerateGreyBoxnetlist {0}                                                              {Grey box generation Enable. Default Disabled }
bbset syn.synthdft.GreyBoxRemoveInstRegexp {}                                                               {Instances to be deleted during Grey box generation process }
bbset syn.synthdft.GreyBoxPreserveInstRegexp {}                                                               {Instances to be preserved during Grey box generation process }
bbset syn.synthdft.GreyBoxWrapCellRegexp {}                                                               { Grey box generation DWC Wrap cell regexp }
bbset syn.synthdft.ExCodecCompaInAncBuf {extest_output_buf_dont_touch_}                                  {Extest EDT Interncal Compacter In ports}
bbset syn.synthdft.ExCodecDecomOutAncBuf {extest_mux_out_dft_anchor_buf_}                                 {Extest EDT Interncal Decom out ports}
bbset syn.synthdft.IntCodecCompaInAncBuf {extest_output_buf_dont_touch_}                                  {Intest EDT Interncal Compacter In ports}
bbset syn.synthdft.IntCodecDecomOutAncBuf {extest_mux_out_dft_anchor_buf_}                                 {Intest EDT Interncal Decom Out ports}
bbset syn.synthdft.ICGSkipScanEnableConnectInstancesExclude { *root_clk_gate_dyn_tdr* }                                      {# No Comment}  
bbset syn.synthdft.ICGForceScanEnableConnectInstances {}                                                               {list: Arguments to be used { { -driver <> -icgs { icg1 icg2 icg3 ... } } }}
bbset syn.synthdft.ReadCTLWrtInstance {0}                                                              {bool: Enable reading CTL like memory CTL(s) wrt instance(s)}
bbset syn.synthdft.ProceedWithHierarchicalConstraints {1}                                                              {bool: can be set to 1 if in some design scenarios, we are forced to use hierarchical constraints}
bbset syn.testpoint.AdditionalInputNetlists {}                                                               {list: list of incremental input files}
bbset syn.testpoint.Libs             {}                                                               {list: provide mdt and fs_lib file path}
bbset syn.testpoint.LibsDir          {../libgen}                                                      {list: provide the directory from which fs_lib and mdt need to be picked}
bbset syn.testpoint.BlackBoxList     {dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns}                          {list: blcok box files list}
bbset syn.testpoint.ATEClocks        {[bbget syn.synthdft.ATEClocks]}                                 {list: List of clocks}
bbset syn.testpoint.Constant1        {[bbget syn.synthdft.Constant1]}                                 {list: List of Constant 1}
bbset syn.testpoint.Constant0        {[bbget syn.synthdft.Constant0]}                                 {list: List of Constant 0}
bbset syn.testpoint.ResetsAlow       {[bbget syn.synthdft.ResetsAlow]}                                {list: List of Resets active low}
bbset syn.testpoint.ResetsAhigh      {[bbget syn.synthdft.ResetsAhigh]}                               {list: List of Resets active high}
bbset syn.testpoint.NonScanFlops     {[bbget syn.synthdft.NonScanFlops]}                              {list: List of Non scan instances}
bbset syn.testpoint.NonScanFlopsFalse {[bbget syn.synthdft.NonScanFlopsFalse]}                         {list: List of Non scan instances whihc needs to be scanned}
bbset syn.testpoint.ApplyScanEnable  {1}                                                              {bool: User can turn if off to not apply scan enable in the run}
bbset syn.testpoint.TestPointType    {edt}                                                            {list: can be of type edt (for pattern count, RR in SpyGlass) lbist_edt lbist (for coverage, untestable and atpg_conflict in SpyGlass)}
bbset syn.testpoint.NoTestPointFile  {}                                                               {No testpoint insertion file path}
bbset syn.testpoint.CoverageTarget   {99}                                                             {Coverage targeted - works only for lbist type of TPs}
bbset syn.testpoint.PatternCountTarget {50000}                                                          {Pattern count targeted - works only for lbist type of TPs}
bbset syn.testpoint.TestPointClock   {}                                                               {User to provide it as dynamic_tdr_clk for sswrps, wrp_clk for APs and major system_clock for PPs}
bbset syn.testpoint.TotalTPCount     {0.5%}                                                           {details here - https://docs.google.com/presentation/d/1iRU_q_4vXYlICYhNHVf4YwVJJ4C6XuTW4bJgBaAS4wc/edit#slide=id.g22de173f3a7_1_669}
bbset syn.testpoint.ControlShare     {4}                                                              {int: Sharing of control test point}
bbset syn.testpoint.ObserveShare     {4}                                                              {int: Sharing of observe test point}
bbset syn.testpoint.MaxControlPointsPerPath {1}                                                              {int: Maximum control TPs per path}
bbset syn.testpoint.ControlEnablePin {}                                                               {pin/tdr to control the path of control TPs}
bbset syn.testpoint.ObserveEnablePin {}                                                               {pin/tdr to observe teh path of observe TPs}
bbset syn.testpoint.InputUPFFile     {}                                                               {Provide the UPF for testpoint flow}
bbset syn.testpoint.EnablePowerAwareTestpoint {1}                                                              {bool: Read proper UPF provided and enabled power aware testpoint analysis and insertion}
bbset syn.testpoint.MultiThreadingAccessCode {+nysgvB2vIfblYCEul83Xb9Xqx0elHJF8ElHopp0J7A=}                   {access code for multi threading enablement in TP flow for tessent}
bbset syn.testpoint.EnableTimingAwareTestpoint {0}                                                              {bool: User to enable it to 1 before start of synth (if required) so that necessary critical paths are generated in Synth and excluded in testpoint flow}
bbset syn.testpoint.MaxTimingCriticalExcludeTPIPaths {100}                                                            {Provide the maximum paths to be reported for TPI exlusion based on slack}
bbset syn.testpoint.MaxSlackExcludeTPI {1}                                                              {Provide the maximum slack, below which paths will be considered as critical path and TPI will be skipped}
bbset syn.testpoint.InputICL         {}                                                               {User can put the ICL from fe_release area for better analysis wrt TDR exclusion and UPF}
bbset syn.testpoint.NoTPIPaths       { *RC_CGIC_*INST/TE *SIZEONLY_latch_u0/TE *UPF_ISO*/ISO *UPF_ISO*/NSLEEP *memory*/DSLP *memory*/SD *memory*/ISORAM *memory*/ISORET *memory*/LSLP *memory*/REDENIO *memory*/FADIO* *memory*/DFTBYP *memory*/DSLPLV *memory*/DSLPNDIO *memory*/TURBO *memory*/TURBOA *memory*/TURBOB *memory*/SAPW } {Update necessary pins for not inserting any TestPoint(s) on the path}
bbset syn.testpoint.EnableMultiThreading {0}                                                              {User to set it to 1 to enable multiprocessing and multithreading (as per required)}
bbset syn.testpoint.DistributedCores {2}                                                              {User to set it to 2 or 4 based on the requirement}
bbset syn.testpoint.LsfHost          {localhost}                                                      {User can set it either to localhost (default) or to generic to enable multi-threading or multi-processing, respectively}
bbset syn.testpoint.LsfCores         {4}                                                              {User can set it based on requirement, default being 4}
bbset syn.testpoint.LsfRam           {64000}                                                          {User can set it based on requirement, default being 64000}
bbset syn.testpoint.ObserveBlockedFaults {off}                                                            {An optional switch specifies that the tool insert observe points at locations where it helps in detecting faults because of a blocked path}
bbset syn.testpoint.CascadedIcgSynchronization {off}                                                            {An optional switch specifies to insert test points for improving clock controllability of cascaded clock gaters. By default, the tool does not insert any test points specifically for improving clock controllability}
bbset syn.testpoint.AllowInXboundingRegions {off}                                                            {An optional switch specifies whether or not to allow the insertion of test points in the Xbounding regions identified during X-bounding analysis}
bbset syn.testpoint.ExcludeClockDomains {off}                                                            {An optional switch that prevents the tool from inserting test points at any gate within a specified clock domain}
bbset syn.testpoint.TPSharingRestrictions {1}                                                              {An option to limit sharing of test points within the same logical hierarchyAn option. Current tool defaults to 2}
bbset rtla.Stages                    {elaborate}                                                      {RTL-A flow stages}
bbset rtla.TechFile                  {}                                                               {PNR Tech file} 
bbset rtla.Cores                     {8}                                                              {NC cores requested}
bbset rtla.RAM                       {64000}                                                          {NC RAM requested}
bbset rtla.Resources                 {}                                                               {NC additional resources}
bbset rtla.ScaleFactor               {10000}                                                          {tech file scale factor}
bbset rtla.elaborate.NoTechLibrary   {0}                                                              {Skip loading in tech library. Useful for RTL only flow. Can skip libgen if using this option}
bbset rtla.elaborate.InputMMMCFile   {../libgen/outs/mmmc.tcl}                                        {MMMC file}     
bbset rtla.elaborate.RTLDefines      {}                                                               {RTL Defines}   
bbset rtla.elaborate.HDLParams       {}                                                               {HDL Params, if not defined in includes}
bbset rtla.elaborate.RTLFileList     {}                                                               {RTL File list} 
bbset rtla.elaborate.RTLSearchPath   {}                                                               {RTL search path}
bbset rtla.elaborate.InputDEFFile    {}                                                               {Input DEF File(s)}
bbset rtla.elaborate.FloorplanTCLFiles {}                                                               {Input floorplan tcl file(s)}
bbset rtla.elaborate.InputUPFFile    {}                                                               {Input UPF File}
bbset rtla.elaborate.BlackBoxList    {}                                                               {List of modules to be blackboxed}
bbset rtla.elaborate.Restructure     {0}                                                              {Activate/deactivate the restructuring flow}
bbset rtla.elaborate.RestructureConfiguration {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/rtla/tcl/options.tcl} {Restructure configuration file}
bbset rtla.elaborate.RestructureList {}                                                               {Dictionary for restructring blocks and corresponding black boxes}
bbset rtla.elaborate.RestructureCommands {}                                                               {Restructure command file}
bbset rtla.elaborate.VcsRead         {1}                                                              {Enable VCS style file list reading}
bbset rtla.elaborate.VcsOpts         {-sverilog -timescale=1ns/1ps -lca -debug_access+fwn -assert svaext} {VCS style options}
bbset rtla.elaborate.AnalyzeOpts     {}                                                               {Additional analyze options}
bbset rtla.elaborate.VerifyPartitionFlist {0}                                                              {Verify generated partition file list in synthesis tool}
bbset rtla.elaborate.ExportHDLParams {0}                                                              {dump out the HDL Parameters for each partition}
bbset rtla.elaborate.Feedthrough     {0}                                                              {Enable feedthrough in RTL-A flow}
bbset rtla.elaborate.FloorplanTcl    {}                                                               {input tcl script from floorplan stage}
bbset rtla.elaborate.FloorplanDef    {}                                                               {input def file}
bbset rtla.elaborate.TopologicalMap  {}                                                               {input topological map for feedthrough control}
bbset rtla.elaborate.ExcludeBlackBoxModule {1}                                                              {exludes the black boxed module from the partition filelist b/217496736}
bbset BundleTag                      {}                                                               {# wrap bundle tag to fetch from for signoff runs}
bbset pex.Tool                       {starrc}                                                         {# extraction tool}
bbset pex.TopDefFile                 {[bbfiles -bundles chipfinish -filetype def -purpose pex]}       {top def file for extraction}
bbset pex.TopFillFile                {[bbfiles -bundles dummyfill -filetype fill -category beol]}     {fill oasis file of top block for extraction}
bbset pex.FillOasisFiles             {[bbfiles -bundles dummyfill -subblocks all -filetype fill -category beol]} {fill oasis file(s) of sub-blocks for extraction}
bbset pex.FillBlockName              {ufs_top_beol_ufs_top}                                           {fill oasis block name for extraction}
bbset pex.FillBlockNameMappingRule   {(.*) \\1_beol_\\1}                                              {rule to map subblock's def block name to subblock's metall fill block name}
bbset pex.UploadtoWrap               {0}                                                              {Skip uploading to wrap}
bbset pex.MacroDefFiles              {[bbfiles -bundles chipfinish -subblocks all -filetype def -purpose handoff]} {sub-block def file for extraction }
bbset pex.MacroOasisFiles            {}                                                               {sub-block OASIS files, instead of GDS files, for extraction }
bbset pex.EnableMpin                 {0}                                                              {0 - Disable MPIN feature (default), 1 - Enable MPIN feature}
bbset pex.MpinTop                    {0}                                                              {0 - block level extraction (default), 1 - Top level Extraction}
bbset pex.ShortPinInCellsList        {}                                                               {cells list of short pin for pex}
bbset pex.SkipCells                  {!GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDLVT !GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVT !GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVTLL !GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDLVT !GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVT !GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVTLL !GCUSTOM_GSL_CLK_DIV50_DP_2R_156HPNPN3P48CPDULVT} {skip cell definition for pex}
bbset pex.MacroLefFiles              {}                                                               {custom macro lef files}
bbset pex.DryRun                     {0}                                                              {set 1 to only generate starrc.cmd & not run starrc}
bbset pex.SignOff                    {0}                                                              {run signoff mode}
bbset pex.WrapTag                    {}                                                               {wrap tagname for wrap archieve}
bbset pex.NumCores                   {8}                                                              {number of cores for run, number of licenses in pex.Res should be changed accordingly (NumCores/4)}
bbset pex.PostFix                    {1}                                                              {run postfix on input dummyfill}
bbset pex.UserTemplate               {}                                                               {User STARRC command file}
bbset pex.Res                        {License:STAR-RC2_ULTRA_MANAGER#2}                               {Resource for running StarRC}
bbset pex.RAM                        {128000}                                                         {Memory (in MB) for running pex}
bbset pex.GdsLayerMap                {[bbquery get file -db pdk -filter "category='pdk' && file_type='layermap' && tool='starrc'"]} {GDS layer map file}
bbset pex.OasisLayerMap              {[bbquery get file -db pdk -filter "category='pdk' && file_type='layermap' && tool='starrc'"]} {Oasis layer map file}
bbset pex.MappingFile                {[bbquery get file -db pdk -filter "category='pdk' && file_type='nxtgrdlayermap' && tool='starrc' && is_shdmim=='true' && pnr_tool=='innovus'"]} {Mapping file}  
bbset pex.TechLef                    {[bbquery get file -db pdk -filter "category='pdk' && file_type='techlef' && track='[bbget Track]' && function='pnr' && stack='[bbget Stack]' && pitch =='[bbget Pitch]' && rdl=='[bbget TechRdlType]' && is_shdmim =~'[bbget TechIsShdmim]'"]} {Tech LEF}      
bbset pex.FlatExtraction             {1}                                                              {Switch to enable flat extraction}
bbset pex.FlowEnableFill             {1}                                                              {Enable or disable Metal Fill}
bbset pex.EnableVmf                  {0}                                                              {Enable Virtual Metal Fill}
bbset pex.GenerateVmfParamFilePath   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pex/pex.starrc/outs/ufs_top_vmf_parameter_file} {Generate VMF parameter file path}
bbset pex.ApplyVmfParamFilePath      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pex/pex.starrc/pex/pex.starrc/outs/ufs_top_vmf_parameter_file} {Apply VMF parameter file path}
bbset pex.VmfBundleTag               {}                                                               {VMF bundle tag}
bbset pex.GenerateVmfParamFile       {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/pex/starrc/generate_vmf_settings.txt} {File with VMF file setings to generate parameter file}
bbset pex.ApplyVmfParamFile          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/pex/starrc/apply_vmf_settings.txt} {File with VMF file setings to apply parameter file to the run}
bbset pex.WaivedMessages             {SX-3214 SX-2113 SX-3218 SX-2166 SX-3128 SX-2054 SX-2105 SX-3063 SX-2090 SX-3050 SX-1813 SX-3556 SX-2053 SX-3102 SX-2045} {Waived messages ID list}
bbset pex.WaivedMessagesPerLayer     { {SX-2112 M1} }                                                 {Waived Message ID and layer}
bbset pex.IgnoredLayers              {}                                                               {# No Comment}  
bbset pex.DistributedRun             {0}                                                              {Option to enable distributed run}
bbset pex.FlowDisableSpef            {1}                                                              {Option to enable or disable SPEF to save diskspace. GPD is always dumped out}
bbset pex.TargetExtractEmirCorners   { 125c_cworst_ccworst }                                          {Specify the corners for which SPEF needs to be generated to be consumed by EMIR}
bbset pex.Settings.StopOnWarnings    {0}                                                              {Halt execution if warnings in pex.WarningToError are present}
bbset pex.Settings.WarningToError    {EX-414 SX-0955 SX-0957}                                         {List of warnings that will halt execution if StopOnWarnings=1}
bbset pex.Settings.ShortsLimit       {}                                                               {Number of shorts to report}
bbset pex.Settings.NetlistTailComments {1}                                                              {If set to 1, NETLIST_TAIL_COMMENTS:YES will be added to starrc.cmd}
bbset pex.audit.TopDefLayer          {M15}                                                            {Top Def non-bump layer for audit check}
bbset pex.audit.TopBumpLayer         {sRDL}                                                           {Top Def bump layer for audit check}
bbset pex.audit.BumpDimension        {30}                                                             {Bump dimension for PEX audit}
bbset pex.Target                     {}                                                               {Target for pex bundle}
bbset pex.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/pex/CIA/checkers }                  {CIA checker search path for PNR stage}
bbset pex.config.CIA.ConsolidateSummary { [bbget .info.BOB_RUN_DIR]/pex/*/logs/cia.summary }             {cia.summary path for Bob Audit System}
bbset pex.config.CIA.CheckStarVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckStarVersion.FunctionMap {
                                      {PEX_1_1 StarVersion}
                                      } {Check starrc version}
bbset pex.config.CIA.CheckCornerMappingFile.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckCornerMappingFile.FunctionMap {PEX_1_5 CornerMapping}                                          {Check Corner Mapping File}
bbset pex.config.CIA.CheckPDKVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckPDKVersion.FunctionMap {
                                      {PEX_1_2 PDKVersion}
                                      } {Check PDK version}
bbset pex.config.CIA.CheckDKVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckDKVersion.FunctionMap {
                                      {PEX_1_3 DKVersion}
                                      } {Check DK version}
bbset pex.config.CIA.CheckNXTGRDVersion.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckNXTGRDVersion.FunctionMap {
                                      {PEX_1_4 NXTGRDVersion}
                                      } {Check .nxtgrd files version}
bbset pex.config.CIA.CheckCmdFile.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckCmdFile.FunctionMap {PEX_1_6 CheckCmdFileReduction
                                      PEX_1_8 CheckCmdFileKeepViaNodes
                                      PEX_1_10 CheckCmdFileMFHandling
                                      PEX_1_15_1 CheckCmdFileDefBlockage
                                      PEX_1_20 CheckCmdFileFloatingWire} {Check followinge settings in starrc.cmd file: Reduction, Via nodes, Metal Fill Handling, if blockages are being read in DEF, floating setting}
bbset pex.config.CIA.CheckCmdFileDisabled.Enable {False}                                                          {Flag to enable checker or not}
bbset pex.config.CIA.CheckCmdFileDisabled.FunctionMap {PEX_1_7 CheckCmdFileGeometryInfo
                                      PEX_1_9 CheckCmdFileNetlistComments} {Check followinge settings in starrc.cmd file: Geometry Info, netlist comments}
bbset pex.config.CIA.CheckSpefShorts.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckSpefShorts.FunctionMap {
                                      {PEX_1_13_1 SpefShorts}
                                      } {Check if design has shorts}
bbset pex.config.CIA.CheckSpefOpens.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckSpefOpens.FunctionMap {
                                      {PEX_1_13_2 SpefOpens}
                                      } {Check if design has opens}
bbset pex.config.CIA.CheckFill.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckFill.FunctionMap {
                                      {PEX_1_14 Fill}
                                      } {Check Fill Setting}
bbset pex.config.CIA.CheckLayer.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckLayer.FunctionMap {
                                      {PEX_1_15_2 CheckLayerTop}
                                      {PEX_1_15_3 CheckLayerBump}
                                      } {Check top non-bump layer and top bump layer in DEF file read into PEX}
bbset pex.config.CIA.CheckExtractionLevel.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckExtractionLevel.FunctionMap {
                                      {PEX_1_16 FlatHierExtraction}
                                      } {Check flat or hierarchical extraction}
bbset pex.config.CIA.CheckMessage.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckMessage.FunctionMap {
                                      {PEX_1_18 CheckError}
                                      {PEX_1_19 CheckWarning}
                                      } {Check ERROR and WARNING messages}
bbset pex.config.CIA.CheckDesignFiles.Enable {True}                                                           {Flag to enable check or not}
bbset pex.config.CIA.CheckDesignFiles.FunctionMap {PEX_1_21 DesignFiles}                                           {Validate block/subblock DEF/Fill Oasis}
bbset pex.config.CIA.CheckBumps.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckBumps.FunctionMap {
                                      {PEX_1_22 Bumps}
                                      } {Check bump dimension}
bbset pex.config.CIA.CheckLefFiles.Enable {True}                                                           {Flag to enable checker or not}
bbset pex.config.CIA.CheckLefFiles.FunctionMap {PEX_1_23 LefFiles}                                              {Check subblocks for using LEF files}
bbset emir.Tool                      {rhsc}                                                           {# default tool for emir analysis}
bbset emir.AnalysisType              {static_ir dynamic_ir sem bqm macro_bqm reff peak_tw rush_current cpm thermal} {# default analysis type in global.var}
bbset emir.VoltageSources            {}                                                               {# default VDD net in global.var}
bbset emir.DefaultVoltages           {VDD 0p8250 VSS 0p0000}                                          {# default values}
bbset emir.VectorPatterns            {vectorless np_vectorless two_pass_vectorless vectorless_sem vector} {# default vector pattern mode: verctorless}
bbset emir.scenarios.Scenarios       {func.ffgnp-NM-125-cworst_ccworst}                               {# all possible scenarios for EMIR}
bbset emir.scenarios.status.StaticIr { {func.ffgnp-NM-125-cworst_ccworst {vectorless} } }             {# define static_ir scenario and vector-pattern combinations}
bbset emir.scenarios.status.DynamicIr { {func.ffgnp-NM-125-cworst_ccworst {vectorless} } }             {# define dynamic_ir scenario and vector-pattern combinations}
bbset emir.scenarios.status.Sem      { {func.ffgnp-NM-125-cworst_ccworst {vectorless} } }             {# define sem scenario and vector-pattern combinations}
bbset emir.scenarios.status.Bqm      { {func.ffgnp-NM-125-cworst_ccworst {vectorless} } }             {# define bqm scenario and vector-pattern combinations}
bbset emir.scenarios.status.MacroBqm {}                                                               {# define macro_bqm scenario and vector-pattern combinations}
bbset emir.scenarios.status.Reff     { {func.ffgnp-NM-125-cworst_ccworst {vectorless} } }             {# define reff scenario and vector-pattern combinations}
bbset emir.scenarios.status.PeakTw   {}                                                               {# define peak_tw scenario and vector-pattern combinations}
bbset emir.scenarios.status.RushCurrent {}                                                               {# define rush_current scenario and vector-pattern combinations}
bbset emir.scenarios.status.Cpm      {}                                                               {# define cpm scenario and vector-pattern combinations}
bbset emir.scenarios.status.Thermal  {}                                                               {# define dynamic_ir/sem/static_ir conditions for thermal; if empty with EnableThermal=True, all possible dynamic_ir/sem/static_ir combinations will be adopted}
bbset emir.scenarios.status.EcoReport {[bbget ".emir.scenarios.status.DynamicIr"]}                     {# define create_eco_node scenario and vector-pattern combinations}
bbset emir.DefInputs                 {}                                                               {# design DEFs, list is allowed}
bbset emir.SpefInputs                {[bbfiles -legacy_mode bundle_paths -bundles pex]/pex/pex.[bbget ".pex.Tool"]/SPEF} {# list of SPEFs, or $dir that contains $dir/${block}.${rc_corners}.spef.gz}
bbset emir.TwfFile                   {[bbfiles -legacy_mode bundle_paths -bundles sta]/sta}           {# list of TWFs, or $dir that contains $sta/sta.bb_scen_summary.${sta_scn_name}/outs/${block}.timing.gz}
bbset emir.SdcFile                   {[bbfiles -legacy_mode bundle_paths -bundles sta]/sta}           {# sdc file, or sta dir that will expand to $sta/sta.bb_scen_summary.${sta_scn_name}/outs/${block}.sdc.gz on build time}
bbset emir.hierarchy.flatten         {False}                                                          {# If set to True, will auto add subblocks input artifacts according to the .hierarchy spec}
bbset emir.hierarchy.subblocks       {[bbfiles -legacy_mode subblocks]}                               {# Specify subblock list, default: every subblock coded in .hierarchy.subblocks}
bbset emir.EmirPostOptionsSetupCallback {}                                                               {# Callback for post-option setup}
bbset emir.EmirPreReportingCallback  {}                                                               {# Callback before reporting}
bbset emir.EmirPostReportingCallback {}                                                               {# Callback after reporting}
bbset emir.LsoFile                   {}                                                               {# Lso file for rush_current analysis, list is allowed}
bbset emir.RdlGdsInputs              {}                                                               {# RDL gds file be loaded together when create design view}
bbset emir.GdsLayerMapFile           {}                                                               {# gds layer mapping file for RdlGdsInputs}
bbset emir.IpfFile                   {}                                                               {# instance power file for static_ir analysis, list is acceptable}
bbset emir.IpfModuleName             {}                                                               {# module to apply the ipf, list is acceptable}
bbset emir.IpfInstancePath           {}                                                               {# instance to apply the ipf, list is acceptable}
bbset emir.IsBumpDef                 {True}                                                           {# The design DEF in DefInputs contained BUMP information}
bbset emir.BumpDefFile               {}                                                               {# Additional DEF contains only BUMP}
bbset emir.BumpCellName              {bump_cell_fc_n2p}                                               {# Bump cell-name}
bbset emir.VirtualPowerSourceMode    {top_sheet}                                                      {# top_sheet | snapped_ploc}
bbset emir.VirtualPowerPitch         {232.8}                                                          {# For top_sheet mode, virtual power pitch, default in flow: 180}
bbset emir.VirtualPowerViaSize       {2.7}                                                            {# For top_sheet_mode, Virtual power via size, default in flow: 0.2}
bbset emir.VirtualPowerViaStapleDistance {5.04}                                                           {# For top_sheet_mode, Virtual power via staple distance, default in flow: 20}
bbset emir.VirtualSnappedPlocPitchX  {5.0}                                                            {For snapped_ploc mode, pitch_x}
bbset emir.VirtualSnappedPlocPitchY  {10.0}                                                           {For snapped_ploc mode, pitch_y}
bbset emir.VirtualSnappedPlocSearchDistance {5.0}                                                            {For snapped_ploc mode, search_distance}
bbset emir.BumpEqualPotentialRadius  {15.0}                                                           {# ideal resistance radius on bump source}
bbset emir.AnalysisStepSize          {}                                                               {# default in flow: 5e-12, can also be overriden by "bbset emir.VECTOR.AnalysisStepSize 5e-12"}
bbset emir.AnalysisStepMultiplier    {}                                                               {# default in flow: 1, can also be overriden by "bbset emir.SCNENAIO.AnalysisStepMultiplier 2"}
bbset emir.PackageModelFile          {}                                                               {# packge model file, True if using lumped model}
bbset emir.PackageModelType          {nport}                                                          {# lumped|singleport|nport}
bbset emir.PlocFile                  {}                                                               {# Ploc from package}
bbset emir.PackageNetDataCallback    {}                                                               {# Callback function to assign net_data, default will come from voltage-level settings; Lumped model has to use this to assign value}
bbset emir.PackageChipPgPairsCallback {}                                                               {# Callback function to assign chip-pg-pairs, only for singleport model}
bbset emir.DisablePackage            {False}                                                          {# disable package model}
bbset emir.HierTwf                   {False}                                                          {# Hier TWFs support when building flow or not, defualt False, True|False}
bbset emir.HierSpef                  {True}                                                           {# Hier SPEFs support when building flow or not, defualt True, True|False}
bbset emir.EmirWriteExplorerReports  {False}                                                          {# Write out explorer reports or not, default True, True|False}
bbset emir.EmirEnableSnapshots       {True}                                                           {# Enable snapshots for heatmaps, default False, True|False}
bbset emir.IsSnapshotOnScenarioBaseVolt {False}                                                          {# Use scenario base voltage while doing snapshots, default False, True|False}
bbset emir.DisableAutoClockPeriod    {False}                                                          {# disable auto clock period detection from SDC/TWF feature, default False, True|False}
bbset emir.EmirEnableExternalPrasitics {True}                                                           {# enable external parasitics (SPEF) for evx view}
bbset emir.EmirEnableMacroView       {True}                                                           {# To read psw gds2rh. mem apl is exluded if EmirEnableAvm is True}
bbset emir.EmirEnableAvm             {False}                                                          {# Enable AVM parsing during create_liberty_view}
bbset emir.EmirDesignViewUseTechView {False}                                                          {# False for WA of b/204965184}
bbset emir.EmirStaDvdAwareMergeGroup {
                                      func_IR {
                                      {func.* dynamic_ir *}
                                      }
                                      shift_IR50 {
                                      {shift.* dynamic_ir shift_vectorless_1100}
                                      }
                                      shift_IR33 {
                                      {shift.* dynamic_ir shift_vectorless_111000}
                                      }
                                      } {
                                                                                                    # Comment:
                                                                                                    #  MERGE_GROUP_NAME1 {
                                                                                                    #    {SCENARIO ANALYSIS_TYPE VECTOR_MODE}
                                                                                                    #    ...
                                                                                                    #  }
                                                                                                    }
bbset emir.DontUseGroupsForAddRpt    {}                                                               {# No SpilGroup to setup}
bbset emir.LvlCellNameForAddRpt      {}                                                               {# No lvl criteria}
bbset emir.SkipTwf                   {False}                                                          {# skip TWF for certain scenario, default False, True|False}
bbset emir.SkipSdc                   {False}                                                          {# skip sdc parsing}
bbset emir.ReportCounts              {100000}                                                         {#preference max-line value of reporting}
bbset emir.ClockPeriod               {}                                                               {#emir default clock period when sdc not covered}
bbset emir.PowerDensityBoxes         {3 3}                                                            {# power density map boxes X/Y settings, default {3 3}, is a two integer elements list}
bbset emir.EmirMinLayer              {M0}                                                             {# minimum layer of BQM analysis}
bbset emir.EmirMaxLayer              {M13}                                                            {# maximum layer of CPM generation}
bbset emir.CurrentSink               {}                                                               {# Current-sink customization}
bbset emir.metrics.WrapTags          {EMIR_TEST_TAG}                                                  {# Tag metrics; going to be obsoleted}
bbset emir.metrics.Tag               {[bbget .emir.metrics.WrapTags -quiet]}                          {# Tag metrics} 
bbset emir.metrics.RunName           {TEMP-RUN_NAME}                                                  {# assign the run-name for metrics data}
bbset emir.metrics.Spin              {B0}                                                             {# assign the spin of the data}
bbset emir.SubSystemBlocks           {}                                                               {# If emir run match this list/set, it is a sub_system run}
bbset emir.bqm.EmirPowerDensityForBQM {10}                                                             {# Power density; unit is W/mm^2}
bbset emir.bqm.PowerDensity          {[bbget .emir.bqm.EmirPowerDensityForBQM]}                       {# Power density; unit is W/mm^2}
bbset emir.bqm.CurrentPerMicron      {}                                                               {# Current per micron}
bbset emir.bqm.ProbeDistance         {0.4}                                                            {# Probe distance}
bbset emir.bqm.ExcludeNets           {}                                                               {# Nets to be excluded}
bbset emir.reff.SelectSettingsCallback {}                                                               {# select_settings in reff callback}
bbset emir.reff.EnableExtraShortPinAnalysis {False}                                                          {# Enable extra short-pin reff run}
bbset emir.reff.ExtraShortPinAnalysisConfig.SelectSettingsCallback {
select_settings = {
  'cells': ['AB*', 'dwc*', 'PLL*', 'OSCT*', 'aging*', 'PCLAMP*', 'box*', 'amux*', 'TEF*', 'ESD_B2B_1*', 'fll*', 'tcxo*', 'IP93*', 'prtn*', 'top_tileref*', 'sensor_node_core_mos*', 'ols*', 'aging_sensor*', 'boxcar_cs*', 'tdiode*', 'temp_sensor*', 'pmc_top', 'pmc_gmc_top'],
  'cell_types': ['is_lib_macro_cell', 'is_filler_cell', 'is_lib_memory_cell', 'is_seq_cell', 'is_std_cell'],
  'exclude_instances': ['*FILL*', '*ENDCAP*', '*TAP*'],
}
  } {# select_settings in extra-short-pin-reff callback}
bbset emir.vectorless.ToggleRateDriven {True}                                                           {# Toggle-rate-driven analyses, affecting dynamic_ir only}
bbset emir.vectorless.SeqOutPinToggleRate {0.12}                                                           {# seq-cell-output toggle rate}
bbset emir.vectorless.ClockToggleRate {2.0}                                                            {# clock toggle rate}
bbset emir.vectorless.IcgOutPinToggleRate {2.0}                                                            {# icg output toggle rate}
bbset emir.vectorless.CombPinToggleRate {0.12}                                                           {# comb-cell-output toggle rate}
bbset emir.vectorless.MacroOutPinToggleRate {0.12}                                                           {# macro-output toggle rate}
bbset emir.vectorless.PrimeInputToggleRate {0.12}                                                           {# prime-input toggle rate}
bbset emir.vectorless.ActualSimDuration {}                                                               {# actual simulation duration in seconds}
bbset emir.vectorless.PresimDuration {}                                                               {# presim duration in seconds}
bbset emir.vectorless.WriteEventReplays {}                                                               {# list of event-replay output dirs paired with optional root-inst specification; syntax: {<dir_1> <root_inst_1>} {<dir_2>} ...}
bbset emir.vectorless.ReadEventReplays {}                                                               {# list of event-replay source dirs paired with optinoal applied insts; syntax: {<dir_1> <applied_inst_1a> <applied_inst_1b> ...} {<dir_2>} ...}
bbset emir.vectorless.EmirSwitchingActivityObjectSettingsCallback {}                                                               {# object_settings in switching activity callback}
bbset emir.vectorless.EmirTargetPowerSettingsCallback {}                                                               {# Callback for target power settings, affecting static_ir only}
bbset emir.vectorless.EmirScaledPowerObjectSettingsCallback {}                                                               {#Callback for the scaled_power object_settings}
bbset emir.vectorless.EmirCreatePowerViewCallback {}                                                               {# Callback for create power view, higher precedence than TargetPowerSettingsCallback, affecting static_ir only}
bbset emir.vectorless.CreateScenarioViewTargetPowerSettingsCallback {}                                                               {# Callback for the target-power setting of the scenario-view creation; affecting vectorless only now}
bbset emir.NpvFrameLengthMultiplier  {2}                                                              {# Frame length setting for NPV and 2nd-pass NPV}
bbset emir.NPVFrameLengthMultiplier  {[bbget .emir.NpvFrameLengthMultiplier]}                         {# Frame length setting for NPV and 2nd-pass NPV}
bbset emir.np_vectorless.DisablePackage {True}                                                           {# disable package model}
bbset emir.np_vectorless.ActualSimDuration {}                                                               {# actual simulation duration in seconds}
bbset emir.np_vectorless.PresimDuration {}                                                               {# presim duration in seconds}
bbset emir.np_vectorless.WriteEventReplays {}                                                               {# list of event-replay output dirs paired with optional root-inst specification; syntax: {<dir_1> <root_inst_1>} {<dir_2>} ...}
bbset emir.np_vectorless.ReadEventReplays {}                                                               {# list of event-replay source dirs paired with optinoal applied insts; syntax: {<dir_1> <applied_inst_1a> <applied_inst_1b> ...} {<dir_2>} ...}
bbset emir.np_vectorless.SeqOutPinToggleRate {0.12}                                                           {# seq-cell-output toggle rate}
bbset emir.np_vectorless.ClockToggleRate {2.0}                                                            {# clock toggle rate}
bbset emir.np_vectorless.IcgOutPinToggleRate {2.0}                                                            {# icg output toggle rate}
bbset emir.np_vectorless.CombPinToggleRate {0.12}                                                           {# comb-cell-output toggle rate}
bbset emir.np_vectorless.MacroOutPinToggleRate {0.12}                                                           {# macro-output toggle rate}
bbset emir.np_vectorless.PrimeInputToggleRate {0.12}                                                           {# prime-input toggle rate}
bbset emir.np_vectorless.EmirSwitchingActivityObjectSettingsCallback {}                                                               {#EmirSwitchingActivityObjectSettingsCallback}
bbset emir.two_pass_vectorless.PVFirst {False}                                                          {# Use PV as 1st pass of two-pass vectorless}
bbset emir.two_pass_vectorless.SeqOutPinToggleRate {0.12}                                                           {# seq-cell-output toggle rate}
bbset emir.two_pass_vectorless.ClockToggleRate {2.0}                                                            {# clock toggle rate}
bbset emir.two_pass_vectorless.IcgOutPinToggleRate {2.0}                                                            {# icg output toggle rate}
bbset emir.two_pass_vectorless.CombPinToggleRate {0.12}                                                           {# comb-cell-output toggle rate}
bbset emir.two_pass_vectorless.MacroOutPinToggleRate {0.12}                                                           {# macro-output toggle rate}
bbset emir.two_pass_vectorless.PrimeInputToggleRate {0.12}                                                           {# prime-input toggle rate}
bbset emir.two_pass_vectorless.ActualSimDuration {}                                                               {# actual simulation duration in seconds}
bbset emir.two_pass_vectorless.PresimDuration {}                                                               {# presim duration in seconds}
bbset emir.two_pass_vectorless.WriteEventReplays {}                                                               {# list of event-replay output dirs paired with optional root-inst specification; syntax: {<dir_1> <root_inst_1>} {<dir_2>} ...}
bbset emir.two_pass_vectorless.ReadEventReplays {}                                                               {# list of event-replay source dirs paired with optinoal applied insts; syntax: {<dir_1> <applied_inst_1a> <applied_inst_1b> ...} {<dir_2>} ...}
bbset emir.two_pass_vectorless.CreateScenarioViewTargetPowerSettingsCallback {}                                                               {# Callback for the target-power setting of 1st-pass PV}
bbset emir.two_pass_vectorless.EmirSwitchingActivityObjectSettingsCallback {}                                                               {# Callback to specify object_settings for NPV; lower-priority and going to be obsolete after Redondo}
bbset emir.vectorless_sem.DisablePackage {True}                                                           {# disable package model}
bbset emir.vectorless_sem.SeqOutPinToggleRate {1.0}                                                            {# seq-cell-output toggle rate}
bbset emir.vectorless_sem.ClockToggleRate {2.0}                                                            {# clock toggle rate}
bbset emir.vectorless_sem.IcgOutPinToggleRate {2.0}                                                            {# icg output toggle rate}
bbset emir.vectorless_sem.CombPinToggleRate {1.0}                                                            {# comb-cell-output toggle rate}
bbset emir.vectorless_sem.MacroOutPinToggleRate {1.0}                                                            {# macro-output toggle rate}
bbset emir.vectorless_sem.PrimeInputToggleRate {1.0}                                                            {# prime-input toggle rate}
bbset emir.vector.VcdFile            {}                                                               {# VCD File}    
bbset emir.vector.VcdStripPath       {}                                                               {# VCD Strip Path}
bbset emir.vector.VcdStartTime       {}                                                               {# VCD start-time}
bbset emir.vector.VcdEndTime         {}                                                               {# VCD end-time}
bbset emir.vector.VcdInstancePath    {}                                                               {# VCD instance path}
bbset emir.vector.VcdModuleName      {}                                                               {# VCD module to apply, exclusive exist with VcdInstancePath}
bbset emir.vector.VcdSliceName       {}                                                               {# VCD Slice Name}
bbset emir.vector.VcdRtlMap          {mixed}                                                          {# either mixed or simple}
bbset emir.vector.VcdType            {non_true_gate}                                                  {# rtl|non_true_gate|true_gate}
bbset emir.vector.ScalingComboFactor {0.5}                                                            {# Scale comb power}
bbset emir.vector.VectorConfigNamespaces {}                                                               {# select the data/namespace from VectorConfigFiles to gen vcv_setting_*.py}
bbset emir.vector.ActualSimDuration  {}                                                               {# actual simulation duration in seconds}
bbset emir.vector.PresimDuration     {}                                                               {# presim duration in seconds}
bbset emir.vector.WriteEventReplays  {}                                                               {# list of event-replay output dirs paired with optional root-inst specification; syntax: {<dir_1> <root_inst_1>} {<dir_2>} ...}
bbset emir.vector.ReadEventReplays   {}                                                               {# list of event-replay source dirs paired with optinoal applied insts; syntax: {<dir_1> <applied_inst_1a> <applied_inst_1b> ...} {<dir_2>} ...}
bbset emir.VectorConfigFiles         {}                                                               {# define vector config files to source }
bbset emir.VectorConfigTimeUnit      {1e-9}                                                           {# vector config file time unit}
bbset emir.MissingViaCheck.Enable    {True}                                                           {# enable all consectuive layer check AND stack via check by NetStackViaSpec if specified}
bbset emir.MissingViaCheck.NetStackViaSpec {}                                                               {
                                                                                                    # specify a list of stack via spec for different net, {{NetPatternA Layer1 Layer2} {NetPatternB Layer1 Layer2} ...} to run missing via checking
                                                                                                    # Ex: bbset NetStackViaSpec {{*VSS* D11 F4} {*VDD* D12 M3}}
                                                                                                    #   rhsc will check if any missing VSS stacked-via between Layer:D11 and Layer2:F4 & missing VDD stack-via between Layer1:D12 and Layer2:M3
                                                                                                    }
bbset emir.MissingViaCheck.CellPatterns {PCLAMP* ESD_B2B_* TEF*ESD*}                                     {# Checks missing VIAs inside insts' region from cell patterns}
bbset emir.macro_bqm.VDDPE.FocusPGNets {}                                                               {# Please specify the nets connecting to VDDPE}
bbset emir.macro_bqm.VDDPE.ProbeDistance {0.4}                                                            {# Probe distance}
bbset emir.macro_bqm.VDDPE.CurrentPerMicron {50e-6}                                                          {# current per micron}
bbset emir.macro_bqm.VDDCE.FocusPGNets {}                                                               {# Please specify the nets connecting to VDDCE}
bbset emir.macro_bqm.VDDCE.ProbeDistance {0.4}                                                            {# Probe distance}
bbset emir.macro_bqm.VDDCE.CurrentPerMicron {5e-6}                                                           {# current per micron}
bbset emir.Launcher                  {nc}                                                             {#rhsc default launcher: nc|localhost}
bbset emir.config.Cores              {16}                                                             {# default workers number for RHSC}
bbset emir.config.Ram                {10000}                                                          {# default Ram for workers}
bbset emir.config.MasterRam          {10000}                                                          {# default Ram for master}
bbset emir.config.MinWorkers         {16}                                                             {# default min-workers count}
bbset emir.config.BatchResources     {}                                                               {# additional batch resources}
bbset emir.config.JobSpecificResources {}                                                               {# Job-specific resources; syntax: {<worker_number> <required_ram_for_workers> {<job_a> ...}} {<worker_number> ...} ...}
bbset emir.config.create_dk_view.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.create_dk_view.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.create_dk_view.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.create_dk_view.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.create_design_view.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.create_design_view.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.create_design_view.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.create_design_view.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.create_extraction_view.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.create_extraction_view.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.create_extraction_view.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.create_extraction_view.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.create_timing_view.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.create_timing_view.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.create_timing_view.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.create_timing_view.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.create_vcv_view.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.create_vcv_view.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.create_vcv_view.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.create_vcv_view.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.emir_analysis.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.emir_analysis.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.emir_analysis.Ram  {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.emir_analysis.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.emir_analysis.JobSpecificResources {[bbget .emir.config.JobSpecificResources]}                      {# Job-specific resources}
bbset emir.config.emir_reporting.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.emir_reporting.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.emir_reporting.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.emir_reporting.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.create_eco_report.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.create_eco_report.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.create_eco_report.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.create_eco_report.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.config.thermal_analysis.MinWorkers {[bbget .emir.config.MinWorkers]}                                {# min workers for tool}
bbset emir.config.thermal_analysis.Cores {[bbget .emir.config.Cores]}                                     {# cores setting for task}
bbset emir.config.thermal_analysis.Ram {[bbget .emir.config.Ram]}                                       {# ram settings for task}
bbset emir.config.thermal_analysis.BatchResources {[bbget .emir.config.BatchResources]}                            {# additional batch resources for task}
bbset emir.RegressionMode            {}                                                               {# Default empty string, non-empty string will make a fake block name (regression_$blk) upload to bq}
bbset emir.StaticIrHistStep          {0.1}                                                            {# Static IR histogram step (%)}
bbset emir.DynamicIrHistStep         {0.2}                                                            {# Dynamic IR histogram step (%)}
bbset emir.SemRange                  {100}                                                            {# SEM reporting low bound}
bbset emir.SemDCRange                {}                                                               {# SEM DC reporting low bound; taking higher priority than SemRange for signal DC-EM analyses}
bbset emir.SemRMSRange               {}                                                               {# SEM RMS reporting low bound; taking higher priority than SemRange for signal RMS-EM analyses}
bbset emir.SemPeakRange              {}                                                               {# SEM peak reporting low bound; taking higher priority than SemRange for signal peak-EM analyses}
bbset emir.StaticIr.IrRptArgs        {
                                      {skip_zero_eff_vdd              False}
                                      {map_zero_eff_vdd_to_min_pg_sim True}
                                      {sort_key                       eff_comp_drop}
                                      } {
                                                                                                    # StaticIr Reporting Arguments
                                                                                                    #   skip_zero_eff_vdd True|False  (effVdd-based SIR should set False)
                                                                                                    #   map_zero_eff_vdd_to_min_pg_sim True|False (effVdd-based SIR should set True, otherwise the default eff_vdd is always 0 in SIR)
                                                                                                    #   sort_key eff_comp_drop|comp_drop
                                                                                                    }
bbset emir.DynamicIr.IrRptArgs       {
                                      {skip_zero_eff_vdd True}
                                      {map_zero_eff_vdd_to_min_pg_sim False}
                                      {sort_key eff_comp_drop}
                                      } {
                                                                                                    # DynamicIr Reporting Arguments
                                                                                                    #   skip_zero_eff_vdd True|False (effVdd-based DIR should set True)
                                                                                                    #   map_zero_eff_vdd_to_min_pg_sim True|False
                                                                                                    #   sort_key eff_comp_drop|comp_drop
                                                                                                    }
bbset emir.StaticIr.MemIrRptArgs     {
                                      {skip_zero_eff_vdd              False}
                                      {map_zero_eff_vdd_to_min_pg_sim True}
                                      {sort_key                       comp_drop}
                                      } {# No Comment}  
bbset emir.DynamicIr.MemIrRptArgs    {
                                      {skip_zero_eff_vdd False}
                                      {map_zero_eff_vdd_to_min_pg_sim True}
                                      {sort_key comp_drop}
                                      } {# No Comment}  
bbset emir.EmirEnableVoltageDomainIrReports {False}                                                          {# Generate rpts/*_ir.drop.VDD*.rpt.compression}
bbset emir.EmirEnableSeqIrReports    {True}                                                           {# Generate rpts/*_ir.drop.seq.rpt.compression}
bbset emir.EmirEnableDontUseIrReports {False}                                                          {# Generate rpts/*_ir.drop.dont_use.rpt.compression}
bbset emir.EmirEnableLvlIrReports    {True}                                                           {# Generate rpts/*_ir.drop.lvl.rpt.compression}
bbset emir.EmirEnableStaDvdAwareReports {True}                                                           {# Generate sta_rpts/*}
bbset emir.EmirEnablePowerDensityMap {True}                                                           {# Generate rpts/power_density_map.rpt}
bbset emir.GenerateClockFullDvdRpt   {True}                                                           {# Generate rpts/full_clock_dvd.rpt}
bbset emir.EmirEnableHierReports     {True}                                                           {# Generate rpts/hier_rpts/*}
bbset emir.EmirInterestedHierBlocks  {}                                                               {# Specify subset of hier blocks to generate rpts/hier_rpts/*}
bbset emir.EmirEnableSemNetAttrReports {True}                                                           {# Generate rpts/sigem.*.info}
bbset emir.EmirEnableInstancePowerFileReports {True}                                                           {# Generate rpts/power.rpt, rpts/power.ipf}
bbset emir.EmirEnableAvgCurrentMsgs  {False}                                                          {# Print avg dynamic power}
bbset emir.EmirEnableZeroSwitchingReports {True}                                                           {# Generate rpts/zero_switching.rpt}
bbset emir.EmirEnablePeakCurrentReports {True}                                                           {# Generate rpts/peak_current.rpt}
bbset emir.EmirEnableShortSigToPgReports {True}                                                           {# Generate shorts.rpt.signal_to_pg}
bbset emir.EmirEnablePriSecPgOpenReports {True}                                                           {# Generate priPG_opens.rpt/secPG_opens.rpt}
bbset emir.EmirHierReportsIncludeLeafBlocks {False}                                                          {# Hier report to flatten leaf blocks}
bbset emir.EmirEnableClkSemReports   {True}                                                           {# Generate sem.clk.* rpts}
bbset emir.EmirDirDefaultSprCheck    {True}                                                           {# True: spr check in bqm/sir/dir/reff for regression backward-compatiblity}
bbset emir.PVT                       {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.Volts                     {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.StageInputs               {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.Cores                     {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.Ram                       {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.MinWorkers                {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.BatchResources            {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.TargetScenarios           {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.LibPreparationVars        {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.MacroBqmAnalysisGroup     {}                                                               {# Dont-touch, this variable will be auto-filled in flow.var during flow creation time}
bbset emir.consolidate_emir.rhsc.PostCmd.MailNotification.Enable {1}                                                              {# emir mail notification enablement}
bbset emir.consolidate_emir.rhsc.PostCmd.MailNotification.Users {}                                                               {# emir mail receiver, defaut behavior: $USER only}
bbset emir.consolidate_emir.rhsc.PostCmd.MailNotification.Subject {[bbget info.BLOCK] emir run result}                             {# emir mail subject}
bbset emir.consolidate_emir.rhsc.PostCmd.MailNotification.File {./rpts/mail.txt}                                                {# emir mail template}
bbset emir.PostCmd.BqNodeUpload.LicFile {logs/emir.lic}                                                  {# No Comment}  
bbset emir.EnableEcoReportNode       {False}                                                          {# emir eco report node enablement}
bbset emir.AnalysisUtilsWorstNInst   {50000}                                                          {# worst_n instance compression for analysis_utils}
bbset emir.DvdAggressorViewTopN      {20000}                                                          {# top_n for dvd_aggressor_view}
bbset emir.DvdAggressorViewMaxNumVictims {20}                                                             {# maximum number victims of dvd_aggressor_view}
bbset emir.StaticIr.Sim.KeepStats    {{level Full}}                                                   {# KeepStats('Full') to SIR}
bbset emir.DynamicIr.Presim.KeepStats {{level Medium} {bump_voltages True} {bump_currents True} {effective_dvd_use_input_only_events False}} {# KeepStats('Medium', bump_voltages=True, bump_currents=True) to dir presim}
bbset emir.DynamicIr.Sim.KeepStats   {{level Full} {bump_voltages True} {bump_currents True} {used_demand_currents True} {effective_dvd_use_input_only_events False} {effective_dvd_use_only_complete_events True}} {# KeepStats('Full', used_demand_currents=True) to dir sim}
bbset emir.RushCurrent.Sim.KeepStats {{level Full}}                                                   {# KeepStats('Full') to rush current run}
bbset emir.GlobalDiskSpaceControl    {High}                                                           {# set_config('global_disk_space_control', 'High')}
bbset emir.MemCellPatterns           {TS1N02P* ts1n02p* TS3N02P* ts3n02p* TS6N02P* ts6n02p* TS10N02P* ts10n02p* TSG* tsg*} {# Memory cell patterns}
bbset emir.SecPgCellPatterns         {ISO* *LVL* PT* *RSD* RET*}                                      {# Cell patterns of cells with secondary pg pins}
bbset emir.SecPgPins                 {TVDD VDDL VDDS VNWELL VDDR}                                     {# Secondary pg pin names}
bbset emir.EmRulesetNames            {}                                                               {# EM mode/ruleset mapping; pattern: {DC DC_ruleset_name} {RMS RMS_ruleset_name} {PEAK PEAK_ruleset_name}, example: {DC EM_DC} {RMS EM_RMS} {PEAK EM_PEAK}}
bbset emir.EmTemperature             {105}                                                            {# EM temperature}
bbset emir.EmDeltaTRMS               {10}                                                             {# Delta T for RMS EM}
bbset emir.EmMetalLineNumber         {3}                                                              {# Metal line number for RMS EM}
bbset emir.EmV2VSpacingOverrides     { {M0 2.2} }                                                     {# EM via-to-via spacing}
bbset emir.EmLifeTime                {5}                                                              {# EM life time in years}
bbset emir.EMLifeTime                {5}                                                              {# EM life time in years}
bbset emir.EnableThermal             {False}                                                          {# Enable thermal analysis, default False, True|False}
bbset emir.EnableThermalAwareEM      {True}                                                           {# Enable thermal-aware EM analysis, default False, True|False}
bbset emir.EnableThermalAwareSEB     {True}                                                           {# Enable thermal-aware SEB analysis, default False, True|False}
bbset emir.ShFile                    {}                                                               {# SH (Self Heating) file from PDK vendor; mandatory for thermal-view generation}
bbset emir.TrFile                    {}                                                               {# TRF (Thermal Resistance File) from DK vendor; mandatory for thermal-view generation}
bbset emir.SebFile                   {}                                                               {# SEB (Statistical EM Budgeting) file from PDK vendor; mandatory for SEB analysis}
bbset emir.ThermalViewInstHeatmaps   {temperature self_heating}                                       {# Target instance heatmap types held in thermal view; support type: temperature, self_heating}
bbset emir.ThermalViewEdgeHeatmaps   {temperature self_heating joule_heating instance_coupling wire_to_wire_coupling} {# Target wire/via heatmap types held in thermal view; support type: temperature, self_heating, joule_heating, instance_coupling, wire_to_wire_coupling}
bbset emir.ThermalViewConfig         { {thermal_flow 1} {wire_extend 0} {resolution 1} }              {# Thermal-view-generation config.; pattern: {thermal_flow [1|2|3|4|5]}, example: {thermal_flow 1}}
bbset emir.FitLifeTime               {43800}                                                          {# Value to used to calculate FIT (Failure In Time) budget of SEB analysis}
bbset emir.FitRange                  {1.0}                                                            {# FIT-filter low bound}
bbset emir.FitTopN                   {1000}                                                           {# Top-N-FIT filter}
bbset emir.ThermalPreReportingCallback {}                                                               {# Callback before reporting}
bbset emir.ThermalPostReportingCallback {}                                                               {# Callback after reporting}
bbset emir.ScanChainSedPattern       {s@\\\\@@g}                                                      {one line sed pattern to .scandef processing}
bbset emir.ExternalRdlDef            {}                                                               {external_instance def to dv}
bbset emir.ExternalRdlCoord          {0 0}                                                            {external_instance placed, default: 0 0 N}
bbset emir.ExternalRdlPinNetConnection {}                                                               {external_instances for {pinname1* netname1} {pinname2* netname2}}
bbset emir.EquivalentNets            {}                                                               {# Make equivalent nets through the pair list: {<from_nets> <to_net>} ...; ex. {AVSS* VSS} means all AVSS* nets are the equivalent part of VSS}
bbset emir.DropPercentScalingFactor  {
                                      {ffgnp-NM-125   1}
                                      {ffgnp-NM-0     0.95}
                                      {ffgnp-NM-m25   0.9}
                                      {ssgnp-NM-125   0.77}
                                      {ssgnp-NM-0     0.71}
                                      {ssgnp-NM-m25   0.65}
                                      {ssgnp-UD-0     0.57}
                                      {ssgnp-SUD-0    0.51}
                                      {ssgnp-SUD-m25  0.5}
                                      {ssgnp-UUD-125  0.66}
                                      {ssgnp-UUD-0    0.49}
                                      {ssgnp-UUD-m25  0.48}
                                      {VDD_AMB VVDD_DMA VVDD_GIC VVDD_SSU VVDD_SSWRP VVDD_FABHBW VDD_GMC0 VVDD_GMC0 VDD_GMC1 VVDD_GMC1 VDD_GMC2 VVDD_GMC2 VDD_GMC3 VVDD_GMC3 VVDD_LSIO_E VVDD_LSIO_S VVDD_DBG VVDD_FABMEM VVDD_GSLC
                                      {ffgnp-OD-125   1}
                                      {ffgnp-OD-0     0.95}
                                      {ssgnp-OD-125   0.78}
                                      {ssgnp-OD-0     0.76}
                                      {ffgnp-NM-125   0.92}
                                      {ffgnp-NM-0     0.88}
                                      {ffgnp-NM-m25   0.84}
                                      {ssgnp-NM-125   0.69}
                                      {ssgnp-NM-0     0.65}
                                      {ssgnp-NM-m25   0.61}
                                      {ssgnp-UD-0     0.51}
                                      {ssgnp-SUD-0    0.48}
                                      {ssgnp-SUD-m25  0.45}
                                      {ssgnp-UUD-125  0.58}
                                      {ssgnp-UUD-0    0.44}
                                      {ssgnp-UUD-m25  0.41}
                                      }
                                      {VDD_AMB_M VDD_GMC0_M VDD_GMC1_M VDD_GMC2_M VDD_GMC3_M VDD_GMC0_M_1
                                      {ffgnp-OD-125   1}
                                      {ffgnp-OD-0     0.95}
                                      {ssgnp-OD-125   0.78}
                                      {ssgnp-OD-0     0.76}
                                      {ffgnp-NM-125   0.92}
                                      {ffgnp-NM-0     0.88}
                                      {ffgnp-NM-m25   0.84}
                                      {ssgnp-NM-125   0.69}
                                      {ssgnp-NM-0     0.65}
                                      {ssgnp-NM-m25   0.61}
                                      }
                                      {VDD_STBY VDD_STBY_M VDD_AUR_M VDD_SEC VVDD_GROOT VDD_INFRA_M DVDD075_DSI VDD_MM_M VVDD_DPU_DSI0 VVDD_DPU_DSI1 VDD_INFRA_M VVDD_GPCA VDD_GPU_M VVDD_GSA AVDD075_CLKBUF_HSION AVDD075_EUSB0 AVDD075_EUSB1 AVDD075_USBDP_VP AVDD075_USBDP_VPDIG VDD_HSION VVDD_AVDD075_USB3DP_VPDIG_PG VVDD_DP VVDD_EBU_TOP VVDD_USBDP_PCS VVDD_USB2SS_TOP VVDD_USB2SSCTRL_PSW VVDD_USB_PSW VVDD_USB_TOP AVDD075_CLKBUF_HSIOS AVDD075_UFS_EMBD_VP AVDD075_UFS_EMBD_VPDIG VDD_HSIOS VDD_STBY_S VVDD_AVDD075_UFS_EMBD_VPDIG_PG VVDD_SD VVDD_UFSHC VVDD_UFS_PCS VVDD_UFS_TOP DVDD075_CSIS0 DVDD075_CSIS1 DVDD075_CSIS2 DVDD075_CSIS3 VVDD_CSIS_CSI2_0 VVDD_CSIS_CSI2_1 VVDD_CSIS_CSI2_2 VVDD_CSIS_CSI2_3 AVDD075_HCSL0 AVDD075_HCSL1 AVDD075_PCIE_GEN4_0_VP AVDD075_PCIE_GEN4_0_VPDIG VDD_HSION VDD_DPA_RET_M VVDD_PCIEN_TOP VVDD_AVDD075_PCIE_GEN4_0_VPDIG_PG VVDD_PCIEN_CTRL0_PSW VVDD_PCIEN_CTRL1_PSW VVDD_PCIEN_PCS VDD_TPU_M VDD_TPU_SSWRP VVDD_TPU_CC AVDD075_PLL_MCLK
                                      {ffgnp-NM-125   1}
                                      {ffgnp-NM-0     0.95}
                                      {ffgnp-NM-m25   0.9}
                                      {ssgnp-NM-125   0.77}
                                      {ssgnp-NM-0     0.71}
                                      {ssgnp-NM-m25   0.65}
                                      {ssgnp-UD-0     0.71}
                                      {ssgnp-SUD-0    0.71}
                                      {ssgnp-SUD-m25  0.65}
                                      {ssgnp-UUD-125  0.77}
                                      {ssgnp-UUD-0    0.71}
                                      {ssgnp-UUD-m25  0.65}
                                      {FIXED_NM True}
                                      }
                                      } {# Redondo Scaling Factor for EMIR to STA dvd-aware when corner diff}
bbset emir.ReffPinExcludePatterns    {VNWELL}                                                         {# Pin patterns to be excluded in Reff analyses}
bbset emir.ExtraClockFullDvdRptRefinePartialEvent {True}                                                           {# Generates one extra clock report by replacing DvD from partial events}
bbset emir.ExtraClockFullDvdRptThresholdPercent {}                                                               {# Threshold percent (2 should be specified if 2% is targeted) while generating the extra clock report}
bbset emir.EnablePhysicalDisconnectionReport {True}                                                           {# Generates physical disconnection report}
bbset emir.PhysicalDisconnectionCellPatterns {AB* dwc* PLL* OSCT* aging* PCLAMP* box* amux* TEF* ESD_B2B_1* fll* tcxo* IP93* prtn* top_tileref* sensor_node_core_mos* ols* aging_sensor* boxcar_cs* tdiode* temp_sensor* pmc_top pmc_gmc_top} {# Cell patterns for the physical-disconnection reporting}
bbset emir.EnableAutoSimTime         {True}                                                           {# Enables auto. sim.-time determination}
bbset emir.AutoSimMultiplierForPresim {1}                                                              {# Multiplier for auto. pre-sim.-time determination}
bbset emir.AutoSimMultiplierForActualSim {25}                                                             {# Multiplier for auto. actual-sim.-time determination}
bbset emir.IRSTAOnDieCompensation    {
                                      0.04
                                      {PROCESS {ssgnp 0.04} {ffgnp 0.08}}
                                      } {# IR-STA on-die compensation; ex. 0.04 stands for 4% compensation}
bbset emir.IRSTAOffDieCompensation   {0.035}                                                          {# IR-STA off-die compensation, only effective at ssgnp corners; ex. 0.035 stands for 3.5% compensation}
bbset emir.IRSTAIgnoreMem            {True}                                                           {# IR-STA ignores memories}
bbset emir.IRSTAIgnoreNegEffDropPercent {True}                                                           {# IR-STA ignores those with negative eff_percent after scaling}
bbset emir.ShiftPathInstsFile        {}                                                               {# Shift-path-inst file used to generate shift-specific reports}
bbset emir.EnableShiftRpting         {False}                                                          {# Enables shift-specific reporting; only valid while ShiftPathInstsFile is valid}
bbset emir.EnableAdvShiftRpting      {True}                                                           {# Enables advanced shift-specific reporting; only valid while ShiftPathInstsFile is valid}
bbset emir.EnableAdvShiftRptingHist  {True}                                                           {# Enables histogram generations in adv. shift-specific reporting; only valid while EnableAdvShiftRpting is valid and true}
bbset emir.EnableAdvShiftRptingHierHist {True}                                                           {# Enables hier. histogram generations in adv. shift-specific reporting; only valid while both EnableAdvShiftRpting and EnableAdvShiftRptingHist are valid and true}
bbset emir.LogScreenerWaiveLvl       {3}                                                              {# --waive_level of logscreener}
bbset emir.EnableAutoGSPANConfig     {True}                                                           {# Enable auto. GSPAN configuration}
bbset emir.GSPANPortConfigCallback   {}                                                               {# Callback to specify GSPAN ports}
bbset emir.GSPANConfig               {[bbget .info.REPO_TOP]/chip/[bbget .info.CHIP]/scf/gspan_io/GSPAN_cfg.rpt} {# GSPAN config}
bbset emir.GSPANSenderPattern        {gspan_sender}                                                   {# GSPAN-sender pattern}
bbset emir.GSPANReceiverPattern      {gspan_receiver}                                                 {# GSPAN-receiver pattern}
bbset emir.GSPANToggleRate           {0.25}                                                           {# GSPAN toggle rate}
bbset emir.TimingRptsForLSO          {}                                                               {# Timing reports for the LSO generation}
bbset emir.TimingRptsForLso          {}                                                               {# Timing reports for the LSO generation; eq. to TimingRptsForLSO}
bbset emir.TimingRptsLSOPinPattern   {/NSLEEPIN\\s}                                                   {# Pin pattern used in the timing-report-to-LSO generation}
bbset emir.TimingRptsLsoPinPattern   {}                                                               {# Pin pattern used in the timing-report-to-LSO generation; eq. to TimingRptsLSOPinPattern}
bbset emir.TimingRptsLSOTimeUnit     {1.0e-9}                                                         {# Time unit used in the timing-report-to-LSO generation}
bbset emir.TimingRptsLsoTimeUnit     {}                                                               {# Time unit used in the timing-report-to-LSO generation; eq. to TimingRptsLSOTimeUnit}
bbset emir.TimingRptsLSOSlewScalingFactor {1.2}                                                            {# Slew-scaling factor used in the timing-report-to-LSO generation}
bbset emir.TimingRptsLsoSlewScalingFactor {}                                                               {# Slew-scaling factor used in the timing-report-to-LSO generation; eq. to TimingRptsLSOSlewScalingFactor}
bbset emir.TrimSDC                   {True}                                                           {# Enable SDC trimming}
bbset emir.TrimSDCCmds               {
                                      create_clock
                                      create_generated_clock
                                      group_path
                                      set_case_analysis
                                      set_clock_gating_check
                                      set_clock_groups
                                      set_clock_transition
                                      set_clock_uncertainty
                                      set_data_check
                                      set_disable_timing
                                      set_false_path
                                      set_max_capacitance
                                      set_max_delay
                                      set_max_transition
                                      set_min_delay
                                      set_multicycle_path
                                      set_operating_conditions
                                      set_output_delay
                                      set_propagated_clock
                                      set_sense
                                      set_timing_derate
                                      set_voltage
                                      set_input_transition
                                      set_input_delay
                                      set_clock_latency
                                      set_ideal_network
                                      set_annotated_transition
                                      set_ideal_transition
                                      } {# SDC commands to be trimmed}
bbset emir.EnableROMGeneration       {False}                                                          {# Enable ROM generations}
bbset emir.CreateReducedOrderModelSettingsCallback {}                                                               {# Callback to specify rom_gen.create_reduced_order_model/settings}
bbset emir.ROMs                      {}                                                               {# ROM dirs fed to create_rom_view}
bbset emir.CreateDesignViewROMSettingsCallback {}                                                               {# Callback to specify create_design_view/rom_settings}
bbset emir.EnableSEMAutoMissFreqSetup {False}                                                          {# Enable SEM auto. miss-freq. setup}
bbset emir.SEMAutoMissFreqSetupBy    {peak}                                                           {# Missed freq. will be set up based on the peak (default) or dominant freq. of the corresponding hier. block}
bbset emir.EnableSigmaDvD            {False}                                                          {# Enable sigma-DVD analyses}
bbset emir.EnableSigmaDVD            {[bbget .emir.EnableSigmaDvD]}                                   {# Enable sigma-DVD analyses}
bbset emir.SigmaDvDInstsFile         {}                                                               {# File having extra insts needing sigma-DVD info.}
bbset emir.SigmaDVDInstsFile         {[bbget .emir.SigmaDvDInstsFile]}                                {# File having extra insts needing sigma-DVD info.}
bbset emir.EnableSEMDirtyAndDroppedNetDiagnosis {False}                                                          {# Enable SEM dirty/dropped-net diagnosis}
bbset emir.EnableEffDVDPatch         {False}                                                          {# Enable Ansys's w/a fix to multiple-output-inst eff. DVDs}
bbset emir.ForceOldEffDVDPatch       {False}                                                          {# Force to stay at the old (2024) Ansys's w/a fix to multiple-output-inst eff. DVDs}
bbset emir.SwitchSwapDVDThresholdPercents {}                                                               {# Threshold percents while generating sw-swap reports (two values are expected, and "8 12" should be specified if 8% and 12% are targeted)}
bbset emir.ToolCacheSize             {}                                                               {# Cache size of EDA tool. Unit is MB, and the default of RH-SC is 8000 MB}
bbset emir.DIRGuidanceCSVFile        {[bbget .info.PROCESS_DIR]/emir/dir_guidance.csv}                {# Dynamic-IR-guidance CSV file; guiding generations of dynamic_ir.[memory|special].drop.rpt.[compression|violated], excepts SDVD runs}
bbset emir.CustomPGArcFiles          {[bbget .info.PROCESS_DIR]/emir/custom_pgarcs}                   {# Custom P/G-arc files fed to create_liberty_view/pgarc_files}
bbset emir.PostCreateLibertyViewCallback {}                                                               {# Callback activated right after create_liberty_view; "lv" is available to be operated}
bbset emir.EnableExternalRDLPatch    {False}                                                          {# No Comment}  
bbset emir.ForceTogglingIgnoreClocks {}                                                               {# Two-pass vectorless skip the force toggling of insts of clocks}
bbset emir.RemoveGlitch              {True}                                                           {# Remove glitches identified based on GEM; only taking effect at non-NPV-based dynamic analyses}
bbset emir.GEM                       {1.0}                                                            {# Glitch eater multiplier; only taking effect at non-NPV-based dynamic analyses}
bbset emir.ExtraProbeGenerationSettingsCallback {}                                                               {# Callback to add extra probes; only taking effect at non-VCD/non-shift-based dynamic analyses}
bbset emir.PemRange                  {100}                                                            {# PEM-reporting low bound}
bbset emir.PEMRange                  {[bbget .emir.PemRange]}                                         {# PEM-reporting low bound}
bbset emir.PEMDCRange                {[bbget .emir.PEMRange]}                                         {# PEM-DC-reporting low bound}
bbset emir.PEMRMSRange               {[bbget .emir.PEMRange]}                                         {# PEM-RMS-reporting low bound}
bbset emir.PEMPeakRange              {[bbget .emir.PEMRange]}                                         {# PEM-peak-reporting low bound}
bbset emir.rush_current.PEMPeakRange {120}                                                            {# Rush-current-specific PEM-peak-reporting low bound}
bbset emir.EnableBoostMode           {False}                                                          {# Enable boost mode developed for La Jolla}
bbset emir.dynamic_ir.PresimMode     {1}                                                              {# Pre-sim. mode: 1 or 2; 1 (default) is the classic mode built on av_presim, and 2 skips av_presim}
bbset emir.dynamic_ir.InitCondition  {t0}                                                             {# Initial condition: t0 or avg_dc}
bbset emir.dynamic_ir.EnablePEMDCAnalysis {False}                                                          {# Enable PEM-DC analyses}
bbset emir.dynamic_ir.IRHeatMapColorBars {}                                                               {# IR heatmap setup; syntax: {CLOCK 8 12} {COMB 14 18} {SEQUENTIAL 12 16}}
bbset emir.sigma_dvd.Enable          {True}                                                           {# Enable sigma-DVD analyses}
bbset emir.sigma_dvd.ExtraInstsFile  {[bbget .emir.SigmaDVDInstsFile]}                                {# File having extra insts needing sigma-DVD info.}
bbset emir.sigma_dvd.SelfDropThresholdPercent {12}                                                             {# Self-drop threshold percent; 12 means 12%}
bbset emir.sigma_dvd.ClockSelfDropThresholdPercent {10}                                                             {# Clock self-drop threshold percent; default is SelfDropThresholdPercent}
bbset emir.sigma_dvd.CombSelfDropThresholdPercent {12}                                                             {# Comb. self-drop threshold percent; default is SelfDropThresholdPercent}
bbset emir.sigma_dvd.SeqSelfDropThresholdPercent {12}                                                             {# Seq. self-drop threshold percent; default is SelfDropThresholdPercent}
bbset emir.sigma_dvd.EffDVDThresholdPercent {15}                                                             {# Eff.-DVD threshold percent; 15 means 15%}
bbset emir.sigma_dvd.ClockEffDVDThresholdPercent {15}                                                             {# Clock eff.-DVD threshold percent; default is EffDVDThresholdPercent}
bbset emir.sigma_dvd.CombEffDVDThresholdPercent {15}                                                             {# Comb. eff.-DVD threshold percent; default is EffDVDThresholdPercent}
bbset emir.sigma_dvd.SeqEffDVDThresholdPercent {15}                                                             {# Seq. eff.-DVD threshold percent; default is EffDVDThresholdPercent}
bbset emir.esa.nodes                 {pnr/floorplan}                                                  {# Implement node the that this flow like to branch from}
bbset emir.config.CIA.StaticIr.YamlChecker.FunctionMap {
                                      {EMIR_4_1 CoverageCheck_LIB}
                                      {EMIR_4_2 CoverageCheck_LEF}
                                      {EMIR_4_3 CoverageCheck_APL}
                                      {EMIR_4_4 CoverageCheck_GDS2RH}
                                      {EMIR_4_5 CoverageCheck_SPEF}
                                      {EMIR_4_6 CoverageCheck_TWF}
                                      {EMIR_4_7 CoverageCheck_FSDB}
                                      {EMIR_5_1 PGRobustCheck_PriPGOpen}
                                      {EMIR_5_2 PGRobustCheck_PriPGShort}
                                      {EMIR_5_3 PGRobustCheck_SecPGOpen}
                                      {EMIR_5_6 PGRobustCheck_PriPGSPR}
                                      {EMIR_5_7 PGRobustCheck_SecPGSPR}
                                      {EMIR_9_2 PEMCheck_All}
                                      } {checking from emir legacy audit yaml report}
bbset emir.config.CIA.DynamicIr.YamlChecker.FunctionMap {
                                      {EMIR_4_1 CoverageCheck_LIB}
                                      {EMIR_4_2 CoverageCheck_LEF}
                                      {EMIR_4_3 CoverageCheck_APL}
                                      {EMIR_4_4 CoverageCheck_GDS2RH}
                                      {EMIR_4_5 CoverageCheck_SPEF}
                                      {EMIR_4_6 CoverageCheck_TWF}
                                      {EMIR_4_7 CoverageCheck_FSDB}
                                      {EMIR_5_1 PGRobustCheck_PriPGOpen}
                                      {EMIR_5_2 PGRobustCheck_PriPGShort}
                                      {EMIR_5_3 PGRobustCheck_SecPGOpen}
                                      {EMIR_5_6 PGRobustCheck_PriPGSPR}
                                      {EMIR_5_7 PGRobustCheck_SecPGSPR}
                                      {EMIR_8_12 EffVddCheck_AllInst}
                                      {EMIR_8_13 EffVddCheck_ClkInst}
                                      } {checking from emir legacy audit yaml report}
bbset emir.config.CIA.DynamicIr.HistChecker.FunctionMap {
                                      {EMIR_8_11 SafeDecile1_AllInst}
                                      } {checking from emir legacy audit yaml report}
bbset emir.config.CIA.Sem.YamlChecker.FunctionMap {
                                      {EMIR_4_1 CoverageCheck_LIB}
                                      {EMIR_4_2 CoverageCheck_LEF}
                                      {EMIR_4_5 CoverageCheck_SPEF}
                                      {EMIR_4_6 CoverageCheck_TWF}
                                      {EMIR_10_1 SEMCheck_DCClk}
                                      {EMIR_10_2 SEMCheck_RMSClk}
                                      {EMIR_10_3 SEMCheck_PeakClk}
                                      {EMIR_10_4 SEMCheck_DCAll}
                                      {EMIR_10_5 SEMCheck_RMSAll}
                                      {EMIR_10_6 SEMCheck_PeakAll}
                                      } {checking from emir legacy audit yaml report}
bbset emir.config.CIA.Reff.YamlChecker.FunctionMap {
                                      {EMIR_5_8 PGRobustCheck_StdCellPriPGReff}
                                      {EMIR_5_9 PGRobustCheck_StdCellSecPGReff}
                                      } {checking from emir legacy audit yaml report}
bbset esd.hierarchy.flatten          {False}                                                          {#True for picking data by hierarchy.namespace}
bbset esd.DefInputs                  {}                                                               {#Manual specfiy def inputs}
bbset esd.VoltageSources             {}                                                               {# Target power/ground rails; which need to be defined in mmmc}
bbset esd.SignalNets                 {
                                      XHSIONP_USBDP_PHY_TX0_P
                                      XHSIONP_USBDP_PHY_TX0_M
                                      XHSIONP_USBDP_PHY_TXRX1_P
                                      XHSIONP_USBDP_PHY_TXRX1_M
                                      XHSIONP_USBDP_PHY_TXRX2_P
                                      XHSIONP_USBDP_PHY_TXRX2_M
                                      XHSIONP_USBDP_PHY_TX3_P
                                      XHSIONP_USBDP_PHY_TX3_M
                                      XHSIONP_USBDP_AUX_PADP
                                      XHSIONP_USBDP_AUX_PADM
                                      XHSIONP_USBDP_PHY_RESREF
                                      XHSIONP_USBDP_PHY_REF_PAD_CLK_P
                                      XHSIONP_USBDP_PHY_REF_PAD_CLK_M
                                      XHSIONP_PRM_EUSB2_PHY_EDP
                                      XHSIONP_PRM_EUSB2_PHY_EDM
                                      XHSIONP_PRM_EUSB2_REXT
                                      XHSIONP_AUX_EUSB2_PHY_EDP
                                      XHSIONP_AUX_EUSB2_PHY_EDM
                                      XHSIONP_AUX_EUSB2_REXT
                                      XHSION_CLKBUF_0_B
                                      XPCIEP_PCIE_PHY_TX0_P
                                      XPCIEP_PCIE_PHY_TX0_M
                                      XPCIEP_PCIE_PHY_TX1_P
                                      XPCIEP_PCIE_PHY_TX1_M
                                      XPCIEP_PCIE_PHY_RX0_P
                                      XPCIEP_PCIE_PHY_RX0_M
                                      XPCIEP_PCIE_PHY_RX1_P
                                      XPCIEP_PCIE_PHY_RX1_M
                                      XPCIEP_PCIE_PHY0_REXT
                                      XPCIEP_PCIE_REF_CLK_M
                                      XPCIEP_PCIE_REF_CLK_P
                                      XPCIEH_PCIE_PHY0_REF_CLK_P
                                      XPCIEH_PCIE_PHY0_REF_CLK_M
                                      XPCIEH_PCIE_PHY1_REF_CLK_P
                                      XPCIEH_PCIE_PHY1_REF_CLK_M
                                      XPCIE_PCIE0_CLKREQN0
                                      XPCIE_PCIE0_PERSTN0
                                      XPCIE_PCIE0_CLKREQN1
                                      XPCIE_PCIE0_PERSTN1
                                      XPCIE_ATB0
                                      XHSIOSP_UFS0_MPHY_TX0_P
                                      XHSIOSP_UFS0_MPHY_TX0_M
                                      XHSIOSP_UFS0_MPHY_RX0_P
                                      XHSIOSP_UFS0_MPHY_RX0_M
                                      XHSIOSP_UFS0_MPHY_TX1_P
                                      XHSIOSP_UFS0_MPHY_TX1_M
                                      XHSIOSP_UFS0_MPHY_RX1_P
                                      XHSIOSP_UFS0_MPHY_RX1_M
                                      XHSIOSP_UFS0_MPHY_RESREF
                                      XHSIOSP_UFS0_MPHY_REF_PAD_CLK_P
                                      XHSIOSP_UFS0_MPHY_REF_PAD_CLK_M
                                      XHSIOSP_UFS1_MPHY_TX0_P
                                      XHSIOSP_UFS1_MPHY_TX0_M
                                      XHSIOSP_UFS1_MPHY_RX0_P
                                      XHSIOSP_UFS1_MPHY_RX0_M
                                      XHSIOSP_UFS1_MPHY_TX1_P
                                      XHSIOSP_UFS1_MPHY_TX1_M
                                      XHSIOSP_UFS1_MPHY_RX1_P
                                      XHSIOSP_UFS1_MPHY_RX1_M
                                      XHSIOSP_UFS1_MPHY_RESREF
                                      XHSIOSP_UFS1_MPHY_REF_PAD_CLK_P
                                      XHSIOSP_UFS1_MPHY_REF_PAD_CLK_M
                                      XHSIOS_UFS_REFCLK_0
                                      XHSIOS_UFS_REFCLK_1
                                      XHSIOS_CLKBUF_1
                                      XHSIOS_ATB1
                                      XHSIOS_UFS_RESETB_0
                                      XHSIOS_UFS_PWR_EN_0
                                      XHSIOS_UFS_RESETB_1
                                      XHSIOS_UFS_PWR_EN_1
                                      XGMC_LPDDRPHY0_RESET_n
                                      XGMC_LPDDRPHY0_ZN
                                      XGMC_LPDDRPHY0_CK0_T
                                      XGMC_LPDDRPHY0_CK0_C
                                      XGMC_LPDDRPHY0_CK1_T
                                      XGMC_LPDDRPHY0_CK1_C
                                      XGMC_LPDDRPHY0_DQ0_0
                                      XGMC_LPDDRPHY0_DQ0_1
                                      XGMC_LPDDRPHY0_DQ0_2
                                      XGMC_LPDDRPHY0_DQ0_3
                                      XGMC_LPDDRPHY0_DQ0_4
                                      XGMC_LPDDRPHY0_DQ0_5
                                      XGMC_LPDDRPHY0_DQ0_6
                                      XGMC_LPDDRPHY0_DQ0_7
                                      XGMC_LPDDRPHY0_DQ0_8
                                      XGMC_LPDDRPHY0_DQ0_9
                                      XGMC_LPDDRPHY0_DQ0_10
                                      XGMC_LPDDRPHY0_RDQS0_C
                                      XGMC_LPDDRPHY0_RDQS0_T
                                      XGMC_LPDDRPHY0_WCK0_C
                                      XGMC_LPDDRPHY0_WCK0_T
                                      XGMC_LPDDRPHY0_DQ0_11
                                      XGMC_LPDDRPHY0_DQ1_0
                                      XGMC_LPDDRPHY0_DQ1_1
                                      XGMC_LPDDRPHY0_DQ1_2
                                      XGMC_LPDDRPHY0_DQ1_3
                                      XGMC_LPDDRPHY0_DQ1_4
                                      XGMC_LPDDRPHY0_DQ1_5
                                      XGMC_LPDDRPHY0_DQ1_6
                                      XGMC_LPDDRPHY0_DQ1_7
                                      XGMC_LPDDRPHY0_DQ1_8
                                      XGMC_LPDDRPHY0_DQ1_9
                                      XGMC_LPDDRPHY0_DQ1_10
                                      XGMC_LPDDRPHY0_RDQS1_C
                                      XGMC_LPDDRPHY0_RDQS1_T
                                      XGMC_LPDDRPHY0_WCK1_C
                                      XGMC_LPDDRPHY0_WCK1_T
                                      XGMC_LPDDRPHY0_DQ1_11
                                      XGMC_LPDDRPHY0_CA0_0
                                      XGMC_LPDDRPHY0_CA0_1
                                      XGMC_LPDDRPHY0_CA0_2
                                      XGMC_LPDDRPHY0_CA0_3
                                      XGMC_LPDDRPHY0_CS0_0
                                      XGMC_LPDDRPHY0_CS0_1
                                      XGMC_LPDDRPHY0_CS1_0
                                      XGMC_LPDDRPHY0_CS1_1
                                      XGMC_LPDDRPHY0_CA1_0
                                      XGMC_LPDDRPHY0_CA1_1
                                      XGMC_LPDDRPHY0_CA1_2
                                      XGMC_LPDDRPHY0_CA1_3
                                      XGMC_LPDDRPHY0_ALERT
                                      XGMC_LPDDRPHY0_DTO
                                      XGMC_LPDDRPHY1_RESET_n
                                      XGMC_LPDDRPHY1_ZN
                                      XGMC_LPDDRPHY1_CK0_T
                                      XGMC_LPDDRPHY1_CK0_C
                                      XGMC_LPDDRPHY1_CK1_T
                                      XGMC_LPDDRPHY1_CK1_C
                                      XGMC_LPDDRPHY1_DQ0_0
                                      XGMC_LPDDRPHY1_DQ0_1
                                      XGMC_LPDDRPHY1_DQ0_2
                                      XGMC_LPDDRPHY1_DQ0_3
                                      XGMC_LPDDRPHY1_DQ0_4
                                      XGMC_LPDDRPHY1_DQ0_5
                                      XGMC_LPDDRPHY1_DQ0_6
                                      XGMC_LPDDRPHY1_DQ0_7
                                      XGMC_LPDDRPHY1_DQ0_8
                                      XGMC_LPDDRPHY1_DQ0_9
                                      XGMC_LPDDRPHY1_DQ0_10
                                      XGMC_LPDDRPHY1_RDQS0_C
                                      XGMC_LPDDRPHY1_RDQS0_T
                                      XGMC_LPDDRPHY1_WCK0_C
                                      XGMC_LPDDRPHY1_WCK0_T
                                      XGMC_LPDDRPHY1_DQ0_11
                                      XGMC_LPDDRPHY1_DQ1_0
                                      XGMC_LPDDRPHY1_DQ1_1
                                      XGMC_LPDDRPHY1_DQ1_2
                                      XGMC_LPDDRPHY1_DQ1_3
                                      XGMC_LPDDRPHY1_DQ1_4
                                      XGMC_LPDDRPHY1_DQ1_5
                                      XGMC_LPDDRPHY1_DQ1_6
                                      XGMC_LPDDRPHY1_DQ1_7
                                      XGMC_LPDDRPHY1_DQ1_8
                                      XGMC_LPDDRPHY1_DQ1_9
                                      XGMC_LPDDRPHY1_DQ1_10
                                      XGMC_LPDDRPHY1_RDQS1_C
                                      XGMC_LPDDRPHY1_RDQS1_T
                                      XGMC_LPDDRPHY1_WCK1_C
                                      XGMC_LPDDRPHY1_WCK1_T
                                      XGMC_LPDDRPHY1_DQ1_11
                                      XGMC_LPDDRPHY1_CA0_0
                                      XGMC_LPDDRPHY1_CA0_1
                                      XGMC_LPDDRPHY1_CA0_2
                                      XGMC_LPDDRPHY1_CA0_3
                                      XGMC_LPDDRPHY1_CS0_0
                                      XGMC_LPDDRPHY1_CS0_1
                                      XGMC_LPDDRPHY1_CS1_0
                                      XGMC_LPDDRPHY1_CS1_1
                                      XGMC_LPDDRPHY1_CA1_0
                                      XGMC_LPDDRPHY1_CA1_1
                                      XGMC_LPDDRPHY1_CA1_2
                                      XGMC_LPDDRPHY1_CA1_3
                                      XGMC_LPDDRPHY1_ALERT
                                      XGMC_LPDDRPHY1_DTO
                                      XGMC_LPDDRPHY2_RESET_n
                                      XGMC_LPDDRPHY2_ZN
                                      XGMC_LPDDRPHY2_CK0_T
                                      XGMC_LPDDRPHY2_CK0_C
                                      XGMC_LPDDRPHY2_CK1_T
                                      XGMC_LPDDRPHY2_CK1_C
                                      XGMC_LPDDRPHY2_DQ0_0
                                      XGMC_LPDDRPHY2_DQ0_1
                                      XGMC_LPDDRPHY2_DQ0_2
                                      XGMC_LPDDRPHY2_DQ0_3
                                      XGMC_LPDDRPHY2_DQ0_4
                                      XGMC_LPDDRPHY2_DQ0_5
                                      XGMC_LPDDRPHY2_DQ0_6
                                      XGMC_LPDDRPHY2_DQ0_7
                                      XGMC_LPDDRPHY2_DQ0_8
                                      XGMC_LPDDRPHY2_DQ0_9
                                      XGMC_LPDDRPHY2_DQ0_10
                                      XGMC_LPDDRPHY2_RDQS0_C
                                      XGMC_LPDDRPHY2_RDQS0_T
                                      XGMC_LPDDRPHY2_WCK0_C
                                      XGMC_LPDDRPHY2_WCK0_T
                                      XGMC_LPDDRPHY2_DQ0_11
                                      XGMC_LPDDRPHY2_DQ1_0
                                      XGMC_LPDDRPHY2_DQ1_1
                                      XGMC_LPDDRPHY2_DQ1_2
                                      XGMC_LPDDRPHY2_DQ1_3
                                      XGMC_LPDDRPHY2_DQ1_4
                                      XGMC_LPDDRPHY2_DQ1_5
                                      XGMC_LPDDRPHY2_DQ1_6
                                      XGMC_LPDDRPHY2_DQ1_7
                                      XGMC_LPDDRPHY2_DQ1_8
                                      XGMC_LPDDRPHY2_DQ1_9
                                      XGMC_LPDDRPHY2_DQ1_10
                                      XGMC_LPDDRPHY2_RDQS1_C
                                      XGMC_LPDDRPHY2_RDQS1_T
                                      XGMC_LPDDRPHY2_WCK1_C
                                      XGMC_LPDDRPHY2_WCK1_T
                                      XGMC_LPDDRPHY2_DQ1_11
                                      XGMC_LPDDRPHY2_CA0_0
                                      XGMC_LPDDRPHY2_CA0_1
                                      XGMC_LPDDRPHY2_CA0_2
                                      XGMC_LPDDRPHY2_CA0_3
                                      XGMC_LPDDRPHY2_CS0_0
                                      XGMC_LPDDRPHY2_CS0_1
                                      XGMC_LPDDRPHY2_CS1_0
                                      XGMC_LPDDRPHY2_CS1_1
                                      XGMC_LPDDRPHY2_CA1_0
                                      XGMC_LPDDRPHY2_CA1_1
                                      XGMC_LPDDRPHY2_CA1_2
                                      XGMC_LPDDRPHY2_CA1_3
                                      XGMC_LPDDRPHY2_ALERT
                                      XGMC_LPDDRPHY2_DTO
                                      XGMC_LPDDRPHY3_RESET_n
                                      XGMC_LPDDRPHY3_ZN
                                      XGMC_LPDDRPHY3_CK0_T
                                      XGMC_LPDDRPHY3_CK0_C
                                      XGMC_LPDDRPHY3_CK1_T
                                      XGMC_LPDDRPHY3_CK1_C
                                      XGMC_LPDDRPHY3_DQ0_0
                                      XGMC_LPDDRPHY3_DQ0_1
                                      XGMC_LPDDRPHY3_DQ0_2
                                      XGMC_LPDDRPHY3_DQ0_3
                                      XGMC_LPDDRPHY3_DQ0_4
                                      XGMC_LPDDRPHY3_DQ0_5
                                      XGMC_LPDDRPHY3_DQ0_6
                                      XGMC_LPDDRPHY3_DQ0_7
                                      XGMC_LPDDRPHY3_DQ0_8
                                      XGMC_LPDDRPHY3_DQ0_9
                                      XGMC_LPDDRPHY3_DQ0_10
                                      XGMC_LPDDRPHY3_RDQS0_C
                                      XGMC_LPDDRPHY3_RDQS0_T
                                      XGMC_LPDDRPHY3_WCK0_C
                                      XGMC_LPDDRPHY3_WCK0_T
                                      XGMC_LPDDRPHY3_DQ0_11
                                      XGMC_LPDDRPHY3_DQ1_0
                                      XGMC_LPDDRPHY3_DQ1_1
                                      XGMC_LPDDRPHY3_DQ1_2
                                      XGMC_LPDDRPHY3_DQ1_3
                                      XGMC_LPDDRPHY3_DQ1_4
                                      XGMC_LPDDRPHY3_DQ1_5
                                      XGMC_LPDDRPHY3_DQ1_6
                                      XGMC_LPDDRPHY3_DQ1_7
                                      XGMC_LPDDRPHY3_DQ1_8
                                      XGMC_LPDDRPHY3_DQ1_9
                                      XGMC_LPDDRPHY3_DQ1_10
                                      XGMC_LPDDRPHY3_RDQS1_C
                                      XGMC_LPDDRPHY3_RDQS1_T
                                      XGMC_LPDDRPHY3_WCK1_C
                                      XGMC_LPDDRPHY3_WCK1_T
                                      XGMC_LPDDRPHY3_DQ1_11
                                      XGMC_LPDDRPHY3_CA0_0
                                      XGMC_LPDDRPHY3_CA0_1
                                      XGMC_LPDDRPHY3_CA0_2
                                      XGMC_LPDDRPHY3_CA0_3
                                      XGMC_LPDDRPHY3_CS0_0
                                      XGMC_LPDDRPHY3_CS0_1
                                      XGMC_LPDDRPHY3_CS1_0
                                      XGMC_LPDDRPHY3_CS1_1
                                      XGMC_LPDDRPHY3_CA1_0
                                      XGMC_LPDDRPHY3_CA1_1
                                      XGMC_LPDDRPHY3_CA1_2
                                      XGMC_LPDDRPHY3_CA1_3
                                      XGMC_LPDDRPHY3_ALERT
                                      XGMC_LPDDRPHY3_DTO
                                      XISPFEP_CSI0_A0_LN0_P
                                      XISPFEP_CSI0_B0_LN0_M
                                      XISPFEP_CSI0_C0_LN1_P
                                      XISPFEP_CSI0_A1_CLK_P
                                      XISPFEP_CSI0_B1_CLK_M
                                      XISPFEP_CSI0_C1_LN1_M
                                      XISPFEP_CSI0_A2_LN2_P
                                      XISPFEP_CSI0_B2_LN2_M
                                      XISPFEP_CSI0_C2_LN3_P
                                      XISPFEP_CSI0_NC_LN3_M
                                      XISPFEP_CSI0_REXT
                                      XISPFEP_CSI1_A0_LN0_P
                                      XISPFEP_CSI1_B0_LN0_M
                                      XISPFEP_CSI1_C0_LN1_P
                                      XISPFEP_CSI1_A1_CLK_P
                                      XISPFEP_CSI1_B1_CLK_M
                                      XISPFEP_CSI1_C1_LN1_M
                                      XISPFEP_CSI1_A2_LN2_P
                                      XISPFEP_CSI1_B2_LN2_M
                                      XISPFEP_CSI1_C2_LN3_P
                                      XISPFEP_CSI1_NC_LN3_M
                                      XISPFEP_CSI1_REXT
                                      XISPFEP_CSI2_A0_LN0_P
                                      XISPFEP_CSI2_B0_LN0_M
                                      XISPFEP_CSI2_C0_LN1_P
                                      XISPFEP_CSI2_A1_CLK_P
                                      XISPFEP_CSI2_B1_CLK_M
                                      XISPFEP_CSI2_C1_LN1_M
                                      XISPFEP_CSI2_A2_LN2_P
                                      XISPFEP_CSI2_B2_LN2_M
                                      XISPFEP_CSI2_C2_LN3_P
                                      XISPFEP_CSI2_NC_LN3_M
                                      XISPFEP_CSI2_REXT
                                      XISPFEP_CSI3_A0_LN0_P
                                      XISPFEP_CSI3_B0_LN0_M
                                      XISPFEP_CSI3_C0_LN1_P
                                      XISPFEP_CSI3_A1_CLK_P
                                      XISPFEP_CSI3_B1_CLK_M
                                      XISPFEP_CSI3_C1_LN1_M
                                      XISPFEP_CSI3_A2_LN2_P
                                      XISPFEP_CSI3_B2_LN2_M
                                      XISPFEP_CSI3_C2_LN3_P
                                      XISPFEP_CSI3_NC_LN3_M
                                      XISPFEP_CSI3_REXT
                                      XISPFEP_CSI4_B0_LN0_N
                                      XISPFEP_CSI4_A0_LN0_P
                                      XISPFEP_CSI4_B1_LN1_N
                                      XISPFEP_CSI4_A1_LN1_P
                                      XISPFEP_CSI4_C0_CLK_P
                                      XISPFEP_CSI4_C1_CLK_N
                                      XISPFEP_CSI4_REXT
                                      XISPFEP_CSI5_B0_LN0_N
                                      XISPFEP_CSI5_A0_LN0_P
                                      XISPFEP_CSI5_B1_LN1_N
                                      XISPFEP_CSI5_A1_LN1_P
                                      XISPFEP_CSI5_C0_CLK_P
                                      XISPFEP_CSI5_C1_CLK_N
                                      XISPFEP_CSI5_REXT
                                      XISPFEP_CSI6_B0_LN0_N
                                      XISPFEP_CSI6_A0_LN0_P
                                      XISPFEP_CSI6_B1_LN1_N
                                      XISPFEP_CSI6_A1_LN1_P
                                      XISPFEP_CSI6_C0_CLK_P
                                      XISPFEP_CSI6_C1_CLK_N
                                      XISPFEP_CSI6_REXT
                                      XISPFEP_CSI7_B0_LN0_N
                                      XISPFEP_CSI7_A0_LN0_P
                                      XISPFEP_CSI7_B1_LN1_N
                                      XISPFEP_CSI7_A1_LN1_P
                                      XISPFEP_CSI7_C0_CLK_P
                                      XISPFEP_CSI7_C1_CLK_N
                                      XISPFEP_CSI7_REXT
                                      XDPUP_DSI0_A0_LN0_P
                                      XDPUP_DSI0_B0_LN0_M
                                      XDPUP_DSI0_C0_LN1_P
                                      XDPUP_DSI0_C1_LN1_M
                                      XDPUP_DSI0_A2_LN2_P
                                      XDPUP_DSI0_B2_LN2_M
                                      XDPUP_DSI0_C2_LN3_P
                                      XDPUP_DSI0_NC_LN3_M
                                      XDPUP_DSI0_A1_CLK_P
                                      XDPUP_DSI0_B1_CLK_M
                                      XDPUP_DSI0_REXT
                                      XDPUP_DSI1_A0_LN0_P
                                      XDPUP_DSI1_B0_LN0_M
                                      XDPUP_DSI1_C0_LN1_P
                                      XDPUP_DSI1_C1_LN1_M
                                      XDPUP_DSI1_A2_LN2_P
                                      XDPUP_DSI1_B2_LN2_M
                                      XDPUP_DSI1_C2_LN3_P
                                      XDPUP_DSI1_NC_LN3_M
                                      XDPUP_DSI1_A1_CLK_P
                                      XDPUP_DSI1_B1_CLK_M
                                      XDPUP_DSI1_REXT
                                      XAOSS_SC_PDM2_MIC_IN
                                      XAOSS_SC_PDM2_MIC_CLK
                                      XAOSS_SC_PDM3_MIC_IN
                                      XAOSS_SC_PDM3_MIC_CLK
                                      XAOSS_SC_PDM0_MIC_IN
                                      XAOSS_SC_PDM0_MIC_CLK
                                      XAOSS_SC_PDM0_FLCKR_IN
                                      XAOSS_SC_PDM0_FLCKR_CLK
                                      XAOSS_SC_I2S0_BCLK
                                      XAOSS_SC_I2S0_WS
                                      XAOSS_SC_I2S0_SDO
                                      XAOSS_SC_I2S0_SDI
                                      XAOSS_SC_TDM0_BCLK
                                      XAOSS_SC_TDM0_WS
                                      XAOSS_SC_OUT_MCLK
                                      XAOSS_SC_TDM1_BCLK
                                      XAOSS_SC_TDM1_WS
                                      XAOSS_SC_TDM1_SDO
                                      XAOSS_SC_TDM1_SDI
                                      XAOSS_CPM_IN_STBY_CLK
                                      XAOSS_CPM_CLKOUT0
                                      XAOSS_CPM_CLKOUT1
                                      XAOSS_AMB_UART0_RXD
                                      XAOSS_AMB_UART0_TXD
                                      XAOSS_AMB_UART0_RTSn
                                      XAOSS_AMB_UART0_CTSn
                                      XAOSS_AMB_UART3_RXD
                                      XAOSS_AMB_UART3_TXD
                                      XAOSS_AMB_UART3_RTSn
                                      XAOSS_AMB_UART3_CTSn
                                      XAOSS_AMB_SPI0_SCLK
                                      XAOSS_AMB_SPI0_MOSI
                                      XAOSS_AMB_SPI0_MISO
                                      XAOSS_AMB_SPI0_CSn
                                      XAOSS_AMB_SPI1_SCLK
                                      XAOSS_AMB_SPI1_MOSI
                                      XAOSS_AMB_SPI1_MISO
                                      XAOSS_AMB_SPI1_CSn
                                      XAOSS_AMB_SPI4_SCLK
                                      XAOSS_AMB_SPI4_MOSI
                                      XAOSS_AMB_SPI4_MISO
                                      XAOSS_AMB_SPI4_CSn
                                      XAOSS_AMB_SPI3_SCLK
                                      XAOSS_AMB_SPI3_MOSI
                                      XAOSS_AMB_SPI3_MISO
                                      XAOSS_AMB_SPI3_CSn
                                      XAOSS_AMB_SPI2_SCLK
                                      XAOSS_AMB_SPI2_MOSI
                                      XAOSS_AMB_SPI2_MISO
                                      XAOSS_AMB_SPI2_CSn
                                      XAOSS_AMB_UART1_RXD
                                      XAOSS_AMB_UART1_TXD
                                      XAOSS_AMB_UART1_RTSn
                                      XAOSS_AMB_UART1_CTSn
                                      XAOSS_AMB_UART4_RXD
                                      XAOSS_AMB_UART4_TXD
                                      XAOSS_AMB_UART4_RTSn
                                      XAOSS_AMB_UART4_CTSn
                                      XAOSS_AMB_SPI5_SCLK
                                      XAOSS_AMB_SPI5_MOSI
                                      XAOSS_AMB_SPI5_MISO
                                      XAOSS_AMB_SPI5_CSn
                                      XAOSS_SC_GPIO0
                                      XAOSS_SC_GPIO1
                                      XAOSS_SC_GPIO2
                                      XAOSS_SC_GPIO3
                                      XAOSS_SC_GPIO4
                                      XAOSS_SC_GPIO5
                                      XAOSS_SC_GPIO8
                                      XAOSS_SC_GPIO9
                                      XAOSS_SC_GPIO10
                                      XAOSS_SC_GPIO11
                                      XAOSS_SC_I2C0_SCL
                                      XAOSS_SC_I2C0_SDA
                                      XAOSS_SC_GPIO12
                                      XAOSS_SC_I3C0_SCL
                                      XAOSS_SC_I3C0_SDA
                                      XAOSS_SC_I3C1_SCL
                                      XAOSS_SC_I3C1_SDA
                                      XAOSS_SC_SPI6_SCLK
                                      XAOSS_SC_SPI6_MOSI
                                      XAOSS_SC_SPI6_MISO
                                      XAOSS_SC_SPI6_CSn
                                      XAOSS_CPM_GPIO13
                                      XAOSS_CPM_SPMI0_SCLK
                                      XAOSS_CPM_SPMI0_SDATA
                                      XAOSS_CPM_PRE_UVLO
                                      XAOSS_CPM_PRE_OCP_TPU
                                      XAOSS_CPM_GPIO0
                                      XAOSS_CPM_GPIO1
                                      XAOSS_CPM_PRE_OCP_CPU1
                                      XAOSS_CPM_PRE_OCP_CPU2
                                      XAOSS_CPM_GPIO2
                                      XAOSS_CPM_GPIO3
                                      XAOSS_CPM_CLKOUT0_EN
                                      XAOSS_CPM_CLKOUT1_EN
                                      XAOSS_CPM_GPIO4
                                      XAOSS_CPM_GPIO5
                                      XAOSS_CPM_GPIO6
                                      XAOSS_CPM_M0_BOOT_SEL
                                      XAOSS_CPM_OTP_EMU_MODE
                                      XAOSS_CPM_GPIO7
                                      XAOSS_CPM_GPIO8
                                      XAOSS_CPM_GPIO9
                                      XAOSS_CPM_VDROOP1
                                      XAOSS_CPM_VDROOP2
                                      XAOSS_SC_GPIO13
                                      XAOSS_CPM_I2C0_SCL
                                      XAOSS_CPM_I2C0_SDA
                                      XAOSS_CPM_GPIO10
                                      XAOSS_CPM_GPIO11
                                      XAOSS_CPM_SRC_OPT0
                                      XAOSS_CPM_SRC_OPT1
                                      XAOSS_CPM_SRC_OPT2
                                      XAOSS_SC_I2C2_SCL
                                      XAOSS_SC_I2C2_SDA
                                      XAOSS_SC_I2C4_SCL
                                      XAOSS_SC_I2C4_SDA
                                      XAOSS_CPM_SPI0_SCLK
                                      XAOSS_CPM_SPI0_MOSI
                                      XAOSS_CPM_SPI0_MISO
                                      XAOSS_CPM_SPI0_CSn
                                      XAOSS_CPM_GPI0
                                      XAOSS_CPM_CLKBUF_ON
                                      XAOSS_CPM_XOM_0
                                      XAOSS_CPM_GPI1
                                      XAOSS_CPM_GPIO12
                                      XAOSS_CPM_PWR_REQ
                                      XAOSS_CPM_XnRESET
                                      XAOSS_CPM_XnWRESET
                                      XAOSS_CPM_XnRESET_OUT
                                      XAOSS_CPM_XTAL_XIN
                                      XAOSS_CPM_XTAL_XOUT
                                      XGDMC_UART0_RXD
                                      XGDMC_UART0_TXD
                                      XGDMC_IN_DEBUG_1
                                      XGDMC_UART_MODEM_RXD
                                      XGDMC_UART_MODEM_TXD
                                      XGDMC_IN_DEBUG_0
                                      XGDMC_DEBUG_DEFAULT_0
                                      XGDMC_SOC_DEBUG_UART_RXD
                                      XGDMC_SOC_DEBUG_UART_TXD
                                      XGDMC_CTI_0
                                      XGDMC_UART_GSC_RXD
                                      XGDMC_UART_GSC_TXD
                                      XGDMC_CTI_1
                                      XGDMC_TM1
                                      XGDMC_TM0
                                      XGDMC_JTAG_TRST_n
                                      XGDMC_JTAG_SRST_n
                                      XGDMC_JTAG_TMS
                                      XGDMC_JTAG_TCK
                                      XGDMC_JTAG_TDI
                                      XGDMC_JTAG_TDO
                                      XSEC_GPIO0
                                      XSEC_GPIO1
                                      XSEC_GPIO2
                                      XSEC_SPI0_SCLK
                                      XSEC_SPI0_MOSI
                                      XSEC_SPI0_MISO
                                      XSEC_SPI0_CSN
                                      XLSIOS_DPU_TE0
                                      XLSIOS_DPU_TE1
                                      XLSIOS_MCLK0
                                      XLSIOS_MCLK1
                                      XLSIOS_MCLK2
                                      XLSIOS_MCLK3
                                      XLSIOS_MCLK4
                                      XLSIOS_MCLK5
                                      XLSIOS_I23C0_SCL
                                      XLSIOS_I23C0_SDA
                                      XLSIOS_I23C1_SCL
                                      XLSIOS_I23C1_SDA
                                      XLSIOS_I23C2_SCL
                                      XLSIOS_I23C2_SDA
                                      XLSIOS_GPIO0
                                      XLSIOS_GPIO1
                                      XLSIOS_SPIU0_SCLK_RTSn
                                      XLSIOS_SPIU0_MOSI_TXD
                                      XLSIOS_SPIU0_MISO_RXD
                                      XLSIOS_SPIU0_CSn_CTSn
                                      XLSIOS_I23C3_SCL
                                      XLSIOS_I23C3_SDA
                                      XLSIOS_GPIO2
                                      XLSIOS_GPIO3
                                      XLSIOS_PWM_0
                                      XLSIOS_PWM_1
                                      XLSIOS_VSYNC1
                                      XLSIOS_VSYNC2
                                      XLSIOS_VSYNC3
                                      XLSIOS_VSYNC5
                                      XLSIOS_VSYNC6
                                      XLSIOS_VSYNC7
                                      XLSIOS_GPIO4
                                      XLSIOS_GPIO5
                                      XLSIOS_GPIO6
                                      XLSIOS_GPIO11
                                      XLSIOS_GPIO12
                                      XLSIOS_GPIO13
                                      XLSIOS_GPIO14
                                      XLSIOS_GPIO15
                                      XLSIOS_VSYNC0
                                      XLSIOS_VSYNC4
                                      XLSIOS_GPIO17
                                      XLSIOS_GPIO18
                                      XLSIOS_CAMERA_MUTE_N
                                      XLSIOS_PRE_OCP_GPU
                                      XLSIOS_I23C4_SCL
                                      XLSIOS_I23C4_SDA
                                      XLSIOS_SPIU2_SCLK_RTSn
                                      XLSIOS_SPIU2_MOSI_TXD
                                      XLSIOS_SPIU2_MISO_RXD
                                      XLSIOS_SPIU2_CSn_CTSn
                                      XLSIOS_SPIU3_SCLK_RTSn
                                      XLSIOS_SPIU3_MOSI_TXD
                                      XLSIOS_SPIU3_MISO_RXD
                                      XLSIOS_SPIU3_CSn_CTSn
                                      XLSIOS_GPIO7
                                      XLSIOS_GPIO8
                                      XLSIOS_GPIO9
                                      XLSIOS_GPIO10
                                      XLSIOS_GPIO16
                                      XLSIOS_SPIU1_SCLK_RTSn
                                      XLSIOS_SPIU1_MOSI_TXD
                                      XLSIOS_SPIU1_MISO_RXD
                                      XLSIOS_SPIU1_CSn_CTSn
                                      XLSIOE_I23C5_SCL
                                      XLSIOE_I23C5_SDA
                                      XLSIOE_I23C6_SCL
                                      XLSIOE_I23C6_SDA
                                      XLSIOE_SPIU4_SCLK_RTSn
                                      XLSIOE_SPIU4_MOSI_TXD
                                      XLSIOE_SPIU4_MISO_RXD
                                      XLSIOE_SPIU4_CSn_CTSn
                                      XLSIOE_I23C7_SCL
                                      XLSIOE_I23C7_SDA
                                      XLSIOE_GPIO19
                                      XLSIOE_GPIO20
                                      XLSIOE_GPIO21
                                      XLSIOE_GPIO22
                                      XLSIOE_GPIO23
                                      XLSIOE_GPIO24
                                      XLSIOE_GPIO25
                                      XLSIOE_GPIO26
                                      XLSIOE_GPIO27
                                      XLSIOE_GPIO28
                                      XLSIOE_GPIO29
                                      XLSIOE_I23C8_SCL
                                      XLSIOE_I23C8_SDA
                                      XLSIOE_I23C9_SCL
                                      XLSIOE_I23C9_SDA
                                      XLSIOE_SPIU5_SCLK_RTSn
                                      XLSIOE_SPIU5_MOSI_TXD
                                      XLSIOE_SPIU5_MISO_RXD
                                      XLSIOE_SPIU5_CSn_CTSn
                                      } {# Signal nets} 
bbset esd.scenarios.Scenarios        {func.ffgnp-NM-125-cworst_ccworst}                               {# all possible scenarios for ESD}
bbset esd.MasterRam                  {80000}                                                          {#RAM for Redhawk Run}
bbset esd.BatchResources             {}                                                               {#Batch Resource for Redhawk Run}
bbset esd.EquivalentNets             {}                                                               {# Make equivalent nets through the pair list: {<from_nets> <to_net>} ...; ex. {AVSS* VSS} means all AVSS* nets are the equivalent part of VSS}
bbset esd.Dmp                        {False}                                                          {# Enable DMP; default is False}
bbset esd.DmpNumberOfJobs            {4}                                                              {# DMP host count}
bbset esd.DmpGridType                {RTDA}                                                           {# DMP grid type}
bbset esd.DmpQueueName               {RAM/32G}                                                        {# DMP queue specification}
bbset esd.DmpArgumentsForLargeJobs   {-I -D}                                                          {# DMP job-submit arguments}
bbset esd.ClampInfoFile              {[bbget .info.PROCESS_DIR]/esd/clamps.info}                      {# fullchip_clamps.info file}
bbset esd.DesignPcellFile            {[bbget .info.PROCESS_DIR]/esd/design.pcell}                     {# design.pcell file}
bbset esd.GsrRunConditionOptionMacro {
                                      TEMPERATURE_EM 25
                                      TEMPERATURE 25
                                      TOGGLE_RATE 0.12
                                      FREQ 1025e6
                                      INPUT_TRANSITION 0.01e-9
                                      } {# design.gsr global macro}
bbset esd.GsrCommonOptionMacro       {
                                      TECHNOLOGY 3
                                      ENABLE_BLECH 1
                                      REXTRACTION_DETAIL_LEVEL 1
                                      PUSH_PG_PININST 1
                                      PGNET_HONOR_DEF_TYPE 1
                                      DEF_TRUE_PATH_EXTENSION 1
                                      MERGE_VIA_METAL 1
                                      USE_DRAWN_WIDTH_FOR_EM 1
                                      USE_DRAWN_WIDTH_FOR_EM_LOOKUP 1
                                      USE_INTERP_ETCH_FOR_R 1
                                      ESD_SHORT_CLAMP_PIN 1
                                      READ_ALL_NETS 1
                                      USE_DEF_VIARULE 1
                                      DEF_READ_ALL_IO_NETS 1
                                      
                                      EM_RULE_SET ESD_EM_2KV_HBM
                                      
                                      PAD_FILE {
                                      [bbget esd.DesignPcellFile]
                                      }
                                      
                                      ESD_GSR_OPTIMIZE 3
                                      FAST_DEF_READ 4
                                      ESD_CLAMP_FILE [pwd]/outs/clamps.info
                                      } {# design.gsr common macro}
bbset esd.GsrIgnoreOptionMacro       {
                                      IGNORE_TECH_ERROR 1
                                      IGNORE_DEF_ERROR 1
                                      IGNORE_UNDEFINED_LAYER 1
                                      IGNORE_LEF_DEF_MISMATCH 1
                                      DEF_IGNORE_LAYERS {
                                      M0
                                      VIA0
                                      M1
                                      VIA1
                                      M2
                                      VIA2
                                      M3
                                      VIA3
                                      M4
                                      VIA4
                                      M5
                                      }
                                      } {# design.gsr ignore macro}
bbset esd.GsrUserOptionMacro         {}                                                               {# design.gsr user append macro}
bbset esd.ResRuleMacro               {}                                                               {# esd_r.rule macro}
bbset esd.ResRuleFile                {[bbget .info.PROCESS_DIR]/esd/esd_R.rule}                       {# esd_r.rule file; taking higher priority than ResRuleMacro}
bbset esd.CurrentDensityRuleMacro    {}                                                               {# esd_cd.rule macro}
bbset esd.CurrentDensityRuleFile     {[bbget .info.PROCESS_DIR]/esd/esd_CD.rule}                      {# esd_cd.rule file; taking higher priority than CurrentDensityRuleMacro}
bbset esd.TechLefFile                {}                                                               {# Tech LEF file; taking higher priority than TechLefFileQuery}
bbset esd.RhTechFile                 {}                                                               {# RC tech file; taking higher priority than RhTechFileQuery}
bbset esd.RhEmTechFile               {[bbquery get file -db pdk -filter "tool=='redhawk' && file_type=='rulefile' && function=='esd_em' && stack=='[bbget .Stack]'"]} {# ESD-specific EM tech file; taking higher priority than RhEmTechFileQuery}
bbset esd.GDSModels                  {}                                                               {# GDS models}  
bbset esd.DisableGsrAutoTechPrep     {False}                                                          {# AutoTechPrep: use bbquey to find tech}
bbset esd.DisableGsrAutoLibPrep      {False}                                                          {# AutoLibPrep: use lib_prep to find lib}
bbset esd.DisableGsrAutoLefPrep      {False}                                                          {# AutoLefPrep: use lef to find lef}
bbset esd.DisableGsrAutoDefPrep      {False}                                                          {# AutoDefPrep: use DefInputs to find def}
bbset esd.DisableGsrAutoVddGndPrep   {False}                                                          {# AutoVddGndPrep: use mmmc/VoltageSources to find VDD}
bbset esd.DisableGsrAutoSignalPrep   {False}                                                          {# AutoSignalPrep: use vars to find signal nets}
bbset esd.DisableGsrAutoGDSModelPrep {False}                                                          {# AutoGDSModelPrep: use vars to find GDS models}
bbset esd.Tool                       {pfsc}                                                           {# default tool for esd analysis}
bbset esd.NetPairs                   {NET_PAIR # PLEASE DEFINE VALUE in esd.NetPairs var #}           {#Net Pair Macor in rule files}
bbset esd.CurrentScenario            {}                                                               {#DontTouch, keep it empty}
bbset esd.TechLefFileQuery           {file_type=='techlef' && track=~'[bbget .Track]' && stack=='[bbget .Stack]' && rdl=='[bbget .TechRdlType]' && is_shdmim=='[bbget .TechIsShdmim]' && pitch=='[bbget .Pitch]'} {# Query string for tech LEF file}
bbset esd.RhTechFileQuery            {tool=='redhawk' && file_type=='rulefile' && corner=='typical' && stack=='[bbget .Stack]'} {# Query string for RC tech file}
bbset esd.RhEmTechFileQuery          {}                                                               {# Query string for ESD-specific EM tech file}
bbset esd.RegressionMode             {}                                                               {# Regression-mode identifier}
bbset esd.Launcher                   {nc}                                                             {# Launcher type; either nc or localhost}
bbset esd.config.MasterRam           {10000}                                                          {# Min RAM required by master}
bbset esd.config.Cores               {16}                                                             {# Max worker count}
bbset esd.config.MinWorkers          {16}                                                             {# Min worker count}
bbset esd.config.Ram                 {10000}                                                          {# Min RAM required by each worker}
bbset esd.config.BatchResources      {}                                                               {# Additional resource specification}
bbset esd.config.create_design_view.Cores {[bbget .esd.config.Cores]}                                      {# Max worker count at create_design_view}
bbset esd.config.create_design_view.MinWorkers {[bbget .esd.config.MinWorkers]}                                 {# Min worker count at create_design_view}
bbset esd.config.create_design_view.Ram {[bbget .esd.config.Ram]}                                        {# Min RAM required by each worker at create_design_view}
bbset esd.config.create_design_view.BatchResources {[bbget .esd.config.BatchResources]}                             {# Additional resource specification at create_design_view}
bbset esd.config.esd_analysis.Cores  {[bbget .esd.config.Cores]}                                      {# Max worker count at ESD analyses}
bbset esd.config.esd_analysis.MinWorkers {[bbget .esd.config.MinWorkers]}                                 {# Min worker count at ESD analyses}
bbset esd.config.esd_analysis.Ram    {[bbget .esd.config.Ram]}                                        {# Min RAM required by each worker at ESD analyses}
bbset esd.config.esd_analysis.BatchResources {[bbget .esd.config.BatchResources]}                             {# Additional resource specification at ESD analyses}
bbset esd.PostOptionsSetupCallback   {}                                                               {# Callback for post option setup}
bbset esd.IsBumpDef                  {True}                                                           {# DEFs contain bumps}
bbset esd.BumpCellName               {bump_cell_fc_n2p}                                               {# Bump cell names}
bbset esd.PlocFile                   {}                                                               {# PLOC; aka. Power LOCations}
bbset esd.DesignECOsCallback         {
design_ecos = [
  {'cell': '*', 'layer': 'M0',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M1',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M2',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M3',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M4',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M5',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA0', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA1', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA2', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA3', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA4', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA5', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M0',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M1',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M2',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M3',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M4',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M5',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA0', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA1', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA2', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA3', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA4', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA5', 'trim_type': 'geometry'},
]
  } {# Callback for create_design_view/settings/design_ecos; the input var. name is required to be design_ecos}
bbset esd.CurrentSink                {
                                      {PRWDWUWS*                              {M15 0.2 sRDL 0.2}}
                                      {PVDD08CODCDGM*                         {sRDL 0.2}}
                                      {PVDD1204CODCDGM*                       {sRDL 0.2}}
                                      {PVDD12CODCDGM*                         {sRDL 0.2}}
                                      {PVDD1CODCDGM*                          {sRDL 0.2}}
                                      {PCLAMPCCOD*                            {M13 0.2}}
                                      {PCLAMPCOD_V*                           {M13 0.2}}
                                      {tdiode_top                             {M13 0.2}}
                                      {TEF02PESD_P                            {M9 0.2}}
                                      {ESD_B2B_1_M6                           {M6 0.2}}
                                      {*ABKXTLP2_ESD_DIODE_D1_M6*             {M6 0.2}}
                                      {*ABKXTLP2_ESD_PCLAMP_CORE_PG_N1_V_M9*  {M6 0.2}}
                                      {*ABKBCKP2_ESD_DIODE_D1_M6*             {M6 0.2}}
                                      {*ABKBCKP2_ESD_PCLAMP_CORE_PG_N1_V_M9*  {M6 0.2}}
                                      {PDB2CODANA*                            {M15 0.2 sRDL 0.2}}
                                      {PVDD1CODANAM*                          {sRDL 0.2}}
                                      } {# Current-sink customization}
bbset esd.MissingViaCheck.Enable     {True}                                                           {# Enable all consectuive layer check AND stack via check by NetStackViaSpec if specified}
bbset esd.MissingViaCheck.NetStackViaSpec {}                                                               {
                                                                                                    # Specify a list of stack via spec for different net, {{NetPatternA Layer1 Layer2} {NetPatternB Layer1 Layer2} ...} to run missing via checking
                                                                                                    # Ex: bbset NetStackViaSpec {{*VSS* D11 F4} {*VDD* D12 M3}}
                                                                                                    #   rhsc will check if any missing VSS stacked-via between Layer:D11 and Layer2:F4 & missing VDD stack-via between Layer1:D12 and Layer2:M3
                                                                                                    }
bbset esd.MissingViaCheck.CellPatterns {PCLAMP* ESD_B2B_* TEF*ESD*}                                     {# Check missing VIAs inside insts' region from cell patterns}
bbset esd.metrics.WrapTags           {ESD_TEST_TAG}                                                   {# Tag metrics; going to be obsoleted}
bbset esd.metrics.Tag                {[bbget .esd.metrics.WrapTags -quiet]}                           {# Tag metrics} 
bbset esd.metrics.RunName            {TEMP-RUN_NAME}                                                  {# Assign the run-name for metrics data}
bbset esd.metrics.Spin               {B0}                                                             {# Assign the spin of the data}
bbset esd.metrics.Waiving            {{r_check False} {cd_check False} {connectivity_check False} {coverage_check False} {extra_reff_r_check False}} {# Refresh metrics based on waivers; "{r_check [True|False]} {cd_check [True|False]} {connectivity_check [True|False]} {coverage_check [True|False]} {extra_reff_r_check [True|False]}"}
bbset esd.extra_reff.Enable          {False}                                                          {# Enable eff.-R analyses on extra cells; mainly for analog IPs}
bbset esd.extra_reff.ClampInfoFile   {[bbget .info.PROCESS_DIR]/esd/clamps.extra_reff.info}           {# Clamp info. file specifying all extra cells}
bbset esd.extra_reff.ResRuleFile     {[bbget .info.PROCESS_DIR]/esd/esd_R.extra_reff.rule}            {# R rule file constraining all extra cells}
bbset esd.extra_reff.RhTechFile      {}                                                               {# RC tech file for extra eff.-R analyses; taking higher priority than RhTechFileQuery}
bbset esd.extra_reff.RhTechFileQuery {tool=='redhawk' && file_type=='rulefile' && corner=='rcworst_CCworst_T' && stack=='[bbget .Stack]'} {# Query string of RC tech file for extra eff.-R analyses}
bbset esd.extra_reff.StandaloneMode  {False}                                                          {# True means regular ESD analyses will be off}
bbset esd.extra_reff.DesignECOsCallback {
design_ecos = [
  {'cell': '*', 'layer': 'M0',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M1',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M2',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M3',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M4',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'M5',   'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA0', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA1', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA2', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA3', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA4', 'trim_type': 'geometry'},
  {'cell': '*', 'layer': 'VIA5', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M0',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M1',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M2',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M3',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M4',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'M5',   'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA0', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA1', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA2', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA3', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA4', 'trim_type': 'geometry'},
  {'net':  '*', 'layer': 'VIA5', 'trim_type': 'geometry'},
]
  } {# Callback for create_design_view/settings/design_ecos of eff.-R analyses; the input var. name is required to be design_ecos}
bbset esd.extra_reff.ConstraintFile  {[bbget .info.PROCESS_DIR]/esd/esd_R.extra_reff.constraint}      {# Constraint file for eff.-R summarization}
bbset esd.EnableSignalPhysicalDisconnectionRpting {False}                                                          {# Enable signal-physical-disconnection reporting}
bbset esd.ViaChoppingDistance        {}                                                               {# Via-chopping distances; whose syntax is "{<via_layer_pattern; ex. VIA1*> <value>} ..."}
bbset esd.TopViaChoppingDistance     {}                                                               {# Top-via-chopping distance}
bbset power.Tool                     {primepower}                                                     {# Tool use for power analysis}
bbset power.Resources                { RAM/[bbget .power.ram] CORES/[bbget .power.core] [bbget .power.constraint]} {# Resources to queue the machine from nc and do power analysis in PrimePower}
bbset power.ram                      {100000}                                                         {# Resources to queue the machine from nc and do power analysis in PrimePower}
bbset power.core                     {16}                                                             {# Resources to queue the machine from nc and do power analysis in PrimePower}
bbset power.constraint               {[bbget .power.[bbget .bob.Scheduler].constraint]}               {# No Comment}  
bbset power.nc.constraint            {}                                                               {# NC based resource constraint}
bbset power.slurm.constraint         {}                                                               {# Slurm based resource constraint}
bbset power.dispatch_power_analysis_static.Resources {RAM/10000 CORES/4}                                              {# Resources for dispatch_power_analysis_static jobs}
bbset power.Cores                    {16}                                                             {# cpu number used in PrimePower to perform analysis}
bbset power.DistributedAnalysis.enable {False}                                                          {# True|False(default), option to enable distributed analysis}
bbset power.DistributedAnalysis.Process {16}                                                             {# number of machine}
bbset power.DistributedAnalysis.Resources {[bbget .power.DistributedAnalysis.[bbget .bob.Scheduler].WorkerResources]} {# No Comment}  
bbset power.DistributedAnalysis.nc.WorkerResources {  CORES/[bbget .power.DistributedAnalysis.WorkerCores]  RAM/[bbget .power.DistributedAnalysis.WorkerRam]  [bbget .power.DistributedAnalysis.WorkerConstraint]  } {# No Comment}  
bbset power.DistributedAnalysis.slurm.WorkerResources {  -c [bbget .power.DistributedAnalysis.WorkerCores]  --mem [bbget .power.DistributedAnalysis.WorkerRam]  [bbget .power.DistributedAnalysis.WorkerConstraint]  } {# No Comment}  
bbset power.DistributedAnalysis.WorkerCores {16}                                                             {# core usage}  
bbset power.DistributedAnalysis.WorkerRam {400000}                                                         {# memory usage}
bbset power.DistributedAnalysis.WorkerConstraint {[bbget .power.DistributedAnalysis.[bbget .bob.Scheduler].WorkerConstraint]} {# limitation to reservation or machine types}
bbset power.DistributedAnalysis.nc.WorkerConstraint {}                                                               {# nc based limitation to reservation or machine types}
bbset power.DistributedAnalysis.slurm.WorkerConstraint {}                                                               {# slurm based limitation to reservation or machine types}
bbset power.power_script.enable      {True}                                                           {# script to generate vector summary files, b/263706621}
bbset power.BigQuery.TableId         {gchips_power}                                                   {# table name for metrics upload}
bbset power.StaUntil                 {bb_sta}                                                         {# Define the sta stop block name when create the sta flow}
bbset power.StaSessionBlocks         {bb_sta bb_scen_summary}                                         {# Define the sta block name to search for session}
bbset power.StaSessionName           {session.pocvm}                                                  {# STA session name}
bbset power.StaRoot                  {}                                                               {# Search path of STA runs and session}
bbset power.PwrIntent                {}                                                               {# UPF file}    
bbset power.AutoConnectMemPGPin      {}                                                               {# True(default)|False. Connect memory PG pin to a pseudo power net if there is no UPF loased. This help to get more accurate memory pin power for power scaling}
bbset power.Scenario                 {}                                                               {# Local variable. Scenario name of current power analysis}
bbset power.InputSession             {}                                                               {# Local variable. Full session path used for current power analysis node}
bbset power.NodeInputs               {}                                                               {# Local variable. Input files for the power anaysis node}
bbset power.EnableMetricsUpload      {True}                                                           {# True(default)|False, option to enable/disable power metrics upload to bigquery}
bbset power.EnableInstanceMetricsUpload {False}                                                          {# True|False(default), option to enable/disable instance based power metrics upload to bigquery}
bbset power.EnableParallelAnalysis   {False}                                                          {# True|False(default), option to enable/disable parallel nodes for power_analysis}
bbset power.DFTTopModules            {[regsub -all -line {\s*\S+\s*\{(.*)\}} [ regsub -all -line {\}\s*\S+\s*\{} [ regsub -line -all {\n} [bbget syn.synthdft.DFTTopModules] ""] ""] "\\1"]} {# Get flattern DFTTopModules list from syn.synthdft.DFTTopModules. This should be glob pattern}
bbset power.DFTTopInstances          {[regsub -all -line {\s*\S+\s*\{(.*)\}} [ regsub -all -line {\}\s*\S+\s*\{} [ regsub -line -all {\n} [bbget syn.synthdft.DFTTopInstances] ""] ""] "\\1"]} {# Get flatten DFTTopInstances list from syn.synthdft.DFTTopInstances. This should be glob pattern}
bbset power.FlopsPattern             {{MULTI_BITS { {^V2\[A-Z_0-9\]+SDFF\[A-Z_0-9\]+} {^V4\[A-Z_0-9\]+SDFF\[A-Z_0-9\]+} } } {HIGH_SPEED { {^MHFSDFFQN\[A-Z_0-9\]+} {^V2XMHSDFFQN\[A-Z_0-9\]+} {^MFSDFFQN\[A-Z_0-9\]+} {^V3MFSDFFQN\[A-Z_0-9\]+} {^V3MFSDFFRPQN\[A-Z_0-9\]+} {^MHLSDFFQN\[A-Z_0-9\]+} {^MH1LSDFFQN\[A-Z_0-9\]+} {^V2XMHLSDFFQN\[A-Z_0-9\]+} {^V2XMHALSDFFQN\[A-Z_0-9\]+} {^HSDFFQ\[A-Z_0-9\]+} } }} {# Pattern to match different types of flip flops for design reporting}
bbset power.BufferPattern            {{BUF { {^\[^HEAD\]*BUF\[A-Z_0-9\]+} } } {INV { {^\[A-Z_0-9\]*INV\[A-Z_0-9\]+} } }} {# Pattern to match different types of buffer/inverter for design reporting}
bbset power.PowerAnalysisPatterns    {{TOTAL_POWER_SUMMARY { is_memory_cell!=true && is_hierarchical==false } {
                                      {CLOCK_ICG     { is_clock_network_cell==true && is_clock_gating_check==true } }
                                      {CLOCK_BUF_INV { is_clock_network_cell==true && (ref_name=~^\\\[^HEAD\\\]*BUF\\S+ || ref_name=~^\\S*INV\\S+) } }
                                      {DATA_BUF_INV  { is_clock_network_cell!=true && (ref_name=~^\\\[^HEAD\\\]*BUF\\S+ || ref_name=~^\\S*INV\\S+) } }
                                      {DATA_COMB     { is_clock_network_cell!=true } }
                                      {REGISTERS     { is_sequential==true && is_memory_cell!=true } }
                                      }
                                      } {CLOCK_PATH_SUMMARY { is_clock_network_cell==true && is_memory_cell!=true && is_hierarchical==false } {
                                      { CBUF     { ref_name=~^\\S*BUF\\S+ } }
                                      { CINV     { ref_name=~^\\S*INV\\S+ } }
                                      }
                                      } {DATA_PATH_BUF_INV { is_clock_network_cell!=true && is_hierarchical==false && is_hierarchical==false } {
                                      { DBUF     { ref_name=~^\\S*BUF\\S+ } }
                                      { DINV     { ref_name=~^\\S*INV\\S+ } }
                                      }
                                      } {PHYSICAL_CELLS { is_memory_cell!=true && is_hierarchical==false } {
                                      {DCAP           { ref_name=~\\S*DCAP\\S* } }
                                      {DCAP4OPT3F     { ref_name=~\\S*DCAP4OPT3F\\S* } }
                                      {DCAP4          { ref_name=~\\S*DCAP4\\S* && ref_name!~\\S*DCAP4OPT3F\\S* } }
                                      {DCAP8OPT3F     { ref_name=~\\S*DCAP8OPT3F\\S* } }
                                      {DCAP16OPT3F    { ref_name=~\\S*DCAP16OPT3F\\S* } }
                                      {GDCAP1SH       { ref_name=~\\S*GDCAP1SH\\S* } }
                                      {DCAP*OPT3F     { ref_name=~\\S*DCAP\\S*OPT3F\\S* } }
                                      {DCAP64         { ref_name=~\\S*DCAP64\\S* } }
                                      {DCAP32         { ref_name=~\\S*DCAP32\\S* } }
                                      {GDCAP7DH       { ref_name=~\\S*GDCAP7DH\\S* } }
                                      {GDCAP6DH       { ref_name=~\\S*GDCAP6DH\\S* } }
                                      }
                                      }} {# Grouping for Power analysis dashboard reporting. Report name: power_analysis_dashboard.rpt}
bbset power.PowerAnalysisAppendModulePatterns {}                                                               {# This regexp pattern will be appended to PowerAnalysisPatterns by get full_name from module}
bbset power.PowerAnalysisAppendInstPatterns {}                                                               {# This regexp pattern will be appended to PowerAnalysisPatterns by full_name}
bbset power.PowerAnalysisAppendCellPatterns {}                                                               {# This regexp pattern will be appended to PowerAnalysisPatterns bt ref_name}
bbset power.Runs                     {
                                      func.tt-NMP-85-cworst_ccworst_t
                                      } {# scenario list for power analysis: <mode>.<process>-<voltage>-<temperature>-<rccorner>}
bbset power.runs                     {[bbget .power.Runs]}                                            {# aligne variable with sta.runs, accomdate for legacy power.Runs}
bbset power.signoff.runs             {func.tt-NMP-85-cworst_ccworst_t func.ffgnp-NMP-125-cworst_ccworst_t} {# default power signoff scenarios}
bbset power.config.SwitchCellFilterCmd {ref_name =~ HDR*BWP*CPD*}                                       {# pattern to generate toggle rate and static probability}
bbset power.config.NoRegisterPowerInClock {False}                                                          {# True|False(default), option for power_clock_network_include_register_clock_pin_power}
bbset power.config.EnableExactNameMatch {True}                                                           {# True(default)|False, Set power_disable_exact_built_in_name_mapping to "false" by default, which means that the exact name matching is enabled. b/174333257}
bbset power.config.EnableExactNameMatchNetHierPin {True}                                                           {# True(default)|False, Set power_disable_exact_name_match_to_net & power_disable_exact_name_match_to_hier_pin to "true" by default, which means that the exact name matching on net andhier pin is disabled. b/174333257}
bbset power.config.EnableCustomChecks {True}                                                           {# True(default)|False, option to enable custom check reports}
bbset power.config.EnableLevelClockCapRpt {False}                                                          {# True|False(default), option to enable level wise clock cap report}
bbset power.config.ConcurrentEventAnalysisCores {1}                                                              {# default = 1, if value > 1, trigger concurrent event analysis}
bbset power.config.ConcurrentEventAnalysisMergeFSDB {False}                                                          {# True|False(default), merge waveform output fsdb}
bbset power.config.EnableScalePower  {True}                                                           {# True(default)|False, option to generate scale_power.sh}
bbset power.config.EnableScalePowerIPF {False}                                                          {# True|False(default), option to scale ipf}
bbset power.config.EnableGuardbandPower {False}                                                          {# True(default)|Fasle, option to generate guardband_power.sh}
bbset power.config.ErrorOutSessionWithVoltageScaling {True}                                                           {# Error out when input session with voltage scaling enablement}
bbset power.config.WriteIPF          {True}                                                           {# True(default)|False, option to turn on/off for writing IPF }
bbset power.config.DumpOutputPinToggleRateDetail {False}                                                          {# True|False(default), Dump output pin's toggle rate in detail format, b/236810385}
bbset power.config.ErrorOutDefaultVoltageNotUsedByVdomainVoltages {True}                                                           {# True(default)|False, option to error out when default voltage not used in vdomains voltage}
bbset power.config.SignOffCornerList {}                                                               {# No Comment}  
bbset power.config.CGStaticProbabilityPatterns {
                                      {*SIZEONLY_latch_u0/E arch_CG_E_pin_negative_SP.rpt}
                                      {*SIZEONLY_latch_u0/Q arch_CG_Q_pin_negative_SP.rpt}
                                      {*SIZEONLY_latch_u0_clone*/E cloned_arch_CG_E_pin_negative_SP.rpt}
                                      {*SIZEONLY_latch_u0_clone*/Q cloned_arch_CG_Q_pin_negative_SP.rpt}
                                      } {# pattern to generate SP report which SP < 0, ex. {*latch/E rpt1}}
bbset power.config.UserInputMacroListFileExpandInNameMap {}                                                               {# user input macro list file }
bbset power.config.MetricsUploadAudit.CheckitemList {POWER_5_6 POWER_5_7 POWERCAD_5_1 POWER_5_9 POWER_5_2 POWER_7_7} {# Upload metrics when all checkitem pass audit}
bbset power.config.hierarchy_info.RegexpsCellVt {[bbget .sta.config.hierarchy_info.RegexpsCellVt]}               {# define regular expressions to identify cell vt}
bbset power.config.ExtraScaleSupplyNets {[bbget power.vectorless.ExtraScaleSupplyNets]}                  {# List of supply Nets that need to be scaled specifically. Flow will generate extra scaling power reports for that rail}
bbset power.config.MMMCVdomainCheck  {[bbget .sta.config.MMMCVdomainCheck]}                           {# True(default)|False, check user correctly defined vdomain in MMMC}
bbset power.config.ValidTagPrefix    {POWER_M2_TRIAL POWER_M2_FINAL POWER_M3_TRIAL POWER_M3_FINAL POWER_M4_TRIAL POWER_M4_FINAL POWER_M4_FINAL_GLSZD POWER_M4_FINAL_SDF POWER_BTO_TRIAL POWER_BTO_FINAL POWER_BTO_FINAL_GLSZD POWER_BTO_FINAL_SDF} {# valid tag naming rule, b/277854287}
bbset power.config.WriteActivityFsdbWaveform {False}                                                          {# True|False(default), flag to enable write_activity_fsdb_waveform command}
bbset power.config.SeparatePowerWaveform {all}                                                            {# varialbe to control option (separate_power_waveform) in set_power_analysis_options command}
bbset power.config.ReducePowerFSDBFileLength {False}                                                          {# Workaround to resolve ptpx limitation in power fsdb file length  in T-2022-03.SP5-2}
bbset power.config.DisablePowerFSDB  {False}                                                          {# Workaround to resolve ptpx limitation in power fsdb file length  in T-2022-03.SP5-2}
bbset power.config.DisableCGC.Enable {False}                                                          {# option to turn on/off CGC test enable}
bbset power.config.DisableCGC.ReferenceName {CKLNQ*}                                                         {# referename to filter clock gating cell}
bbset power.config.DisableCGC.TestEnablePinName {TE}                                                             {# actual pin name to filter test enable pin}
bbset power.config.DisableDelayShiftZeroDelayFSDB {True}                                                           {# Disable delay shift zero delay fsdb}
bbset power.config.SubHierPowerTotalPowerThreshold {0.05}                                                           {# report sub hier power for hier which total power > 5% total power}
bbset power.config.StdFilterCmd      {ref_name =~ *BWP*CPD*}                                          {# command to filter std cell for power dashboard analysis}
bbset power.config.app_var.power_enable_advanced_fsdb_reader {false}                                                          {# True|False(default), PTPX app_var}
bbset power.config.app_var.power_match_state_for_logic_x {0}                                                              {# 0(default)|1|x, PTPX app_var}
bbset power.config.app_var.power_match_value_for_logic_x {x}                                                              {# x(default)|0|1, PTPX app+var}
bbset power.config.app_var.power_enable_pin_internal_power {False}                                                          {# True|False(default), PTPX app_var}
bbset power.config.app_var.power_enable_pin_power_to_receiver_mode {False}                                                          {# True|False(default, PTPX app_var)}
bbset power.config.app_var.power_dump_multi_rail_total_waveform {True}                                                           {# True(default)|False, PTPX app_var}
bbset power.config.app_var.power_distributed_skip_fsdb_header {False}                                                          {# True|False(default), PTPX app_var}
bbset power.config.emir_validation.power.config.emir_validation.peakpower_tolerance {0.05}                                                           {# No Comment}  
bbset power.config.emir_validation.power.config.emir_validation.peaktime_tolerance {0}                                                              {# No Comment}  
bbset power.config.emir_validation.power.config.emir_validation.totalpower_tolerance {0.05}                                                           {# No Comment}  
bbset power.config.emir_validation.power.config.emir_validation.golden_folder {}                                                               {# No Comment}  
bbset power.config.InferredICGInformation.architect_icg {*SIZEONLY_latch_u0*}                                            {# No Comment}  
bbset power.config.ScalePowerReport.leakage_diff_tolerance {0.02}                                                           {# tolerance for leakage difference between report_power vs scale_power, ex. 0.02}
bbset power.config.ScalePowerReport.annotation_threshold {0.95}                                                           {# scale power annotation rate need to > threshold, ex. 0.95 }
bbset power.config.pre_flow.hook     {}                                                               {# hook for pre_flow}
bbset power.config.post_flow.hook    {}                                                               {# hook for post_flow}
bbset power.Dashboard.PrimePower.AppVars {power_clock_network_include_register_clock_pin_power}           {# List EDA app vars want to track in dashboard, could be a list}
bbset power.hooks.PrePowerReport     {}                                                               {# Scripts be sourced before power reporting}
bbset power.hooks.PostPowerReport    {}                                                               {# Scripts be sourced after power reporting}
bbset power.hooks.PreAnalysis        {}                                                               {# Scripts be soucced before power analysis}
bbset power.hooks.PostAnalysis       {}                                                               {# Scripts be sourced after power analysis}
bbset power.clock.IdlClock           {False}                                                          {# True|False(default), option to specify if design should use ideal clockto perform power analysis}
bbset power.clock.EstClock           {False}                                                          {# Turn off the estimate clock due to bug: b/171023459 in Q-2019.12-SP5-T-1 build}
bbset power.clock.EstClockBuff       {}                                                               {# Buffer ref_name for estimate_clock_network_power}
bbset power.clock.EstClockTrans      {0.10}                                                           {# Transition value to apply on ideal clock}
bbset power.clock.ReportPower        {}                                                               {# list clock name for report_power-clock-${clk_name}.rpt, support wildcard, default enable all clocks}
bbset power.SwitchType               {vectorless}                                                     {# both|vectorless|vector}
bbset power.vectorless.EnableScalePowerSettings {False}                                                          {# True|False(default), option to enable lassen script to setup vectorless toggle_rate/static_probability. When set to True, the following vectorless toggleRate/staticProbability setting will not be adopted }
bbset power.vectorless.ExtraScaleSupplyNets {}                                                               {# List of supply Nets that need to be scaled specifically. Flow will generate extra scaling power reports for that rail}
bbset power.vectorless.toggleRate.Default {0.2}                                                            {# Default toggle rate value}
bbset power.vectorless.toggleRate.DefaultClock {2}                                                              {# Toggle rate value on clock sources}
bbset power.vectorless.toggleRate.PrimeIo {0.2}                                                            {# Toggle rate value on primay Input/Output}
bbset power.vectorless.toggleRate.Icg {2}                                                              {# Toggle rate value on integrated clockgating cells}
bbset power.vectorless.toggleRate.Flops {0.2}                                                            {# Toggle rate value on flops outputs}
bbset power.vectorless.toggleRate.Mems {0.2}                                                            {# Toggle rate value on mems outputs}
bbset power.vectorless.toggleRate.AdditionalSettingsFile {}                                                               {# Scripts be sourced after toggle rate value are setup}
bbset power.vectorless.staticProbability.Default {0.5}                                                            {# Default switching activitiy value}
bbset power.vectorless.staticProbability.DefaultClock {0.5}                                                            {# Switching activity value on clock sources}
bbset power.vectorless.staticProbability.PrimeIo {0.5}                                                            {# Switching activity value on primay Input/Output}
bbset power.vectorless.staticProbability.Icg {0.5}                                                            {# Switching activity value on integrated clockgating cells}
bbset power.vectorless.staticProbability.Flops {0.5}                                                            {# Switching activity value on flops outputs}
bbset power.vectorless.staticProbability.Mems {0.5}                                                            {# Switching activity value on mems outputs}
bbset power.vectorless.staticProbability.AdditionalSettingsFile {}                                                               {# Scripts be sourced after switching activity value are setup}
bbset power.vectorless.ReportInstancePaths {}                                                               {# Generate another set of power reports based on the hierarchy specified}
bbset power.vector.VectorList        {}                                                               {# list of vector, each vector should define a namespace in the following}
bbset power.vector.SdpdTrackingAddCellRegexps {}                                                               {#Control sdpd_tracking adiitional cell list, default include memory cells and black box cells}
bbset power.vector.SdpdTrackingDefaultCellRegexps {is_memory_cell == true || is_black_box == true}                 {#Control sdpd_tracking default cell list, default include memory cells and black box cells}
bbset power.vector.vectorConfig.VectorName {}                                                               {# vector name} 
bbset power.vector.vectorConfig.VectorPath {}                                                               {# vector file path}
bbset power.vector.vectorConfig.VectorType {}                                                               {# something like rtl or non-true-time-gls or true-time-gls}
bbset power.vector.vectorConfig.RtlNameMap {}                                                               {# name map file in case of rtl vector}
bbset power.vector.vectorConfig.StripPath {}                                                               {# vector strip path}
bbset power.vector.vectorConfig.InstancePath {}                                                               {# vector annotate to which instance path}
bbset power.vector.vectorConfig.StartTime {}                                                               {# start-time}  
bbset power.vector.vectorConfig.EndTime {}                                                               {# end-time}    
bbset power.vector.vectorConfig.ValidStartTime {}                                                               {# start-time of the overall valid range of the vector}
bbset power.vector.vectorConfig.ValidEndTime {}                                                               {# end-time of the overall valid range of the vector}
bbset power.vector.vectorConfig.ScalingComboPower {}                                                               {# combination power scaling by * 1+<ratio>}
bbset power.vector.vectorConfig.ActivityFileCheckPatterns {}                                                               {# list of -find pattern for report_activity_file_check. Default is empty and no check if performed}
bbset power.vector.constraint.Enable {False}                                                          {#True|False(Default). Option to enable additional constraint to vector}
bbset power.vector.constraint.CaseOne {}                                                               {# List of Port pattern to set port case to constant one}
bbset power.vector.constraint.CaseZero {}                                                               {# List of Port pattern to set port case to constant zero}
bbset power.consolidate_metrics.primepower.PostCmd.MailNotification.Enable {1}                                                              {# Enable Mail Notification for power consolidate_metrics.primepower node}
bbset power.consolidate_metrics.primepower.PostCmd.MailNotification.Subject {Power flow is finished}                                         {# Executation Notification Subject}
bbset power.consolidate_metrics.primepower.PostCmd.MailNotification.File {./rpts/power_audit.rpt}                                         {# Executation Notification Content}
bbset power.esa.nodes                {pnr/placeopt pnr/clockopt}                                      {# Implement node the that this flow like to branch from}
bbset power.physical.TechLef         {[bbget .pnr.TechLEFFile]}                                       {# default same as STA}
bbset power.physical.Lefs            {[bbquery get file -db dk -mode regexp -filter "file_type=~'lef' && track=~'([bbget .Track]|^$)'"] [bbfiles -bundles chipfinish -filetype lef -subblocks all -stage power -purpose signoff]} {# Using bbquery to get all lef in the DK}
bbset power.physical.Defs            {[bbfiles -bundles chipfinish -filetype def -purpose signoff -hierarchy -stage power]} {# setup def from bbfiles}
bbset power.physical.enable          {[bbget .power.cnod.enable]}                                     {# default align with CNOD Flow}
bbset power.cnod.enable              {False}                                                          {#default turn on CNOD flow in TSMC N4}
bbset power.scenarios.Scenarios      {[bbget .power.Runs]}                                            {# default scenario settings for lib-prep}
bbset power.hierarchy.flatten        {[bbget .sta.hierarchy.flatten]}                                 {# default same as STA}
bbset power.Guardband.RawDerate      {[bbget .info.CHIP_DIR]/ptpx/guardbands/raw_derate.yaml}         {# raw derate file for guardband power}
bbset power.DesignStage              {}                                                               {# User configure when using local netlist, value : syn|place|post_cts|post_route}
bbset power.config.ICGDisableTimingArc {}                                                               {# default empty, value : {CK Q}, will interpret to set_disable_timing -from CK -to Q}
bbset power.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/ptpx/CIA/checkers }                 {CIA checker search path for power stage}
bbset power.config.CIA.ConsolidateSummary {[bbget .info.BOB_RUN_DIR]/consolidate_metrics.[bbget .power.Tool] } {cia.summary path for Bob Audit System}
bbset power.config.CIA.ToolInfo.FunctionMap {
                                      {POWER_1_1 ToolVersion}
                                      {POWER_1_2 ToolVersionQualified}
                                      {POWER_1_3 ToolVersionPlanned}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.Hook.FunctionMap {
                                      {POWER_2_2 ExistsAnyHook}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.LibInfo.FunctionMap {
                                      {POWER_3_1 LibUpToDate}
                                      {POWER_3_2 LibDKVersion}
                                      {POWER_3_3 LibConfigAligned}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.SPEFInfo.FunctionMap {
                                      {POWER_3_7 SPEFVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.CornerInfo.FunctionMap {
                                      {POWER_5_1 PVTInfo}
                                      {POWER_5_2 ScenarioAligned}
                                      {POWER_5_3 RCInfo}
                                      {POWER_5_4 ScenarioAligned}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.VecotrAnnotation.FunctionMap {
                                      {POWER_5_5 VectorFullAnnotation}
                                      {POWER_5_6 VectorPIPOAnnotation}
                                      {POWER_5_7 VectorSeqAnnotation}
                                      {POWERCAD_5_1 VectorMemAnnotation}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.VecotrAnnotation.PassRatio.VectorSeqAnnotation {90.0}                                                           {allow user to configure pass ratio}
bbset power.config.CIA.ParasiticsAnnotation.FunctionMap {
                                      {POWER_5_9 ParasiticsAnnotation}
                                      } {define 1:1 mapping for check_id and function}
bbset power.config.CIA.ScalePowerReport.FunctionMap {
                                      {POWER_7_7 ScalePowerQA}
                                      } {# No Comment}  
bbset namemap.FeList                 {[bbget .syn.Tool] [bbfiles -bundles [lindex [bbget .syn.Stages] end] -filetype namemap -purpose namemap_merge]} {# list of pairs of synthesis <tool> <namemap file>}
bbset namemap.BeList                 {[bbget .pnr.Tool] [bbfiles -bundles [bbget .pnr.Stage] -filetype namemap -purpose namemap_merge]} {# list of pairs of PnR <tool> <namemap file>}
bbset namemap.OutTools               {ptpx redhawk}                                                   {# list of tools format to output the namemap }
bbset namemap.OutputFileName         {}                                                               {# Output file name to write to}
bbset namemap.InputPinName           {}                                                               {# Flip-flops input pin name}
bbset namemap.OutputPinName          {}                                                               {# Flip-flops output pin name}
bbset namemap.OutputNPinName         {}                                                               {# Flip-flops invert output pin name}
bbset namemap.Options                {-nq -if -rd}                                                    {# Other options used for namemap merge utility}
bbset namemap.lec.PI.rtl.Sub         {}                                                               {List of regsub pattern pair to change inst name. eg. {{\\. /} } }
bbset namemap.lec.PO.rtl.Sub         {}                                                               {List of regsub pattern pair to change inst name. eg. {{\\. /} } }
bbset namemap.lec.BBOX.rtl.Sub       {}                                                               {List of regsub pattern pair to change inst name. eg. { {\\. /} {$ rrm} {/u_memrrm ''}} }
bbset namemap.lec.DLAT.rtl.Sub       {}                                                               {List of regsub pattern pair to change inst name. eg. { {/sttb_\\$U1.*$ ''} {/\[^/\]+$ ''} {\\. /} {_u_ /u_} } }
bbset namemap.lec.DLAT.imp.Sub       {}                                                               {List of regsub pattern pair to change inst name. eg. { {/sttb_\\$U1.*$ ''} } }
bbset namemap.lec.DLAT.pinmap.Map    {{clk_en E} {clk_in CK} {clk_out ECK}}                           {Pin mapping for DLAT from rtl pin name to implementation pin name}
bbset namemap.lec.DFF.rtl.Sub        {}                                                               {List of regsub pattern pair to change inst name. eg. { {\\. /} {(/\[^/\]+)_reg(\[^/\]*)$ \\1\\2} {\\[|\\] .} {\\.+(\\d+)\\. \[\\1\]} {\\.\\. .} {\\.$ ''}}}
bbset namemap.lec.DFF.imp.Sub        {}                                                               {List of regsub pattern pair to change inst name. replace pattern is a list to map from rtl pin to both regular and invert pin. eg. { {/sttb_\\$U1.*$ {/Q0 /QN0} } {/sttb_\\$U2.*$ {/Q1 /QN1} } {/U\\$1.*$ {/Q /QN} }}}
bbset sta.runs                       {[bbget .sta.signoff.default.runs]}                              {# STA actual run scenarios}
bbset sta.signoff.runs               {}                                                               {# STA signoff scenarios}
bbset sta.gls.runs                   {}                                                               {# GLS scenarios}
bbset sta.emt.runs                   {[bbget sta.emt.default.runs]}                                   {# EMT scenarios}
bbset sta.rail2rail.exclude.runs     {[bbget .sta.rail2rail.exclude.default.runs]}                    {# rail to rail scenarios}
bbset sta.rail2rail.include.runs     {*}                                                              {# default include all R2R jobs}
bbset sta.ir_sta.exclude.runs        {}                                                               {# exclude scenarios}
bbset sta.ir_sta.include.runs        {*}                                                              {# default include all IR jobs}
bbset sta.paths.Base                 {[bbget .info.PD_TOOLS_DIR]/sta/PrimeTime}                       {# default path for base reference scripts}
bbset sta.paths.Noise                {[bbget .info.PD_TOOLS_DIR]/sta/PrimeTime/batch_script}          {# default path for noise reference scripts}
bbset sta.paths.Cpc                  {}                                                               {# default path for cpc reference scripts}
bbset sta.paths.Pocvm                {}                                                               {# default path for pocv reference scripts}
bbset sta.paths.Process              {[bbget .info.PROCESS_DIR]/sta/gchips/PrimeTime}                 {# default path for process related scripts}
bbset sta.Tool                       {primetime}                                                      {# default tool for STA, pt for now}
bbset sta.variable.mode              {default}                                                        {# variable mode}
bbset sta.top_design                 {[bbget .info.BLOCK]}                                            {# define the top-design name of STA}
bbset sta.scenarios.Scenarios        {[bbget .sta.runs]}                                              {# default scenario settings for lib-prep}
bbset sta.hierarchy.subblocks        {[bbfiles -legacy_mode subblocks]}                               {# use bbfiles to get full subblocks block name}
bbset sta.hierarchy.SpefBundle       {pex}                                                            {# internal variable, spef bundle name}
bbset sta.hierarchy.Bundles          {chipfinish [bbget .sta.hierarchy.SpefBundle]}                   {# temp variable for latest WA tag, to assign all possible bundle from STA}
bbset sta.netlist.verilog            {[bbfiles -bundles chipfinish -filetype verilog -model_type verilog -category nopg -stage sta -hierarchy] [bbfiles -bundles chipfinish -filetype verilog -model_type verilogPG -category pg -stage sta -hierarchy] [bbfiles -bundles chipfinish -filetype verilog -model_type stub -stage sta -hierarchy] [bbquery get file -db dk -filter "file_type = '[lsearch -inline -regexp [bbget .hierarchy.sta.ModelType] "verilog"]'"]} {# define default verilog inputs from chip-finish for block}
bbset sta.parasitic.spefs            {[bbfiles -bundles pex -filetype spef -category sta -purpose signoff -stage sta -hierarchy -annotated] [bbfiles -bundles pex -filetype spef -purpose signoff -category sta -stage sta -hierarchy -annotated -model_type spefFlatten] [bbfiles -bundles pex -filetype gpd -purpose signoff  -category sta -stage sta -hierarchy -annotated -model_type gpd ]} {# define default spef input from pex for block}
bbset sta.parasitic.fp_def           {}                                                               {# define default fp_def, deprecated}
bbset sta.parasitic.InstConfig       {}                                                               {# custom location/orientation for subblocks, ref-format: <PD_TOOLS_DIR>/sta/defaults/spef_config.yaml }
bbset sta.parasitic.spef_empty_checker {True}                                                           {# while spef is empty list, stop the flow}
bbset sta.physical.Defs              {[bbfiles -bundles chipfinish -filetype def -purpose signoff -hierarchy]} {# setup def for PT physical context-aware}
bbset sta.physical.TechLef           {[bbquery get file -db pdk -filter "file_type=~'techlef' && tool=~'innovus' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {# techlef for PT physical context-aware}
bbset sta.physical.Lefs              {[bbquery get file -db dk -mode regexp -filter "file_type=~'lef' && track=~'([bbget .Track]|^$)'"] [bbfiles -bundles chipfinish -filetype lef -subblocks all -stage sta -purpose signoff]} {#setup subblock lef}
bbset sta.physical.BlockLefs         {[bbfiles -bundles chipfinish -filetype lef -purpose signoff -hierarchy]} {#setup subblock lef only}
bbset sta.hyperscale.Models          {[bbfiles -bundles sta_and_hyperscale -filetype hyperscale -model_type hsModel -category sta -purpose model -subblocks all -stage sta -annotated]} {# define hyperscale models with given block name}
bbset sta.hyperscale.Context         {[bbfiles -bundles sta_and_hyperscale -filetype hyperscale -purpose context -model_type hsContext -category sta -parentblocks -stage sta -annotated]} {# define hyperscale context}
bbset sta.hyperscale.ContextConstraint {[bbfiles -bundles sta_and_hyperscale -filetype hyperscale -purpose context_constraint -model_type hsContextConstraint -category sta -parentblocks -stage sta -annotated]} {# define hyperscale context}
bbset sta.Sdf.Files                  {[bbfiles -bundles sta_sdf -filetype sdf -model_type sdf -category sdf_hier -stage sta -hierarchy -annotated] [bbfiles -bundles sta_sdf -filetype sdf -model_type sdfFlatten -category sdf_flat -hierarchy -stage sta -annotated] [bbfiles -bundles sta_sdf -filetype sdf -model_type sdfMerged -category sdf_hier_merged -hierarchy -stage sta -annotated] [bbfiles -bundles sta_sdf -filetype sdf -model_type sdfFlattenMerged -category sdf_flat_merged -hierarchy -stage sta -annotated]} {# the file list for Sdf, use list-of-list, the same syntax as spef}
bbset sta.Etm.Files                  {[bbfiles -bundles sta -filetype etm -category db -subblocks all -stage sta ]} {# files of ETM models, put ALL files right in the variables, included all PVTs}
bbset sta.Etm.Instances              {}                                                               {# the instances that using ETMs to model}
bbset sta.ExtraLibs.Enable           {True}                                                           {# enable the extra-lib function for STA ETM}
bbset sta.ExtraLibs.bbquery.ip.ccs_db {[bbget .sta.Etm.Files]}                                         {# ccs_db of ETMs, use [bbget .sta.Etm.Files] directly}
bbset sta.block_search_path          {[bbget .info.PD_TOOLS_DIR]/sta/blocks}                          {# default STA-block search path}
bbset sta.plugin_search_path         {[bbget .info.PD_TOOLS_DIR]/sta/plugins}                         {# default STA plugin search path}
bbset sta.config.coresWithinOneLicnese {32}                                                             {# one licesne can support how many cores}
bbset sta.config.AllowMultipleLicense {False}                                                          {# only expose to SoC/STA Managers}
bbset sta.config.AdditionalCores     {2}                                                              {# For better performance}
bbset sta.config.dry_run             {False}                                                          {# dry-run or not, default = False}
bbset sta.config.ValidConstraintModeName {func shift merged func_IR shift_IR shift_IR50 shift_IR33 func_R2R_SMVA shift_R2R_SMVA func_R2R shift_R2R func_R2R_case0 func_R2R_case1 func_R2R_case2 func_R2R_case3 func_R2R_case4 func_R2R_case5 func_R2R_case6 shift_R2R_case0 shift_R2R_case1 shift_R2R_case2 shift_R2R_case3 shift_R2R_case4 shift_R2R_case5 shift_R2R_case6} {# default valid constraint mode name}
bbset sta.config.MMMCVdomainCheck    {True}                                                           {# True(default)|False, check user correctly defined vdomain in MMMC}
bbset sta.config.GoldenSettingDir    {[bbget info.PROCESS_DIR]/sta/gchips/config/golden_setting}      {# folder to save golden setting}
bbset sta.config.generate_dashboard.enable {False}                                                          {# enable STA block or not}
bbset sta.config.generate_metrics.enable {False}                                                          {# enable STA block or not}
bbset sta.config.audit.enable        {False}                                                          {# enable STA plugin}
bbset sta.config.hier.track          {[bbget .Track]}                                                 {# track information be used in STA}
bbset sta.config.hier.default_clock_vt {}                                                               {# default clock vt in design}
bbset sta.config.hier.clock_vt       {}                                                               {# clock vt in design}
bbset sta.config.hier.mem_vt         {}                                                               {# memory vt in design}
bbset sta.config.hier.is_etm         {}                                                               {# etm instances}
bbset sta.config.block.bb_setup.core {4}                                                              {# CPU core}    
bbset sta.config.block.bb_setup.ram  {25000}                                                          {# Memmory}     
bbset sta.config.block.bb_setup.resource {}                                                               {# Resource}    
bbset sta.config.block.bb_setup.res  {CORES/[bbget sta.config.block.bb_setup.core] RAM/[bbget sta.config.block.bb_setup.ram] [bbget sta.config.block.bb_setup.resource]} {# default NC resources}
bbset sta.config.block.bb_setup.enable {True}                                                           {# enable STA block or not}
bbset sta.config.block.bb_sta.core   {16}                                                             {# CPU core}    
bbset sta.config.block.bb_sta.ram    {50000}                                                          {# Memmory}     
bbset sta.config.block.bb_sta.resource {}                                                               {# Resource}    
bbset sta.config.block.bb_sta.res    {CORES/[bbget sta.config.block.bb_sta.core] RAM/[bbget sta.config.block.bb_sta.ram] [bbget sta.config.block.bb_sta.resource]} {# default NC resources}
bbset sta.config.block.bb_sta.enable {True}                                                           {# enable STA block or not}
bbset sta.config.block.bb_noise.nc.res {CORES/32 RAM/50000}                                             {# default NC resources}
bbset sta.config.block.bb_noise.slurm.res { -- -c 32 --mem 50000}                                          {# default NC resources}
bbset sta.config.block.bb_noise.res  {[bbget .sta.config.block.bb_noise.[bbget .bob.Scheduler].res]}  {# No Comment}  
bbset sta.config.block.bb_noise.enable {False}                                                          {# enable STA block or not}
bbset sta.config.block.bb_scen_summary.core {4}                                                              {# CPU core}    
bbset sta.config.block.bb_scen_summary.ram {25000}                                                          {# Memmory}     
bbset sta.config.block.bb_scen_summary.resource {}                                                               {# Resource}    
bbset sta.config.block.bb_scen_summary.res {CORES/[bbget sta.config.block.bb_scen_summary.core] RAM/[bbget sta.config.block.bb_scen_summary.ram] [bbget sta.config.block.bb_scen_summary.resource]} {# default NC resources}
bbset sta.config.block.bb_scen_summary.enable {True}                                                           {# enable STA block or not}
bbset sta.config.block.bb_summary.core {4}                                                              {# CPU core}    
bbset sta.config.block.bb_summary.ram {25000}                                                          {# Memmory}     
bbset sta.config.block.bb_summary.resource {}                                                               {# Resource}    
bbset sta.config.block.bb_summary.res {CORES/[bbget sta.config.block.bb_summary.core] RAM/[bbget sta.config.block.bb_summary.ram] [bbget sta.config.block.bb_summary.resource]} {# default NC resources}
bbset sta.config.block.bb_summary.enable {True}                                                           {# enable STA block or not}
bbset sta.config.block.bb_dashboard.core {4}                                                              {# CPU core}    
bbset sta.config.block.bb_dashboard.ram {25000}                                                          {# Memmory}     
bbset sta.config.block.bb_dashboard.resource {}                                                               {# Resource}    
bbset sta.config.block.bb_dashboard.res {CORES/[bbget sta.config.block.bb_dashboard.core] RAM/[bbget sta.config.block.bb_dashboard.ram] [bbget sta.config.block.bb_dashboard.resource]} {# default NC resources}
bbset sta.config.block.bb_dashboard.enable {False}                                                          {# enable STA block or not}
bbset sta.config.global.LocalTmpDir  {}                                                               {# define local tmp dir for PT jobs}
bbset sta.config.global.ContextAware {None}                                                           {# context-aware flow selection, for TSMC, default=None, None|NCA|CA}
bbset sta.config.global.MultiInputSwitch {True}                                                           {# enable MIS for N4 by default}
bbset sta.config.global.MultiInputSwitchingCoefficient {0.75}                                                           {# Enable/Disable multi-input switching (MIS), default = False, True|False}
bbset sta.config.global.AdvancedMultiInputSwitchingScaleFactor {0.5}                                                            {# Enable/Disable multi-input switching (MIS), default = False, True|False}
bbset sta.config.global.ResetMultiInputSwitchingCoefficientLibCells {*XOR* *XNR*}                                                    {# remove MIS coefficient for given lib cells}
bbset sta.config.global.MultiInputSwitchingCellFile {[bbget .info.PROCESS_DIR]/sta/gchips/config/mis_cell/cell_MIS_coefficient.csv} {# cell list to reset MIS}
bbset sta.config.global.ClockVtMapping {}                                                               {# clock vt naming mapping, {{default lvt_l10} {clkLVT_W_\Sdb lvt_l10}}}
bbset sta.config.global.ideal_clock  {False}                                                          {# Enable ideal clock network, default=False, True|False}
bbset sta.config.global.margin_config {}                                                               {# margin config for the run}
bbset sta.config.global.mem_config   {}                                                               {# memory type definitions}
bbset sta.config.global.max_threads  {16}                                                             {# PrimeTime thread}
bbset sta.config.global.pocv_mode    {}                                                               {# POCVM mode, default=infinity, fast|normal|final|slow|yield|infinity}
bbset sta.config.global.enable_via_variation {False}                                                          {# enable via variation or not}
bbset sta.config.global.disable_pba  {True}                                                           {# disable pba reporting or not, default=True, True|False}
bbset sta.config.global.is_interactive {False}                                                          {# quit after finish or not, True will not quit}
bbset sta.config.global.parallel_execute {True}                                                           {# parallel execute on save_session}
bbset sta.config.global.background_rpt {True}                                                           {# backgroun_rpt or not, redirect -db}
bbset sta.config.global.TasksPriority {
                                      }                        {# define the tasks priority by priority and wildcards}
bbset sta.config.global.synchronizer_cells {}                                                               {# synchronizer cell pattern}
bbset sta.config.global.SynchronizerPin {"Q"}                                                            {# synchronizer pin name in legacy SYNC report}
bbset sta.config.global.SynchronizerPinFilter {"direction==out && full_name=~*/Q*"}                            {# synchronizer pin filter pattern in SYNC report}
bbset sta.config.global.NrfCellFilter {}                                                               {# Overwrite default NRF cell filter pattern in NRF report: [filter_collection [all_registers] NrfFilter]}
bbset sta.config.global.NrfPinFilter {"direction==out"}                                               {# NRF pin filter pattern in NRF report}
bbset sta.config.flow_summary.enable {TRUE}                                                           {# enable primetime dump update timing info}
bbset sta.config.repo_release.flow_pt_var_query.enable {TRUE}                                                           {# enable primetime dump flow and PT vars}
bbset sta.config.repo_release.flow_pt_var_query.flow_pt_var_golden {[bbget .info.REPO_TOP]/cad/chip/[bbget .info.CHIP]/sta/pt_var_checker/flow_pt_var_golden.txt} {# No Comment}  
bbset sta.config.repo_release.flow_pt_var_query.script {[bbget .info.REPO_TOP]/cad/pd-tools/sta/lib/tcl/repo_release/flow_pt_var_query.tcl} {# No Comment}  
bbset sta.config.compress_data.enable {True}                                                           {# enable data compression in scen_summary}
bbset sta.config.compress_data.Targets {}                                                               {# list of compression target, glob supported}
bbset sta.config.hooks.post_init     {}                                                               {# post init-design hook}
bbset sta.config.hooks.post_setup_upf {}                                                               {# post setup_upf hook}
bbset sta.config.hooks.pre_gba_analysis {}                                                               {# pre gba analysis hook}
bbset sta.config.hooks.post_gba_analysis {}                                                               {# post gba analysis hook}
bbset sta.config.hooks.post_analysis {}                                                               {# post full analysis hook}
bbset sta.config.hooks.pre_etm       {}                                                               {# pre etm hook}
bbset sta.config.hooks.before_end    {}                                                               {# pre etm hook}
bbset sta.config.gchips_preamble.enable {True}                                                           {# enable STA plugin}
bbset sta.config.read_dvd.enable     {True}                                                           {# enable STA plugin}
bbset sta.config.read_dvd.Scenarios  {*IR*}                                                           {# scenarnio name for IR-STA}
bbset sta.config.read_dvd.Mode       {0}                                                              {#mode 0 for eff Vdd, mode 1 for both pwr/gnd 0| 1; default=0}
bbset sta.config.read_dvd.EmirDvdFile {[bbfiles -bundles emir -filetype dvd_sta]}                      {#vd annotation report from emir, can give local run path; default:bbfiles}
bbset sta.config.read_dvd.EmirDvdFileWithTemperatureScaling {True}                                                           {# True(default)|False, Dvd file with temperature scaling or not}
bbset sta.config.read_dvd.EnableMisTbc {False}                                                          {# True(default)|False}
bbset sta.config.read_dvd.DvDMapping {}                                                               {# provide the mapping rule for dvd file, syntax: [{from_pattern to_pattern}]+ }
bbset sta.config.read_dvd.ScenariosReadMultipleDvd {*OD*}                                                           {# scenarios to enable multiple dvd files, b/353895051}
bbset sta.config.foundry_preamble.enable {True}                                                           {# enable STA plugin}
bbset sta.config.foundry_postamble.enable {True}                                                           {# enable STA plugin}
bbset sta.config.app_var_rpt.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.addl_settings.enable {True}                                                           {# enable STA plugin}
bbset sta.config.analyze_case_nets.enable {True}                                                           {# enable STA plugin}
bbset sta.config.analyze_case_nets.MaxTransCaseAnalysis {true}                                                           {# true/false for timing_enable_max_transition_set_case_analysis}
bbset sta.config.analyze_case_nets.MaxCapCaseAnalysis {true}                                                           {# true/false for timing_enable_max_transition_set_case_analysis}
bbset sta.config.post_init_hook.enable {True}                                                           {# enable STA plugin}
bbset sta.config.post_init_hook.script {[bbget .sta.config.hooks.post_init]}                            {# post init-design process}
bbset sta.config.setup_hypertrace.enable {False}                                                          {# enable STA plugin for hypertrace, default=False}
bbset sta.config.setup_hypertrace.max_slack_threshold {-0.0009}                                                        {# max_slack_threshold for hyper-trace refinement}
bbset sta.config.setup_hypertrace.max_critical_pin_percentage {}                                                               {# max critical pin percentage (expect number, like 20), leave empty means won't use pin percentage to determine if triggering refinement}
bbset sta.config.custom_spef_config.enable {True}                                                           {# enable support for custom spef config}
bbset sta.config.setup_primeshield.enable {False}                                                          {# enable STA plugin for PrimeShield, default=False}
bbset sta.config.load_libs.enable    {True}                                                           {# enable STA plugin}
bbset sta.config.load_libs.v_fallback {}                                                               {# define the fallback voltage if failed finding certain v}
bbset sta.config.load_libs.tech_search_path {
                                      [bbget .info.REPO_TOP]/chip/[bbget .info.CHIP]/config/tech
                                      [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/config/tech
                                      [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/[bbget .info.BLOCK]/config/tech
                                      } {# tech config search path, for lib loading}
bbset sta.config.load_libs.additional_tech_config {}                                                               {# additional tech config for extra libs}
bbset sta.config.load_libs.ApproxVoltLibName {[bbget .libgen.sta.LibComplements -traverse 1] }                {# specify the lib-name that will find the nearestV file if the specified V files is not existed}
bbset sta.config.derate.voltage.yaml {/google/gchips/lib/foundry/[bbget .DkVendor]/[bbget .info.PROCESS]/[bbget .DkVendor]/dk/[bbget .DkVersion]/derate/voltage_derate.yaml} {#Path to the voltage derate yaml file from DK path}
bbset sta.config.derate.temperature.yaml {/google/gchips/lib/foundry/[bbget .DkVendor]/[bbget .info.PROCESS]/[bbget .DkVendor]/dk/[bbget .DkVersion]/derate/temperature_derate.yaml} {#Path to the temperature derate yaml file from DK path}
bbset sta.config.derate.voltage.Default.yaml {[bbget .info.PROCESS_DIR]/sta/gchips/config/local_vt/voltage_derate.yaml} {#Path to the voltage derate yaml file}
bbset sta.config.derate.temperature.Default.yaml {[bbget .info.PROCESS_DIR]/sta/gchips/config/local_vt/temperature_derate.yaml} {#Path to the temperature derate yaml file}
bbset sta.config.derate.aging.yaml   {[bbget .info.PROCESS_DIR]/sta/gchips/config/aging/tsmc_aging.yaml} {# Path to the aging baseline derate yaml file}
bbset sta.config.derate.aging.mem.yaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/aging/memory_margin.laj.yaml} {# Path to the aging baseline derate yaml file}
bbset sta.config.derate.aging.mem.no_mistrack.yaml {[bbget .info.PROCESS_DIR]/sta/gchips/config/aging/Margins_With_No_Mistrack.memory_margin.yaml} {# Path to the aging baseline derate yaml file}
bbset sta.config.derate.aging.mem.no_mistrack.inst_file {}                                                               {# memory instance file, will honor no_mistrack yaml}
bbset sta.config.derate.reduce_derate_table.yaml {[bbget .info.BOB_RUN_DIR]/sta/sta.bb_setup/reduce_table.yaml}   {# output file for gen_reduce_derate_table}
bbset sta.config.derate.GoldenDir    {[bbget info.PROCESS_DIR]/sta/gchips/config/golden_setting/derate/latest} {# No Comment}  
bbset sta.config.derate.SwitchCellPattern {HDR*INTCW*BWP*CPD*}                                             {# cell pattern to remove derate right before update timing}
bbset sta.config.derate.foundry_process_addl_derate.yaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/foundry_process_addl_derate/pdk_n2.std.yaml} {# Path to the foundry process addl derate yaml file}
bbset sta.config.derate.foundry_process_addl_derate.DefaultYaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/foundry_process_addl_derate/pdk_n2.std.yaml} {# No Comment}  
bbset sta.config.derate.foundry_process_addl_derate.enable {True}                                                           {# True|False(default) to enable foundry_process_addl_derate}
bbset sta.config.derate.foundry_process_addl_derate.DerateType {late_clock late_data}                                           {# list value, valid value: early_clock early_data late_clock late_data setup hold}
bbset sta.config.derate.foundry_process_addl_derate.IncludeRcCorner {.*}                                                             {# regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset sta.config.derate.foundry_process_addl_derate.ExcludeRcCorner {}                                                               {# regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset sta.config.derate.foundry_process_addl_derate.TableName {foundry_process_addl_derate}                                    {# table name in yaml file}
bbset sta.config.derate.foundry_process_addl_derate.mem.yaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/foundry_process_addl_derate/pdk_n2.mem.yaml} {# yaml file for pdk v1.1 }
bbset sta.config.derate.foundry_process_addl_derate.mem.enable {True}                                                           {# True|False(default) to enable foundry_process_addl_derate for memory, default disalbe due to v1.1 MDK is ready}
bbset sta.config.derate.foundry_process_addl_derate.mem.DefaultYaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/foundry_process_addl_derate/pdk_n2.mem.yaml} {# use default yaml if dk yaml didn't exists}
bbset sta.config.derate.foundry_process_addl_derate.mem.DerateType {min_period_derate mpw_derate tcd_late_derate}                   {# list value, valid value: }
bbset sta.config.derate.foundry_process_addl_derate.mem.MemoryCompilerMapping {{ all_all {ref_name  =~ TS1N02P\\S*         || ref_name =~ ts1n02p\\S* || ref_name  =~ TS6N02P\\S* || ref_name =~ ts6n02p\\S*  ||  ref_name =~ tsg\\S*  || ref_name =~ TS3N02P\\S*  || ref_name =~ ts3n02p\\S* || ref_name =~ TS10N02\\S* || ref_name =~ ts10n02\\S*}}
                                      } {# regular expression for each memory compiler}
bbset sta.config.derate.foundry_process_addl_derate.mem.IncludeRcCorner {.*}                                                             {# regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset sta.config.derate.foundry_process_addl_derate.mem.ExcludeRcCorner {}                                                               {# regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset sta.config.derate.foundry_process_addl_derate.mem.TableName {foundry_process_addl_derate_mem}                                {# table name in yaml file}
bbset sta.config.derate.signoff.yaml {
                                      [bbfiles -bundles sta -filetype derate_yaml -stage sta -hierarchy  -annotated]
                                      } {# golden signoff derate yaml, reviewed by users. Default equal to reduce_derate_table.yaml bob var, ex. { {blk1 path1} {blk2 path2}} }
bbset sta.config.derate.signoff.SubBlocks {}                                                               {# In order to deprecate reduce_derate.yaml for sub-blocks, flow need another variable to get sub-blocks information for hierarchy_info}
bbset sta.config.derate.VtMismatch.enable {True}                                                           {# Enable Vt mismatch derate or not}
bbset sta.config.derate.VtMismatch.DerateCsvInput {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/vt_mistrack} {# No Comment}  
bbset sta.config.derate.VtMismatch.DominateVt {ulvt}                                                           {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sta.config.derate.VtMismatch.Penalty {0.05}                                                           {# additional incremental derate on non-dominate vt cells}
bbset sta.config.derate.VtMismatch.IncludeRcCorner {.*}                                                             {# regexp corner pattern to include STD cell Vt derate}
bbset sta.config.derate.VtMismatch.ExcludeRcCorner {}                                                               {# regexp corner pattern to exclude STD cell Vt derate}
bbset sta.config.derate.VtMismatch.EarlyClock {-1}                                                             {# STD cell Vt derate threshold on early clock edge, derate = threshold * penalty}
bbset sta.config.derate.VtMismatch.LateClock {1}                                                              {# STD cell Vt derate threshold on late clock edge, derate = threshold * penalty}
bbset sta.config.derate.VtMismatch.EarlyData {-1}                                                             {# STD cell Vt derate threshold on early data edge, derate = threshold * penalty}
bbset sta.config.derate.VtMismatch.LateData {0}                                                              {# STD cell Vt derate threshold on late data edge, derate = threshold * penalty}
bbset sta.config.derate.VtMismatch.Mem.enable {[bbget .sta.config.derate.VtMismatch.enable]}                   {# default equal to std}
bbset sta.config.derate.VtMismatch.Mem.DominateVt {[bbget .sta.config.derate.VtMismatch.DominateVt]}               {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sta.config.derate.VtMismatch.Mem.Penalty {[bbget .sta.config.derate.VtMismatch.Penalty]}                  {# additional increment derate on non-dominate vt cells}
bbset sta.config.derate.VtMismatch.Mem.IncludeRcCorner {[bbget .sta.config.derate.VtMismatch.IncludeRcCorner]}          {# regexp corner pattern to include MEM cell Vt derate}
bbset sta.config.derate.VtMismatch.Mem.ExcludeRcCorner {[bbget .sta.config.derate.VtMismatch.ExcludeRcCorner]}          {# regexp corner pattern to exclude MEM cell Vt derate}
bbset sta.config.derate.VtMismatch.Mem.EarlyClock {[bbget .sta.config.derate.VtMismatch.EarlyClock]}               {# MEM cell Vt derate derate on early clock edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.VtMismatch.Mem.LateClock {[bbget .sta.config.derate.VtMismatch.LateClock]}                {# MEM cell Vt derate derate on late clock edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.VtMismatch.Mem.EarlyData {[bbget .sta.config.derate.VtMismatch.EarlyData]}                {# MEM cell Vt derate derate on early data edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.VtMismatch.Mem.LateData {[bbget .sta.config.derate.VtMismatch.LateData]}                 {# MEM cell Vt derate derate on late data edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.AddlVtMismatch.enable {False}                                                          {# Enable additional Vt mismatch derate or not}
bbset sta.config.derate.AddlVtMismatch.DominateVt {[bbget .sta.config.derate.VtMismatch.DominateVt]}               {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sta.config.derate.AddlVtMismatch.Penalty {0}                                                              {# additional increment derate on non-dominate vt cells}
bbset sta.config.derate.AddlVtMismatch.IncludeRcCorner {_T$\|TYPICAL}                                                   {# regexp corner pattern to include STD cell Vt derate}
bbset sta.config.derate.AddlVtMismatch.ExcludeRcCorner {}                                                               {# regexp corner pattern to exclude STD cell Vt derate}
bbset sta.config.derate.AddlVtMismatch.EarlyClock {-1}                                                             {# STD cell Vt derate threshold on early clock edge, derate = threshold * penalty}
bbset sta.config.derate.AddlVtMismatch.LateClock {1}                                                              {# STD cell Vt derate threshold on late clock edge, derate = threshold * penalty}
bbset sta.config.derate.AddlVtMismatch.EarlyData {-1}                                                             {# STD cell Vt derate threshold on early data edge, derate = threshold * penalty}
bbset sta.config.derate.AddlVtMismatch.LateData {1}                                                              {# STD cell Vt derate threshold on late data edge, derate = threshold * penalty}
bbset sta.config.derate.AddlVtMismatch.Mem.enable {[bbget .sta.config.derate.AddlVtMismatch.enable]}               {# default equal to std}
bbset sta.config.derate.AddlVtMismatch.Mem.DominateVt {[bbget .sta.config.derate.AddlVtMismatch.DominateVt]}           {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sta.config.derate.AddlVtMismatch.Mem.Penalty {[bbget .sta.config.derate.AddlVtMismatch.Penalty]}              {# additional increment derate on non-dominate vt cells}
bbset sta.config.derate.AddlVtMismatch.Mem.IncludeRcCorner {[bbget .sta.config.derate.AddlVtMismatch.IncludeRcCorner]}      {# regexp corner pattern to include MEM cell Vt derate}
bbset sta.config.derate.AddlVtMismatch.Mem.ExcludeRcCorner {[bbget .sta.config.derate.AddlVtMismatch.ExcludeRcCorner]}      {# regexp corner pattern to exclude MEM cell Vt derate}
bbset sta.config.derate.AddlVtMismatch.Mem.EarlyClock {[bbget .sta.config.derate.AddlVtMismatch.EarlyClock]}           {# MEM cell Vt derate derate on early clock edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.AddlVtMismatch.Mem.LateClock {[bbget .sta.config.derate.AddlVtMismatch.LateClock]}            {# MEM cell Vt derate derate on late clock edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.AddlVtMismatch.Mem.EarlyData {[bbget .sta.config.derate.AddlVtMismatch.EarlyData]}            {# MEM cell Vt derate derate on early data edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.AddlVtMismatch.Mem.LateData {[bbget .sta.config.derate.AddlVtMismatch.LateData]}             {# MEM cell Vt derate derate on late data edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.R2RVtMismatch.enable {False}                                                          {# Enable additional Vt mismatch derate or not}
bbset sta.config.derate.R2RVtMismatch.DominateVt {[bbget .sta.config.derate.VtMismatch.DominateVt]}               {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sta.config.derate.R2RVtMismatch.Penalty {0}                                                              {# additional increment derate on non-dominate vt cells}
bbset sta.config.derate.R2RVtMismatch.IncludeRcCorner {.*}                                                             {# regexp corner pattern to include STD cell Vt derate}
bbset sta.config.derate.R2RVtMismatch.ExcludeRcCorner {}                                                               {# regexp corner pattern to exclude STD cell Vt derate}
bbset sta.config.derate.R2RVtMismatch.EarlyClock {-1}                                                             {# STD cell Vt derate threshold on early clock edge, derate = threshold * penalty}
bbset sta.config.derate.R2RVtMismatch.LateClock {1}                                                              {# STD cell Vt derate threshold on late clock edge, derate = threshold * penalty}
bbset sta.config.derate.R2RVtMismatch.EarlyData {-1}                                                             {# STD cell Vt derate threshold on early data edge, derate = threshold * penalty}
bbset sta.config.derate.R2RVtMismatch.LateData {1}                                                              {# STD cell Vt derate threshold on late data edge, derate = threshold * penalty}
bbset sta.config.derate.R2RVtMismatch.Mem.enable {[bbget .sta.config.derate.R2RVtMismatch.enable]}                {# default equal to std}
bbset sta.config.derate.R2RVtMismatch.Mem.DominateVt {[bbget .sta.config.derate.R2RVtMismatch.DominateVt]}            {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sta.config.derate.R2RVtMismatch.Mem.Penalty {[bbget .sta.config.derate.R2RVtMismatch.Penalty]}               {# additional increment derate on non-dominate vt cells}
bbset sta.config.derate.R2RVtMismatch.Mem.IncludeRcCorner {[bbget .sta.config.derate.R2RVtMismatch.IncludeRcCorner]}       {# regexp corner pattern to include MEM cell Vt derate}
bbset sta.config.derate.R2RVtMismatch.Mem.ExcludeRcCorner {[bbget .sta.config.derate.R2RVtMismatch.ExcludeRcCorner]}       {# regexp corner pattern to exclude MEM cell Vt derate}
bbset sta.config.derate.R2RVtMismatch.Mem.EarlyClock {[bbget .sta.config.derate.R2RVtMismatch.EarlyClock]}            {# MEM cell Vt derate derate on early clock edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.R2RVtMismatch.Mem.LateClock {[bbget .sta.config.derate.R2RVtMismatch.LateClock]}             {# MEM cell Vt derate derate on late clock edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.R2RVtMismatch.Mem.EarlyData {[bbget .sta.config.derate.R2RVtMismatch.EarlyData]}             {# MEM cell Vt derate derate on early data edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.R2RVtMismatch.Mem.LateData {[bbget .sta.config.derate.R2RVtMismatch.LateData]}              {# MEM cell Vt derate derate on late data edge, 0 for no penalty, +-1 for +-penalty}
bbset sta.config.derate.Aging.enable {True}                                                           {# enable with default profiling in n4}
bbset sta.config.derate.Aging.EarlyClock {0}                                                              {# Aging derate on early clock, 0/1 = disable/enable}
bbset sta.config.derate.Aging.LateClock {1}                                                              {# Aging derate on late clock, 0/1 = disable/enable}
bbset sta.config.derate.Aging.EarlyData {0}                                                              {# Aging derate on early data, 0/1 = disable/enable}
bbset sta.config.derate.Aging.LateData {1}                                                              {# Aging derate on late data, 0/1 = disable/enable}
bbset sta.config.derate.Aging.StressCondition {[bbget .sta.DesignSpec.Aging.[bbget info.BLOCK].StressCondition --traverse 1]} {# Stress condition selection, pf[\d+] or default, default=default}
bbset sta.config.derate.Aging.DerateCsvInput {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/aging/csvs} {# No Comment}  
bbset sta.config.derate.Aging.Mem.enable {[bbget .sta.config.derate.Aging.enable]}                        {# Enable Mem Aging derate or not}
bbset sta.config.derate.Aging.Mem.StressCondition {default}                                                        {# Stress condition selection, pf[\d+] or default, default=default}
bbset sta.config.derate.Aging.Mem.ApplyMapping {
                                      {ck2q    {{set_timing_derate -cell_delay -late -incr}} }
                                      {ck2q_ir {{set_timing_derate -cell_delay -early -incr}}}
                                      {mp    {{set_timing_derate -min_period -rise } {set_timing_derate -min_period -fall }} }
                                      {pwd   {{set_timing_derate -min_pulse_width -rise } {set_timing_derate -min_pulse_width -fall }} }
                                      {hold  {{set_clock_uncertainty -hold} }}
                                      } {# applied derate mapping rules}
bbset sta.config.derate.Aging.Mem.LibCornerSubRules {
                                      {tt_0p6450 ssgnp_0p6750}
                                      {tt_0p5150 ssgnp_0p5400}
                                      {tt_0p5600 ssgnp_0p5850}
                                      {tt_0p4950 ssgnp_0p5150}
                                      {tt_0p4900 ssgnp_0p5150}
                                      {tt_0p6250 ssgnp_0p6750}
                                      {tt_0p8000 ssgnp_0p8550}
                                      } {# lib corner mapping rule for mem}
bbset sta.config.derate.Aging.LibCornerSubRules {
                                      {fsgnp sfgnp}
                                      {fsgnp_0p6750_0 ssgnp_0p6750_0}
                                      {sfgnp_0p6750_0 ssgnp_0p6750_0}
                                      {tt_0p6450_0   ssgnp_0p6750_m25}
                                      {tt_0p5150_0   ssgnp_0p5400_0  }
                                      {tt_0p5600_0   ssgnp_0p5850_m25}
                                      {tt_0p4950_0   ssgnp_0p5150_0  }
                                      {tt_0p4900_0   ssgnp_0p5150_0  }
                                      {tt_0p6250_0   ssgnp_0p6750_m25}
                                      {tt_0p8000_125 ssgnp_0p8550_125}
                                      } {# list of rule to rename the lib corner name before lookup the derate value}
bbset sta.config.derate.ODMismatch.enable {True}                                                           {# Enable OD derate or not}
bbset sta.config.derate.ODMismatch.DerateCsvInput {[bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/od_mistrack/} {# No Comment}  
bbset sta.config.derate.ShiftTemperature.enable {False}                                                          {# enable temperature derate shifting}
bbset sta.config.derate.ShiftTemperature.EarlyClock {1}                                                              {# temperature derate on early clock, 0/1 = disable/enable}
bbset sta.config.derate.ShiftTemperature.LateClock {1}                                                              {# temperature derate on late clock, 0/1 = disable/enable}
bbset sta.config.derate.ShiftTemperature.EarlyData {1}                                                              {# temperature derate on early data, 0/1 = disable/enable}
bbset sta.config.derate.ShiftTemperature.LateData {1}                                                              {# temperature derate on late data, 0/1 = disable/enable}
bbset sta.config.derate.ShiftTemperature.IncludeRcCorner {_T$}                                                            {# regexp corner pattern to include temperature derate}
bbset sta.config.derate.ShiftTemperature.ExcludeRcCorner {}                                                               {# regexp corner pattern to exclude temperature derate}
bbset sta.config.derate.ShiftTemperature.InputYaml {[bbget .sta.config.derate.temperature.yaml]}                    {# input reference temperature yaml}
bbset sta.config.derate.ShiftTemperature.BaseTemperature {}                                                               {# base reference temperature derate source, default=0 in n4/n4p, could be m40, 0, 125 or so}
bbset sta.config.derate.ShiftTemperature.ToTemperature {}                                                               {# shift to temperature derate, default=m40 in n4/n4p, could be m40, 0, 125 or so}
bbset sta.config.derate.ShiftTemperature.TemperatureShift {}                                                               {# degree of temperature shift, default=-15 in n4/n4p, could be any number}
bbset sta.config.derate.ShiftTemperature.TargetPvts {}                                                               {# targeting PVTs to be scaled, default={ssgnp_0p4950_m40 ssgnp_0p5400_m40 ssgnp_0p5850_m40 ssgnp_0p6750_m40} in n4/n4p}
bbset sta.config.derate.LocalVoltageVariation.enable {True}                                                           {# enable derate to model local voltage variation for STD cells, defaul equal to ExactMatchOnly value }
bbset sta.config.derate.LocalVoltageVariation.EarlyClock {{SSGNP -1} {FFGNP 0} {TT -1} {SFG -1} {FSG -1}}                 {# corner + derate threshold on early clock edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalVoltageVariation.LateClock {{SSGNP 0}  {FFGNP 1} {TT 0}  {SFG 0}  {FSG 0} }                 {# corner + derate threshold on late clock edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalVoltageVariation.EarlyData {{SSGNP -1} {FFGNP 0} {TT -1} {SFG -1} {FSG -1}}                 {# corner + derate threshold on early data edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalVoltageVariation.LateData {{SSGNP 0}  {FFGNP 1} {TT 0}  {SFG 0}  {FSG 0} }                 {# corner + derate threshold on late data edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalVoltageVariation.LibCornerSubRules {
                                      {fsg sfg}
                                      {fsg_0p6750_0 ssgnp_0p6750_0}
                                      {sfg_0p6750_0 ssgnp_0p6750_0}
                                      } {# list of rule to rename the lib corner name before lookup the derate value}
bbset sta.config.derate.LocalVoltageVariation.Mem.enable {[bbget .sta.config.derate.LocalVoltageVariation.enable]}        {# default equal to std}
bbset sta.config.derate.LocalTemperatureVariation.EarlyClock {{SSGNP -1} {FFGNP 0} {TT -1} {SFG -1} {FSG -1}}                 {# corner + derate threshold on early clock edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalTemperatureVariation.LateClock {{SSGNP 0}  {FFGNP 1} {TT 0}  {SFG 0}  {FSG 0} }                 {# corner + derate threshold on late clock edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalTemperatureVariation.EarlyData {{SSGNP -1} {FFGNP 0} {TT -1} {SFG -1} {FSG -1}}                 {# corner + derate threshold on early data edge, derate = threshold * LUT-derate}
bbset sta.config.derate.LocalTemperatureVariation.LateData {{SSGNP 0}  {FFGNP 1} {TT 0}  {SFG 0}  {FSG 0} }                 {# corner + derate threshold on late data edge, derate = threshold * LUT-derate}
bbset sta.config.derate.CustomMacroMargin.HoldUncertaintyRatio {2}                                                              {# Add extra hold uncertainty on custom macros's clock pin, multiply hold_uncertainty_ratio with original hold uncertainty}
bbset sta.config.derate.CustomMacroMargin.EarlyDerate {-0.05}                                                          {# Add extra derate on early path}
bbset sta.config.link_design.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.link_design.use_pg_netlist {True}                                                           {# Loading pg netlist or not}
bbset sta.config.link_design.link_keep_unconnected_cells {False}                                                          {# Keep unconnected cells}
bbset sta.config.link_design.ErrorOnBlackBoxes {True}                                                           {# error out if there is black-boxes}
bbset sta.config.link_design.ErrorOnDesignMismatch {True}                                                           {# error out if there is design mismatch, like pin/direction}
bbset sta.config.link_design.hook.script {}                                                               {# hook right before link_design}
bbset sta.config.link_design.disable_pg_pins.enable {False}                                                          {# True|False(default)}
bbset sta.config.link_design.disable_pg_pins.target_libs {_pm_ _pmc_ lvl}                                                 {# target library name}
bbset sta.config.link_design.disable_pg_pins.target_pg_pins {VDD VDDS TVDD}                                                  {# target pg pins}
bbset sta.config.link_design.disable_pg_pins.common_pin {VNWELL}                                                         {# general pin name for disable pg pins}
bbset sta.config.link_design.disable_pg_pins.common_pin_libs {*}                                                              {# general libs for disable pg pins}
bbset sta.config.define_scaling_groups.enable {True}                                                           {# enable STA plugin}
bbset sta.config.define_scaling_groups.ExactMatchOnly {False}                                                          {# use exact match only or not}
bbset sta.config.define_scaling_groups.ExcludedRailsRules {
                                      {tcxo_clock_buffer_top {avdd_1v}}
                                      {dwc_lpddr5xphycmosx2_top_ew {VDDR}}
                                      } {# exclude sram VDDA rail from voltage scaling}
bbset sta.config.define_scaling_groups.ExactMatchIncludeLibs {.*}                                                             {# exact_match_only for all cells except std-cells and memories, include '*'}
bbset sta.config.define_scaling_groups.ExactMatchExcludeLibs {bwp.*}                                                          {# exact_match_only for all cells except std-cells and memories, exclude std-cell/memories}
bbset sta.config.define_scaling_groups.LibIncludeLibs {.*}                                                             {# define include libs regexp patterns, 'list of regexp', {lib_name1.* lib_name2.*}}
bbset sta.config.define_scaling_groups.LibExcludeLibs {}                                                               {# define exclude libs regexp patterns, 'list of regexp', {lib_name1.* lib_name2.*}}
bbset sta.config.define_scaling_groups.DisablePgPin {}                                                               {# define cell pattern that need to have disable pg pins, 'list-of-list', {'cell_pattern' {<pg-pin-list>}}}
bbset sta.config.define_scaling_groups.primeshield_run {False}                                                          {#not enabling scaling lib groups by default. Enable for generating scaling lib group for Vmin analysis.}
bbset sta.config.define_scaling_groups.LoadOnlyUsed {True}                                                           {# Loading only used library, True|False, default=True}
bbset sta.config.define_scaling_groups.VoltageSelectionRules {
                                      {category macros {0 0} }
                                      {process ssgnp {-2 1} }
                                      {process sfg {-2 1} }
                                      {process fsg {-2 1} }
                                      {process tt {0 1} }
                                      {process ffgnp {-2 0} }
                                      } {# {attribute value index_range_based_on_rail_voltage} DSLG voltage selection rules based on range of rail voltage. Default=empty, no voltage selection will be performed}
bbset sta.config.define_scaling_groups.irsta.VoltageSelectionRules {
                                      {category macros {0 0} }
                                      {process ssgnp {-5 1} }
                                      {process sfg {-5 1} }
                                      {process fsg {-5 1} }
                                      {process tt {0 1} }
                                      {process ffgnp {-5 0} }
                                      } {# {attribute value index_range_based_on_rail_voltage} DSLG voltage selection rules based on range of rail voltage. Default=empty, no voltage selection will be performed}
bbset sta.config.define_scaling_groups.MacroUseNominalVoltage {False}                                                          {# macro cells use nominal voltage only, skip voltage scaling}
bbset sta.config.define_scaling_groups.STDLibCellsPattern {}                                                               {# pattern used to filter out macros libs}
bbset sta.config.define_scaling_groups.timing_continue_on_scaling_error {True}                                                           {# True|False(default), PT app var for DSLG flow}
bbset sta.config.setup_upf.enable    {True}                                                           {# enable STA plugin}
bbset sta.config.setup_upf.ContinueOnSupplyNetNotFound {TRUE}                                                           {# True|False, keep running when supply net not found}
bbset sta.config.post_upf_hook.enable {True}                                                           {# enable STA plugin}
bbset sta.config.post_upf_hook.script {[bbget .sta.config.hooks.post_setup_upf]}                       {# post setup_upf process}
bbset sta.config.setup_hier.enable   {True}                                                           {# enable STA plugin}
bbset sta.config.setup_sdc.enable    {True}                                                           {# enable STA plugin}
bbset sta.config.setup_sdc.ContinueOnError {False}                                                          {# True|False, keep running when error in sourcing sdc}
bbset sta.config.setup_sdc.SaveSourceFileInformation {False}                                                          {# True|False, enable PrimeTime sdc_save_source_file_information app_var}
bbset sta.config.setup_sdc.IOPdOverrides {}                                                               {# file path to overrides IO pad constraint}
bbset sta.config.setup_physical.enable {False}                                                          {# enable STA plugin for setup physical, needed for ContextAware flow}
bbset sta.config.setup_physical.TargetScenarios {}                                                               {# list of scenarios to be enabled physical, wildcard supported}
bbset sta.config.setup_si.enable     {True}                                                           {# enable SI settings}
bbset sta.config.setup_si.primetime_si_settings {
                                      {si_noise_composite_aggr_mode               statistical}
                                      {si_filter_per_aggr_noise_peak_ratio        0.01}
                                      {si_noise_endpoint_height_threshold_ratio   0.75}
                                      {si_noise_immunity_default_height_ratio     0.2}
                                      {si_noise_limit_propagation_ratio           0.75}
                                      {si_noise_skip_update_for_report_attribute  false}
                                      {si_noise_slack_skip_disabled_arcs          false}
                                      {si_analysis_logical_correlation_mode       true}
                                      {si_ccs_aggressor_alignment_mode            lookahead}
                                      {si_filter_keep_all_port_aggressors         true}
                                      {si_use_driving_cell_derate_for_delta_delay false}
                                      {si_xtalk_composite_aggr_mode               statistical}
                                      {si_xtalk_composite_aggr_quantile_high_pct  99.73}
                                      {si_xtalk_composite_aggr_noise_peak_ratio   0.01}
                                      {si_xtalk_delay_analysis_mode               all_path_edges}
                                      {si_xtalk_double_switching_mode             clock_network}
                                      {si_xtalk_exit_on_max_iteration_count       2}
                                      {si_xtalk_library_consistency_compatibility false}
                                      {si_xtalk_max_transition_mode               uncoupled}
                                      } {# aligned with go/lga-timing-signoff @20230413}
bbset sta.config.setup_si.boundary_use_infinite_tw {}                                                               {# options for si analysis}
bbset sta.config.setup_si.boundary_clocks_use_infinite_tw {}                                                               {# options for si analysis}
bbset sta.config.setup_si.pba_xtalk_pessimism_reduction {}                                                               {# options for si analysis}
bbset sta.config.setup_si.use_noise_composite_aggr {}                                                               {# options for si analysis}
bbset sta.config.setup_si.use_si_composite_aggr {}                                                               {# options for si analysis}
bbset sta.config.setup_si.composite_aggr_noise_peak_ratio {}                                                               {# options for si analysis}
bbset sta.config.setup_si.composite_aggr_quantile_high_pct {}                                                               {# options for si analysis}
bbset sta.config.setup_si.use_tighter_si_settings {}                                                               {# options for si analysis}
bbset sta.config.setup_si.si_xtalk_delay_analysis_mode {}                                                               {# options for si analysis}
bbset sta.config.setup_si.IgnoreArrivalWindow {True}                                                           {# option for ignore_arrival_windows downstream from input ports}
bbset sta.config.setup_noise.enable  {True}                                                           {# enable noise setup plugin}
bbset sta.config.setup_noise.SetNoiseParameters {-enable_propagation -analysis_mode report_at_endpoint}          {# options of noise parameters, type=string}
bbset sta.config.setup_noise.RefNoiseLibPins {
                                      {{cell_heights 143H} INVD1BWP143M117H3P48CPDLVT/I}
                                      {{cell_heights 169H} INVD1BWP169H3P48CPDLVT/I}
                                      {default INVD1BWP143M117H3P48CPDLVT/I}
                                      } {# reference noise lib pin for non noise model cells, type=list}
bbset sta.config.setup_noise.NoiseWaivedCells {ANTENNA.*BWP* }                                                 {# cell name list to waive glitch violation}
bbset sta.config.setup_noise.NoiseWaivedMargins {10}                                                             {# default large value to waive glitch violation}
bbset sta.config.setup_noise.RefNoiseLibCellPriority { INVD1BWP130HPNPN3P48CPDLVT}                                    {# priority for noise cell}
bbset sta.config.setup_noise.AddlNoiseWidth {0.3}                                                            {# default widith for additional noise}
bbset sta.config.setup_noise.AddlNoiseHeight {0.1}                                                            {# default height for additional noise}
bbset sta.config.setup_noise.EnableAddlNoiseOnMemory {True}                                                           {# option to enable additional noise on memory}
bbset sta.config.interface_margin.enable {False}                                                          {# enable temperature derate shifting}
bbset sta.config.interface_margin.LevelShiftPattern {ref_name=~\\S*LVL\\S+}                                          {# define level shift regular expression, help to identify OPP crossing}
bbset sta.config.interface_margin.OutputFile {rpts/set_interface_margin.tcl}                                  {# output file for interface margin, allow user to modify before source it}
bbset sta.config.interface_margin.SourceCmdOption {-continue_on_error -echo}                                       {# option for source output file command}
bbset sta.config.interface_margin.hook.script {}                                                               {# provide hook for user to modify output file if needed}
bbset sta.config.interface_margin.DominateVtCrossing.TableName {default}                                                        {# Hold margin table name for DominateVtCrossing}
bbset sta.config.interface_margin.DominateVtCrossing.HoldMargin {}                                                               {# No Comment}  
bbset sta.config.restore_etm.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.setup_pocv.enable   {True}                                                           {# enable STA plugin}
bbset sta.config.setup_pocv.exit_wire_ocv_not_exist {True}                                                           {# error out while wire_ocv is not there}
bbset sta.config.setup_pocv.exit_distance_ocv_not_exist {True}                                                           {# error out while distance ocv is not there}
bbset sta.config.lowv_pocv.enable    {True}                                                           {# enable lowv pocv plugin}
bbset sta.config.lowv_pocv.LowVoltagePvts {*-XUD* *-UUD* *-SUD*}                                           {# PVTs that to be in lowV conditions, wildcard supported, type=list}
bbset sta.config.lowv_pocv.LowVoltageCellVts { {\\\\S+_svt} }                                                 {# Cell Vts that to be in lowV conditions, to set HoldConstraintSubtractSigma, wildcard supported, type=list}
bbset sta.config.lowv_pocv.DataTransSigma {2}                                                              {# data transition sigma}
bbset sta.config.lowv_pocv.ClkTransSigma {3}                                                              {# clock transition sigma}
bbset sta.config.lowv_pocv.CornerSigma {3}                                                              {# corner sigma}
bbset sta.config.lowv_pocv.ReportSigma {3}                                                              {# report sigma, have to be equal or smaller than corner sigma}
bbset sta.config.lowv_pocv.CoefficientScaleFactor {0}                                                              {# coefficient scale factor}
bbset sta.config.lowv_pocv.CRPR      {normal}                                                         {# CRPR settings}
bbset sta.config.lowv_pocv.SlewVariationConstArcs {setup_hold}                                                     {# slew variation const arcs}
bbset sta.config.lowv_pocv.CRPRDiffTransDerate {1.0}                                                            {# crpr different transition derate}
bbset sta.config.lowv_pocv.CRPRDiffTransVariationDerate {1.0}                                                            {# crpr different transition variation derate}
bbset sta.config.lowv_pocv.HoldConstraintSubtractSigma {-1}                                                             {# hold subtract sigma}
bbset sta.config.lowv_pocv.Hook      {}                                                               {# Hook in lowv_pocv plugin}
bbset sta.config.lowv_pocv.LowVoltage_CellVts_config {{0p4950 {{\\\\S+_svt}}}  {0p4750 {{\\\\S+_svt}}} {0p4500 {{\\\\S+_svt}}}} {# the voltage and Vt to set the lowV setting}
bbset sta.config.additional_max_trans_sigma.enable {True}                                                           {# enable additional_max_trans_sigma plugin}
bbset sta.config.additional_max_trans_sigma.Pvts {*}                                                              {# b/282200663 }
bbset sta.config.additional_max_trans_sigma.DataTransSigma {2}                                                              {# data transition sigma}
bbset sta.config.additional_max_trans_sigma.ClkTransSigma {3}                                                              {# clock transition sigma}
bbset sta.config.setup_margin.enable {True}                                                           {# enable STA plugin}
bbset sta.config.setup_margin.enable_incr_derate_attr {False}                                                          {#incremental derate attribute disabled by default due to memory and runtime impact}
bbset sta.config.setup_margin.DelayBufferHoldPenalty.enable {True}                                                           {# enable extra delay buffer hold penalty}
bbset sta.config.setup_margin.DelayBufferHoldPenalty.DeratePenaltyValue {}                                                               {# penalty value}
bbset sta.config.setup_margin.DelayBufferHoldPenalty.Pattern {}                                                               {# DELAY Buffer Pattern, ex: *DEL*}
bbset sta.config.hier_margin.enable  {False}                                                          {# enable STA plugin}
bbset sta.config.hier_margin.margin_config_base {[bbget .info.CHIP_DIR]/config/margin/sta}                       {# base path for margin-config}
bbset sta.config.hier_margin.blocks  {}                                                               {# instance-name for hier-margin setup}
bbset sta.config.override_margin.enable {False}                                                          {# enable STA plugin}
bbset sta.config.override_margin.mc_mismatch_uncertainty {
                                      {UUD   18}
                                      {SUD   14}
                                      {UD    12}
                                      {NM    10}
                                      {OD     9}
                                      {SOD  7.5}
                                      {USOD 7.5}
                                      } {# memory vt mismatch hold uncertainty}
bbset sta.config.override_margin.mc_mismatch_uncertainty(ffpg) {
                                      {NM   6.5}
                                      {OD   6}
                                      {SOD   4.5}
                                      {USOD  4.5}
                                      } {# memory vt mismatch hold uncertainty for ffpg}
bbset sta.config.additional_hold_margin.enable {True}                                                           {# enable STA plugin}
bbset sta.config.additional_hold_margin.UncertaintyTableName {}                                                               {# provide one of the table name in .sta.config.additional_hold_margin.Uncertainty, or leave empty to get default table}
bbset sta.config.additional_hold_margin.Uncertainty {
                                      {*tt-XOD*     0.005}
                                      {*ssgnp-USOD* 0.005}
                                      {*tt-USOD*    0.005}
                                      {*ffgnp-USOD* 0.005}
                                      {*ssgnp-SOD*  0.007}
                                      {*tt-SOD*     0.007}
                                      {*ffgnp-SOD*  0.007}
                                      {*ssgnp-OD*   0.008}
                                      {*tt-OD*      0.008}
                                      {*ffgnp-OD*   0.008}
                                      {*ssgnp-NM*   0.010}
                                      {*tt-NM*      0.010}
                                      {*ffgnp-NM*   0.010}
                                      {*sfg-NM*     0.000}
                                      {*fsg-NM*     0.000}
                                      {*ssgnp-UD*   0.012}
                                      {*tt-UD*      0.012}
                                      {*ffgnp-UD*   0.012}
                                      {*ssgnp-SUD*  0.015}
                                      {*tt-SUD*     0.015}
                                      {*sfg-SUD*    0.000}
                                      {*fsg-SUD*    0.000}
                                      {*ffgnp-SUD*  0.015}
                                      {*ssgnp-UUD*  0.020}
                                      {*tt-UUD*     0.020}
                                      {*sfg-UUD*    0.000}
                                      {*fsg-UUD*    0.000}
                                      {*ffgnp-UUD*  0.020}
                                      {*ssgnp-XUD*  0.020}
                                      {*tt-XUD*     0.020}
                                      {*sfg-XUD*    0.000}
                                      {*fsg-XUD*    0.000}
                                      {*ffgnp-XUD*  0.020}
                                      } {# 2024-02-19 go/mbu-timing-signoff}
bbset sta.config.additional_hold_margin.MemUncertaintyTableName {}                                                               {# provide one of the table name in .sta.config.additional_hold_margin.Uncertainty, or leave empty to get default table}
bbset sta.config.additional_hold_margin.MemUncertainty {}                                                               {# ex. {*ssgnp*NM* 0.015} {*ffnp*NM* 0.010}, syntax : [<pvt_reguler_exp> <value>]+ , default table}
bbset sta.config.additional_hold_margin.FlowSettingMethod {csv}                                                            {# value : var|csv}
bbset sta.config.additional_hold_margin.CsvInput {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/hold_unc} {# CSV folder for hold uncertainty}
bbset sta.config.additional_hold_margin.UncertaintyTable {default}                                                        {# default table name for hold uncertainty}
bbset sta.config.additional_max_trans_cap.enable {True}                                                           {# enable STA plugin}
bbset sta.config.additional_max_trans_cap.MaxTransPinFilter {(case_value==0||case_value==1||constant_value==0||constant_value==1)} {# pin filter for max transition constraint}
bbset sta.config.additional_max_trans_cap.MaxTransPerMode {}                                                               {# A list of {OP-max_trans} pairs for max transition constraint}
bbset sta.config.additional_max_trans_cap.GlobalMaxCap {}                                                               {# global max capacitance constraint}
bbset sta.config.additional_max_trans_cap.MaxTransWaviedCells {ANTENNA* }                                                      {# waive certain cell directly, ex. Antenna cell }
bbset sta.config.additional_max_trans_cap.MaxTransWaviedCellsSlew {5}                                                              {# slew constraint to waive certain cell, unit: ns}
bbset sta.config.additional_max_trans_cap.MaxTransUserConfiguNetsFile {}                                                               {# files to list all pseduo static nets, only support 1 file}
bbset sta.config.additional_max_trans_cap.MaxTransWaivedRule.ConstantPinHonorLibDefaultMaxTransition {True}                                                           {# True|False(default), constant pin decided by MaxTransPinFilter}
bbset sta.config.additional_max_trans_cap.MaxTransWaivedRule.WaiveLVLOutputPin {True}                                                           {# True|False(default), waive lvl output pin}
bbset sta.config.additional_max_trans_cap.MaxTransWaivedRule.WaiveLVLNSLEEPPin {True}                                                           {# True|False(default), waive lvl NSLEEP pin}
bbset sta.config.hierarchy_info.enable {True}                                                           {# enable hierarchy_info procedures}
bbset sta.config.hierarchy_info.RegexpsCellVt {
                                      std {
                                      {h130nppnl3p48_elvt     {ref_name=~\\S+BWP130HNPPN\\S+P48CPDELVT}}
                                      {h130nppnl3p48_lvt      {ref_name=~\\S+BWP130HNPPN\\S+P48CPDLVT}}
                                      {h130nppnl3p48_lvtll    {ref_name=~\\S+BWP130HNPPN\\S+P48CPDLVTLL}}
                                      {h130nppnl3p48_svt      {ref_name=~\\S+BWP130HNPPN\\S+P48CPDSVT}}
                                      {h130nppnl3p48_ulvt     {ref_name=~\\S+BWP130HNPPN\\S+P48CPDULVT}}
                                      {h130nppnl3p48_ulvtll   {ref_name=~\\S+BWP130HNPPN\\S+P48CPDULVTLL}}
                                      
                                      {h130pnnpl3p48_elvt     {ref_name=~\\S+BWP130HPNNP\\S+P48CPDELVT}}
                                      {h130pnnpl3p48_lvt      {ref_name=~\\S+BWP130HPNNP\\S+P48CPDLVT}}
                                      {h130pnnpl3p48_lvtll    {ref_name=~\\S+BWP130HPNNP\\S+P48CPDLVTLL}}
                                      {h130pnnpl3p48_svt      {ref_name=~\\S+BWP130HPNNP\\S+P48CPDSVT}}
                                      {h130pnnpl3p48_ulvt     {ref_name=~\\S+BWP130HPNNP\\S+P48CPDULVT}}
                                      {h130pnnpl3p48_ulvtll   {ref_name=~\\S+BWP130HPNNP\\S+P48CPDULVTLL}}
                                      
                                      {h130pnpnl3p48_elvt     {ref_name=~\\S+BWP130HPNPN\\S+P48CPDELVT}}
                                      {h130pnpnl3p48_lvt      {ref_name=~\\S+BWP130HPNPN\\S+P48CPDLVT}}
                                      {h130pnpnl3p48_lvtll    {ref_name=~\\S+BWP130HPNPN\\S+P48CPDLVTLL}}
                                      {h130pnpnl3p48_svt      {ref_name=~\\S+BWP130HPNPN\\S+P48CPDSVT}}
                                      {h130pnpnl3p48_ulvt     {ref_name=~\\S+BWP130HPNPN\\S+P48CPDULVT}}
                                      {h130pnpnl3p48_ulvtll   {ref_name=~\\S+BWP130HPNPN\\S+P48CPDULVTLL}}
                                      
                                      {h130ppnnl3p48_elvt     {ref_name=~\\S+BWP130HPPNN\\S+P48CPDELVT}}
                                      {h130ppnnl3p48_lvt      {ref_name=~\\S+BWP130HPPNN\\S+P48CPDLVT}}
                                      {h130ppnnl3p48_lvtll    {ref_name=~\\S+BWP130HPPNN\\S+P48CPDLVTLL}}
                                      {h130ppnnl3p48_svt      {ref_name=~\\S+BWP130HPPNN\\S+P48CPDSVT}}
                                      {h130ppnnl3p48_ulvt     {ref_name=~\\S+BWP130HPPNN\\S+P48CPDULVT}}
                                      {h130ppnnl3p48_ulvtll   {ref_name=~\\S+BWP130HPPNN\\S+P48CPDULVTLL}}
                                      
                                      {h156nppnl3p48_elvt   {ref_name=~\\S+BWP156HNPPN\\S+CPDELVT}}
                                      {h156nppnl3p48_lvt    {ref_name=~\\S+BWP156HNPPN\\S+CPDLVT}}
                                      {h156nppnl3p48_lvtll  {ref_name=~\\S+BWP156HNPPN\\S+CPDLVTLL}}
                                      {h156nppnl3p48_svt    {ref_name=~\\S+BWP156HNPPN\\S+CPDSVT}}
                                      {h156nppnl3p48_ulvt   {ref_name=~\\S+BWP156HNPPN\\S+CPDULVT}}
                                      {h156nppnl3p48_ulvtll {ref_name=~\\S+BWP156HNPPN\\S+CPDULVTLL}}
                                      
                                      {h156pnnpl3p48_elvt   {ref_name=~\\S+BWP156HPNNP\\S+CPDELVT}}
                                      {h156pnnpl3p48_lvt    {ref_name=~\\S+BWP156HPNNP\\S+CPDLVT}}
                                      {h156pnnpl3p48_lvtll  {ref_name=~\\S+BWP156HPNNP\\S+CPDLVTLL}}
                                      {h156pnnpl3p48_svt    {ref_name=~\\S+BWP156HPNNP\\S+CPDSVT}}
                                      {h156pnnpl3p48_ulvt   {ref_name=~\\S+BWP156HPNNP\\S+CPDULVT}}
                                      {h156pnnpl3p48_ulvtll {ref_name=~\\S+BWP156HPNNP\\S+CPDULVTLL}}
                                      
                                      {h156pnpnl3p48_elvt   {ref_name=~\\S+BWP156HPNPN\\S+CPDELVT}}
                                      {h156pnpnl3p48_lvt    {ref_name=~\\S+BWP156HPNPN\\S+CPDLVT}}
                                      {h156pnpnl3p48_lvtll  {ref_name=~\\S+BWP156HPNPN\\S+CPDLVTLL}}
                                      {h156pnpnl3p48_svt    {ref_name=~\\S+BWP156HPNPN\\S+CPDSVT}}
                                      {h156pnpnl3p48_ulvt   {ref_name=~\\S+BWP156HPNPN\\S+CPDULVT}}
                                      {h156pnpnl3p48_ulvtll {ref_name=~\\S+BWP156HPNPN\\S+CPDULVTLL}}
                                      
                                      {h156ppnnl3p48_elvt   {ref_name=~\\S+BWP156HPPNN\\S+CPDELVT}}
                                      {h156ppnnl3p48_lvt    {ref_name=~\\S+BWP156HPPNN\\S+CPDLVT}}
                                      {h156ppnnl3p48_lvtll  {ref_name=~\\S+BWP156HPPNN\\S+CPDLVTLL}}
                                      {h156ppnnl3p48_svt    {ref_name=~\\S+BWP156HPPNN\\S+CPDSVT}}
                                      {h156ppnnl3p48_ulvt   {ref_name=~\\S+BWP156HPPNN\\S+CPDULVT}}
                                      {h156ppnnl3p48_ulvtll {ref_name=~\\S+BWP156HPPNN\\S+CPDULVTLL}}
                                      }
                                      mem {
                                      {memory_all      {ref_name=~\\S+n02p\\S*lvt\\S* || ref_name=~\\S+n02p\\S*ulvt\\S* || ref_name=~\\S+n02p\\S*svt\\S* || ref_name=~\\S+N02P\\S*LVT\\S* || ref_name=~\\S+N02P\\S*ULVT\\S* || ref_name=~\\S+N02P\\S*SVT\\S*}}
                                      }
                                      ip {
                                      {googleclkdiv_lvt         {ref_name=~\\S+CLK_DIV\\S+CPDLVT$}}
                                      {googleclkdiv_ulvt        {ref_name=~\\S+CLK_DIV\\S+CPDULVT$}}
                                      {googleclkdiv_ulvtll      {ref_name=~\\S+CLK_DIV\\S+CPDULVTLL$}}
                                      {googleipothers_allvt       {ref_name == tdiode_top || ref_name == rdac_phy || ref_name == rdac_hub || ref_name == tcxo_clock_buffer_top || ref_name == fll_top || ref_name == boxcar_ms_core || ref_name == boxcar_afe || ref_name == amux_top || ref_name == aging_sensor_top }}
                                      {thirdips_allvt       { ref_name != tdiode_top && ref_name != rdac_phy && ref_name != rdac_hub && ref_name != tcxo_clock_buffer_top && ref_name != fll_top && ref_name != boxcar_ms_core && ref_name != boxcar_afe && ref_name != amux_top && ref_name != aging_sensor_top && ref_name !~ \\S+CLK_DIV\\S+CPDLVT\\S* }}
                                      }
                                      } {# define regular expressions to identify cell vt,
                                                                                                    ex. { std { {elt06   {ref_name=~H\[SD\]\[PB\]ELT06\\S+}} } mem { {svt06  {ref_name=~\\S+0g4s\\S+}} } }}
bbset sta.config.hierarchy_info.RegexpsCellHeight {
                                      std {
                                      {130H   {ref_name=~\\S+BWP130H\\S+}}
                                      {156H   {ref_name=~\\S+BWP156H\\S+}}
                                      }
                                      mem {
                                      {rom  {ref_name=~\\S+ROM\\S*||ref_name=~\\S+rom\\S*}}
                                      {edr  {ref_name=~\\S+02padr\\S+ || ref_name=~\\S+02pl1\\S+|| ref_name=~\\S+02PADR\\S+ || ref_name=~\\S+02PL1\\S+}}
                                      {idr  {ref_name !~\\S+rom\\S* && ref_name!~\\S+02padr\\S+ && ref_name!~\\S+02pl1\\S+ && ref_name !~\\S+ROM\\S* && ref_name!~\\S+02PADR\\S+ && ref_name!~\\S+02PL1\\S+}}
                                      }
                                      ip {
                                      {all {ref_name =~ \\S*}}
                                      }
                                      } {# define regular expressions to identify cell height, ex. { std { {H210   {ref_name=~HD\\S+}} } mem { {ALL  {ref_name=~\\S+}} } }}
bbset sta.config.hierarchy_info.RegexpsCellType {
                                      {std {ref_name=~\\S+BWP\\S+CPD\\S*TL*}}
                                      {mem {is_memory_cell==true}}
                                      {ip  {ref_name!~\\S+BWP\\S+CPD\\S*TL* && is_memory_cell!=true && is_hierarchical==false}}
                                      } {# define regular expressions to identify cell type, ex. {{std {ref_name=~H\[SD\]\[PB\]\\S*T\\S*06\\S+}} {mem {ref_name=~sa\\S+}}}}
bbset sta.config.hierarchy_info.SpeedupByCache {False}                                                          {# Use cache to speef up get_instance}
bbset sta.config.hierarchy_info.ErrorOutIfExistsDefaultCollection {True}                                                           {# True(default)|False, Detect whether there are any unexpected cell grouping}
bbset sta.config.hierarchy_info.IgnoreVdomainList {}                                                               {# the vdomain list to be ignored in hierarchy_info }
bbset sta.config.hierarchy_info.PrintCellNameByCategory {False}                                                          {# print cell name in output file for review purpose}
bbset sta.config.drv_constraint.enable {True}                                                           {# enable STA plugin}
bbset sta.config.drv_constraint.ClockConstraintDividedBy {6}                                                              {# default clock slew constraint is T/6, which T is clock period}
bbset sta.config.drv_constraint.DataConstraintDividedBy {3}                                                              {# default data slew constraint is T/3, which T is clock period}
bbset sta.config.drv_constraint.GlobalClockSlewConstraint {0.8}                                                            {# default max. slew constraint for clock, unit is ns}
bbset sta.config.wire_ocv.enable     {True}                                                           {# enable STA plugin}
bbset sta.config.wire_ocv.UseFlatDerate {True}                                                           {# use flat derate or pocvm}
bbset sta.config.wire_ocv.Derate.Value { }                                                              {# format aligned with PnR, eg. { {*NM* {clock {early 0.10 late 0.14} data {early 0.10 late 0.14} {} {early 0.10 late 0.14} }} {*SUD* {clock {early 0.90 late 1.1} data {early 0.80 late 1.2} }}} }
bbset sta.config.wire_ocv.Derate.File {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/wire/n2.wire.csv} {# No Comment}  
bbset sta.config.wire_ocv.Derate.Type {early_clock early_data late_clock late_data}                    {# list value, valid value: early_clock early_data late_clock late_data}
bbset sta.config.rh_timing_window.enable {True}                                                           {# enable STA plugin}
bbset sta.config.rh_timing_window.input_tw_cells_regex {.*/HDR.*}                                                       {# switch cell pattern}
bbset sta.config.rh_timing_window.Scenarios {*.*}                                                            {# Scenarios to enable TWF for RH, default is *.* (all)}
bbset sta.config.rh_timing_window.InterfaceInstance.enable {True}                                                           {# enable dumping interface instance list}
bbset sta.config.gcinfhold.enable    {False}                                                          {# enable STA plugin}
bbset sta.config.gcinfhold.Scenarios {}                                                               {# Scenarios to enable inf. hold report, default is off}
bbset sta.config.write_sdc.enable    {True}                                                           {# enable STA plugin}
bbset sta.config.write_sdc.UseUnambiguousName {True}                                                           {# True: use unambiguous name (PT default), False: let write_sdc honor to set_hierarchy_separator}
bbset sta.config.write_sdc.WriteSdcOpt {}                                                               {# add additional command switches to write_sdc command, ex: -include exceptions}
bbset sta.config.write_sdc.WriteATPGformat {True}                                                           {# write out another sdc with ATPG format, with -include exceptions and postfix *.atpg.sdc}
bbset sta.config.foundry_setup.enable {True}                                                           {# enable STA plugin}
bbset sta.config.foundry_setup.UseDefaultPathGroup {True}                                                           {# use default path group}
bbset sta.config.foundry_setup.tmsf.enable {False}                                                          {# enable TMSF file}
bbset sta.config.read_eco_changelist.enable {False}                                                          {enable source pc ecotcl do whatif in standalong pt run. Default: False}
bbset sta.config.read_eco_changelist.TclSource {}                                                               {Specify pc changelist full path}
bbset sta.config.read_eco_changelist.SpefSource {}                                                               {Specify pc output spef folder. EX: ${bob_run_dir}/main/pceco/pceco/outs/pt_eco_spef}
bbset sta.config.gen_dvd_derate.enable {True}                                                           {# enable STA plugin}
bbset sta.config.gen_dvd_derate.dvd_report_pct {}                                                               {# dvd percentage report}
bbset sta.config.gen_dvd_derate.dvd_use_filter {True}                                                           {# scenario filtering for dvd}
bbset sta.config.gen_dvd_derate.dvd_scenario_filter {*.*}                                                            {# scenario matching}
bbset sta.config.gen_dvd_derate.dvd_include_package {False}                                                          {# include package or not, True|False}
bbset sta.config.gen_dvd_derate.dvd_process {sspg}                                                           {# process corner for EMIR run}
bbset sta.config.gen_dvd_derate.dvd_voltage {0p7100}                                                         {# voltage corner for EMIR run}
bbset sta.config.gen_dvd_derate.dvd_rc_corner {rcmax}                                                          {# rc corner of EMIR run}
bbset sta.config.gen_dvd_derate.dvd_temperature {125}                                                            {# temperature of EMIR run}
bbset sta.config.gen_dvd_derate.dvd_default_derate {2.5}                                                            {# default derate for dvd if the voltage conditioning table could not be found}
bbset sta.config.gen_dvd_derate.dvd_derate_config {}                                                               {# dvd derate config file}
bbset sta.config.gen_dvd_derate.dvd_refer_ir_type {static_ir}                                                      {# dvd refer to which limit, dynamic_ir|static_ir, default=static_ir}
bbset sta.config.gen_dvd_derate.dvd_filter_ffs {True}                                                           {# filter out sequential or not, default=True, True|False}
bbset sta.config.timing_dvd_derate.enable {True}                                                           {# enable STA plugin}
bbset sta.config.pre_gba_hook.enable {True}                                                           {# enable STA plugin}
bbset sta.config.pre_gba_hook.script {[bbget .sta.config.hooks.pre_gba_analysis]}                     {# pre gba analysis process}
bbset sta.config.foundry_main.enable {True}                                                           {# enable STA plugin}
bbset sta.config.foundry_main.PostHook {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/collect_lic_hostname_sta.tcl} {# No Comment}  
bbset sta.config.post_gba_hook.enable {True}                                                           {# enable STA plugin}
bbset sta.config.post_gba_hook.script {[bbget .sta.config.hooks.post_gba_analysis]}                    {# post gba analysis process}
bbset sta.config.save_session_gba.enable {True}                                                           {# Enable the save_session_gba plugin}
bbset sta.config.save_session_gba.options {}                                                               {# command line arguments to be passed to PT save_session}
bbset sta.config.save_session_gba.Scenarios {*.*}                                                            {# selective save scenario's session, default is *.* (all)}
bbset sta.config.save_session_noise.enable {True}                                                           {# Enable the save_session_noise plugin}
bbset sta.config.save_session_noise.options {}                                                               {# command line arguments to be passed to PT save_session}
bbset sta.config.save_session_noise.scenarios {}                                                               {#specify the scenarios in which noise db needs to be saved.}
bbset sta.config.post_save_session_hook.enable {True}                                                           {# enable STA plugin}
bbset sta.config.post_save_session_hook.script {[bbget .sta.config.hooks.post_analysis]}                        {# post save_session process}
bbset sta.config.post_save_session_hook.mlsta.enable {False}                                                          {# No Comment}  
bbset sta.config.post_save_session_hook.mlsta.script {[bbget info.PD_TOOLS_DIR]/sta/PrimeTime/batch_script/run_pt_mlsta.tcl} {# No Comment}  
bbset sta.config.post_save_session_hook.mlsta.Scenarios {*.*}                                                            {# selective save scenario's session, default is *.* (all)}
bbset sta.config.post_save_session_hook.soc_report.enable {False}                                                          {# No Comment}  
bbset sta.config.post_save_session_hook.soc_report.script {[bbget info.PD_TOOLS_DIR]/sta/PrimeTime/batch_script/run_pt_soc_report.tcl} {# No Comment}  
bbset sta.config.post_save_session_hook.soc_report.Scenarios {*.*}                                                            {# selective save scenario's session, default is *.* (all)}
bbset sta.config.merge_etm.enable    {False}                                                          {#Enable merge_etm plugin}
bbset sta.config.mtbf_checker.enable {TRUE}                                                           {#enable for laj}
bbset sta.config.mtbf_checker.tauT0File {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/mtbf/tau_t0.yaml} {#Synchronizer tau t0 data}
bbset sta.config.mtbf_checker.passThreshold {1E10}                                                           {#threshold value for mtbf pass/fail}
bbset sta.config.mtbf_checker.dataRatePct {1}                                                              {#data rate pct}
bbset sta.config.write_readsdf_vars.enable {True}                                                           {#Enable readback sdf variables into a var file in bb_summary/outs}
bbset sta.config.derate_summary.enable {False}                                                          {# Generate derate summary in bb_summary node}
bbset sta.config.post_cia_hook.enable {True}                                                           {# Generate derate summary in bb_summary node}
bbset sta.config.post_cia_hook.script {}                                                               {# script for post_cia_hook}
bbset sta.config.bq_record           {
                                      bbset enable True {# Generate run dir info in big query table `google.com:gchips-dashboards.RunDir_Data` }
                                      } {# No Comment}  
bbset sta.config.gen_sdf.enable      {False}                                                          {#Enable gen_sdf plugin}
bbset sta.config.gen_sdf.scenarios   {*.*}                                                            {#list of scenarios for which sdf be generated}
bbset sta.config.gen_sdf.remove_case_analysis {}                                                               {#list of pins/ports to remove case analysis}
bbset sta.config.gen_sdf.reset_design {False}                                                          {#Option to invoke reset_design -keep parasitics command}
bbset sta.config.gen_sdf.remove_case_analysis_hook {}                                                               {#User file containing additional remove_case_analysis commands}
bbset sta.config.gen_sdf.SdfInclude  {SETUPHOLD RECREM}                                               {# write_sdf -include {<opt>}}
bbset sta.config.gen_sdf.disable_derates {True}                                                           {#disable derates from session}
bbset sta.config.gen_sdf.disable_si  {True}                                                           {# Disable si from session}
bbset sta.config.gen_sdf.add_extra_uncertainty {True}                                                           {# for padding negative hold time flops}
bbset sta.config.gen_sdf.mask_violations {}                                                               {#Mask setup or hold violations using PT default}
bbset sta.config.gen_sdf.custom_annotation_file {}                                                               {#user file with set_annotated_delay commands}
bbset sta.config.gen_sdf.exclude_instances {[bbget sta.config.gen_sdf.include_instances]}                   {#exclude instances while writing out sdf}
bbset sta.config.gen_sdf.include_instances {}                                                               {#write sdf for each included instance}
bbset sta.config.gen_sdf.IncludeIOPortsFlat {True}                                                           {#If set to true, adds -input_port_nets -output_port_nets options to flat write_sdf command}
bbset sta.config.gen_sdf.IncludeIOPortsHier {False}                                                          {#If set to true, adds -input_port_nets -output_port_nets options to hierarchical write_sdf command}
bbset sta.config.gen_sdf.SdfExclude  {no_condelse clock_tree_path_models}                             {#add -exclude <opt> to write_sdf command, b/261525674#comment9}
bbset sta.config.gen_sdf.WriteSdfOpt {}                                                               {#add additional command switches to write_sdf command, ex: -no_edge -no_internal_pins}
bbset sta.config.gen_sdf.DisablePOCVM {True}                                                           {# Disable pocvm from session}
bbset sta.config.gen_sdf.InputAnnotatedDelayFiles {[bbfiles -bundles sta_sdf -filetype annotated_delay -model_type sdfAnnotatedDelay -category sdf_flat -stage sta]} {# The annotated delay files want to merged, can provide multiple files}
bbset sta.config.gen_sdf.AddExtraDelay {0}                                                              {# default extra delay for annotated delay}
bbset sta.config.gen_sdf.SlackLesserThan {0}                                                              {# default slack threshold to collect timing path to check hold violation }
bbset sta.config.gen_sdf.OnlyAnnotateDelay {False}                                                          {# True|False(default), decide whether need to skip write_sdf command, only generate the annotated delay in iteration1}
bbset sta.config.gen_sdf.FlowMaskViolations {min}                                                            {# min|max min, Mask violation from flow approach}
bbset sta.config.gen_report_metrics.enable {False}                                                          {# Disable legacy dashboard approach}
bbset sta.config.upload_metrics.enable {False}                                                          {# enable STA block or not}
bbset sta.config.cell_check.enable   {True}                                                           {# enable STA plugin}
bbset sta.config.cell_check.cell_check_rpt {outs/cell_check_rpt.txt}                                        {# output file for cell-checks}
bbset sta.config.cell_check.cell_check_rpt_error {outs/cell_check_rpt.error}                                      {# output file for cell-checks}
bbset sta.config.cell_check.cell_check_rpt_warning {outs/cell_check_rpt.warning}                                    {# output file for cell-checks}
bbset sta.config.cell_check.WarningCellGroups {FractionalComboCells HighHoldFlopListCells D24PlusCells DelayCells ClockCells SvtNonFlopCells FractionalLVTLLCells DK1p1LowLeakInvCells DK1p1LowLeakInvSVTCells HighDriveLowHeightCells} {# define warning cell groups for user easily to review, it cell groups not belong to warning, then it is error}
bbset sta.config.cell_check.ck_cell_waiver_pattern {^ISO.*|^AO.*|^OA.*|^IND.*|^PT.*}                                {# patten for PT filter }
bbset sta.config.cell_check.Scenarios {*.ssgnp-NM-0-cworst_ccworst_t}                                  {# selective scenario's to generate cell_check report, default is *.* (all)}
bbset sta.config.restore_gba.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.foundry_report.enable {True}                                                           {# enable STA plugin}
bbset sta.config.foundry_report.AccumulatedClkXtalk {0.005}                                                          {#threshold value for accumulated xtalk on clock output ports}
bbset sta.config.foundry_report.SupplyNetConnectionCheckPatternList {}                                                               {# List cell pattern want to check the supply net connection, ex. {lib_name-regexp lib_pg_name1 lib_pg_name2}}
bbset sta.config.foundry_report.ClockSwingCheck {True}                                                           {# enable clock swing check, essential for n3e signoff: go/n3e-timing-signoff}
bbset sta.config.pba_report.enable   {True}                                                           {# enable STA plugin}
bbset sta.config.pba_report.GspanSkewCheck {False}                                                          {# enable gspan skew report}
bbset sta.config.pba_report.ReportCellStats.EnablePattern {sswrp_*}                                                        {# any design meet the pattern here will enable report_cell_stats report}
bbset sta.config.pba_report.ReportCellStats.Scenarios {}                                                               {# scenario to enable report cell stats}
bbset sta.config.summary_rpt.enable  {False}                                                          {# enable STA plugin}
bbset sta.config.negedge_rpt.enable  {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_boundary.enable {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_input_port.enable {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_clock_timing.enable {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_clock_tree_cells.enable {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_timing_derate.enable {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_clknet_delta_delay.enable {False}                                                          {# enable STA plugin}
bbset sta.config.rpt_analysis_coverage.enable {False}                                                          {# enable STA plugin}
bbset sta.config.cpc.enable          {False}                                                          {# enable STA plugin}
bbset sta.config.1pnoise.enable      {True}                                                           {# enable STA plugin}
bbset sta.config.1pnoise.dummy_driver_cell {}                                                               {# dummy driver cell for noise analysis, buf}
bbset sta.config.1pnoise.double_switching {clock_network}                                                  {# 1pnoise options}
bbset sta.config.1pnoise.noise_process {}                                                               {# define the noise process}
bbset sta.config.1pnoise.minimum_to_start_scaling {0.166}                                                          {# option for 1pnoise dvd derate}
bbset sta.config.1pnoise.dvd_limit   {0.166}                                                          {# option for 1pnoise dvd derate}
bbset sta.config.1pnoise.dvd_report_pct {[bbget .sta.config.gen_dvd_derate.dvd_report_pct]}              {# dvd percentage file}
bbset sta.config.1pnoise.output_log  {./noisebump_PT/ir_dvd_derate.log}                               {# output log file for 1pnoise dvd dereate}
bbset sta.config.1pnoise.dvd_derate_proc {}                                                               {# dvd noise derate procedure}
bbset sta.config.pre_etm_hook.enable {True}                                                           {# enable pre etm hook}
bbset sta.config.pre_etm_hook.script {[bbget .sta.config.hooks.pre_etm]}                              {# pre etm extraction process}
bbset sta.config.before_end_hook.enable {True}                                                           {# enable before end hook}
bbset sta.config.before_end_hook.script {[bbget .sta.config.hooks.before_end]}                           {# before finish tools run }
bbset sta.config.etm.enable          {True}                                                           {# enable etm generation by default for redondo}
bbset sta.config.etm.Scenarios       {*.*}                                                            {# Scenarios to enable etm extraction, default is *.* (all)}
bbset sta.config.etm.remove_case_analysis {False}                                                          {# remove case analysis in etm}
bbset sta.config.etm.include_mcp_in_arc {False}                                                          {# include MCP in ETM arc or not, default=False, tool-default-in-PT2019=True, True|False}
bbset sta.config.etm.max_load        {}                                                               {# max_load for ETM}
bbset sta.config.etm.trans_limit     {}                                                               {# transition limit in etm for different voltage}
bbset sta.config.etm.EnableGuardBand {False}                                                          {# enable etm guardband or not, default=False, True|False}
bbset sta.config.etm.HoldGuardBands  {
                                      {UUD 0.000}
                                      {SUD 0.000}
                                      {SUD 0.000}
                                      {UD  0.000}
                                      {NM  0.000}
                                      {OD  0.000}
                                      {SOD 0.000}
                                      } {# hold guardband from voltage-name to value list}
bbset sta.config.etm.SetupGuardBandScaleFromClockPeriod {0.0}                                                            {# setup guardband scale to fasest clock period, default=0.0, fastest_period*value}
bbset sta.config.etm.UpfSupplyPrecedence {netlist}                                                        {# control related supply precedence, default="netlist", internal|external(to be provided for etm lib)}
bbset sta.config.etm.NumDataTransPoints {}                                                               {# control extract_model_num_data_transition_points, default = '', tool default}
bbset sta.config.etm.NumClockTransPoints {}                                                               {# control extract_model_num_clock_transition_points, default = '', tool default}
bbset sta.config.etm.NumCapPoints    {}                                                               {# control extract_model_num_capacitance_points, default = '', tool default}
bbset sta.config.etm.ReportDelayCalc {}                                                               {# control extract_model_enable_report_delay_calcuulation, default = '', tool default}
bbset sta.config.etm.WriteInterfaceTimingType {arc}                                                            {# control write_interface_timing -timing_type arc/slack, default = arc}
bbset sta.config.etm.extract_model_use_internal_type_for_internal_dir {True}                                                           {# value for PT app_var}
bbset sta.config.etm.Options         {}                                                               {# options for extract_model command}
bbset sta.config.tweaker_dataprep.enable {False}                                                          {# enable STA plugin}
bbset sta.config.restore_session.enable {False}                                                          {# enable STA plugin}
bbset sta.config.pc_eco_session.enable {False}                                                          {# enable STA plugin}
bbset sta.config.pc_eco_session.SessionName {[bbget ".pceco.config.EcoSessionName"]}                         {# ECO session name}
bbset sta.config.pc_eco_session.LeakageScenario {}                                                               {# No Comment}  
bbset sta.config.pc_eco_session.SaveUpf {False}                                                          {# Save upf into eco session. Can be disable with pg-netlist flow}
bbset sta.config.pc_eco_session.ContentType {eco_data}                                                       {# session content type used in -include. Default: eco_data. Available: pt_session, eco_data, design}
bbset sta.config.pc_eco_session.SMSADataFormat {binary}                                                         {# SMSA data format. Available: binary, ascii}
bbset sta.config.pc_eco_session.SMSADataType {setup hold max_capacitance max_transition max_fanout}           {# SMSA data types}
bbset sta.config.pc_eco_session.AddlOptions {}                                                               {# additional command line arguments to be passed to PT write_eco_session}
bbset sta.config.pc_eco_session.Scenarios {*.*}                                                            {# selective save scenario's session, default is *.* (all)}
bbset sta.config.pc_eco_session.SlackLesserThan {0.0}                                                            {# slack-lesser-than threshold used while dumping eco session}
bbset sta.config.pc_eco_session.NworstMax {5}                                                              {# nworst threshold for max(setup) path used while dumping eco session }
bbset sta.config.pc_eco_session.NworstMin {5}                                                              {# nworst threshold for min(hold) path used while dumping eco session }
bbset sta.config.pc_eco_session.MaxPath {1000000}                                                        {# max path setup while dumping eco session }
bbset sta.config.pc_eco_session.PbaMode {path}                                                           {# pba mode for eco session. Available: none, path(default), exhaustive}
bbset sta.config.pc_eco_session.StartEndTypes {}                                                               {# Type list for -start_end_types option used in reporting. Ava: in_to_out | in_to_reg | reg_to_out | reg_to_reg}
bbset sta.config.pc_eco_session.CoverDesign {True}                                                           {# Enable cover-design while dumping eco session}
bbset sta.config.pc_eco_session.PathGroup {}                                                               {# Report violation for the given path group only}
bbset sta.config.pc_eco_session.EndpointListFile {}                                                               {Define a file containing the endpoint list}
bbset sta.config.pc_eco_session.AddlToolVariables {}                                                               {Additional tool variables for write_eco_session configuration}
bbset sta.config.pc_eco_session.TWFEnableRefinement {False}                                                          {# No Comment}  
bbset sta.config.pc_eco_session.HSenable {False}                                                          {Save eco session with HS data or not. Default false}
bbset sta.config.pc_eco_session.HSBlockNetlists {}                                                               {Specify HS blocks netlist full path, format ex: bbset HSBlockNetlists {BLKA.v BLKB.v ...} }
bbset sta.config.pc_eco_session.HSBlockSpefs {}                                                               {Specify HS blocks spefs, format ex: bbset HSBlockSpefs {BLKA {all temp/rc spefs} BLKB {all temp/rc spefs} ...} }
bbset sta.config.dmsa_eco_session.enable {[bbget sta.config.pc_eco_session.enable]}                       {# enable STA plugin}
bbset sta.config.epilogue.enable     {True}                                                           {# enable STA plugin}
bbset sta.config.epilogue.PostHook   {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/collect_lic_hostname_sta.tcl} {# No Comment}  
bbset sta.config.setup_hyperscale_model.enable {True}                                                           {# enable STA plugin}
bbset sta.config.setup_hyperscale_model.ModeMapping {}                                                               {# SDC corner mapping, syntax : [{from to}]+}
bbset sta.config.setup_hyperscale_model.ScenarioMapping {}                                                               {# scenario mapping, syntax : [{from to}]+}
bbset sta.config.setup_hyperscale_context.enable {[bbget sta.config.setup_hyperscale_context.TopDownCharacterize.enable]} {# enable STA plugin}
bbset sta.config.setup_hyperscale_context.ModeMapping {}                                                               {# SDC mode mapping, syntax : [{sub-block-mode top-mode}]+}
bbset sta.config.setup_hyperscale_context.TopDownCharacterize.enable {False}                                                          {# True|False(default), enable top down HSC characterize}
bbset sta.config.setup_hyperscale_context.TopDownCharacterize.Blocks {[bbget hierarchy.[bbget info.BLOCK].subblocks]}                 {# blocks used to do context characterize}
bbset sta.config.gen_hyperscale.enable {True}                                                           {# enable HSM generation by default for redondo}
bbset sta.config.gen_hyperscale.hier_model_port_abstraction_ignore_register_count {256}                                                            {# app_var for PT}
bbset sta.config.gen_hyperscale.hier_model_enable_unconstrained_port_abstraction {True}                                                           {# True(default|False, app_var for PT)}
bbset sta.config.gen_hyperscale.Exclude {parasitics_data}                                                {# value for `-exclude` option}
bbset sta.config.gcadd_procs.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.gcquick_rpt.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.gcquick_ext.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.spil_usage.enable   {False}                                                          {# enable STA plugin}
bbset sta.config.mem_late_margin.enable {True}                                                           {# enable STA plugin}
bbset sta.config.setup_sdf.enable    {False}                                                          {# enable STA plugin}
bbset sta.config.setup_sdf.RemoveAnnotatedDelay {False}                                                          {# remove annotated delay before read_sdf, default=False, True|False}
bbset sta.config.setup_sdf.ResetTimingDerate {[bbget .sta.config.gen_sdf.disable_derates]}                    {# reset timing derate before read_sdf, default=True, True|False}
bbset sta.config.setup_sdf.SyntaxOnly {False}                                                          {# syntax_only when read sdf, default=False, True|False}
bbset sta.config.setup_sdf.LoadDelay {}                                                               {# sdf load delay, default={}, cell|net|{}}
bbset sta.config.setup_sdf.AnalysisType {bc_wc}                                                          {# analysis type of reading sdf, default=bc_wc, single|bc_wc|on_chip_variation}
bbset sta.config.setup_sdf.Type      {}                                                               {# read sdf type, default=<empty, tool-default>, <empty>|sdf_min|sdf_typ|sdf_max}
bbset sta.config.setup_sdf.PropagateClocks {True}                                                           {# propagate clocks after read_sdf, default=True, True|False}
bbset sta.config.setup_sdf.DftPseudoStaticPorts {[bbget syn.synthdft.DftPseudoStaticPorts]}                      {#arrival latency report for pseudo static ports}
bbset sta.config.setup_sdf.DisablePOCVM {[bbget .sta.config.gen_sdf.DisablePOCVM]}                       {# align with generation setting}
bbset sta.config.setup_sdf.DisableSI {[bbget .sta.config.gen_sdf.disable_si]}                         {# align with generation setting }
bbset sta.config.setup_sdf.IgnoreModeMatch {False}                                                          {# ignore mode match, default=False, True|False}
bbset sta.config.setup_sdf.lib_pin_arc_check_enable {True}                                                           {# No Comment}  
bbset sta.config.setup_sdf.IgnorePinInSubHierIOTargetFile {}                                                               {# pin list to be ignored in sub-hier io_target file}
bbset sta.config.setup_sdf.SubHierForIOTargetFile {}                                                               {# sub hier list for additional IO target file}
bbset sta.config.lib_prep.enable     {True}                                                           {# enable lib-prep}
bbset sta.config.mem_freq_connection.enable {True}                                                           {# enable STA plugin}
bbset sta.config.mem_freq_connection.MemBaseCellRegEx {}                                                               {# Regular expression to match the memory base/library cell name.}
bbset sta.config.mem_freq_connection.MemFreqTableRpt {[bbget .info.BLOCK]_max_MEM.freq.rpt}                           {# memory freq. report}
bbset sta.config.mem_freq_connection.MemoryRepairPins {}                                                               {# list: Memory repair pins. Will create memory connection report needed for simulations}
bbset sta.config.mem_freq_connection.MemoryRepairFanInPat {}                                                               {# str: Pattern to filter the start point of fan-in cone of Repair Port}
bbset sta.config.mem_freq_connection.MemoryRepairFanInType {pin}                                                            {# Value : pin|port, define pin or port for target fanin}
bbset sta.config.mem_freq_connection.MemoryRepairRpt {[bbget .info.BLOCK]_mem_repair_connections.rpt}                 {# memory repair report}
bbset sta.config.mem_freq_connection.MemoryMarginPins {}                                                               {# list: Memory margin pins. Will create memory connection report needed for simulations}
bbset sta.config.mem_freq_connection.MemoryMarginFanInPat {}                                                               {# str: Pattern to filter the start point of fan-in cone of margin Port}
bbset sta.config.mem_freq_connection.MemoryMarginFanInType {port}                                                           {# Value : pin|port, define pin or port for target fanin}
bbset sta.config.mem_freq_connection.MemoryMarginRpt {[bbget .info.BLOCK]_mem_margin_connections.rpt}                 {# memory margin report}
bbset sta.config.mem_freq_connection.OccInstanceRegEx {}                                                               {# str: Occ instance regular expression}
bbset sta.config.mem_freq_connection.OccFreqTableRpt {[bbget .info.BLOCK]_max_OCC.freq.rpt}                           {# OCC freq. report}
bbset sta.config.mem_pin_cap.enable  {True}                                                           {# enable STA plugin}
bbset sta.config.mem_pin_cap.MaxAvgCap {70}                                                             {# maxmimum pin cap threshold for checking}
bbset sta.config.mem_pin_cap.SummaryRpt {[bbget .info.BLOCK]_mem_pin_cap.summary.rpt}                    {# memory pin cap summary report}
bbset sta.config.mem_pin_cap.DetailRpt {[bbget .info.BLOCK]_mem_pin_cap.detail.rpt}                     {# memory pin cap summary report}
bbset sta.config.mem_pin_cap.ViolationRpt {[bbget .info.BLOCK]_mem_pin_cap.violation.rpt}                  {# memory pin cap summary report}
bbset sta.config.reduced_derate.enable {True}                                                           {# enable reduced_derate}
bbset sta.config.libname_map.enable  {True}                                                           {#enable generate libmap}
bbset sta.config.custom_macro_margin.enable {True}                                                           {# enable custom_macro_margin}
bbset sta.config.custom_macro_margin.VoltageTemperatureDerateMap {h130nppnl3p48_lvtll}                                            {# need to be part of type in sta.config.hierarchy_info.RegexpsCellVt }
bbset sta.config.custom_macro_margin.foundry_extra_margin.enable {False}                                                          {# enable additional foudnry extra margin}
bbset sta.config.custom_macro_margin.foundry_extra_margin.CellRegexp {dwc_c20pcie4_pma_x2_ns dwc_eusb2_phy_1p_ns dwc_mipi_mphy_type1_g5_pma_2tx_2rx_ns dwc_usbc32dptx_pma_x4_ns} {# No Comment}  
bbset sta.config.custom_macro_margin.foundry_extra_margin.Derate {0.03}                                                           {# default 3% for each arc}
bbset sta.config.custom_macro_margin.R2RDerate_enable {TRUE}                                                           {# enable r2r_split_derate and r2r_cb_derate}
bbset sta.config.gls_collatoral.enable {False}                                                          {#True|False(default) to dump GLS required collatoral, ex. NRF, Sync flop...}
bbset sta.config.gls_collatoral.Scenarios { *.ssgnp-NM-0-cworst_ccworst_t }                                {# scenario list to generate GLS collatoral}
bbset sta.config.scenario_app_var.enable {True}                                                           {# No Comment}  
bbset sta.config.scenario_app_var.timing_pocvm_corner_sigma {
                                      #b/323881453
                                      {default 3}
                                      {*_ccbest 4}
                                      {*_ccworst 4}
                                      } {# No Comment}  
bbset sta.config.scenario_app_var.timing_pocvm_report_sigma {
                                      #b/323881453
                                      {default 3}
                                      {*_ccbest 4}
                                      {*_ccworst 4}
                                      } {# No Comment}  
bbset sta.config.derate_checker.enable {True}                                                           {# No Comment}  
bbset sta.config.emt_setup.enable    {False}                                                          {# True|False(default) to setup EMT flow}
bbset sta.config.emt_setup.EmDataToggleFactor {0.5}                                                            {# toggle rate for data}
bbset sta.config.emt_setup.EmClockToggleFactor {2}                                                              {# toggle rate for clock}
bbset sta.config.emt_setup.EmAvgScale {1}                                                              {# Scales down the toggle factor for Avg EM analysis Only}
bbset sta.config.emt_setup.PeakLoadType {tot}                                                            {# max|min|avg, value for cload_type }
bbset sta.config.bbvarcheck.enable   {True}                                                           {# True(default)|False to enable bbvarcheck in bb_summary}
bbset sta.config.node_slack_histogram.enable {True}                                                           {# True(default)|False to dump node slack histogram by VT types}
bbset sta.config.node_slack_histogram.DontTouchFile {[bbget .info.PROCESS_DIR]/sta/gchips/config/node_slack_histogram/dont_touch_file} {# default file to filter node}
bbset sta.config.node_slack_histogram.OutputFolders {node_slack_histogram}                                           {# default folder for node_slack_histogram report}
bbset sta.config.node_slack_histogram.BinWidth {0.1}                                                            {# bin width for histogram}
bbset sta.config.illegal_cell_margins.enable {True}                                                           {# No Comment}  
bbset sta.config.constraint_drc.enable {False}                                                          {# True|False(default) to do timing drc check}
bbset sta.config.constraint_drc.WAIVERS_DIR {[bbget info.BLOCK_DIR]/sta_drc_waivers}                         {# waivers dir for constraint drc}
bbset sta.config.constraint_drc.RELEASE_TAG {[bbget sta.metrics.run_name]}                                   {# Release Tag} 
bbset sta.config.constraint_drc.ENABLE_ADDITIONAL_FEATURES {advanced_checks}                                                {# value for sta_drc_enable_features in PT, value : advanced_checks(default) or "" (empty)}
bbset sta.config.constraint_drc.Scenarios {*.ssgnp-NM-125-cworst_ccworst_t *.ffgnp-NM-125-rcworst_ccworst} {# scenario pattern to enable constraint_drc checker}
bbset sta.config.constraint_drc_audit.enable {[bbget .sta.config.constraint_drc.enable]}                      {# align with .sta.config.constraint_drc.enable}
bbset sta.config.constraint_drc_audit.Scenarios {[bbget sta.config.constraint_drc.Scenarios]}                    {# default scenario pattern}
bbset sta.config.BEOLMap.enable      {True}                                                           {# True|False, enable wire_rc_corner mapping based on voltage name (ex. USOD3s)}
bbset sta.config.BEOLMap.Rule        {
                                      { USOD3s {125c_cworst_ccworst_t 125c_cworst_ccworst} {125c_rcworst_ccworst_t 125c_rcworst_ccworst}}
                                      } {# No Comment}  
bbset sta.config.ps_reports.enable   {FALSE}                                                          {# No Comment}  
bbset sta.config.ps_reports.Scenarios {*_t}                                                            {# No Comment}  
bbset sta.config.ps_reports.script_dva {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/design_variation_analysis/report_ps_dva_to_tweaker.tcl} {# No Comment}  
bbset sta.config.ps_reports.script_vmin {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/voltage_slack_analysis/report_ps_vmin_to_tweaker.tcl} {# No Comment}  
bbset sta.config.gen_sta_dashboard.enable {True}                                                           {# No Comment}  
bbset sta.config.gen_sta_dashboard.dashboard_scripts {[bbget .info.PD_TOOLS_DIR]/sta/lib/gen_sta_dashboard/scripts}   {#}             
bbset sta.config.gen_sta_dashboard.user_setup_pba_mode {path}                                                           {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_hold_pba_mode {path}                                                           {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_max_path {20000000}                                                       {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_setup_nworst {2}                                                              {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_hold_nworst {2}                                                              {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_setup_slk_limit {0.00}                                                           {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_hold_slk_limit {0.00}                                                           {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_enable_tdi_trans_wavier {0}                                                              {# No Comment}  
bbset sta.config.gen_sta_dashboard.user_sswrap_hier {[bbget .info.REPO_TOP]/chip/[bbget .info.CHIP]/sta/dashboard/sswrp_hier/hier_empty} {# No Comment}  
bbset sta.config.gen_sta_dashboard.timing_dir {Timing_summary}                                                 {# No Comment}  
bbset sta.config.gen_sta_dashboard.tdrc_dir {Timing_drc}                                                     {# No Comment}  
bbset sta.config.gen_sta_dashboard.gspan_dir {Gspan_summary}                                                  {# No Comment}  
bbset sta.config.gen_sta_dashboard.send_email {0}                                                              {# No Comment}  
bbset sta.config.gen_sta_dashboard.golden_dir {[bbget .info.REPO_TOP]/chip/[bbget .info.CHIP]/sta/dashboard/golden_dir} {# No Comment}  
bbset sta.config.gen_sta_dashboard.waiver_dir {/google/gchips/ipreleases/malibu_sta/waiver_dir}                {# No Comment}  
bbset sta.config.gen_sta_dashboard.setup_hold_reporting {default}                                                        {# default|both, dump both setup/hold violation for hold scenario}
bbset sta.config.gen_sta_dashboard.bin_width {0.01}                                                           {# bin width value}
bbset sta.config.gen_sta_dashboard.misc_data_corner_list {func.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-NM-m25-cworst_ccworst_t shift.ssgnp-NM-0-cworst_ccworst_t shift.ssgnp-NM-m25-cworst_ccworst_t} {# list for misc data, ex. open/short}
bbset sta.config.merge_sta_dashboard.enable {True}                                                           {# No Comment}  
bbset sta.config.merge_sta_dashboard.overall_merge {./merge}                                                        {#}             
bbset sta.config.merge_sta_dashboard.instance_list {[bbget .sta.config.gen_sta_dashboard.user_sswrap_hier]}         {# No Comment}  
bbset sta.config.merge_sta_dashboard.bin_width {0.01}                                                           {# No Comment}  
bbset sta.config.merge_sta_dashboard.nworst {5}                                                              {# No Comment}  
bbset sta.config.merge_sta_dashboard.send_email {1}                                                              {# No Comment}  
bbset sta.config.merge_sta_dashboard.mail_list {}                                                               {# No Comment}  
bbset sta.config.merge_sta_dashboard.tdrc_memory {64000}                                                          {# No Comment}  
bbset sta.config.merge_sta_dashboard.wait_for_touch {1}                                                              {# No Comment}  
bbset sta.config.generate_merge_dashboard_metrics.enable {False}                                                          {# No Comment}  
bbset sta.config.generate_merge_dashboard_metrics.upload {False}                                                          {# No Comment}  
bbset sta.config.soc_report_merge.enable {False}                                                          {# No Comment}  
bbset sta.config.setup_hier_smva.enable {False}                                                          {# enable only SMVA run}
bbset sta.config.hierarchy_info_smva.enable {False}                                                          {# enable only SMVA run}
bbset sta.config.hierarchy_info_smva.RegexpsCellVt {[bbget sta.config.hierarchy_info.RegexpsCellVt]}                {# No Comment}  
bbset sta.config.hierarchy_info_smva.RegexpsCellType {[bbget sta.config.hierarchy_info.RegexpsCellType]}              {# No Comment}  
bbset sta.config.hierarchy_info_smva.RegexpsCellHeight {[bbget sta.config.hierarchy_info.RegexpsCellHeight]}            {# No Comment}  
bbset sta.config.hierarchy_info_smva.SpeedupByCache {[bbget sta.config.hierarchy_info.SpeedupByCache]}               {# No Comment}  
bbset sta.config.hierarchy_info_smva.PrintCellNameByCategory {[bbget sta.config.hierarchy_info.PrintCellNameByCategory]}      {# No Comment}  
bbset sta.config.hierarchy_info_smva.IgnoreVdomainList {[bbget sta.config.hierarchy_info.IgnoreVdomainList]}            {# No Comment}  
bbset sta.DontUseCells               {[bbget sta.data.DontUseCells]}                                  {# define the dont use cell check items in STA}
bbset sta.clock.DontUseCells         {
                                      [bbget ".DontUseClockCells"]
                                      } {# define the dont use cell check items in STA}
bbset sta.metrics.reports.rpt_init   {True}                                                           {# Log the corner, mode, design}
bbset sta.metrics.reports.rpt_sanity {True}                                                           {# Report for unclocked sequentials}
bbset sta.metrics.reports.rpt_setup  {True}                                                           {# Report for cellpin rise/fall, max paths}
bbset sta.metrics.reports.rpt_hold   {True}                                                           {# Report for cell pin rise/fall, min paths}
bbset sta.metrics.reports.rpt_pulse  {True}                                                           {# Min pulse width reporting}
bbset sta.metrics.reports.rpt_drv    {True}                                                           {# DRV tran cap reporting}
bbset sta.metrics.reports.rpt_trancap_setup_pba {None}                                                           {# PBA mode for tran cap setup path retrival in pin filter}
bbset sta.metrics.reports.rpt_trancap_hold_pba {None}                                                           {# PBA mode for tran cap hold path retrival in pin filter}
bbset sta.metrics.reports.rpt_trancap_pin_filter {[bbget .info.PROCESS_DIR]/sta/gchips/PrimeTime/batch_script/gc_report_summary_trancap_pin_filter.tcl} {# Pin filter for tran cap reporting}
bbset sta.metrics.reports.rpt_trancap_waiver.enable {True}                                                           {# False(default)|True, Enable trancap waiver}
bbset sta.metrics.reports.rpt_trancap_waiver_enable {[bbget .sta.metrics.reports.rpt_trancap_waiver.enable]}         {# False(default)|True, Enable trancap waiver}
bbset sta.metrics.reports.rpt_glitch {True}                                                           {# Glitch reporting}
bbset sta.metrics.reports.rpt_glitch_dvd {True}                                                           {# Glitch dvd reporting}
bbset sta.metrics.reports.rpt_glitch_ir {True}                                                           {# Glitch IR reporting}
bbset sta.metrics.reports.rpt_crosstalk {True}                                                           {# Crosstalk reporting}
bbset sta.metrics.reports.rpt_latency {True}                                                           {# Latency reporting}
bbset sta.metrics.reports.rpt_latency_ports {*}                                                              {# Select All Clocks}
bbset sta.metrics.reports.rpt_latency_clocks {*}                                                              {# Select All Ports}
bbset sta.metrics.reports.rpt_latency_rpt_type {summary}                                                        {# Summary/detail/verbose}
bbset sta.metrics.reports.rpt_latency_type {latency.definition.group.io_cost.supply}                        {# latency from New Parser,  legacy_lat From Legacy Parser, definition From Clocks,  group WIP, io_cost for Tracking IO, supply WIP}
bbset sta.metrics.reports.rpt_latency_maxpath {100000}                                                         {# Default MAx Depth of Registers Considered in latency calculation, set as -1 for all fanout , this to speed up runtime}
bbset sta.metrics.reports.rpt_clktrunk {True}                                                           {# Clk trunk reporting}
bbset sta.metrics.reports.rpt_sanity_scenarios {*}                                                              {# Sceanrio list for sanity/unclocked   reporting scneario}
bbset sta.metrics.reports.rpt_setup_scenarios {
                                      *.*_t
                                      *.*typical
                                      *R2R*.ssgnp*_ccworst
                                      } {#enalbe}       
bbset sta.metrics.reports.rpt_hold_scenarios {
                                      *
                                      } {# enable the hold for setup scenario @20230401}
bbset sta.metrics.reports.rpt_drv_scenarios {*}                                                              {# Sceanrio list for tran/cap  reporting scneario}
bbset sta.metrics.reports.rpt_glitch_scenarios {*}                                                              {# Sceanrio list for glitch    reporting scneario}
bbset sta.metrics.reports.rpt_pulse_scenarios {*}                                                              {# Sceanrio list for mp/mpw    reporting scneario}
bbset sta.metrics.reports.rpt_crosstalk_scenarios {*}                                                              {# Sceanrio list for crosstalk reporting scneario}
bbset sta.metrics.reports.rpt_latency_scenarios {*}                                                              {# Sceanrio list for latency   reporting scneario}
bbset sta.metrics.reports.rpt_clktrunk_scenarios {*}                                                              {# Sceanrio list for clktrunk  reporting scneario}
bbset sta.metrics.reports.rpt_sanity_ignore_scenarios {}                                                               {# Sceanrio list for skpping sanity/unclocked   reporting scneario}
bbset sta.metrics.reports.rpt_setup_ignore_scenarios {}                                                               {# Sceanrio list for skpping setup     reporting scneario}
bbset sta.metrics.reports.rpt_hold_ignore_scenarios {
                                      *R2R*.ssgnp*_t
                                      } {#disable}      
bbset sta.metrics.reports.rpt_drv_ignore_scenarios {*R2R*}                                                          {# Sceanrio list for skpping tran/cap  reporting scneario}
bbset sta.metrics.reports.rpt_glitch_ignore_scenarios {*R2R*}                                                          {# Sceanrio list for skpping glitch    reporting scneario}
bbset sta.metrics.reports.rpt_pulse_ignore_scenarios {*R2R*}                                                          {# Sceanrio list for skpping mp/mpw    reporting scneario}
bbset sta.metrics.reports.rpt_crosstalk_ignore_scenarios {*R2R*}                                                          {# Sceanrio list for skpping crosstalk reporting scneario}
bbset sta.metrics.reports.rpt_latency_ignore_scenarios {*R2R*}                                                          {# Sceanrio list for skpping latency   reporting scneario}
bbset sta.metrics.reports.rpt_clktrunk_ignore_scenarios {*R2R*}                                                          {# Sceanrio list for skpping clktrunk  reporting scneario}
bbset sta.metrics.reports.rpt_setup_pba {exhaustive}                                                     {#Enable Pba analysis mode, else set it to None"}
bbset sta.metrics.reports.rpt_setup_maxpath {2000000}                                                        {#Max number of setup paths"}
bbset sta.metrics.reports.rpt_setup_nworst {2}                                                              {#Max number of paths per endpoint"}
bbset sta.metrics.reports.rpt_setup_slacklt {-0.0009}                                                        {#Ordering paths strictly by slack"}
bbset sta.metrics.reports.rpt_hold_pba {exhaustive}                                                     {#Enable Pba analysis mode, else set it to None"}
bbset sta.metrics.reports.rpt_hold_maxpath {2000000}                                                        {#Max number of hold paths"}
bbset sta.metrics.reports.rpt_hold_nworst {2}                                                              {#Max number of paths per endpoint"}
bbset sta.metrics.reports.rpt_hold_slacklt {-0.0009}                                                        {#Ordering paths strictly by slack"}
bbset sta.metrics.reports.rpt_crosstalk_clock {0.005}                                                          {#delta delay threshold"}
bbset sta.metrics.reports.rpt_crosstalk_data {0.050}                                                          {#delta delay threshold"}
bbset sta.metrics.reports.rpt_clkvt_list {TSL_C54L04 TSL_C54L06 TL_C54L04 TL_C54L06 TR_C54L04 TR_C54L06 TSL_C60L04 TSL_C60L06 TL_C60L04 TL_C60L06 TR_C60L04 TR_C60L06} {#List of VT Regexp To Lookup for clk VT}
bbset sta.metrics.reports.rpt_powerswitch_pairs {}                                                               {#list of input:output:id string to dump latency files for inrush sim in EMIR}
bbset sta.metrics.waiver_file        {}                                                               {#file to waive violations and mask from uploading to dashboard}
bbset sta.metrics.upload_from_util   {False}                                                          {#Upload metrics from sta xlsx util}
bbset sta.config.light_weight_smva.GlobalNetDerate {0.05}                                                           {# No Comment}  
bbset sta.config.light_weight_smva.imporved_report_script {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/lwsmva_rpt/smva_v2.tcl}  {# No Comment}  
bbset sta.config.light_weight_smva.rpt_max_paths {20000}                                                          {# No Comment}  
bbset sta.config.light_weight_smva.addtional_rpt.enable {TRUE}                                                           {# No Comment}  
bbset sta.config.light_weight_smva.derate_reduction_yaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/lwsmva/derate_reduction.yaml} {# yaml file}   
bbset sta.config.light_weight_smva.RailsToMistrackYaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/lwsmva/r2r_split_func_name_vdomain.yaml} {# No Comment}  
bbset sta.config.light_weight_smva.MistrackDerateYaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/lwsmva/r2r_split_derate.yaml} {# No Comment}  
bbset sta.config.light_weight_smva.MistrackYamlTableSel {vdomain_2}                                                      {# No Comment}  
bbset sta.config.light_weight_smva.MistrackYamlDerateSel {derate15}                                                       {# No Comment}  
bbset sta.config.light_weight_smva.enable_structure_check {True}                                                           {# No Comment}  
bbset sta.config.light_weight_smva.structure_check_script {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/lwsmva_r2r_structure_check/r2r_structure_check.tcl} {# No Comment}  
bbset sta.config.light_weight_smva.structure_check_scenario {*_R2R*.ssgnp-NM-m25-cworst_ccworst}                             {# No Comment}  
bbset sta.config.r2r_structure_check.enable {[bbget .sta.config.light_weight_smva.enable_structure_check]}   {# No Comment}  
bbset sta.config.r2r_structure_check.master_script {[bbget .sta.config.light_weight_smva.structure_check_script]}   {# No Comment}  
bbset sta.config.r2r_structure_check.Scenarios {[bbget .sta.config.light_weight_smva.structure_check_scenario]} {# No Comment}  
bbset sta.DesignSpec.Aging.StressCondition {default}                                                        {# No Comment}  
bbset sta.DesignSpec.additional_hold_margin.UncertaintyTable {default}                                                        {# No Comment}  
bbset sta.sta.bb_summary.PostCmd.MailNotification.Enable {1}                                                              {# Enable mail notification after sta.bb_summary job done}
bbset sta.sta.bb_summary.PostCmd.MailNotification.Users {gchips-sta-cad}                                                 {# add gchips sta cad team into mail loop, default only user}
bbset sta.sta.bb_summary.PostCmd.MailNotification.Subject {STA Summary}                                                    {# Mail subject}
bbset sta.sta.bb_summary.PostCmd.MailNotification.File {dashboard/sta_summary.mail.txt}                                 {# Default content }
bbset sta.metrics.folder_name        {dashboard}                                                      {# folder name for dashboard}
bbset sta.metrics.upload_folder      {uploaded_data}                                                  {# folder name for metrics generation}
bbset sta.metrics.run_name           {default_20250519_180357}                                        {# tag name for metrics}
bbset sta.metrics.maillist           {}                                                               {# user list to receive dashboard}
bbset sta.metrics.generate_dashboard.enable {True}                                                           {# enable STA block or not}
bbset sta.metrics.generate_dashboard.master_script {get_sta_summary.py}                                             {# main utility for dashboard generation}
bbset sta.metrics.generate_dashboard.file_lookip {save_rptx/save_rpt*/*{clock_tree/*cts_profile.summary.csv,path.m*csv,drv.m*csv,drv.glitch*csv,sspg*0p7*rcmax*ctv*csv,clock_si*csv,cellpin*rpt,path.detail*rpt,cellpin*rpt.gz,path.detail*rpt.gz}} {# reports regexp}
bbset sta.metrics.generate_dashboard.extra_options { --path_compress 1 --adaptive 1}                                {# extra option for uitlity}
bbset sta.metrics.generate_dashboard.options {  --dir [bbget .sta.metrics.folder_name]  --hier_map [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].vio_map.json  --slack_waiver  [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].waiver.vio_slack.json  --regex_waiver  [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].waiver.vio_regex.csv  --tech          [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].design_config.json   --timeout       150m   --stamp         [bbget .sta.metrics.run_name]  --stalog        ../.  --maillist      "[bbget .sta.metrics.maillist]"  --autoupload    "FALSE"                          [bbget .sta.metrics.generate_dashboard.file_lookip]  [bbget .sta.metrics.generate_dashboard.extra_options]} {# main options for utility}
bbset sta.metrics.generate_metrics.enable {True}                                                           {# enable STA block or not}
bbset sta.metrics.generate_metrics.master_script {sta_summary_metrics_upload.py}                                  {# main utility for metrics generation}
bbset sta.metrics.generate_metrics.options { --path [bbget .info.BOB_RUN_DIR]/sta/sta.bb_summary/[bbget .sta.metrics.folder_name] --project [bbget .info.CHIP] --tag [bbget .sta.metrics.run_name] --spin "stakey_\$(date +%s.%5N)"} {# main options for utility}
bbset sta.metrics.upload_metrics.enable {True}                                                           {# enable STA block or not}
bbset sta.metrics.upload_metrics.master_script {gchips-metrics-upload}                                          {# main uitlity for metrics upload}
bbset sta.metrics.upload_metrics.options {[bbget .info.BOB_RUN_DIR]/sta/sta.bb_summary/[bbget .sta.metrics.folder_name]/[bbget .sta.metrics.upload_folder]/[bbget .sta.metrics.run_name]} {# mail option for utility}
bbset sta.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/sta/CIA/checkers }                  {CIA checker search path for sta stage}
bbset sta.config.CIA.ConsolidateSummary {[bbget .info.BOB_RUN_DIR]/sta/sta.bb_summary/logs/cia.summary } {cia.summary path for Bob Audit System}
bbset sta.config.CIA.PocvmAnnotation.Enable {False}                                                          {Flag to enable checker or not}
bbset sta.config.CIA.PocvmAnnotation.FunctionMap {
                                      {CAD_1 CellSPMCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckParasiticAnnotated.FunctionMap {
                                      {PARA_1_13 CheckParasiticAnnotated}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.ClockPropagated.FunctionMap {
                                      {STA_1_17 AllClockPropagated }
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.UnresolvedReferences.FunctionMap {
                                      {LNK_1_8 UnresolvedReferences }
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckDontUsedCells.FunctionMap {
                                      {STA_2_26 CheckDontUsedCells }
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckLink.FunctionMap {
                                      {LNK_1_9 CheckLink}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckNoiseSettings.FunctionMap {
                                      {NOISE_1_49 CheckNoiseSettings}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.NoiseViolation.FunctionMap {
                                      {NOISE_1_50 NoiseViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckNoiseCoverage.FunctionMap {
                                      {NOISE_1_51 CheckNoiseCoverage}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.MaxTransitionViolation.FunctionMap {
                                      {STA_2_27 MaxTransitionViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.MaxCapacitanceViolation.FunctionMap {
                                      {STA_2_28 MaxCapacitanceViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.MinPulseAndMinPulseWidthViolation.FunctionMap {
                                      {STA_2_29 MinPulseAndMinPulseWidthViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.SetupViolation.FunctionMap {
                                      {STA_2_30 SetupViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.HoldViolation.FunctionMap {
                                      {STA_2_31 HoldViolation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckLog.FunctionMap {
                                      {STA_2_32 Error}
                                      {STA_2_33 Warning}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckLog.WarningInfo {[bbget .info.PD_TOOLS_DIR]/sta/lib/python/CodeFilter/warning.csv} {# No Comment}  
bbset sta.config.CIA.CheckSdcRead.FunctionMap {
                                      {STA_2_34 CheckSdcReadErrors}
                                      {STA_2_35 CheckSdcReadWarnings}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckTiming.FunctionMap {
                                      {STA_1_25 CheckTimingLoops}
                                      {STA_1_20 CheckTimingProcs}
                                      {STA_1_21 CheckTimingProcs}
                                      {STA_1_22 CheckTimingProcs}
                                      {STA_1_23 CheckTimingProcs}
                                      {STA_1_24 CheckTimingProcs}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckPocvAnnotation.FunctionMap {
                                      {STA_2_37 CheckPocvAnnotation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckParasiticLog.FunctionMap {
                                      {PARA_1_10 CheckParasiticLogError}
                                      {PARA_1_11 CheckParasiticLogWarning}
                                      {PARA_1_12 CheckParasiticLogAutoLocation}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckPTVersion.FunctionMap {
                                      {TOOL_1_6 CheckPTVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckMTBF.FunctionMap {
                                      {MTBF_1_53 CheckMTBF}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckFlatRun.FunctionMap {
                                      {LNK_1_7 CheckFlatRun}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.SynchronizerVtUsage.FunctionMap {
                                      {DOC_1_57 SynchronizerVtUsage}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.CheckClockSwing.FunctionMap {
                                      {STA_2_42 CheckClockSwing}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.Hyperscale.FunctionMap {
                                      {HS_1_72 Warning}
                                      {HS_1_73 Error}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.GoldenDerate.FunctionMap {
                                      {MISC_1_69 GoldenDerate}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.AMIS.FunctionMap {
                                      {STA_3_44 AMIS}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.ClockDivergence.FunctionMap {
                                      {STA_3_43 ClockDivergence}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.SignoffScenarios.GoldenFolder {[bbget .info.CHIP_DIR]/sta/checklist/signoffScenarios}          {# No Comment}  
bbset sta.config.CIA.SignoffScenarios.FunctionMap {
                                      {STA_2_38 SignoffScenarios}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.config.CIA.IRSTA.FunctionMap {
                                      {STA_6_47 IRStaSanityCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset sta.esa.nodes                  {pnr/placeopt pnr/clockopt}                                      {# Implement node the that this flow like to branch from}
bbset sta.config.proteus.enable      {[bbget .proteus.Enabled]}                                       {# No Comment}  
bbset sta.proteus.ProteusOptionFile  {}                                                               {# No Comment}  
bbset sta.proteus.InputDirPath       {[bbget .proteus.InputDirPath]}                                  {# No Comment}  
bbset sta.proteus.ConfigFile         {[bbget .proteus.ConfigFile]}                                    {# No Comment}  
bbset sta.proteus.OutputDirPath      {[bbget .proteus.OutputDirPath]}                                 {# No Comment}  
bbset sta.proteus.ATPGShiftClockPeriod {[bbget .proteus.ATPGShiftClockPeriod]}                          {# No Comment}  
bbset sta.proteus.PrtnClockName      {[bbget .proteus.PrtnClockName]}                                 {# No Comment}  
bbset sta.proteus.PrtnClockCycleTime {[bbget .proteus.PrtnClockCycleTime]}                            {# No Comment}  
bbset sta.proteus.PrtnClockDiv       {[bbget .proteus.PrtnClockDiv]}                                  {# No Comment}  
bbset sta.proteus.sdc_hook           {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/proteus/proteus_pt_signoff_sdc.tcl} {# No Comment}  
bbset sta.proteus.rpt_hook           {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/proteus/proteus_pt_signoff_report.tcl} {# No Comment}  
bbset sta.proteus.reset_derate_pattern {*hts_gen*_prtn_ht*}                                             {# No Comment}  
bbset sta.config.clock_divergence_check.enable {false}                                                          {# No Comment}  
bbset sta.config.clock_divergence_check.clock_div_check.enable {true}                                                           {# No Comment}  
bbset sta.config.clock_divergence_check.amis_check.enable {true}                                                           {# No Comment}  
bbset sta.config.clock_divergence_check.short_data_check.enable {false}                                                          {# No Comment}  
bbset sta.config.clock_divergence_check.Scenarios {*.ffgnp-NM-125-rcworst_ccworst *.ffgnp-USOD-125-rcworst_ccworst *.ffgnp-SOD-125-rcworst_ccworst *.ffgnp-OD-125-rcworst_ccworst} {# No Comment}  
bbset sta.config.clock_divergence_check.clock_divergence_table {
                                      {CORNER LOOP_DELAY CELL_DERATE NET_DERATE LONG_NET_MARGIN SHORT_NET_MARGIN BRANCH_DELAY DEPTH}
                                      {USOD 1.0 0.05 0.20 0.05 0.05 0.200 5}
                                      {SOD 1.1 0.05 0.20 0.05 0.05 0.200 5}
                                      {OD 1.2 0.05 0.20 0.05 0.05 0.200 5}
                                      {NM 1.3 0.05 0.20 0.05 0.05 0.200 5}
                                      } {# No Comment}  
bbset sta.config.clock_divergence_check.master_script {[bbget .info.PD_TOOLS_DIR]/sta/lib/tcl/clock_divergence_check/sswrp_clock_divergence.tcl} {# No Comment}  
bbset sta.config.clock_divergence_check.load_path_margin {False}                                                          {# No Comment}  
bbset scf.Gspan_cross_corner         {1}                                                              {To enable or disable cross corner at sswrp level}
bbset scf.gspan_iobudget_opt_mode    {1}                                                              {Low-accuracy runtime optimization mode for application of gSpan I/O budgets}
bbset scf.sdcCentralFiles            {0}                                                              {For Controlling SDC common files to be sourced from Local CONS_DIR dir/ Central Repo Based dir}
bbset scf.Enable_disable_timing      {0}                                                              {For flat STA disable timing arcs}
bbset scf.sswrp_internal_xv_lpcm_file {}                                                               {# No Comment}  
bbset scf.enable_sswrp_internal_xv   {0}                                                              {# No Comment}  
bbset sta.config.FlowSanityCheckIds  {STA_1_20 STA_1_22 STA_1_23 STA_1_24}                            {# No Comment}  
bbset sta.config.CIA.CheckPocv.UnannotationTolerance {0.001}                                                          {# No Comment}  
bbset sta.config.skew_check.enable   {True}                                                           {# No Comment}  
bbset sta.config.skew_check.block_name {[bbget info.BLOCK]}                                             {# No Comment}  
bbset scf.clock_jitter_default       {1.0}                                                            {Default jitter value in ns for clock entries missing in the central jitter spec}
bbset scf.clock_dcd_default          {1.0}                                                            {Default dcd value in ns for clock entries missing in the central jitter spec}
bbset scf.SCF_CODE_HOME              {/google/gchips/ipreleases/lajolla_scf/scf_code/LAJ_A0_M3/LAJ_A0_M3_05_Feb_V3_2025} {SCF BE Engine Path}
bbset scf.FUNC_CONSTRAINTS_HOME      {/google/gchips/ipreleases/lajolla_scf/func_common_constraints/LAJ_A0_M3/LAJ_A0_M3_21_APR_2025} {SCF Func Common Constraints Path}
bbset scf.DFT_CONSTRAINTS_HOME       {/google/gchips/ipreleases/lajolla_scf/dft_common_constraints/LAJ_A0_M3/LAJ_A0_M3_25_MAR_2025_REV1} {DFT common constraints refer: go/laj-dft-common-cons-update}
bbset scf.TECH_HOME                  {/google/gchips/ipreleases/lajolla_scf/tech_common_constraints/LAJ_A0_M3/LAJ_A0_M3_4_MAR_2025_REV3} {SCF Tech Constraints Path}
bbset scf.SOC_CONSTRAINTS_HOME       {/google/gchips/ipreleases/lajolla_scf/soc_constraints/LAJ_A0_M3/LAJ_A0_M3_20250424} {SOC Constraints Path}
bbset scf.common_constraints_override {0}                                                              {To override common constraints var}
bbset scf.xv_hop                     {0}                                                              {# No Comment}  
bbset sta.config.scf_custom_checker.enable {True}                                                           {# No Comment}  
bbset sta.config.scf_custom_checker.master_script {[bbget .scf.FUNC_CONSTRAINTS_HOME]/CustomChecks/mbu_custom_checks_sswrp.tcl} {#path}         
bbset sta.config.scf_custom_checker.scf_outs {./outs/scf_customer_checker}                                    {#output}       
bbset sta.config.check_post_repo_py.enable {FALSE}                                                          {# No Comment}  
bbset bottomup.Modes                 {}                                                               {List of bottomup runs to launch}
bbset vclp.Stages                    {syn.synth}                                                      {Stages at which to run vclp}
bbset vclp.EnableRules               {}                                                               {Add rules to be enabled}
bbset vclp.DisableRules              {}                                                               {Add rules to disabled}
bbset vclp.EnableAllRules            {}                                                               {Give 1 to enable al rules}
bbset vclp.WaiverFile                {}                                                               {Path to waiver file}
bbset vclp.GenerateExtraReports      {False}                                                          {To GenerateExtraReports}
bbset vclp.GenerateCustomReports     {0}                                                              {To GenerateCustomReports}
bbset vclp.BBDesigns                 {}                                                               {Designs to be blackboxed}
bbset vclp.BBCells                   {}                                                               {Cells to be blackboxed}
bbset vclp.EnableSaveSession         {1}                                                              {To save design at intermediate stages}
bbset vclp.UserDefinedBufferList     {}                                                               {Buffer list}   
bbset vclp.AnalyzeDefines            {}                                                               {AnalyzeDefines}
bbset vclp.SearchPath                {}                                                               {Search path}   
bbset vclp.CLPLogWaiverFile          {}                                                               {Path to the check_lp log waiver file}
bbset vclp.UPFReadWaiverFile         {}                                                               {Path to read upf log waiver file}
bbset vclp.FlattenRTLFileList        {0}                                                              {To flatten rtl filelist 1 --> for flattening}
bbset vclp.RTLSearchPath             {}                                                               {search path for rtl files}
bbset vclp.UPFParsingVars            {}                                                               {Way to set env vars for upf reading }
bbset vclp.LibListFile               {}                                                               {Path to lib list file}
bbset vclp.vclp.GoldenUPFFlow        {0}                                                              {This variable is for flow dont use it}
bbset vclp.syn.GoldenUPFFlow         {0}                                                              {To enable golden upf flow for syn}
bbset vclp.pnr.GoldenUPFFlow         {0}                                                              {To enable golden upf flow for pnr}
bbset vclp.MigrateWaivers            {0}                                                              {To enable migration of block level waivers to top}
bbset vclp.EnableSynIncrementalUPF   {0}                                                              {To enable reading synth incremental upf}
bbset vclp.EnablePnrIncrementalUPF   {0}                                                              {To enable reading pnr incremental upf}
bbset vclp.Res                       {}                                                               {Machine resource for Bob based vclp run}
bbset vclp.RAM                       {64000}                                                          {RAM for NC machine}
bbset vclp.Cores                     {8}                                                              {Cores for NC machine}
bbset vclp.GenerateMilestoneAuditReports {1}                                                              {To enable milestone report}
bbset vclp.EnableMultiThreading      {False}                                                          {To enable mulit threading}
bbset vclp.MultithreadingCores       {8}                                                              {No of cores for multi threading}
bbset vclp.EnableChecklistGeneration {0}                                                              {Enable checklist gen for rtl vclp runs}
bbset vclp.EnableReadingSAMModels    {0}                                                              {Enable reading sam verilog models for sub-blocks}
bbset vclp.SAMModels                 {}                                                               {This should be dictionary with block name and sam model directory}
bbset vclp.EnableSAMModelGeneration  {0}                                                              {To generate SAM model for the sub-block}
bbset vclp.VcsOpts                   {}                                                               {VCS Options for mixed language sv files}
bbset vclp.EnableCustomTags          {1}                                                              {To enable custom tags}
bbset vclp.DryRun                    {0}                                                              {To just create the run scripts}
bbset vclp.GenerateGlsAuditReports   {0}                                                              {Run Gls checks}
bbset vclp.ExtraLibs.libgen.ccs_db   {}                                                               {To add extralibs to the flow}
bbset vclp.rtl.RtlFileList           {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/inputs/ufs_top.vf} {Input RTL File List path}
bbset vclp.rtl.UPFFile               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/inputs/ufs_top.upf} {Input UPF File Path}
bbset vclp.rtl.MixedLanguageRtl      {0}                                                              {Enable MixedLanguageRtl}
bbset vclp.rtl.EnableSaveSession     {1}                                                              {Save checkpoint for Vclp}
bbset vclp.rtl.EnableLPInstrumentation {1}                                                              {Enable Rtl Vclp}
bbset vclp.rtl.GenerateCustomReports {1}                                                              {To GenerateCustomReports}
bbset vclp.rtl.EnableChecklistGeneration {1}                                                              {To EnableChecklistGeneration}
bbset vclp.synth.NetlistFile         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.v.gz} {synth netlist file path for vclp}
bbset vclp.synth.UPFFile             {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.upf} {Input UPF File Path}
bbset vclp.synth.GenerateGlsAuditReports {1}                                                              {Run Gls checks}
bbset vclp.synthdft.NetlistFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synthdft/outs/ufs_top.final.v.gz} {synth netlist file path for vclp}
bbset vclp.synthdft.UPFFile          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synthdft/outs/ufs_top.final.upf} {Input UPF File Path}
bbset vclp.synthdft.GenerateGlsAuditReports {1}                                                              {Run Gls checks}
bbset vclp.synthdftopt.NetlistFile   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synthdftopt/outs/ufs_top.final.v.gz} {synth netlist file path for vclp}
bbset vclp.synthdftopt.UPFFile       {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synthdftopt/outs/ufs_top.final.upf} {Input UPF File Path}
bbset vclp.synthdftopt.GenerateGlsAuditReports {1}                                                              {Run Gls checks}
bbset vclp.floorplan.NetlistFile     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/floorplan/outs/ufs_top.pg.v.gz} {floorplan netlist file path for vclp}
bbset vclp.floorplan.UPFFile         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/floorplan/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.floorplan.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/floorplan/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.placeopt.NetlistFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/placeopt/outs/ufs_top.pg.v.gz} {placeopt netlist file path for vclp}
bbset vclp.placeopt.UPFFile          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/placeopt/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.placeopt.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/placeopt/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.clock.NetlistFile         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clock/outs/ufs_top.pg.v.gz} {clock netlist file path for vclp}
bbset vclp.clock.UPFFile             {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clock/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.clock.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clock/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.clockopt.NetlistFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt/outs/ufs_top.pg.v.gz} {clockopt netlist file path for vclp}
bbset vclp.clockopt.UPFFile          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.clockopt.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.route.NetlistFile         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/route/outs/ufs_top.pg.v.gz} {route netlist file path for vclp}
bbset vclp.route.UPFFile             {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/route/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.route.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/route/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.routeopt.NetlistFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/outs/ufs_top.pg.v.gz} {routeopt netlist file path for vclp}
bbset vclp.routeopt.UPFFile          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.routeopt.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/routeopt/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.routeopt.GenerateGlsAuditReports {1}                                                              {Run Gls checks}
bbset vclp.chipfinish.NetlistFile    {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/chipfinish/outs/ufs_top.pg.v.gz} {chip finish netlist file path for vclp}
bbset vclp.chipfinish.UPFFile        {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/chipfinish/outs/ufs_top.upf} {Input UPF File Path}
bbset vclp.chipfinish.SynthIncrementalUPFFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/chipfinish/outs/ufs_top.synth.upf} {Synthesis UPF} 
bbset vclp.chipfinish.RunCIA         {1}                                                              {Run CIA audit checks}
bbset vclp.chipfinish.GenerateGlsAuditReports {1}                                                              {Run Gls checks}
bbset vclp.UploadToDashboard         {1}                                                              {to enable/disable updating results to dashboard}
bbset vclp.Comment                   {}                                                               {Comment for dashboard}
bbset vclp.RunName                   {}                                                               {RunName for dashboard}
bbset vclp.Spin                      {}                                                               {Project spin for dashboard}
bbset vclp.Tag                       {}                                                               {Tag for dashboard}
bbset vclp.StdLibraryFileInclude     {}                                                               {use to include Std libraries match this regep}
bbset vclp.StdLibraryFileExclude     {}                                                               {use to exclude Std libraries match this regep}
bbset vclp.MacroLibraryFileInclude   {}                                                               {use to include Macro libraries match this regep}
bbset vclp.MacroLibraryFileExclude   {}                                                               {use to exclude Macro libraries match this regep}
bbset vclp.RunCIA                    {0}                                                              {Set to 1 to enable running the CIA checks as part of the VCLP flow}
bbset vclp.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/vclp/CIA/checkers }                 {CIA checker search path for sta stage}
bbset vclp.config.CIA.ConsolidateSummary { [bbget .info.BOB_RUN_DIR]/vclp/cia.summary }                   {cia.summary path for Bob Audit System}
bbset vclp.config.CIA.vclpBlackbox.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpBlackbox.FunctionMap {
                                      {VCLP_01_01  vclpBlackboxAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpSessionTags.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpSessionTags.FunctionMap {
                                      {VCLP_02_01  vclpSessionTagsAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpReportsSize.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpReportsSize.FunctionMap {
                                      {VCLP_03_01  vclpReportsSizeAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpUpfTags.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpUpfTags.FunctionMap {
                                      {VCLP_04_01  vclpUpfTagsAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpClpTags.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpClpTags.FunctionMap {
                                      {VCLP_05_01  vclpClpTagsAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpLpRpt.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpLpRpt.FunctionMap {
                                      {VCLP_06_01  vclpLpRptAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpUpfLoaclpath.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpUpfLoaclpath.FunctionMap {
                                      {VCLP_07_01  vclpUpfLoaclpathAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset vclp.config.CIA.vclpSamModel.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset vclp.config.CIA.vclpSamModel.FunctionMap {
                                      {VCLP_08_01  vclpSamModelAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset wrap.Cores                     {8}                                                              {Number of reserve cores for nc command in bob wrap flow}
bbset wrap.Ram                       {50000}                                                          {Number of reserve memory for nc command in bob wrap flow}
bbset wrap.SetupScenarioByDataSource {False}                                                          {(Only used with --data_source) Use bob variable environment from data source to setup the scenarios. The scenarios are used to find bundles files related to mode, process, temp and rc}
bbset wrap.Block                     {ufs_top}                                                        {the default block name}
bbset wrap.BundleConfig              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/flow/wrap/bundles.yaml [file join [bbget .info.CAD_CHIP_DIR] wrap bundles.yaml]} {default wrap bundle yaml}
bbset wrap.CentralBundleConfig       {}                                                               {Central wrap bundle config yaml}
bbset wrap.CentralBucket             {False}                                                          {Option to use central wrap bucket config}
bbset wrap.NonRegressionRun          {1}                                                              {This is used to waived some required files for e2e regression runs. This will replace the required attribute in bundles.yaml}
bbset wrap.ExcludeHostNames          {.*-desktop-.*}                                                  {List of hostname patterns when checking the host}
bbset wrap.PDBundles                 { ant ant_patch applyeco auto_generate bumpdef bumpoverlay checklist chipfinish clock clockopt designin adfm drc drc_dfm drc-waivers dummyfill elaborate emir emir_and_dbs emir_and_eco emir_and_vector erc fc_applyeco fc_chipfinish fc_clock fc_clockopt fc_common fc_elaborate fc_floorplan fc_libgen fc_placeopt fc_route fc_routeopt fc_setup fc_synth fc_synthdft fc_synthdftopt fc_synthopt flipchip_bump floorplan flt info_bump innovus_common ipmerge lec lecv2v lecv2v_namemap_merge lecv2v_pnr_n2n lecv2v_syn_n2n lefvsgds libgen lvs mbist mpt pceco pdp pdpqa pdv perc perc_cd perc_cnod perc_ldl perc_p2p perc_topo pex placeopt postfix power pteco pushdown route routeopt routeoptdesign setup sram_check sta sta_and_eco_sessions sta_and_hyperscale sta_and_tweaker_dataprep sta_common sta_dvd sta_etm sta_gls_zero_delay sta_post_route sta_sdf synth synthdft testmax tweaker twkrprep twkrprep_aggr v2spi vclp_chipfinish vclp_common vclp_rtl vclp_synth vclp_synthdft xor } {# list of bundle names that belongs to PD integration}
bbset wrap.TargetMailRules           {}                                                               {Rules to send out mail to the Mail-id provided when any of the target meet the regexp pattern. Format: <p_1> <mailid_1> <p_2> <mailis_2> .... Ex: { all redondo-pd-release@google.com soc.* redondo-pd-release@google.com}}
bbset wrap.TargetLevels              {soc sswrp cad}                                                  {# No Comment}  
bbset wrap.TargetDomains             {synth synthdft pnr pdv sta emir power vclp lec}                 {# No Comment}  
bbset wrap.FlagNames                 {M2_EXIT M3_EXIT M4_EXIT BTO MTO}                                {Valid Flag names for wrap --action flag --flag}
bbset wrap.FlagRequiredBundles       {}                                                               {Required bundles when wrap --action flag --flag}
bbset wrap.SkipUnexpectedFiles       {False}                                                          {Skip upload those files with unexpected naming. Take effect only when give action is used}
bbset wrap.Process                   {8}                                                              {# Number of parallel process for heavy loaded steps}
bbset wrap.TargetToBundleRules       {
                                      {{all soc.sta soc.emir soc.vclp soc.lec} exclude {sta_common sta_etm sta_dvd sta_gls_zero_delay sta_sdf sta_and_sessions sta_and_tweaker_dataprep sta_and_hyperscale sta_session_for_pwrest sta_post_route} {Target includes soc target, 'sta' is expected for top integration. Please check with soc team to see what bundles should be released. Or use 'sswrp.*' target for sswrp level release}}
                                      } {# Rules to check the relationship between target and bundles: <targets> <operation> <specified_bundles> <comment>}
bbset wrap.BundleToAuditRules        {}                                                               {# Rules to check relationship between bunlde and audit check result. Example: {{bundle_patterns} {<audit_check_ids>}} }
bbset wrap.TargetRepoVersion         {}                                                               {# current repo version used by bundle should be larger than any of the version specified in order to release}
bbset wrap.TargetRepoVersionBundles  {[bbget .wrap.PDBundles]}                                        {# list of bundle names that target the repo version check}
bbset wrap.AuditDashboardUrl         {https://dashboards.corp.google.com/_c1cb9b78_6c45_476a_bb9e_0b5e87ac8a5a} {# Url to audit dashboard}
bbset wrap.IpReleaseDisks            {gchips-cad-pd-ipreleases {mount_path /google/gchips/ipreleases/cad_pd}
                                      cad-pd-waihona-ipreleases {mount_path /google/gchips/ipreleases/cad_pd_waihona} yuhina-ipreleases         {mount_path /google/gchips/ipreleases/yuhina}
                                      laj-ipreleases            {mount_path /google/gchips/ipreleases/lajolla}
                                      laj-3pip-ipreleases       {mount_path /google/gchips/lib/3pip/lajolla}
                                      laj-aoss-ipreleases       {mount_path /google/gchips/ipreleases/lajolla_aoss}
                                      laj-codec-ipreleases      {mount_path /google/gchips/ipreleases/lajolla_codec}
                                      laj-cpu-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_cpu}
                                      laj-dh-techm-ipreleases   {mount_path /google/gchips/ipreleases/lajolla_dh_techm}
                                      laj-dh-techm1-ipreleases  {mount_path /google/gchips/ipreleases/lajolla_dh_techm1}
                                      laj-dpu-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_dpu}
                                      laj-fabrics-ipreleases    {mount_path /google/gchips/ipreleases/lajolla_fabrics}
                                      laj-gcv-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_gcv}
                                      laj-gmc-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_gmc}
                                      laj-gpu-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_gpu}
                                      laj-hsio-ipreleases       {mount_path /google/gchips/ipreleases/lajolla_hsio}
                                      laj-ispbe-ipreleases      {mount_path /google/gchips/ipreleases/lajolla_ispbe}
                                      laj-ispfe-ipreleases      {mount_path /google/gchips/ipreleases/lajolla_ispfe}
                                      laj-memss-ipreleases      {mount_path /google/gchips/ipreleases/lajolla_memss}
                                      laj-pim-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_pim}
                                      laj-security-ipreleases   {mount_path /google/gchips/ipreleases/lajolla_security}
                                      laj-soc-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_soc}
                                      laj-tpu-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_tpu}
                                      laj-mau-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_mau}
                                      laj-scf-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_scf}
                                      laj-csr-ipreleases        {mount_path /google/gchips/ipreleases/lajolla_csr}} {# list of Bucket name to mount_path mapping}
bbset wrap.BundleAlias               {
                                      fc_elaborate        elaborate
                                      fc_synth            synth
                                      fc_synthopt         synthopt
                                      fc_synthdftopt      synthdftopt
                                      fc_floorplan        floorplan
                                      fc_synthdft         synthdft
                                      fc_libgen           libgen
                                      fc_setup            setup
                                      fc_placeopt         placeopt
                                      fc_clock            clock
                                      fc_clockopt         clockopt
                                      fc_route            route
                                      fc_routeopt         routeopt
                                      fc_applyeco         applyeco
                                      fc_chipfinish       chipfinish
                                      pdv                 drc
                                      pdv                 lvs
                                      pdp                 ipmerge
                                      pdp                 dummyfill
                                      pdp                 v2spi
                                      emir_and_dbs        emir
                                      emir_and_inputs     emir
                                      emir_all            emir
                                      sta_etm             sta
                                      sta_dvd             sta
                                      sta_and_sessions    sta
                                      sta_and_tweaker_dataprep sta
                                      sta_and_hyperscale  sta
                                      sta_for_top_integration sta
                                      sta_common          sta
                                      } {Rules to map one bundle name to another, which means that the original bunlde name will be treated the same as new bundle name. Format: <b_name_1> <b_name_new_1> <b_name_2> <b_name_new_2> ...}
bbset wrap.Tool.Options              {}                                                               {Tool options}  
bbset wrap.Tool.Give.Options         {}                                                               {Default give command options}
bbset wrap.Tool.Give.Waihona.Options {--recursive --alsologtostderr --quiet --debug}                  {Options for waihona give command}
bbset wrap.Tool.GiveSoftLink.Options {}                                                               {Default give command options}
bbset wrap.Tool.GiveSoftLink.Waihona.Options {--recursive --alsologtostderr --quiet --debug}                  {Options for waihona give command}
bbset wrap.Tool.Retire.Options       {}                                                               {Default retire command options}
bbset wrap.Tool.Retire.Waihona.Options {--quiet}                                                        {Options for waihona retire command}
bbset wrap.Tool.CopyTag.Options      {}                                                               {Default give command options}
bbset wrap.Tool.CopyTag.Waihona.Options {--recursive --alsologtostderr --quiet --debug}                  {Options for waihona give command}
bbset wrap.Tool.ToolErrors           {
                                      {^\\s*Error {}}
                                      {^\\s*ERROR {}}
                                      {CTRL-C {}}
                                      {Ctrl-C {}}
                                      {ctrl-C {}}
                                      {{Waihona manifest already exists} {}}
                                      {{No Waihona configuration was specified} {Please open a new terminal and check WAIHONA_CONFIG environment is been setup}}
                                      } {List of regexps and message pair to catch waihona/upload-ip Error message}
bbset wrap.Tool.ToolWaivers          {
                                      {{^\\s*ERROR} {WRAP: Above ERROR can be ignored}}
                                      {{^\\s*Error} {WRAP: Above ERROR can be ignored}}
                                      {{ERROR: .* does not have storage.objects.delete access} {WRAP: Above ERROR can be ignored}}
                                      {{ERROR: gcloud storage errors were found .* uploaded successfully} {WRAP: Above ERROR can be ignored}}
                                      {{ERROR: Temporary components were not uploaded correctly} {WRAP: Above ERROR can be ignored}}
                                      {{ERROR: HTTPError 503} {WRAP: Above ERROR can be ignored}}
                                      {\\s+non-fatal {WRAP: Above non fatal issue can be ignored}}
                                      } {List of regexps and message pair to waive waihona/upload-ip Error message}
bbset wrap.summary.IpReleaseDisk     {/google/gchips/ipreleases/}                                     {# Path of iprelease path to glob for manifest file}
bbset wrap.summary.SummaryDashboardUrl {https://dashboards.corp.google.com/_ba82c055_bfd6_4380_9bd7_0e84d2ca8874} {# Url to summary dashboard}
bbset wrap.summary.Bundles           {}                                                               {# List of bundle names that check the existance when generating reports}
bbset wrap.summary.Targets           {all}                                                            {# List of must have tag names when searching for latest tag}
bbset wrap.summary.LatestRequiredBundles {}                                                               {# List of must have bundle names when searching for latest tag}
bbset wrap.summary.BlockTags         {}                                                               {# List of block and tags in sequence to check the bundles. Ex: block1 tag1 block2 tag2}
bbset wrap.summary.TargetRepoVersions {}                                                               {# bundle repo version should larger than any of this target}
bbset wrap.summary.SubBlocksTraceLevel {1}                                                              {# number of level when tracing for subblock tags}
bbset wrap.summary.ManifestFilesMismatchCheckEnable {1}                                                              {# 0|1(default). Switch to enable file mismatch check from manifest file record}
bbset wrap.summary.ManifestFilesMismatchCheckIgnore {0}                                                              {# 0(default)|1. Option to treat bundle as valid even there is file mismatch from manifest file record}
bbset wrap.summary.BundleConfigRequireFilesCheckEnable {1}                                                              {# 0|1(default). Switch to check if the current bundle config required file definition is missing in released bundle}
bbset wrap.summary.BundleConfigRequireFilesCheckIgnore {0}                                                              {# 0(default)|1. Option to treat bundle as valid even there is bundle config required file inconsistency}
bbset wrap.summary.RequiredFilesCheckEnable {0}                                                              {# 0(default)|1. Switch to enable actual releases required files existency based on current repo bundle definition. This will only be executed only when BundleConfigRequireFilesCheck failed on non scenario related files definition}
bbset wrap.summary.RequiredFilesCheckIgnore {0}                                                              {# 0(default)|1. Option to treat bundle as valid even the releases required files existency based on current repo bundle definition check fail}
bbset wrap.summary.MailNotification.Enable {0}                                                              {1|0(default). Enable MailNotification feature or not}
bbset wrap.summary.MailNotification.Users {}                                                               {List of users that receieved mail}
bbset wrap.summary.MailNotification.Subject {\[WRAP\] Block tag bundle release summary dashboard}            {Subject for wrap summary mail}
bbset wrap.summary.MailNotification.File {./wrap_summary.html}                                            {File to get the email content}
bbset gls.Modes                      {power dft}                                                      {# Different simulation modes: power, dft}
bbset gls.CurrMode                   {}                                                               {# Current Mode, this is set for bob node locally. User should not set this variable}
bbset gls.config.power.Tool          {gls}                                                            {# Tool for power simulation: gls|gcrun. gls will deprecate in the future}
bbset gls.config.power.gls.Config_File {}                                                               {# Config file for the gls command to specify the initial options. Map to -c option}
bbset gls.config.power.gls.repo.Repo_Creation {}                                                               {# Specify if repo creation is required or not, True(default),False}
bbset gls.config.power.gls.repo.Repo_Url {}                                                               {# IP specific path to source the manifest file for repo creation}
bbset gls.config.power.gls.repo.Repo_Branch {}                                                               {# branch of the repo. master(default)}
bbset gls.config.power.gls.repo.Git_Creation {}                                                               {# Specify if git creation is required or not, True,False(default)}
bbset gls.config.power.gls.repo.Git_Url {}                                                               {# IP specific path to source the project files for git repo creation}
bbset gls.config.power.gls.repo.Git_Branch {}                                                               {# branch of the git master(default)}
bbset gls.config.power.gls.repo.Git_Clone_Dir {}                                                               {# clone the git repo in a specific directory}
bbset gls.config.power.gls.repo.EnvSetup_Path {}                                                               {# relative IP specific path to source the envsetup script}
bbset gls.config.power.gls.repo.Dk_Version {}                                                               {# Lassen DK_VERSION}
bbset gls.config.power.gls.repo.Dk_Path {}                                                               {# absolute Lassen DK_PATH}
bbset gls.config.power.gls.repo.Nc_Run {}                                                               {# enable/disable nc_run True(default),False}
bbset gls.config.power.gls.repo.Nc_Run_Param {}                                                               {# if nc_run enabled, specify the parameters with which you want to run the nc job}
bbset gls.config.power.gls.repo.Modules {}                                                               {# load extra modules required for setup}
bbset gls.config.power.gls.features.Sim_Type {}                                                               {# select the simulation type from: rtl(default), zero, unit, sdf, part}
bbset gls.config.power.gls.features.Simulator {}                                                               {# select the Simulator from ius(default), vcs}
bbset gls.config.power.gls.features.Func_Type {}                                                               {# select the function type from nonpg(default), pg}
bbset gls.config.power.gls.features.Fsdb {}                                                               {# enable/disable fsdb dumping True,False(default)}
bbset gls.config.power.gls.features.Nrf_Gen {}                                                               {# enable/disable nrf generation True,False(default)}
bbset gls.config.power.gls.features.Twrap {}                                                               {# timing wrapper generation for SDF sims True,False(default)}
bbset gls.config.power.gls.features.Tarmac {}                                                               {# enable/disable Trace Log True,False(default)}
bbset gls.config.power.gls.features.Pvt_Corner {}                                                               {# select the Process, Voltage and Temperature corner}
bbset gls.config.power.gls.features.Delay_Corner {}                                                               {# select the delay corner from min(default), max}
bbset gls.config.power.gls.files.Netlist {}                                                               {# Relative IP specific filepath where the Netlist has to be}
bbset gls.config.power.gls.files.Netlist_FileList {}                                                               {# List of files from where the Netlist has to be used}
bbset gls.config.power.gls.files.Top_Module_Name {}                                                               {# TOP module name}
bbset gls.config.power.gls.files.Sdf_FileList {}                                                               {# Files required for sdf simulation}
bbset gls.config.power.gls.files.Iodelay_File {}                                                               {# Path for io delay csv file}
bbset gls.config.power.gls.files.Top_Module_File {}                                                               {# Path for top level module file}
bbset gls.config.power.gls.files.RunDir {}                                                               {# relative path to file from where the compile and run commands have to be executed}
bbset gls.config.power.gls.files.Compilelogdir {}                                                               {# relative path from to compile log directory}
bbset gls.config.power.gls.files.Runlogdir {}                                                               {# relative path from RUNDIR to run log directory}
bbset gls.config.power.gls.files.Regress_List {}                                                               {# absolute path to file which has List of tests and the specific parameters set for each of them}
bbset gls.config.power.gls.arguments.Compile_Args {}                                                               {# List of compile time arguments that will be appended to the compilation command}
bbset gls.config.power.gls.arguments.Run_Args {}                                                               {# List of run time arguments that will be appended to the run command}
bbset gls.config.power.gls.OutputVectorName {*.fsdb}                                                         {# Default='*.fsdb'. Use this variable to glob the output vector automatically. Will glob vector name from
                                                                                                    #- gc_run: {bob_run_dir}/run_gc/{vector_name}*/out/
                                                                                                    #- gls: {bob_run_dir}/{files_run_dir}/{files_runlog_dir}/{regress_runlog_dir}/
                                                                                                    }
bbset gls.config.power.gcrun.Dv_Repo_Top {}                                                               {# Path to DV REPO_TOP. If not specified, use Exec_Tests_Files path to trace back the DV repo top}
bbset gls.config.power.gcrun.Exec_Tests_Files {}                                                               {# Specify python test list file to exec. Map to -x option}
bbset gls.config.power.gcrun.Filter_Tests {}                                                               {# Regex used to filter test by test. Map to -f option}
bbset gls.config.power.gcrun.Type    {}                                                               {# Test type (mini, nightly, etc) to set default. Map to -p option}
bbset gls.config.power.gcrun.Runo    {}                                                               {# Run phase options}
bbset gls.config.power.gcrun.Lsf_Rsrc {}                                                               {# List of addition LSF resource requirements}
bbset gls.config.power.gcrun.Dv_Exe_Mode {}                                                               {# dv_exe_mode} 
bbset gls.config.power.gcrun.Disable_Dv_Exe {}                                                               {# Disables the specified mode, modifying the build name}
bbset gls.config.power.gcrun.ExeTool {}                                                               {# Name of simulator to run}
bbset gls.config.power.gcrun.Tcl     {}                                                               {# Path to tcl script file for simulator}
bbset gls.config.power.gcrun.Fsdb    {True}                                                           {# True(default)|False, enable/disable fsdb dumping True,False(default)}
bbset gls.config.power.gcrun.No-BigStore-Upload {False}                                                          {# True|False(deafult), enable/disable no bigStore uploading}
bbset gls.config.power.gcrun.No-FireStore-Status-Upload {False}                                                          {# True|False(deafult), enable/disable no fireStore uploading}
bbset gls.config.power.gcrun.Run_Args {}                                                               {# List of run time arguments that will be appended to the run command}
bbset gls.config.power.gcrun.Netlist {}                                                               {# List of netlist to be used. Please note that you should specify all the netlist for all the block for your IPs to do the simulation. This will create new netlist file to overwite the file list defined in .subst_var.Netlist_FileList}
bbset gls.config.power.gcrun.subst_var.Netlist_FileList {}                                                               {# List of files from where the Netlist has to be used}
bbset gls.config.power.gcrun.subst_var.Part_Mod_Name {}                                                               {# The module name present inside the particular module file list}
bbset gls.config.power.gcrun.subst_var.Mod_Name {}                                                               {# Defines the top level module name present as per the IP file list. Used to identify the filelist}
bbset gls.config.power.gcrun.subst_var.Lib_Add {}                                                               {# Additional libraries to be added}
bbset gls.config.power.gcrun.subst_var.Lib_List {}                                                               {# Path to additional libraries to be taken}
bbset gls.config.power.gcrun.subst_var.User_Lib_Filelist {[bbget .info.BOB_RUN_DIR]/gls/gls.power.gcrun/lib_filelist}     {# dump path for new library filelist}
bbset gls.config.power.gcrun.subst_var.User_Netlist_Filelist {[bbget .info.BOB_RUN_DIR]/gls/gls.power.gcrun/netlist_filelist} {# dump path for new netlist filelist}
bbset gls.config.power.gcrun.subst_var.Nrf_Generation {}                                                               {# yes|no. generation of mem deposits, can be skipped if already generated}
bbset gls.config.power.gcrun.OutputVectorName {*.fsdb}                                                         {# Default='*.fsdb'. Use this variable to glob the output vector automatically. Will glob vector name from
                                                                                                    #- gc_run: {bob_run_dir}/run_gc/{vector_name}*/out/
                                                                                                    #- gls: {bob_run_dir}/{files_run_dir}/{files_runlog_dir}/{regress_runlog_dir}/
                                                                                                    }
bbset gls.config.power.gcrun.PostDvRepoEnvSetupCallback {}                                                               {# Callback after DV Repo Env. Setup}
bbset gls.config.power.vectorConfig.VectorName {}                                                               {# vector name} 
bbset gls.config.power.vectorConfig.VectorPath {}                                                               {# vector file path}
bbset gls.config.power.vectorConfig.VectorType {}                                                               {# something like rtl or non-true-time-gls or true-time-gls}
bbset gls.config.power.vectorConfig.RtlNameMapFile {}                                                               {# name map file in case of rtl vector}
bbset gls.config.power.vectorConfig.StripPath {}                                                               {# vector strip path}
bbset gls.config.power.vectorConfig.InstancePath {}                                                               {# vector annotate to which instance path}
bbset gls.config.power.vectorConfig.ModuleName {}                                                               {# vector annotate to which Module Name}
bbset gls.config.power.vectorConfig.StartTime {}                                                               {# start-time}  
bbset gls.config.power.vectorConfig.EndTime {}                                                               {# end-time}    
bbset gls.config.power.vectorConfig.ValidStartTime {}                                                               {# start-time of the overall valid range of the vector}
bbset gls.config.power.vectorConfig.ValidEndTime {}                                                               {# end-time of the overall valid range of the vector}
bbset gls.config.power.vectorConfig.ScalingComboPower {}                                                               {# combination power scaling by * 1+<ratio>}
bbset gls.config.PreExecuteCallback  {}                                                               {# Callback pre simulation executation}
bbset gls.config.PostExecuteCallback {}                                                               {# Callback post simulation executation}
bbset eco.Tool                       {tweaker}                                                        {Available: pteco, tweaker(default), pceco}
bbset pteco.Res                      {CORES/32 RAM/48000 License:PrimeTime#1}                         {Default resources required}
bbset pteco.DryRun                   {0}                                                              {set to 1 for a dry-run}
bbset pteco.TOP_CELL_NAME            {[bbget ".info.BLOCK"]}                                          {Top cell name} 
bbset pteco.ECO_DESIGN_LIST          {[concat [bbget ".pteco.TOP_CELL_NAME"] [bbfiles -legacy_mode subblocks -block [bbget ".pteco.TOP_CELL_NAME"]]]} {List of designs for ECO. By default, the top cell and all subblocks are included}
bbset pteco.STA_RUN_DIR              {[ bbfiles -bundles sta_and_sessions -block [ bbget ".pteco.TOP_CELL_NAME" ] -filetype sta4pteco ]} {STA run directory. We will restore saved sessions for named scenarios from here. It points to .info.BOB_RUN_DIR/sta as default}
bbset pteco.STA_SESSION_NAME         {session.pocvm}                                                  {Name of saved session}
bbset pteco.VERSION_INDEPENDENT_SESSIONS {0}                                                              {Set to 1 if the saved sessions are version-independent}
bbset pteco.PHYSICALLY_AWARE_ECO     {1}                                                              {ECOs are physically-aware by default}
bbset pteco.DEF_FILE                 {[bbfiles -bundles chipfinish -filetype def -purpose pex -hierarchy]} {List of DEF files for top block and all subblocks. Required for physically aware ECOs}
bbset pteco.TECH_LEF                 {}                                                               {Tech lef file} 
bbset pteco.TRACK_LIST               {[bbget .Track]}                                                 {Track list for lef list generation}
bbset pteco.LEF_FILE                 {}                                                               {OPTIONAL: If empty, will use BoB to generate LEF File List}
bbset pteco.ADDITIONAL_LEF_FILE      {}                                                               {all lef files added to this list will be append to the generated LEF File List}
bbset pteco.CONVERT_SITE_MAPPING     {[bbget "eco.SiteNameMapping"]}                                  {Site-name mapping for FC blocks}
bbset pteco.MISSING_LEF_LIST         {}                                                               {List of blocks for which missing LEFs will be ignored when building the physical database. WARNING: Using this option will very likely result in cell overlaps being vreated by PTECO. USE AT YOUR OWN RISK!!!}
bbset pteco.VOLTAGE_AREA_FILE        {}                                                               {File containing create_voltage_area commands to be applied during PTECO. Only ONE file  for the TOP_CELL_NAME can be specified. }
bbset pteco.LEAKAGE_SWAP_PATTERN     {SVT LVTLL LVT ULVTLL ULVT ELVT}                                 {priority-based swap pattern for non-powermode leakage eco}
bbset pteco.ENABLE_MIXED_TRACK       {0}                                                              {Reading of mixed-track LEFs is disabled by default for PTECO.}
bbset pteco.EARLY_START_ENABLE       {0}                                                              {When set to 1, looks for lib_map files only rather than an STA task completion file}
bbset pteco.EARLY_START_VSUFFIX      {}                                                               {Voltage-name suffix per scenario in list-of-list form. Each suffix must include the leading dot/period}
bbset pteco.ML_TRAINING_DIR          {}                                                               {PTECO training data directory for the block. Also set PBA_MODE_POWER ml_exhaustive}
bbset pteco.LEAKAGE_CHEAT_SHEET      {/google/gchips/ipreleases/lajolla/cad_pd_waihona/eco/leakage_cheatsheet/n2p_v0.9_2025-01-21/leakage_cheatsheet_0p75v_85c_typical_mem_updated.rpt} {Leakage cheat sheet for Alex leakage recovery flow}
bbset pteco.TIMING_CHEAT_SHEET       {/google/gchips/ipreleases/lajolla/cad_pd_waihona/eco/leakage_cheatsheet/n2p_v0.9_2025-01-21/All_lib_arc_delay_models.rpt} {Timing cheat sheet for Alex leakage recovery flow}
bbset pteco.ADDL_PYTHON_LIB          {/google/gchips/tools/third_party/cbc/Cbc-2.10.5/}               {Additional python libaries used in Alex flow}
bbset pteco.ECO_METHOD_MTT           {size_cell insert_buffer}                                        {AVAIL: size_cell  insert_buffer}
bbset pteco.ECO_METHOD_MAX_CAP       {size_cell insert_buffer}                                        {AVAIL: size_cell  insert_buffer}
bbset pteco.ECO_METHOD_MAX_FANOUT    {size_cell insert_buffer}                                        {AVAIL: size_cell  insert_buffer}
bbset pteco.ECO_METHOD_SETUP         {size_cell_side_load size_cell insert_buffer}                    {AVAIL: size_cell_side_load  size_cell  insert_buffer}
bbset pteco.ECO_METHOD_HOLD          {size_cell insert_buffer_at_load_pins}                           {AVAIL: size_cell  insert_buffer_at_load_pins}
bbset pteco.ECO_METHOD_POWER         {powermode}                                                      {AVAIL: powermode  leakagesizing  leakagepattern  arearecovery}
bbset pteco.ECO_METHOD_CLOCK_DATA    {size_cell insert_inverter_pair}                                 {AVAIL: size_cell  insert_buffer}
bbset pteco.ECO_METHOD_DELTA_DELAY   {size_cell insert_buffer}                                        {AVAIL: size_cell  insert_buffer}
bbset pteco.ECO_METHOD_NOISE         {size_cell insert_buffer}                                        {AVAIL: size_cell  insert_buffer}
bbset pteco.ECO_METHOD_MAX_TRANS_CLOCK {size_cell insert_inverter_pair}                                 {AVAIL: size_cell  insert_inverter_pair}
bbset pteco.ECO_METHOD_ALEX          {[bbget .info.PD_TOOLS_DIR]/eco/pteco/alex_leakage/ALEX.tcl}     {Alex leakage script path}
bbset pteco.ECO_ORDER_AND_METHODS    {{MTT:         [bbget ".pteco.ECO_METHOD_MTT"]} {DELTA_DELAY: [bbget ".pteco.ECO_METHOD_DELTA_DELAY"]} {SETUP:       [bbget ".pteco.ECO_METHOD_SETUP"]} {HOLD:        [bbget ".pteco.ECO_METHOD_HOLD"]}} {Ordered list of ECO operations and methods for each operation using the syntax <ECOopeartion>: <listOfMethods>}
bbset pteco.PATTERN_BASED_POWER_RECOVERY {0}                                                              {Pattern-based power recovery is disabled by default}
bbset pteco.LEAKAGE_AWARE_TIMING     {0}                                                              {Leakage-aware timing is enabled by default. Please not that this will use PrimePower licenses}
bbset pteco.DELTA_DELAY_THRESHOLD    {0.030}                                                          {REQUIRED if doing Delta-delay based DRC fixing. Must be a positive number}
bbset pteco.PBA_MODE                 {path}                                                           {'none' | 'path' | 'exhaustive'}
bbset pteco.PBA_MODE_POWER           {path}                                                           {'none' | 'path' | 'exhaustive' | 'ml_exhaustive'}
bbset pteco.ENABLE_HYPERTRACE        {0}                                                              {set to 1 for pba mode exhaustive based power recovery}
bbset pteco.PHYSICAL_MODE            {open_site}                                                      {"open_site"/"occupied_site" or "freeze_silicon" for Metal-only ECO}
bbset pteco.FOOTPRINT_AWARE_ECO      {0}                                                              {Footprint-aware ECOs; disabled by default}
bbset pteco.INSERTION_SEARCH_DIST    {}                                                               {Integer. Specifies the max distance that ECO commands search for open sites for buffer insertion, expressed as a multiple of the site row height}
bbset pteco.CONTINUE_ON_MISSING_PAD_SITE {1}                                                              {Set to 0 to issue error if missing LEF SITE definition encountered. This variable ONLY APPLICABLE IF USING R-2020.09-SP5-2 }
bbset pteco.BOUNDARY_DONT_TOUCH      {1}                                                              {By default we set dont_touch on cells and nets connected to IO ports. This is deprecated. for DRC fixing use the YIELD_BOUNDARY_DONT_TOUCH}
bbset pteco.ALLOW_SEQUENTIAL_SIZING  {0}                                                              {By default we do NOT size sequential cells}
bbset pteco.FALSE_PATH_IO            {1}                                                              {By default we do NOT set false_path from/to non-clock IO ports}
bbset pteco.HOLD_MARGIN              {0}                                                              {Global hold margin; zero by default}
bbset pteco.SETUP_MARGIN             {0}                                                              {Global setup margin; zero by default}
bbset pteco.POWER_SETUP_MARGINS      {}                                                               {Per-scenario setup margins for power optimization.}
bbset pteco.SETUP_FIX_USER_OPTIONS   {}                                                               {User options for the fix_eco_timing command. If specified, these will override ALL the flow default settings for path_selection_options. e.g. -path_selection_options "-start_end_type reg_to_reg -pba_mode exhaustive -delay_type max -max_paths 2000000"  -  EXPERT USE ONLY}
bbset pteco.HOLD_FIX_USER_OPTIONS    {}                                                               {User options for the fix_eco_timing command. If specified, these will override ALL the flow default settings for path_selection_options. e.g. -path_selection_options "-start_end_type reg_to_reg -pba_mode exhaustive -delay_type min -max_paths 2000000"  -  EXPERT USE ONLY}
bbset pteco.POST_ECO_RESET_DERATE    {0}                                                              {Reset whole design derate after eco, before saving post-eco session}
bbset pteco.PRE_ECO_REPORTS          {1}                                                              {Pre-eco  reports enabled by default}
bbset pteco.POST_ECO_REPORTS         {1}                                                              {Post-eco reports enabled by default}
bbset pteco.QOR_REPORTS              {0}                                                              {Pre- and Post-ECO QOR reports are disabled by default}
bbset pteco.AGGRESSIVE_LEAKAGE       {0}                                                              {Runs two step leakage recovery first leakage followed by total power recovery}
bbset pteco.SAIF_FILE                {}                                                               {Saif file for dynamic power recovery}
bbset pteco.STRIP_PATH               {}                                                               {Strip path for Saif}
bbset pteco.PRE_ECO_SESSIONS         {1}                                                              {Saving of Pre-ECO  sessions is enabled by default. Set to 0 to disable}
bbset pteco.POST_ECO_SESSIONS        {1}                                                              {Saving of Post-ECO sessions is enabled by default. Set to 0 to disable}
bbset pteco.PATH_GROUP               {}                                                               {Target path groups; all path groups enabled if nul}
bbset pteco.TARGET_ENDPOINT_FILE     {}                                                               {File listing target endpoints for ECO fixing}
bbset pteco.MIM_MERGE_ECO            {true}                                                           {MIM merging enabled by default}
bbset pteco.MIM_GROUP                {}                                                               {MIM group name}
bbset pteco.BATCH_MODE               {1}                                                              {Launch DMSA runs on remote workers by default}
bbset pteco.DMSA_LICENSE_MODE        {core}                                                           {DMSA License mode. Default is "core". Set to "scenario" for scenario-based license which uses additional licenses}
bbset pteco.NUM_CORES_PER_SCENARIO   {16}                                                             {32 cores correspond to one PT license; hence be mindful of that when increasing core count}
bbset pteco.MEM_PER_SCENARIO         {48000}                                                          {Updated memory from 32GB to 48GB per scenario/worker}
bbset pteco.GEN_EDI_ECO              {1}                                                              {By default, change-list is also written out in Encounter/Innovus format}
bbset pteco.PRE_PHYSICAL_HOOK        {}                                                               {Pre-hook TCL file is sourced in the master DMSA sesion before loading physical information}
bbset pteco.PRE_HOOK                 {}                                                               {Pre-hook  TCL file is sourced in the master DMSA sesion before running any fix_eco_ commands}
bbset pteco.POST_HOOK                {}                                                               {Post-hook TCL file is sourced in the master DMSA sesion after running any fix_eco_ commands}
bbset pteco.USER_SCRIPTS_DIR         {}                                                               {Directory for user-pre-hook files. These are sourced in each worker session for the related fix_eco_ command }
bbset pteco.UNFIXED_REPORT_DRC       {100000}                                                         {Num. unfixed endpoints to report for DRC violations (MTT, MAX_CAP, MAX_FANOUT)}
bbset pteco.UNFIXED_REPORT_SETUP     {100000}                                                         {Num. unfixed endpoints to report for setup.}
bbset pteco.UNFIXED_REPORT_HOLD      {100000}                                                         {Num. unfixed endpoints to report for hold.}
bbset pteco.UNFIXED_REPORT_DELTA_DELAY {100000}                                                         {Num. unfixed endpoints to report for delta-delay drc.}
bbset pteco.UNFIXED_REPORT_NOISE     {100000}                                                         {Num. unfixed endpoints to report for noise.}
bbset pteco.UNFIXED_REPORT_POWER     {100000}                                                         {Num. reasons to report why cells are unusable for power eco.}
bbset pteco.UNFIXED_REPORT_VMIN      {50}                                                             {Num. unfixed endpoints to report for vmin.}
bbset pteco.ECO_DEBUG                {0}                                                              {Additional tracing is disabled by default. Enable by setting this to 1}
bbset pteco.PRE_ECO_INTERACTIVE      {0}                                                              {If set to 1, returns to the pt_shell prompt after loading collaterals but before executing ECO commands}
bbset pteco.POST_ECO_INTERACTIVE     {0}                                                              {If set to 1, returns to the pt_shell prompt after completing ECO flow}
bbset pteco.NDM_PATH                 {0}                                                              {UNUSED - retained for backward compatibility - Flag to indicate whether to load NDM library}
bbset pteco.NDM_LIB                  {}                                                               {UNUSED - retained for backward compatibility - Path to NDM library for ICC2}
bbset pteco.YIELD_FLOW_ENABLE        {0}                                                              {Setting primeshield flow to not run by default}
bbset pteco.CLOCK_DATA_OPT_LEVELS    {0}                                                              {0 implies optimize at any level}
bbset pteco.DRC_TRANS_EXCLUDE_PINS_FILE {}                                                               {Pins file to exclude for DRC Max trans fixing. The list of pins can be specified in a file, one pin per line}
bbset pteco.DRC_CAP_EXCLUDE_PINS_FILE {}                                                               {Pins file to exclude for DRC Max Cap   fixing. The list of pins can be specified in a file, one pin per line}
bbset pteco.USER_FILLER_CELLS        {}                                                               {Libcell name patterns which should be treated as filler cells}
bbset pteco.USER_DONT_TOUCH_CELLS    { *DONT_TOUCH* *DONTTOUCH* *SIZE_ONLY* *SIZEONLY*  *SPARE_FP_* *dont_touch* *donttouch* } {Instance name patterns to apply dont_touch to}
bbset pteco.USER_FORCE_USE_CELLS     {}                                                               {Libcell name patterns from with dont_touch and dont_use are to be removed}
bbset pteco.HOLD_FIX_ALLOWED_CELL_CLASSES {}                                                               {List of cell classes that may be used during hold fixing even if they are in the global PTECO DU list}
bbset pteco.LEAKAGE_FIX_ALLOWED_CELL_CLASSES {[bbget eco.LEAKAGE_FIX_ALLOWED_CELL_CLASSES]}                   {List of cell classes that may be used during leakage fixing even if they are in the global PTECO DU list}
bbset pteco.HOLD_FIX_ALLOWED_CELL_LIST {}                                                               {INTERNAL USE ONLY. List of cells that may be used during hold fixing even if they are in the global PTECO DU list}
bbset pteco.LEAKAGE_FIX_ALLOWED_CELL_LIST {}                                                               {INTERNAL USE ONLY. List of cells that may be used during leakage fixing even if they are in the global PTECO DU list}
bbset pteco.yield.YIELD_STA_RUN_DIR  {}                                                               {STA run dir for primeshield flow}
bbset pteco.yield.YIELD_FALSE_PATH_IO {1}                                                              {Setting false path on IO by default}
bbset pteco.yield.YIELD_BOUNDARY_DONT_TOUCH {1}                                                              {dont touch on io by default. This is for DRC fixing}
bbset pteco.yield.YIELD_POWER_CORNER {}                                                               {Yield optimization corner }
bbset pteco.yield.YIELD_REGISTERS_DONT_TOUCH {1}                                                              {Setting registers dont touch to true by default}
bbset pteco.yield.YIELD_SCENARIO_LIST {[bbget .pteco.SCENARIOS]}                                       {Timing scenarios for DMSA PTECO YIELD}
bbset pteco.yield.YIELD_SWAP_PATTERN {SVT LVTLL LVT ULVTLL ULVT ELVT}                                 {priority-based swap pattern for yield eco}
bbset pteco.yield.YIELD_METHOD_BOTTLENECK {swap}                                                           {AVAIL: swap}   
bbset pteco.yield.YIELD_METHOD_CELL_ROBUSTNESS {swap}                                                           {AVAIL: swap}   
bbset pteco.yield.YIELD_ECO_METHOD_SETUP {swap}                                                           {AVAIL: swap}   
bbset pteco.yield.YIELD_ECO_ORDER_AND_METHODS {{CELL_ROBUSTNESS: [bbget ".pteco.yield.YIELD_METHOD_CELL_ROBUSTNESS"]}} {Ordered list of ECO operations and methods for each operation using the syntax <ECOopeartion>: <listOfMethods> SETUP|CELL_ROBUSTNESS|BOTTLENECK}
bbset pteco.yield.YIELD_VOLTAGE_SLACK_VMIN {0.01}                                                           {Specify the voltage slack lesser than value for Vmin analysis}
bbset pteco.yield.YIELD_PWR_ANALYSIS {0}                                                              {Enable power analysis for vmin yield eco}
bbset pteco.yield.VMIN_CORNER        {[bbget .pteco.yield.YIELD_SCENARIO_LIST]}                       {Vmin analysis corners}
bbset pteco.yield.LEAKAGE_BUDGET_ENABLE {1}                                                              {set 1 to enable instance-based power-aware ECO, default:1}
bbset pteco.yield.LEAKAGE_BUDGET_RATIO {0.02}                                                           {set leakage budget ratio}
bbset pteco.yield.POWER_MODE_LEAKAGE {0}                                                              {set 1 to enable path-based power-aware ECO, default:0}
bbset pteco.yield.MAX_PATHS          {100000}                                                         {max number of paths}
bbset pteco.yield.NWORST             {20}                                                             {nworst}        
bbset pteco.yield.PBA_MODE           {path}                                                           {pba mode}      
bbset pteco.yield.SLACK_LESSER_THAN  {0.2}                                                            {slack lesser than switch in get_timing_path}
bbset pteco.yield.SLACK_GREATER_THAN {-0.1}                                                           {slack greater than switch in get_timing_path}
bbset pteco.yield.PATH_OPTIONS       {}                                                               {add command switches to get_timing_path}
bbset pteco.yield.SIGMA              {0.99865}                                                        {path sigma}    
bbset pteco.yield.vmin.NWORST        {20}                                                             {nworst}        
bbset pteco.yield.vmin.NON_DSLG_CELL_LIMIT {0}                                                              {the limit for the non-dslg cell in one path}
bbset pteco.WORKER_SUBMIT_COMMAND    {sbatch}                                                         {Worker submission command}
bbset pteco.METRICS_CAPTURE          {0}                                                              {Switch for eco_metrics_capture node creation}
bbset pteco.EnableLogScreener        {0}                                                              {Enable logscreener after PTECO run}
bbset pteco.STA_DMSA_REPORTS         {0}                                                              {# Switch for sta dmsa reports generation}
bbset pteco.metrics.reports.rpt_init {True}                                                           {# Log the corner, mode, design}
bbset pteco.metrics.reports.rpt_sanity {False}                                                          {# Report for unclocked sequentials}
bbset pteco.metrics.reports.rpt_setup {True}                                                           {# Report for cellpin rise/fall, max paths}
bbset pteco.metrics.reports.rpt_hold {True}                                                           {# Report for cell pin rise/fall, min paths}
bbset pteco.metrics.reports.rpt_pulse {False}                                                          {# Min pulse width reporting}
bbset pteco.metrics.reports.rpt_drv  {True}                                                           {# DRV tran cap reporting}
bbset pteco.metrics.reports.rpt_glitch {False}                                                          {# Glitch reporting}
bbset pteco.metrics.reports.rpt_glitch_dvd {False}                                                          {# Glitch dvd reporting}
bbset pteco.metrics.reports.rpt_glitch_ir {False}                                                          {# Glitch IR reporting}
bbset pteco.metrics.reports.rpt_crosstalk {False}                                                          {# Crosstalk reporting}
bbset pteco.metrics.reports.rpt_latency {False}                                                          {# Latency reporting}
bbset pteco.metrics.reports.rpt_clktrunk {False}                                                          {# Clk trunk reporting}
bbset pteco.metrics.reports.rpt_setup_pba {exhaustive}                                                     {#Enable Pba analysis mode, else set it to None}
bbset pteco.metrics.reports.rpt_setup_maxpath {20000000}                                                       {#Max number of setup paths}
bbset pteco.metrics.reports.rpt_setup_nworst {2}                                                              {#Max number of paths per endpoint}
bbset pteco.metrics.reports.rpt_setup_slacklt {-0.0009}                                                        {#Ordering paths strictly by slack}
bbset pteco.metrics.reports.rpt_hold_pba {exhaustive}                                                     {#Enable Pba analysis mode, else set it to None}
bbset pteco.metrics.reports.rpt_hold_maxpath {20000000}                                                       {#Max number of hold paths}
bbset pteco.metrics.reports.rpt_hold_nworst {2}                                                              {#Max number of paths per endpoint}
bbset pteco.metrics.reports.rpt_hold_slacklt {-0.0009}                                                        {#Ordering paths strictly by slack}
bbset pteco.metrics.reports.rpt_crosstalk_clock {0.005}                                                          {#delta delay threshold}
bbset pteco.metrics.reports.rpt_crosstalk_data {0.050}                                                          {#delta delay threshold}
bbset pteco.metrics.waiver_file      {}                                                               {#file to waive violations and mask from uploading to dashboard}
bbset pteco.metrics.upload_from_util {False}                                                          {#Upload metrics from sta xlsx util}
bbset pteco.metrics.folder_name      {dashboard}                                                      {# folder name for dashboard}
bbset pteco.metrics.upload_folder    {uploaded_data}                                                  {# folder name for metrics generation}
bbset pteco.metrics.run_name         {default_20250519_180357__POST_DMSA_ECO}                         {# tag name for metrics}
bbset pteco.metrics.maillist         {}                                                               {# user list to receive dashboard}
bbset pteco.metrics.generate_dashboard.master_script {get_sta_summary.py}                                             {# main utility for dashboard generation}
bbset pteco.metrics.generate_dashboard.file_lookip {save_rptx/save_rpt*/*{clock_tree/*cts_profile.summary.csv,path.m*csv,drv.m*csv,drv.glitch*csv,sspg*0p7*rcmax*ctv*csv,clock_si*csv,cellpin*rpt,path.detail*rpt,cellpin*rpt.gz,path.detail*rpt.gz}} {# reports regexp}
bbset pteco.metrics.generate_dashboard.extra_options { --path_compress 1 --adaptive 1}                                {# extra option for uitlity}
bbset pteco.metrics.generate_dashboard.options {  --dir [bbget .pteco.metrics.folder_name]  --hier_map [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].vio_map.json  --slack_waiver  [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].waiver.vio_slack.json  --regex_waiver  [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].waiver.vio_regex.csv  --tech          [bbget .info.REPO_TOP]/[bbget .info.IP_PROJ]/misc/[bbget .info.IP_PROJ].design_config.json   --timeout       150m   --stamp         [bbget .pteco.metrics.run_name]  --stalog        ../.  --maillist      "[bbget .pteco.metrics.maillist]"  --autoupload    "FALSE"                          [bbget .pteco.metrics.generate_dashboard.file_lookip]  [bbget .pteco.metrics.generate_dashboard.extra_options]} {# main options for utility}
bbset pteco.metrics.generate_metrics.master_script {sta_summary_metrics_upload.py}                                  {# main utility for metrics generation}
bbset pteco.metrics.generate_metrics.options { --path [bbget .info.BOB_RUN_DIR]/pteco/eco.primetime/[bbget .pteco.metrics.folder_name] --project [bbget .info.CHIP] --tag [bbget .pteco.metrics.run_name]} {# main options for utility}
bbset pteco.metrics.generate_metrics.enable {True}                                                           {#enable metric reporting plugin}
bbset pteco.metrics.upload_metrics.master_script {gchips-metrics-upload}                                          {# main uitlity for metrics upload}
bbset pteco.metrics.upload_metrics.options {[bbget .info.BOB_RUN_DIR]/pteco/eco.primetime/[bbget .pteco.metrics.folder_name]/[bbget .pteco.metrics.upload_folder]/[bbget .pteco.metrics.run_name]} {# mail option for utility}
bbset pteco.metrics.upload_metrics.enable {True}                                                           {#enable dashboard upload plugin}
bbset tweaker.Res                    {CORES/32 RAM/64000}                                             {Default resources}
bbset tweaker.config.block.setup.res {CORES/4 RAM/25000}                                              {Resource for setup node}
bbset tweaker.config.block.setup.enable {1}                                                              {Enable setup node}
bbset tweaker.config.block.config.res {CORES/4 RAM/25000}                                              {Resource for tweaker config code}
bbset tweaker.config.block.config.enable {1}                                                              {Enable config node}
bbset tweaker.config.block.scen.res  {CORES/4 RAM/25000}                                              {Resource for tweaker config code}
bbset tweaker.config.block.scen.enable {1}                                                              {Enable scen node}
bbset tweaker.config.block.tweaker.res {[bbget "tweaker.Res"]}                                          {Resource for tweaker main node}
bbset tweaker.config.block.tweaker.enable {1}                                                              {Enable tweaker node}
bbset tweaker.config.ToolVariables   {
                                      {_obs_avoid_power_strap true}
                                      {_eco_tcl_sync_net_name_after_buffer_deletion false}
                                      {_skip_vmin_path_wihout_slk_vdd_sensitivity true}
                                      } {User define tool variables. Format: { {VAR_NAME VAR_VALUE} }}
bbset tweaker.config.DerateYaml      {[bbfiles -bundles sta_and_tweaker_dataprep -filetype derate_yaml -hierarchy  -annotated]} {# No Comment}  
bbset tweaker.config.DerateFolder    {[bbget .info.BOB_RUN_DIR]/tweaker/tweaker/scen_derate}          {Dolder name to store derate file for each scenario}
bbset tweaker.config.DerateOnTopOnly {1}                                                              {Set derate on top design only}
bbset tweaker.config.VoltageYaml     {[bbget sta.config.derate.voltage.yaml]}                         {Voltage derate yaml converted from TSMC derate PDF}
bbset tweaker.config.VoltageDefaultYaml {[bbget sta.config.derate.voltage.Default.yaml]}                 {Voltage default derate yaml}
bbset tweaker.config.TemperatureYaml {[bbget sta.config.derate.temperature.yaml]}                     {Temperature derate yaml converted from TSMC derate PDF}
bbset tweaker.config.TemperatureDefaultYaml {[bbget sta.config.derate.temperature.Default.yaml]}             {Temperature default derate yaml}
bbset tweaker.config.RegexpsCellVt   {[bbget sta.config.hierarchy_info.RegexpsCellVt]}                {Define regular expressions to identify cell vt}
bbset tweaker.config.UseLibCellDerate {0}                                                              {Enable/disable (1/0) lib cell derate}
bbset tweaker.config.foundry_process_addl_derate.DerateYaml {[bbget "sta.config.derate.foundry_process_addl_derate.yaml"]}   {DK Yaml file path for pdk v1.1}
bbset tweaker.config.foundry_process_addl_derate.DerateDefaultYaml {[bbget "sta.config.derate.foundry_process_addl_derate.DefaultYaml"]} {Default N3E Yaml file path for pdk v1.1}
bbset tweaker.config.foundry_process_addl_derate.Enable {[bbget "sta.config.derate.foundry_process_addl_derate.enable"]} {True|False(default) to enable foundry_process_addl_derate}
bbset tweaker.config.foundry_process_addl_derate.DerateType {[bbget "sta.config.derate.foundry_process_addl_derate.DerateType"]} {list of derate value, valid value: early_clock early_data late_clock late_data setup hold}
bbset tweaker.config.foundry_process_addl_derate.IncludeRcCorner {[bbget "sta.config.derate.foundry_process_addl_derate.IncludeRcCorner"]} {regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset tweaker.config.foundry_process_addl_derate.ExcludeRcCorner {[bbget "sta.config.derate.foundry_process_addl_derate.ExcludeRcCorner"]} {regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset tweaker.config.foundry_process_addl_derate.TableName {[bbget "sta.config.derate.foundry_process_addl_derate.TableName"]} {table name in yaml file}
bbset tweaker.config.foundry_process_addl_derate.CommandMapping {
                                      early_clock "set_timing_derate -cell_delay -incremental -early -clock"
                                      early_data  "set_timing_derate -cell_delay -incremental -early -data"
                                      late_clock  "set_timing_derate -cell_delay -incremental -late -clock"
                                      late_data   "set_timing_derate -cell_delay -incremental -late -data"
                                      setup       "set_timing_derate -cell_check -incremental -late"
                                      hold        "set_timing_derate -cell_check -incremental -early"
                                      } {Derate setup command in Tweaker}
bbset tweaker.config.illegal_cell_margins.enable {[bbget "sta.config.illegal_cell_margins.enable"]}               {# No Comment}  
bbset tweaker.config.illegal_cell_margins.CellGroups {[bbget "sta.config.illegal_cell_margins.types"]}                {Cell groups for illegal cell derate}
bbset tweaker.config.illegal_cell_margins.InputYaml {[bbget "sta.config.illegal_cell_margins.yaml"]}                 {inpiut derate for illegal cell yaml}
bbset tweaker.config.illegal_cell_margins.ApplyMapping {
                                      {early_clock {set_timing_derate -cell_delay -increment -early -clock} }
                                      {early_data  {set_timing_derate -cell_delay -increment -early -data} }
                                      {late_clock  {set_timing_derate -cell_delay -increment -late -clock} }
                                      {late_data   {set_timing_derate -cell_delay -increment -late -data} }
                                      } {# applied derate mapping rules}
bbset tweaker.config.static_cell_derate.EarlyClock {0.00}                                                           {Static early clock derate on cell}
bbset tweaker.config.static_cell_derate.LateClock {1.10}                                                           {Static Late clock derate on cell}
bbset tweaker.config.static_cell_derate.EarlyData {0.98}                                                           {Static early data derate on cell}
bbset tweaker.config.static_cell_derate.LateData {1.05}                                                           {Static Late data derate on cell}
bbset tweaker.config.static_net_derate.EarlyClock {0.00}                                                           {Static early clock derate on net}
bbset tweaker.config.static_net_derate.LateClock {0.00}                                                           {Static Late clock derate on net}
bbset tweaker.config.static_net_derate.EarlyData {0.98}                                                           {Static early data derate on net}
bbset tweaker.config.static_net_derate.LateData {1.05}                                                           {Static Late data derate on net}
bbset tweaker.config.UseLocalVoltageVariation {[bbget sta.config.derate.LocalVoltageVariation.enable]}         {Use local voltage variation}
bbset tweaker.config.lowv_pocv.LowVoltagePvts {[bbget sta.config.lowv_pocv.LowVoltagePvts]}                    {PVTs that to be in lowV conditions, wildcard supported, type=list}
bbset tweaker.config.lowv_pocv.LowVoltageCellVts {*_lvtll}                                                        {Cell Vts that to be in lowV conditions, to set HoldConstraintSubtractSigma, wildcard supported, type=list}
bbset tweaker.config.lowv_pocv.HoldConstraintSubtractSigma {[bbget sta.config.lowv_pocv.HoldConstraintSubtractSigma]}       {Hold subtract sigma}
bbset tweaker.config.lowv_pocv.CoefficientScaleFactor {[bbget sta.config.lowv_pocv.CoefficientScaleFactor]}            {Coefficient scale factor}
bbset tweaker.config.TechLefQuery    {}                                                               {Pattern for techlef file query}
bbset tweaker.USER_SCRIPTS_DIR       {./user_scripts_tweaker}                                         {Directory for user pre- and post scripts to be applied. Can be empty}
bbset tweaker.ValidSetupScenarios    {[bbget sta.metrics.reports.rpt_setup_scenarios]}                {Valid setup scenarios for STA signoff}
bbset tweaker.ValidHoldScenarios     {[bbget sta.metrics.reports.rpt_hold_scenarios]}                 {Valid hold scenarios for STA signoff}
bbset tweaker.SETUP_SCENARIOS        {[bbget "eco.TimingScenarios"]}                                  {Timing Scenarios for Tweaker}
bbset tweaker.HOLD_SCENARIOS         {[bbget "eco.TimingScenarios"]}                                  {Timing Scenarios for Tweaker}
bbset tweaker.SetupScenarioMap       {}                                                               {Setup scenario map for merging corners. Format: {blockName {target_corner {merged_coner_list}}}}
bbset tweaker.HoldScenarioMap        {}                                                               {Hold scenario map for merging corners. Format: {blockName {target_corner {merged_coner_list}}}}
bbset tweaker.LEAKAGE_POWER_SCENARIO {[bbget "eco.LeakagePowerScenario"]}                             {name of one scenario for leakage power optimization}
bbset tweaker.DYNAMIC_POWER_SCENARIO {[bbget "tweaker.LEAKAGE_POWER_SCENARIO"]}                       {name of one scenario for dynamic power optimization. Tweaker flow requires this to be same as LEAKAGE_POWER_SCENARIO}
bbset tweaker.AGGRESSIVE_LEAKAGE_RETIMING_SCENARIOS {}                                                               {list of scenarios for re-timing during aggressive leakage steps. This list must be a subset of the SETUP_SCENARIOS and HOLD_SCENARIOS -- i.e., it must not include scenarios that are not listed in SETUP_SCENARIOS and HOLD_SCENARIOS}
bbset tweaker.AGGRESSIVE_IR_RETIMING_SCENARIOS {}                                                               {list of scenarios for re-timing during aggressive ir steps. This list must be a subset of the SETUP_SCENARIOS and HOLD_SCENARIOS -- i.e., it must not include scenarios that are not listed in SETUP_SCENARIOS and HOLD_SCENARIOS}
bbset tweaker.TWEAKER_REPORTS_ROOTS  {}                                                               {Block-specific Tweaker reports root dirs list, each in the form: {<blockName> <tweakerReportsRootDir>} }
bbset tweaker.SkipTimingReportInLeakageFix {1}                                                              {Skip timing report in leakage fixing. Tool only needs twf information}
bbset tweaker.SkipTimingReportInPrimeShieldFix {1}                                                              {Skip timing report in PrimeShield fixing, including Vmin and DVA. }
bbset tweaker.SkipTimingReportInIRFix {1}                                                              {Skip timing report in ir fixing. Tool only needs twf information }
bbset tweaker.PTWhatIfCheck          {0}                                                              {Enable to do PT what-if check with twkrprep automatically}
bbset tweaker.USE_HIERARCHY_COLLATERAL {1}                                                              {When set to 1, Tweaker uses bbfiles to obtain design collateral from paths spefified by .hierarchy.<block>.<stage>.source variables. When set to 0, Tweaker uses the collaterals specified by .tweaker.VERILOG_FILES, .tweaker.DEF_FILES and .tweaker.SPEF_FILES}
bbset tweaker.VERILOG_FILES          {}                                                               {Block-specific Verilog files, each in the form: {<blockName> <verilogFilePath>} }
bbset tweaker.STUB_VERILOG_FILES     {}                                                               {Block-specific Stub-Verilog files, each in the form: {<blockName> <stubverilogFilePath>} }
bbset tweaker.SPEF_FILES             {}                                                               {Block-specific SPEF files, each in the form: {<blockName> <SPEFFilesPattern>} }
bbset tweaker.DEF_FILES              {}                                                               {Block-specific DEF files, each in the form: {<blockName> <DEFFilePath>} }
bbset tweaker.ADDITIONAL_DEF_FILES   {}                                                               {Additional psw-DEF file list. Format: {<blockName> <DEFFilePath>} }
bbset tweaker.STUB_LEF_FILES         {}                                                               {Block-specific Stub-LEF files, each in the form: {<blockName> <stubLEFFilePath>} }
bbset tweaker.STA_RUN_DIRS           {[bbget ".tweaker.TWEAKER_REPORTS_ROOTS"]}                       {STA run directory roots, each in the form {<blockName> <STAroot>}. Required for aggressive_leakage fixing.}
bbset tweaker.LEFIN_TO_TWEAKER       {}                                                               {Optional list of lefin commands that will read specified LEFs in Tweaker. If null, then process-specific LEF file lists will be generated and used}
bbset tweaker.ADDITIONAL_LEF_FILES   {}                                                               {Optional list of additional LEF files to read}
bbset tweaker.UPF_FILES              {}                                                               {Block-specific UPF files, each in the form: {<blockName> <UPFFilePath>} }
bbset tweaker.VOLTAGE_AREA_FILES     {}                                                               {Block-specific UPF files, each in the form: {<blockName> <VAFilePath>}. You must specify VA files for each UPF used.}
bbset tweaker.DYNAMIC_POWER_SAIF_FILE {}                                                               {SAIF file to use for dynamic power optimization}
bbset tweaker.DYNAMIC_POWER_SAIF_PREFIX {}                                                               {Herarchical prefix to apply when reading SAIF file}
bbset tweaker.DYNAMIC_POWER_FILE     {}                                                               {Power report file to use for dynamic power optimization}
bbset tweaker.DYNAMIC_POWER_FILE_FORMAT {-saif}                                                          {Power report format. Valid value: -saif, -tcf, -redhawk}
bbset tweaker.DYNAMIC_POWER_PREFIX   {}                                                               {Herarchical prefix to apply when reading TCF file}
bbset tweaker.ECO_NLCMD_FILE         {}                                                               {Add previous ECO NLCMD file for incrmental ECO}
bbset tweaker.TOP_CELL_NAME          {[bbget ".info.BLOCK"]}                                          {Top cell name} 
bbset tweaker.ECO_DESIGN_LIST        {[concat [bbget ".tweaker.TOP_CELL_NAME"] [bbfiles -legacy_mode subblocks -block [bbget ".tweaker.TOP_CELL_NAME"]]]} {List of designs for ECO. By default, the top cell and all subblocks are included}
bbset tweaker.SLACKIN_DESIGN_LIST    {[bbget ".tweaker.ECO_DESIGN_LIST"]}                             {List of designs for timing report pruning that reduce the ECO domains. The list should be same or a sub-set of ECO_DESIGN_LIST.}
bbset tweaker.TIMING_REPORT_HIER_PREFIX {}                                                               {Add hierarchy instance prefix while reading timing report, twf, and sdf}
bbset tweaker.VALID_ECO_TYPES        {defrag setup hold max_tran max_cap max_fanout leakage dynamic_power area aggressive_leakage si_glitch si_double_switch ir aggressive_ir inst_based_ir clock_tran clock_data_ep clock_data_common_pt clock_sizing clock_setup_early dva_setup dva_bottleneck vmin} {List of valid ECO Types for Tweaker}
bbset tweaker.ECO_ORDER              {max_tran max_cap si_glitch setup hold}                          {Order of ECO operations. AVAIL: setup hold max_tran max_cap max_fanout si_glitch si_double_switch area leakage dynamic_power aggressive_leakage clock_tran defrag ir aggressive_ir}
bbset tweaker.ECO_METHOD_SETUP       {vt sizing split_load}                                           {AVAIL: vt sizing downsz bypass split_load}
bbset tweaker.ECO_METHOD_HOLD        {vt dmy insertion}                                               {AVAIL: vt sizing dmy insertion combo_insertion}
bbset tweaker.ECO_METHOD_MAX_FANOUT  {vt sizing}                                                      {AVAIL: vt sizing}
bbset tweaker.ECO_METHOD_MAX_TRAN    {vt sizing hfs}                                                  {AVAIL: vt sizing insertion hfs off_route_buffer insert_inv_pair spare_cell}
bbset tweaker.ECO_METHOD_MAX_CAP     {vt sizing hfs}                                                  {AVAIL: vt sizing hfs spare_cell}
bbset tweaker.ECO_METHOD_CLOCK_TRAN  {clock_sizing}                                                   {AVAIL: clock_sizing clock_hfs clock_ins_inv_pair}
bbset tweaker.ECO_METHOD_SI_GLITCH   {vt sizing hfs}                                                  {AVAIL: vt sizing hfs}
bbset tweaker.ECO_METHOD_SI_DOUBLE_SWITCHING {hfs}                                                            {AVAIL: hfs inv spare_cell}
bbset tweaker.ECO_METHOD_LEAKAGE     {vt sizing}                                                      {AVAIL: vt sizing deletion}
bbset tweaker.ECO_METHOD_DYNAMIC_POWER {vt sizing}                                                      {AVAIL: sizing vt_sizing vt deletion sizing_comb vt_seq}
bbset tweaker.ECO_METHOD_AREA        {sizing deletion}                                                {AVAIL: sizing deletion}
bbset tweaker.ECO_METHOD_AGGRESSIVE_LEAKAGE {}                                                               {AVAIL: NOT-APPLICABLE -- methods are hard-wired in the flow}
bbset tweaker.ECO_METHOD_SETUP_RECOVERY {vt sizing}                                                      {AVAIL: vt sizing}
bbset tweaker.ECO_METHOD_DEFRAG      {path}                                                           {AVAIL: path OR window, but not both. Set DEFRAG_WINDOWS for window-based defragmentation}
bbset tweaker.ECO_METHOD_IR          {dynamic_ir}                                                     {AVAIL: dynamic_ir}
bbset tweaker.ECO_METHOD_AGGRESSIVE_IR {}                                                               {AVAIL: NOT-APPLICABLE -- methods and order are hard-wired in the flow}
bbset tweaker.ECO_METHOD_DVA_SETUP   {vt sizing split_load}                                           {AVAIL: vt sizing downsz split_load}
bbset tweaker.ECO_METHOD_DVA_BOTTLENECK {vt sizing}                                                      {AVAIL: vt sizing aggressive_sizing}
bbset tweaker.ECO_METHOD_VMIN        {vt sizing}                                                      {AVAIL: vt sizing aggressive_sizing}
bbset tweaker.ECO_METHOD_INST_BASED_IR {vt sizing}                                                      {AVAIL: vt sizing}
bbset tweaker.INST_BASED_IR_LIST_FILE {}                                                               {File explicitly listing instances (one-inst-name-per-line) on which to perform IR fixing}
bbset tweaker.DRV_FACTOR             {0.80}                                                           {DRV factor. Typically no need to modify}
bbset tweaker.DRV_FACTOR_VTS         { {"*SVT*" 0.5} }                                                {DRV factor for vt cells}
bbset tweaker.CLOCK_SURGERY          {0}                                                              {Clock surgery enablement -- disables Tweaker extract_report command}
bbset tweaker.DEFIN_MISSING_VERILOG_CELLS_OCCUPIED {0}                                                              {Treat DEF instances which are not found in Verilog as occupied sites. Set to 1 if and only if the STA run and Tweaker reports are using ultra-lite sta sessions, Default: 0}
bbset tweaker.DEFIN_PLACEMENT_ONLY   {0}                                                              {Only read placement information from DEF. Default is 0/off. WARNING: Enabling this option will likely result in non-legalized placement, pin access violations, power-strap overlaps, etc. and should only be performed by highly experienced users}
bbset tweaker.CONVERT_SITE_MAPPING   {[bbget "eco.SiteNameMapping"]}                                  {Site-name mapping for FC blocks}
bbset tweaker.ENABLE_MIXED_TRACK     {1}                                                              {Reading of mixed-track LEFs is enabled by default. Set this to 0 to disable reading mixed-track LEFs}
bbset tweaker.ENABLE_CNOD_LEAKAGE    {0}                                                              {Enable cnod leakage side file reading during tweaker opt}
bbset tweaker.ALLOW_SEQUENTIAL_SIZING {0}                                                              {Allow sizing on sequential cell as well as combinational cell. Value: 0/1 Default: 0}
bbset tweaker.SEQUENTIAL_SIZING_ONLY {0}                                                              {Only sizing on sequential cell. Value: 0/1 Default: 0}
bbset tweaker.DONT_TOUCH_DEF_FIXED_INST {1}                                                              {Not touch DEF-fixed instance during ECO. Value: 0/1 Default: 1}
bbset tweaker.KEEP_PIN_GEOMETRY      {0}                                                              {Retain pin geometry during sizing. Value: 0/1 Default: 0}
bbset tweaker.KEEP_OBS_GEOMETRY      {0}                                                              {Retain obstruction geometry during sizing. Value: 0/1 Default: 0}
bbset tweaker.ENABLE_PARTIAL_BLOCKAGES {}                                                               {Overwrite enable_partial_blockages var. Default: empty for not overwritting}
bbset tweaker.ADD_BUFFER_ON_ROUTE    {1}                                                              {Enable on-route insertion}
bbset tweaker.HOLD_FIX_AT_SINK_PINS_ONLY {1}                                                              {By default, Tweaker will fix hold only at sink pins along hold path. Disabling this can have signifiant runtime impact}
bbset tweaker.SETUP_MINIMIZE_WORST_SLACK {0}                                                              {By default Tweaker will NOT try to minimize just the worst setup slack}
bbset tweaker.SIZING_MAX_CANDIDATES  {5}                                                              {Limit num candidates evaluated when sizing. "0" eavlates ALL sizing candidates. Small values imrove runtime but may impact overall fix rate}
bbset tweaker.VT_MAX_FANOUT_LIMIT    {999}                                                            {Fanout limit during vt-swap}
bbset tweaker.SIZING_MAX_FANOUT_LIMIT {[bbget pnr.MaxFanout]}                                          {Fanout limit during sizing. Default set to be aligned with pnr.MaxFanout value}
bbset tweaker.SIZING_MAX_SHIFT_DISTANCE {5.0}                                                            {Max shift distance during sizing, vt-swap}
bbset tweaker.GIVE_UP_INSERT_BUF_DISTANCE {}                                                               {Max distance to search in microns for buffer insertion. Default empty for not overwritting}
bbset tweaker.ALLOW_LEGALIZATION_OF_CELLS_WITH_PHYSICAL_VIOLATIONS {0}                                                              {By default Tweaker will not size/move cells with existing physical violations. Set this varable to 1 to allow. WARNING: ENABLING THIS MAY RESULT IN LARGE CELL MOVEMENTS AND TIMING DEGRADATION}
bbset tweaker.FORCE_TO_REROUTE_INSERTED_NET {1}                                                              {Force to re-route inserted net that prevent detoured routing. Required in FC flow}
bbset tweaker.FOOTPRINT_AWARE_ECO    {0}                                                              {Foortprint-aware ECOs are disabled by default. Note: that enabling footprint-aware also enables ZERO_DISPLACEMNT}
bbset tweaker.ZERO_DISPLACEMENT_ECO  {0}                                                              {By default, Tweaker allows sizing/swapping to move cells (tool default max_shift_distance is 10um). Set this variable to 1 to completely disallow cell movement during sizing/swapping}
bbset tweaker.ENABLE_METAL_ONLY_ECO  {0}                                                              {Metal-only ECO flow is disabled by default. Set to 1 to enable metal-only ECO flow for Tweaker}
bbset tweaker.ENABLE_VOLTAGE_SCALING {0}                                                              {Enable voltage scaling flow}
bbset tweaker.SETUP_TARGET_SLACK     {0.000}                                                          {Setup target slack. Only used during setup and hold eco fixing}
bbset tweaker.HOLD_TARGET_SLACK      {0.000}                                                          {Hold  target slack. Only used during setup and hold eco fixing}
bbset tweaker.POWER_TARGET_SLACK     {0.025}                                                          {Target slack for power optimization}
bbset tweaker.AGGRESSIVE_LEAKAGE_TARGET_SLACK {0.0}                                                            {Target slack for aggressive_leakage}
bbset tweaker.POWER_SETUP_MARGINS    {}                                                               {Per-scenario setup margins for power optimization.}
bbset tweaker.PATH_FILTER_SETUP      {-ff}                                                            {AVAIL: -ff -io -if -inv_if -all -from -to -path_group}
bbset tweaker.PATH_FILTER_HOLD       {-ff}                                                            {AVAIL: -ff -io -if -inv_if -all -from -to -path_group}
bbset tweaker.PATH_FILTER_POWER      {-ff}                                                            {AVAIL: -ff -io -if -inv_if -all -from -to -path_group}
bbset tweaker.PATH_FILTER_AREA       {}                                                               {AVAIL: -ff -io -if -inv_if -all -from -to -path_group}
bbset tweaker.SETUP_SLKFIX_RANGES    { {default "-1.0 0.0"} {*-UUD-* "-3.0 0.0"} }                    {Per-scenario setup slack ranges for slkfix -setup. Wildcards are supported}
bbset tweaker.HOLD_SLKFIX_RANGES     { {default "-0.5 0.0"} }                                         {Per-scenario hold slack ranges for slkfix -hold. Wildcards are supported}
bbset tweaker.SETUP_SLKFIX_SCENARIOS {}                                                               {Tweaker will restrict setup fixing to the listed scenarios if this var is non-empty; otherwise, setup fixing will consider all loaded scenarios}
bbset tweaker.HOLD_SLKFIX_SCENARIOS  {}                                                               {Tweaker will restrict hold fixing to the listed scenarios if this var is non-empty; otherwise, hold fixing will consider all loaded scenarios}
bbset tweaker.SETUP_SLKFIX_OPTIONS   {}                                                               {User options for slkfix -setup. Slack ranges are specified using SETUP_SLKFIX_RANGE}
bbset tweaker.HOLD_SLKFIX_OPTIONS    {}                                                               {User options for slkfix -hold. Slack ranges are specified using HOLD_SLKFIX_RANGE}
bbset tweaker.DOMINATE_CORNER_WATCH  {1}                                                              {Enable watching dominate_corner to improve runtime. Set to 0 to disable}
bbset tweaker.DOMINATE_PATH_FIXING_THRESHOLD {100000}                                                         {If number of paths to be fixed is greater than this variable, Tweaker will first fix the dominating paths first to improve runtime and effectiveness}
bbset tweaker.DEFRAG_WINDOWS         {}                                                               {Default ECO_METHOD_DEFRAG is set to path. If it is set to window, then specify the DEFRAG_WINDOWS as  [list {llx1 lly1 urx1 ury1}  {llx2 lly2 urx2 ury2}  ...] }
bbset tweaker.AGGRESSIVE_LEAKAGE_DATAPREP_TIMELIMIT {18000}                                                          {Time limit in SECONDS for generating updated Tweaker Reports during aggressive leakage steps. Default is 18000 sec or 5 hrs}
bbset tweaker.RESET_TO_LIB_CELL_DERATE {0}                                                              {reset to lib cell derate}
bbset tweaker.LOAD_CELL_POCVM        {1}                                                              {load std cell pocvm side files}
bbset tweaker.USER_DONT_TOUCH_CELLS  { *DONT_TOUCH* *DONTTOUCH* *SPARE_FP_* *dont_touch* *donttouch* } {Instance name patterns to apply set_dont_touch_instance}
bbset tweaker.USER_SIZE_ONLY_CELLS   { *SIZE_ONLY* *SIZEONLY* }                                       {Instance name patterns to apply set_dont_touch_cell_by_sdc}
bbset tweaker.USER_DONT_TOUCH_LIBCELLS {}                                                               {Libcell name patterns to which dont_touch is to be applied}
bbset tweaker.USER_DONT_TOUCH_MODULES {}                                                               {Module name patterns (and their pins) to which dont_touch is to be applied}
bbset tweaker.USER_FORCE_USE_CELLS   {}                                                               {Libcell name patterns from with dont_touch and dont_use are to be removed}
bbset tweaker.GENERAL_SETTINGS_FILE  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/eco/tweaker/lib/tcl/process_setup/general_setting_3nm.tcl} {Process-relataed general settings for Tweaker}
bbset tweaker.ADDITIONAL_SETTINGS_FILE {[bbget .info.PROCESS_DIR]/eco/tweaker/lib/tcl/process_setup/n3e_additional_settings.tcl} {Additional general settings for Tweaker}
bbset tweaker.CELL_EDGE_SPACING_RULES {[bbget .info.PROCESS_DIR]/eco/tweaker/lib/tcl/process_setup/n3e_143m.fc.TWEAKER_CELL_EDGE_SPACING_RULES.tcl} {Tweaker Cell-Edge Spacing Rules}
bbset tweaker.CellEdgeSpacingRuleFromPnR {}                                                               {Cell edge spacing rule dumped by PNR tool}
bbset tweaker.CellEdgeTypeRuleFromPnR {}                                                               {Cell edge type dumped by Innovus, required for generating Innovus spacing rule to tweaker}
bbset tweaker.ValidPnRTool           {innovus icc2 icc}                                               {Valid PnR tool list}
bbset tweaker.PNR_TOOL               {icc2}                                                           {Enable FC settings in Tweaker run}
bbset tweaker.PT_ECOTCL_OPTION       {}                                                               {Options for pt ecotclout}
bbset tweaker.SpeedupByExtractReport {0}                                                              {Extract and keep dominating path and pin only. Default: 0}
bbset tweaker.HOLD_FIX_ALLOWED_CELL_CLASSES {}                                                               {List of cell classes that may be used during hold fixing even if they are in the global Tweaker DU list}
bbset tweaker.LEAKAGE_FIX_ALLOWED_CELL_CLASSES {[bbget eco.LEAKAGE_FIX_ALLOWED_CELL_CLASSES]}                   {List of cell classes that may be used during leakage fixing even if they are in the global Tweaker DU list}
bbset tweaker.LEAKAGE_FIX_FORBIDDEN_CELL_CLASSES {}                                                               {List of cell classes that are forbidden during leakage fixing even if they are in the global Tweaker DU list}
bbset tweaker.HOLD_FIX_ALLOWED_CELL_LIST {}                                                               {INTERNAL USE ONLY. List of cells that may be used during hold fixing even if they are in the global Tweaker DU list}
bbset tweaker.LEAKAGE_FIX_ALLOWED_CELL_LIST {}                                                               {INTERNAL USE ONLY. List of cells that may be used during leakage fixing even if they are in the global Tweaker DU list}
bbset tweaker.LEAKAGE_FIX_FORBIDDEN_CELL_LIST {}                                                               {INTERNAL USE ONLY. List of cells that are forbidden during leakage fixing even if they are in the global Tweaker DU list}
bbset tweaker.CHIP_USES_LEAKGE_FIX_FORBIDDEN_CELL {laguna}                                                         {List of chip name that is allowed to use forbidden list for during leakage fix}
bbset tweaker.PRE_ECO_SESSIONS       {1}                                                              {Saving of Pre-ECO  sessions is enabled by default. Set to 0 to disable}
bbset tweaker.POST_ECO_SESSIONS      {1}                                                              {Saving of Post-ECO sessions is enabled by default. Set to 0 to disable}
bbset tweaker.THREAD_NUM             {auto}                                                           {Number of threads. "auto" is recommended. Default changed to 8 per b/189402982}
bbset tweaker.AUTOFIX_MAX_LOOP_TIMING {10}                                                             {Maximum number of loops to be executed for slkfix -setup or slkfix -hold commands. Tool default is 10 loops.}
bbset tweaker.ENABLE_PRE_ECO_PHYSICAL_VIOLATION_REPORTS {0}                                                              {Pre-ECO  Physical Violations reporting is enabled by default}
bbset tweaker.ENABLE_POST_ECO_PHYSICAL_VIOLATION_REPORTS {1}                                                              {Post-ECO Physical Violations reporting is enabled by default}
bbset tweaker.ReportECOPhysicalViolationOnly {1}                                                              {Report ECO Physical Violations only}
bbset tweaker.ReportECOQoRSummary    {1}                                                              {Report overal post ECO QoR summary}
bbset tweaker.ReportLimit            {99999}                                                          {Maximum number of report counts}
bbset tweaker.AddlSummaryReportOption {-high_resolution}                                               {Additional slkreport option in summary report}
bbset tweaker.BlockingPathList       {}                                                               {Report path list for given blocking code list}
bbset tweaker.BlockingInstList       {}                                                               {Report instance list for given blocking code list}
bbset tweaker.PRE_INPUT_HOOK         {}                                                               {Absolute path of custom script that is executed before reading all input and before consistency check in Tweaker}
bbset tweaker.POST_INPUT_HOOK        {}                                                               {Absolute path of custom script that is executed after reading all input and before consistency check in Tweaker}
bbset tweaker.PRE_HOOK               {}                                                               {Absolute path of custom script that is executed before any ECO operations are performed in Tweaker}
bbset tweaker.POST_HOOK              {}                                                               {Absolute path of custom script that is executed after all ECO operations are performed in Tweaker}
bbset tweaker.PRE_ECO_INTERACTIVE    {0}                                                              {Set to 1 to have Tweaker flow provide an interactive tweaker shell after reading collaterals}
bbset tweaker.POST_ECO_INTERACTIVE   {0}                                                              {Set to 1 to have Tweaker flow provide an interactive tweaker shell after ECO generation rather than exiting}
bbset tweaker.ECO_DEBUG              {0}                                                              {Set to 1 to dump out additional information during run}
bbset tweaker.SDP_DUMP               {0}                                                              {SDP Dumping. Enable ONLY IF specifically requested by SNPS Support.}
bbset tweaker.EnableLogScreener      {1}                                                              {Enable logscreener after Tweaker run}
bbset tweaker.TWEAKER_IR_REPORTS_ROOTS {}                                                               {specify the path of ir eco report root for ir eco}
bbset tweaker.DYNAMIC_IR_SCENARIOS_AND_VECTORS {}                                                               {specify the dynamic ir scenarios}
bbset tweaker.IR_ECO_DOMAIN_PERCENTAGE {8.00}                                                           {define the value of percentage option for slkfix -create_ir_drop_eco_domain}
bbset tweaker.IR_ECO_TARGET_DROPPED_RATIO {0.08}                                                           {define the value of target dropped ratio for ir eco}
bbset tweaker.IR_ECO_DOMAIN_GUARDBAND {10}                                                             {define the value of guardband option for slkfix -create_ir_drop_eco_domain}
bbset tweaker.IR_ECO_SETUP_TARGET_SLACK {0.0}                                                            {define the value of slk_setup_target_slk for ir_eco}
bbset tweaker.IR_ECO_HOLD_TARGET_SLACK {0.0}                                                            {define the value of slk_hold_target_slk for ir_eco}
bbset tweaker.AGGRESSIVE_IR_ECO_SETUP_TARGET_SLACK {-0.020}                                                         {define the value of slk_setup_target_slk for aggressive_ir_eco}
bbset tweaker.AGGRESSIVE_IR_ECO_HOLD_TARGET_SLACK {-0.020}                                                         {define the value of slk_hold_target_slk for aggressive_ir_eco}
bbset tweaker.IR_REPORT_HIER_PREFIX  {}                                                               {specify the hierarchical prefix to apply to the input IR reports}
bbset tweaker.IR_RHSC_DB_WAIT_TIME   {18000}                                                          {specify the wait time for rhsc license}
bbset tweaker.IR_ECO_TARGET_DROPPED_RATIO_BY_CELLS {}                                                               {only fix the defined cells by the target dropped ratio. e.g., [list [list *BUF* 0.167] [list *INV* 0.157]]}
bbset tweaker.ENABLE_IR_MULTI_THREAD {1}                                                              {IR multi-thread prediction is enabled by default}
bbset tweaker.ENABLE_EFFECTIVE_IR    {1}                                                              {effective IR eco is enabled by default}
bbset tweaker.IR_RHSC_MEM            {60000}                                                          {specify memory usage in rhsc job}
bbset tweaker.IR_RHSC_WORKER_COUNT   {12}                                                             {specify work count for rhsc}
bbset tweaker.IR_RHSC_COMMUNICATION_MESSAGE {0}                                                              {show detailed commnuication message with rhsc}
bbset tweaker.IR_RHSC_DB_MULTI_THREAD_WAIT_TIME {1200000}                                                        {specify the multi-thread wait time for every data}
bbset tweaker.METRICS_CAPTURE        {0}                                                              {Switch for eco_metrics_capture node creation}
bbset tweaker.ENABLE_CONGESTION_AWARE {1}                                                              {Congestion aware is enabled by default, Set to 0 to disable.}
bbset tweaker.MIN_ROUTING_LAYER      {[ bbget .pnr.MinRoutingLayer ]}                                 {Minimum layer for congestion aware flow}
bbset tweaker.MAX_ROUTING_LAYER      {[ bbget .pnr.MaxRoutingLayer ]}                                 {Maximum layer for congestion aware flow}
bbset tweaker.CONGESTION_THRESHOLD   {0.8 0.8}                                                        {Translates to slk_congestion_aware_threshold. Within the search range, choose the closest one with congestion lower than lo_bound. If all congestion are higher than lo_bound, choose locations with lower congestion}
bbset tweaker.ALLOW_VERILOG_MISMATCH {0}                                                              {If set to 1, Tweaker will skip modules with bad data connections in verilog, and continue without aborting}
bbset tweaker.power_fix.PowerTargetSlack {0.05}                                                           {Power target slack for power optimization}
bbset tweaker.power_fix.SetupTargetSlack {[bbget .tweaker.power_fix.PowerTargetSlack]}                    {Setup tartget slack for power fixing}
bbset tweaker.power_fix.HoldTargetSlack {[bbget .tweaker.power_fix.PowerTargetSlack]}                    {Hold tartget slack for power fixing}
bbset tweaker.power_fix.DrvFactorLeakageVtFix {0.7}                                                            {Drv factor used in leakage vt-swap fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.power_fix.DrvFactorLeakageSizingFix {0.6}                                                            {Drv factor used in leakage sizing fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.power_fix.DrvFactorLeakageDeletionFix {0.6}                                                            {Drv factor used in leakage deletion fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.power_fix.DrvFactorDynamicVtFix {0.7}                                                            {Drv factor used in dynamic vt-swap fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.power_fix.DrvFactorDynamicSizingFix {0.6}                                                            {Drv factor used in dynamic sizing fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.power_fix.DrvFactorDynamicDeletionFix {0.6}                                                            {Drv factor used in dynamic deletion fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.power_fix.FAST2SLOW    {[bbget .tweaker.FAST2SLOW_SAME_ROW]}                            {Fast-to-slow map for power fix}
bbset tweaker.power_fix.SIZING_MAPPING_RULE {[bbget .tweaker.SIZING_MAPPING_RULE_SAME_ROW]}                  {Sizing mapping rule for power fix}
bbset tweaker.power_fix.VT_REPORT_PATTERN {ELVT ULVT ULVTLL LVT LVTLL SVT}                                 {VT cell type list. Order: large leakage -> small leakage. Disable the report by setting as empty}
bbset tweaker.aggr_power_fix.PowerTargetSlack {[bbget .tweaker.AGGRESSIVE_LEAKAGE_TARGET_SLACK]}               {Power target slack for power optimization}
bbset tweaker.aggr_power_fix.SetupTargetSlack {[bbget .tweaker.aggr_power_fix.PowerTargetSlack]}               {Setup tartget slack for power fixing}
bbset tweaker.aggr_power_fix.DrvFactorAggrLeakageFix {0.9}                                                            {Drv factor used in aggressive leakage fix methods. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.aggr_power_fix.FAST2SLOW {[bbget .tweaker.FAST2SLOW]}                                     {Fast-to-slow mapping rule for power fix}
bbset tweaker.aggr_power_fix.VT_REPORT_PATTERN {[bbget .tweaker.power_fix.VT_REPORT_PATTERN]}                   {VT cell type list. Order: small leakage -> large leakage. Disable the report by setting as empty}
bbset tweaker.area_fix.PowerTargetSlack {[bbget .tweaker.power_fix.PowerTargetSlack]}                    {Power target slack for area fix}
bbset tweaker.area_fix.SetupTargetSlack {[bbget .tweaker.power_fix.PowerTargetSlack]}                    {Setup tartget slack for area fix}
bbset tweaker.area_fix.HoldTargetSlack {[bbget .tweaker.power_fix.PowerTargetSlack]}                    {Hold tartget slack for area fix}
bbset tweaker.area_fix.DrvFactorSizing {0.7}                                                            {Drv factor used in downsizing. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.area_fix.DrvFactorDeletion {0.6}                                                            {Drv factor used in deletion. This will overwrite the global factor tweaker.DRV_FACTOR.}
bbset tweaker.area_fix.Windows       {}                                                               {Define a list of bbox that run area recovery in bbox region. Format: [list {llx1 lly1 urx1 ury1}  {llx2 lly2 urx2 ury2}  ...] }
bbset tweaker.max_tran_fix.PathFilter {-all}                                                           {AVAIL: -ff -io -if -inv_if or empty for whole design}
bbset tweaker.max_cap_fix.PathFilter {-all}                                                           {AVAIL: -ff -io -if -inv_if or empty for whole design}
bbset tweaker.setup_fix.EndpointListFile {}                                                               {Define a file containing the endpoint list}
bbset tweaker.setup_fix.AUTOFIX_MAX_LOOP_TIMING {[bbget ".tweaker.AUTOFIX_MAX_LOOP_TIMING"]}                     {Maximum number of loops to be executed. Tool default is 10 loops.}
bbset tweaker.setup_fix.SlkDump      {1}                                                              {Enable slkdump during setup fixing}
bbset tweaker.setup_fix.SetupSlackTarget {[bbget ".tweaker.SETUP_TARGET_SLACK"]}                          {Setup slack target for setup fix}
bbset tweaker.setup_fix.HoldSlackTarget {[bbget ".tweaker.HOLD_TARGET_SLACK"]}                           {Hold slack target for setup fix}
bbset tweaker.setup_fix.SlackinPathFilter {}                                                               {Path filter used in parsing (slackin) setup report}
bbset tweaker.hold_fix.EndpointListFile {}                                                               {Define a file containing the endpoint list}
bbset tweaker.hold_fix.AUTOFIX_MAX_LOOP_TIMING {[bbget ".tweaker.AUTOFIX_MAX_LOOP_TIMING"]}                     {Maximum number of loops to be executed. Tool default is 10 loops.}
bbset tweaker.hold_fix.SlkDump       {1}                                                              {Enable slkdump during hold fixing}
bbset tweaker.hold_fix.SetupSlackTarget {[bbget ".tweaker.SETUP_TARGET_SLACK"]}                          {Setup slack target for hold fix}
bbset tweaker.hold_fix.HoldSlackTarget {[bbget ".tweaker.HOLD_TARGET_SLACK"]}                           {Hold slack target for hold fix}
bbset tweaker.hold_fix.DrvFactor     {}                                                               {DRV factor for hold fixing}
bbset tweaker.hold_fix.IgnoreDrv     {false}                                                          {Ignore DRV factor for hold fixing. Default: false}
bbset tweaker.hold_fix.MaxSearchDistance {}                                                               {Max distance to search in microns for hold fixing}
bbset tweaker.hold_fix.SizingSetupTargetSlack {0.05}                                                           {Setup target slack for hold sizing fix}
bbset tweaker.hold_fix.WatchDrivingPinSetupSlack {}                                                               {Hold fix with watching driving pin setup slack. Default: empty for not overwritten}
bbset tweaker.hold_fix.WatchDrivingPinHoldSlack {}                                                               {Hold fix with watching driving pin hold slack. Default: empty for not overwritten}
bbset tweaker.hold_fix.SlackinPathFilter {}                                                               {Path filter used in parsing (slackin) hold report}
bbset tweaker.hold_fix.MinimizeSetupImpact {false}                                                          {Insert delay cells due to higher min / max ratio while hold fixing. Default: false}
bbset tweaker.hold_fix.WatchSetupTimingWindow {true}                                                           {Watch setup timing window while hold fixing. Default: true}
bbset tweaker.dva_setup_fix.AddlFixingOption {}                                                               {Additional fixing option for slkfix -design_variation -setup}
bbset tweaker.dva_setup_fix.PowerDomainFilter {}                                                               {AVAIL: -ff -io -if -inv_if or empty for whole design}
bbset tweaker.dva_setup_fix.LeakagePowerScenario {[bbget ".tweaker.LEAKAGE_POWER_SCENARIO"]}                      {name of one scenario for leakage power optimization}
bbset tweaker.dva_setup_fix.SetupSlackTarget {[bbget ".tweaker.SETUP_TARGET_SLACK"]}                          {Setup slack target for DVA setup fix}
bbset tweaker.dva_setup_fix.HoldSlackTarget {[bbget ".tweaker.HOLD_TARGET_SLACK"]}                           {Hold slack target for DVA setup fix}
bbset tweaker.dva_setup_fix.LeakageImpactThreshold {0.02}                                                           {Define the leakage impact threshold for dva setup fix. Default: allow 5% impact}
bbset tweaker.dva_bottleneck_fix.AddlFixingOption {}                                                               {Additional fixing option for slkfix -bottleneck_robustness}
bbset tweaker.dva_bottleneck_fix.PowerDomainFilter {}                                                               {AVAIL: -ff -io -if -inv_if or empty for whole design}
bbset tweaker.dva_bottleneck_fix.LeakagePowerScenario {[bbget ".tweaker.LEAKAGE_POWER_SCENARIO"]}                      {name of one scenario for leakage power optimization}
bbset tweaker.dva_bottleneck_fix.SetupSlackTarget {[bbget ".tweaker.SETUP_TARGET_SLACK"]}                          {Setup slack target for DVA bottleneck fix}
bbset tweaker.dva_bottleneck_fix.HoldSlackTarget {[bbget ".tweaker.HOLD_TARGET_SLACK"]}                           {Hold slack target for DVA bottleneck fix}
bbset tweaker.dva_bottleneck_fix.LeakageImpactThreshold {0.02}                                                           {Define the leakage impact threshold for dva bottleneck fix. Default: allow 5% impact}
bbset tweaker.vmin_fix.AddlFixingOption {}                                                               {Additional fixing option for slkfix -vmin}
bbset tweaker.vmin_fix.PowerDomainFilter {}                                                               {AVAIL: -ff -io -if -inv_if or empty for whole design}
bbset tweaker.vmin_fix.Scenarios     {[bbget ".tweaker.SETUP_SCENARIOS"]}                             {Scnarios for Vmin fixing, must be a subset of SETUP_SCENARIOS}
bbset tweaker.vmin_fix.LeakagePowerScenario {[bbget ".tweaker.LEAKAGE_POWER_SCENARIO"]}                      {name of one scenario for leakage power optimization}
bbset tweaker.vmin_fix.VoltageSlackTarget {0.01}                                                           {Voltage slack target for vmin fix}
bbset tweaker.vmin_fix.VoltageSlackTargetByCorner {[bbget .twkrprep.vmin.VminTargetPerOPPs]}                       {Voltage slack target by corner for vmin fix. Format: [list {corner slack vdd_slack}]}
bbset tweaker.vmin_fix.SetupSlackTarget {[bbget ".tweaker.SETUP_TARGET_SLACK"]}                          {Setup slack target for vmin fix}
bbset tweaker.vmin_fix.HoldSlackTarget {[bbget ".tweaker.HOLD_TARGET_SLACK"]}                           {Hold slack target for vmin fix}
bbset tweaker.vmin_fix.LeakageImpactThreshold {0.02}                                                           {Define the leakage impact threshold for vmin fix. Default: allow 5% impact}
bbset tweaker.corner_pruning.Enable  {0}                                                              {Corner pruning is disabled by default -- When set to 1, Tweaker will extract dominant corners for run}
bbset tweaker.corner_pruning.SetupRatio {0.70}                                                           {Specifies the setup ratio (0.0 ~ 1.0) to determine dominant scenarios for setup fixing}
bbset tweaker.corner_pruning.HoldRatio {0.70}                                                           {Specifies the setup ratio (0.0 ~ 1.0) to determine dominant scenarios for hold fixing}
bbset tweaker.corner_pruning.ConstraintRatio {1.00}                                                           {Specifies the setup ratio (0.0 ~ 1.0) to determine dominant scenarios for DRV/constraint fixing}
bbset tweaker.corner_pruning.WatchScenarios {}                                                               {List of Dominant scenarios to watch. If non-empty, must be a subset of SETUP_SCENARIOS and HOLD_SCENARIOS}
bbset tweaker.corner_pruning.KeepScenarios {}                                                               {List of dominant scenarios which are not to be scaled by other scenarios. If non-empty, must be a subset of WatchScenarios}
bbset tweaker.corner_pruning.EnableSlackScaling {1}                                                              {Tweaker scales slack to dominant scenarios by default. Disable slack scaling by setting to 0}
bbset tweaker.hierarchy_pruning.Enable {0}                                                              {Hierarchy pruning is disabled by default. Set to 1 to enable}
bbset tweaker.hierarchy_pruning.ConfigFileName {cluster_config.tcl}                                             {Hierarchy pruning configure file name for each cluster}
bbset tweaker.hierarchy_pruning.BlockHierPrefix {}                                                               {Block-specific hierarchy-prefixess, each in the form: {<blockName> <hierPrefix>} }
bbset tweaker.hierarchy_pruning.ClusterList {[list ]}                                                        {# No Comment}  
bbset tweaker.hierarchy_pruning.SlackinBlockPathsFilter {-ff -inv_if}                                                    {Path-type filters used to fix cluster-interal timing violations. Option -design_list is added during FT Node creation}
bbset tweaker.hierarchy_pruning.SlackinTopPathsFilter {-ff}                                                            {Path-type filters used to fix top-internal and top-to-cluster timing violations. Option -design_list is added during FT node creation}
bbset tweaker.FAST2SLOW              {[bbget .tweaker.FAST2SLOW_HYBRID_ROW]}                          {Default fast-to-slow map}
bbset tweaker.SLOW2FAST              {[bbget .tweaker.SLOW2FAST_HYBRID_ROW]}                          {Default slow-to-fast map}
bbset tweaker.SIZING_MAPPING_RULE    {[bbget .tweaker.SIZING_MAPPING_RULE_HYBRID_ROW]}                {Default sizing mapping rule}
bbset tweaker.IR_MAPPING_RULE        {[bbget .tweaker.SIZING_MAPPING_RULE_HYBRID_ROW]}                {Enhanced IR mapping rule for n3e}
bbset twkrprep.Res                   {[bbget "sta.config.block.bb_sta.res"]}                          {Resources}     
bbset twkrprep.MAX_CORES             {32}                                                             {Max cores setting for set_host_options command before restore_session to improve runtime}
bbset twkrprep.ECO_DEBUG             {0}                                                              {Debug flag; on by default}
bbset twkrprep.SavePTSession         {0}                                                              {Save PT session after reporting}
bbset twkrprep.SavePTSessionOpts     {}                                                               {Options for saving PT session}
bbset twkrprep.EnableLogScreener     {1}                                                              {Enable logscreener after Twkrprep run}
bbset twkrprep.STA_RUN_DIR           {[bbget .info.BOB_RUN_DIR]/sta}                                  {Absolute path to STA run root directory}
bbset twkrprep.STA_TYPE              {sta}                                                            {Either sta or gba or pba. By default, the sessions are saved in sta (sta.bb_sta.<scenarioName>/session.pocvm)}
bbset twkrprep.STA_SESSION_NAME      {session.pocvm}                                                  {Session name}  
bbset twkrprep.STA_NOISE_SESSION_NAME {session.noise}                                                  {Session name}  
bbset twkrprep.STA_SCENARIOS         {[bbget "sta.runs"]}                                             {Scenarios to run Tweaker Dataprep on. Typically you use the same scenarios as STA.}
bbset twkrprep.PreReportHook         {}                                                               {The hook before dumping Tweaker reports}
bbset twkrprep.PostReportHook        {}                                                               {The hook after dumping Tweaker reports}
bbset twkrprep.EnableHyperTrace      {1}                                                              {Enable Hypertrace to speed up pba exh reporting runtime in PrimeTime}
bbset twkrprep.PATH_GROUPS           {}                                                               {List of path groups of interest. Empty list is all path groups.}
bbset twkrprep.TwkrSDFRptOption      {-no_derates -input_port_nets -output_port_nets -context verilog -compress gzip -version 3.0} {Required option for dumping SDF file}
bbset twkrprep.TwkrTimingRptOption   {-include_hierarchical_pins -input_pins -variation -derate}      {Required option for dumping Tweaker compatible timing report}
bbset twkrprep.PATH_FILTER_SESSION   {}                                                               {Scenario based filter for paths. Other than the specified value, everything else is a set_false_path (per scenario). Value is of the form \{\{scenario <setup | hold> <path_type>\} ..\}. path_type can be <reg_to_reg | reg_to_out | in_to_reg | in_to_out | none>. "none" means none of the paths are included. scenario means mode.corner. Default is \{\}, which means NO set_false_path is performed. e.g. \{\{* setup reg_to_reg\} \{* hold reg_to_reg\}\} which means only reg-to-reg paths for all (*) scenarios in setup and for hold}
bbset twkrprep.PATH_FILTER_SETUP     {reg_to_reg}                                                     {AVAIL: reg_to_reg | reg_to_out | in_to_reg | in_to_out | <empty>. Use reg_to_reg for useful_skew ECO}
bbset twkrprep.PATH_FILTER_HOLD      {reg_to_reg}                                                     {AVAIL: reg_to_reg | reg_to_out | in_to_reg | in_to_out | <empty>. Use reg_to_reg for useful_skew ECO}
bbset twkrprep.PT_ECO_FILE           {}                                                               {INTERNAL CAD FLOW USE ONLY -- Proposed ECO changes to apply prior to generating Tweaker reports. Used by Tweaker aggressive leakage flows}
bbset twkrprep.WHAT_IF_PT_ECO_FILE   {}                                                               {INTERNAL CAD FLOW USE ONLY -- Proposed what-if ECO changes to apply prior to generating Tweaker reports. Used by Tweaker aggressive leakage flows}
bbset twkrprep.PT_SPEF_FILE          {}                                                               {INTERNAL CAD FLOW USE ONLY -- Proposed SPEF parasitics to apply prior to generating Tweaker reports. Used by Tweaker aggressive leakage flows}
bbset twkrprep.WHAT_IF_PT_SPEF_FILE  {}                                                               {INTERNAL CAD FLOW USE ONLY -- Proposed what-if SPEF parasitics to apply prior to generating Tweaker reports. Used by Tweaker aggressive leakage flows}
bbset twkrprep.DUMP_SETUP_RPT        {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_HOLD_RPT         {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_MAX_TRANS_RPT    {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_MAX_CAP_RPT      {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_MAX_FANOUT_RPT   {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_NOISE_RPT        {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_DOUBLE_SWITCHING_RPT {0}                                                              {Disabled by default}
bbset twkrprep.DUMP_LATCH_RPT        {0}                                                              {Disabled by default}
bbset twkrprep.DUMP_CLOCK_RPT        {0}                                                              {Disabled by default}
bbset twkrprep.DUMP_SDF_WITH_ENABLED_ARCS_ONLY {1}                                                              {Enabled by default}
bbset twkrprep.DUMP_SUPPLY_NET_VOLTAGES {0}                                                              {Disabled by default}
bbset twkrprep.DUMP_VMIN_RPT         {[bbget "sta.config.setup_primeshield.enable"]}                  {Disabled by default}
bbset twkrprep.DUMP_DVA_RPT          {[bbget "sta.config.setup_primeshield.enable"]}                  {Disabled by default}
bbset twkrprep.DUMP_CLOCK_SURGERY_RPT {0}                                                              {Clock Surgery reports are disabled by default. Set to 1 to enable. Also set twkrprep.clock_surgery.SetupReports and twkrprep.clock_surgery.HoldReports if you want to fix setup and/or hold violations using clock surgery}
bbset twkrprep.SIG_DIGITS            {4}                                                              {Report significant digits}
bbset twkrprep.ENABLE_START_END_PAIR_REPORTS {0}                                                              {Setup/Hold reports by start-end-pair are disabled by default to improve twkrprep runtime. Enbale them by setting this to 1}
bbset twkrprep.START_END_PAIR_THRESHOLD {50000}                                                          {Limit start-end-pair reports only if num timing paths is less than this value}
bbset twkrprep.DESIGN_INST_THRESHOLD {5000000}                                                        {Start-end-Pair reports are only generated if num instances is less than this value}
bbset twkrprep.USEFUL_SKEW_ECO       {0}                                                              {Perform useful_skew clock eco optimisation}
bbset twkrprep.twf.DUMP_CLK_COMP     {1}                                                              {Include clock attribute in TWF reports by default}
bbset twkrprep.twf.DUMP_CLOCK_GROUP  {0}                                                              {Exclude clock groups in TWF reports by default}
bbset twkrprep.twf.DUMP_SDC_COMP     {1}                                                              {Inclde sdc in TWF reports by default}
bbset twkrprep.twf.DUMP_PT_SOURCE_GENERATED_CLOCK {0}                                                              {Exclude clock groups in TWF reports by default}
bbset twkrprep.twf.DUMP_EXTRA_TIMING_CHECK {0}                                                              {Exclude clock groups in TWF reports by default}
bbset twkrprep.twf.OPERATION         {-pba}                                                           {Either -pba or -normal}
bbset twkrprep.twf.PBA_SETUP_THRESHOLD {0.500}                                                          {Setup threshold}
bbset twkrprep.twf.PBA_HOLD_THRESHOLD {0.005}                                                          {Hold threshold}
bbset twkrprep.twf.PBA_SETUP_PATH_RATIO {0.1}                                                            {Ratio of setup paths to all paths}
bbset twkrprep.twf.PBA_HOLD_PATH_RATIO {0.1}                                                            {Ratio of hold paths to all paths}
bbset twkrprep.twf.CLOCK_LIST        {"*"}                                                            {All clocks are included by default}
bbset twkrprep.hold.ValidScenarios   {[bbget sta.metrics.reports.rpt_hold_scenarios]}                 {Only dump hold report on these scenarios}
bbset twkrprep.hold.NWORST           {5}                                                              {nworst paths for hold}
bbset twkrprep.hold.MAX_PATH         {2000000}                                                        {maximum number of paths for hold}
bbset twkrprep.hold.SLACK_LESSER_THAN {0.00}                                                           {hold slack lesser than to include. Change to 0.02 in case of useful_skew eco}
bbset twkrprep.hold.SLACK_GREATER_THAN {-inf}                                                           {hold slack greater than to include. default: -inf}
bbset twkrprep.hold.FULL_CLOCK_EXPANDED {0}                                                              {set to 1 to enable full-clock-expanded hold report. Change to 1 in case of useful_skew eco}
bbset twkrprep.hold.PBA_MODE         {path}                                                           {hold PBA mode} 
bbset twkrprep.hold.COVER_DESIGN     {1}                                                              {set to 1 to enable -cover_design option.}
bbset twkrprep.setup.ValidScenarios  {[bbget sta.metrics.reports.rpt_setup_scenarios]}                {Only dump setup report on these scenarios}
bbset twkrprep.setup.NWORST          {5}                                                              {nworst paths for setup}
bbset twkrprep.setup.MAX_PATH        {2000000}                                                        {maximum number of paths for setup}
bbset twkrprep.setup.SLACK_LESSER_THAN {0.00}                                                           {setup slack lesser than to include. Change to 0.02 in case of useful_skew eco}
bbset twkrprep.setup.SLACK_GREATER_THAN {-inf}                                                           {setup slack greater than to include. default: -inf}
bbset twkrprep.setup.FULL_CLOCK_EXPANDED {0}                                                              {set to 1 to enable full-clock-expanded setup report. Change to 1 in case of useful_skew eco}
bbset twkrprep.setup.PBA_MODE        {path}                                                           {setup PBA mode}
bbset twkrprep.setup.COVER_DESIGN    {1}                                                              {set to 1 to enable -cover_design option.}
bbset twkrprep.latch.FULL_CLOCK_EXPANDED {0}                                                              {set to 1 to enable full-clock-expanded latch report.Change to 1 for useful skew eco}
bbset twkrprep.latch.GZIP            {1}                                                              {Enable gzip of latch report by default}
bbset twkrprep.clock.GZIP            {1}                                                              {Enable gzip of clock report by default}
bbset twkrprep.clock.DUMP_IO_PATH    {0}                                                              {set to 1 to include IO paths in clock reports}
bbset twkrprep.vmin.ValidScenarios   {[bbget sta.metrics.reports.rpt_setup_scenarios]}                {Only dump setup report on these scenarios}
bbset twkrprep.vmin.SIG_DIGITS       {[bbget "twkrprep.SIG_DIGITS"]}                                  {Report significant digits}
bbset twkrprep.vmin.PATH_GROUPS      {}                                                               {List of path groups of interest. Empty list is all path groups.}
bbset twkrprep.vmin.PATH_FILTER      {reg_to_reg}                                                     {AVAIL: reg_to_reg | reg_to_out | in_to_reg | in_to_out | <empty>}
bbset twkrprep.vmin.NWORST           {20}                                                             {nworst paths for setup}
bbset twkrprep.vmin.MAX_PATH         {2000000}                                                        {maximum number of paths for setup}
bbset twkrprep.vmin.SLACK_LESSER_THAN {0.05}                                                           {setup slack lesser than to include, must be larger or equal to VDD_SLACK_LESSER_THAN}
bbset twkrprep.vmin.VDD_SLACK_LESSER_THAN {0.02}                                                           {vdd slack lesser than to include}
bbset twkrprep.vmin.PBA_MODE         {exh}                                                            {PBA mode}      
bbset twkrprep.vmin.NonDSLGCellLimit {1}                                                              {The limit of cells without DSLG in a timing path}
bbset twkrprep.vmin.BoundingFlow     {False}                                                          {Enable VSA bounding flow to speedup}
bbset twkrprep.vmin.VddSlackBound    {0.03}                                                           {Bounding vdd_slack used in VSA bounding flow}
bbset twkrprep.vmin.PostProcessSpeedup {True}                                                           {Enable VSA post-processing heuristic to speedup}
bbset twkrprep.vmin.VminTargetPerOPPs {
                                      { *-USOD-* 0.0250 0.0189 }
                                      { *-SOD-*  0.0300 0.0171 }
                                      { *-OD-*   0.0375 0.0153 }
                                      { *-NM-*   0.0500 0.0135 }
                                      { *-UD-*   0.0625 0.0117 }
                                      { *-SUD-*  0.0750 0.0108 }
                                      } {Format list of targets {OPP_NAME timing_slack_threshold vdd_slack_threshold}}
bbset twkrprep.dva.ValidScenarios    {[bbget sta.metrics.reports.rpt_setup_scenarios]}                {Only dump setup report on these scenarios}
bbset twkrprep.dva.SIG_DIGITS        {[bbget "twkrprep.SIG_DIGITS"]}                                  {Report significant digits}
bbset twkrprep.dva.PATH_FILTER       {reg_to_reg}                                                     {AVAIL: reg_to_reg | reg_to_out | in_to_reg | in_to_out | <empty>}
bbset twkrprep.dva.NWORST            {5}                                                              {nworst paths for setup}
bbset twkrprep.dva.MAX_PATH          {100000}                                                         {maximum number of paths for setup}
bbset twkrprep.dva.MAX_VIOLATION     {100000}                                                         {maximum number of paths for setup}
bbset twkrprep.dva.SLACK_LESSER_THAN {10}                                                             {setup slack lesser than to include}
bbset twkrprep.dva.PBA_MODE          {exh}                                                            {PBA mode}      
bbset twkrprep.dva.TARGET_SIGMA      {3}                                                              {Target sigma (integer) at each endpoint}
bbset twkrprep.dva.TARGET_SUCCESS    {0.95}                                                           {Target success rate (0.0 < JSR < 1.0) at design level}
bbset twkrprep.dva.SAMPLE_SIZE       {100000}                                                         {Sample size for design variable analysis}
bbset twkrprep.dva.BASELINE_SUCCESS  {[bbget "twkrprep.dva.TARGET_SUCCESS"]}                          {Baseline success rate for design variable analysis}
bbset twkrprep.dva.dvaSLACKPerOPPs   {}                                                               {Format list of targets {OPP_NAME timing_slack_threshold}}
bbset twkrprep.noise.ValidScenarios  {*}                                                              {Dump noise report on valid scenarios}
bbset twkrprep.noise.InvalidScenarios {*R2R*}                                                          {Skip noise report on invalid scenarios}
bbset twkrprep.clock_surgery.ValidScenarios {*}                                                              {Dump clock surgery reports on valid scenarios}
bbset twkrprep.clock_surgery.SCENARIOS {[bbget "twkrprep.sta_SCENARIOS"]}                               {Clock surgery reports are dumped for all twkrprep scenarios by default. If specified, must be a subset of trwkrprepsta_SCENARIOS}
bbset twkrprep.clock_surgery.SETUP_REPORTS {1}                                                              {Dump clock surgery reports to fix setup violations using clock_surgery. Enabled by default when DUMP_CLOCK_SURGERY is set to 1}
bbset twkrprep.clock_surgery.HOLD_REPORTS {0}                                                              {Dump clock surgery reports to fix hold violations using clock_surgery. Disabled by default when DUMP_CLOCK_SURGERY is set to 1}
bbset twkrprep.clock_surgery.CP_REPORTS {1}                                                              {Include clock surgery common-point fixing reports}
bbset twkrprep.clock_surgery.EP_REPORTS {1}                                                              {Include clock surgery endpoint fixing reports}
bbset twkrprep.clock_surgery.IGNORE_IO {0}                                                              {If set to 1, IOs will be ignored for clock surgery reporting}
bbset twkrprep.clock_surgery.PATH_GROUP {}                                                               {Path groups for clock_surgery}
bbset twkrprep.clock_surgery.setupReports.PBA_MODE {path}                                                           {PBA Mode for setup clock surgery. Supported: none, path, exhaustive}
bbset twkrprep.clock_surgery.setupReports.SETUP_SLACK_LESSER_THAN {0.0}                                                            {Clock surgery setup slack lesser than}
bbset twkrprep.clock_surgery.setupReports.INCLUDE_HOLD_REPORTS {1}                                                              {Include hold report for setup clock surgery}
bbset twkrprep.clock_surgery.setupReports.SETUP_MARGIN {0.1}                                                            {Setup margin for setup clock surgery. This is the maximum amount of setup that clock surgery will be able to recover}
bbset twkrprep.clock_surgery.setupReports.HOLD_MARGIN {0.1}                                                            {Hold  margin for setup clock surgery. This is the maximum amount of setup that clock surgery will be able to recover}
bbset twkrprep.clock_surgery.holdReports.PBA_MODE {path}                                                           {PBA Mode for hold clock surgery. Supported: none, path, exhaustive}
bbset twkrprep.clock_surgery.holdReports.HOLD_SLACK_LESSER_THAN {0.0}                                                            {Clock surgery hold slack lesser than}
bbset twkrprep.clock_surgery.holdReports.SETUP_MARGIN {0.1}                                                            {Setup margin for hold clock surgery. This is the maximum amount of hold that clock surgery will be able to recover}
bbset twkrprep.clock_surgery.holdReports.HOLD_MARGIN {0.1}                                                            {Hold  margin for hold clock surgery. This is the maximum amount of hold that clock surgery will be able to recover}
bbset pceco.pceco.PostCmd.MailNotification.Enable {0}                                                              {Enable mail notification for pceco node}
bbset pceco.pceco.PostCmd.MailNotification.Users {}                                                               {Mail notification receiver LDAP list. E.g. yumingy}
bbset pceco.pceco.PostCmd.MailNotification.Subject {PCECO completed}                                                {Mail notification subject}
bbset pceco.pceco.PostCmd.MailNotification.File {./summary.txt}                                                  {Mail notification template}
bbset pceco.config.EcoSessionName    {eco_session}                                                    {ECO session name}
bbset pceco.config.GenerateEcoSession {False}                                                          {Generate eco session at pceco stage}
bbset pceco.config.block.begin.core  {8}                                                              {CPU core}      
bbset pceco.config.block.begin.ram   {25000}                                                          {Memmory}       
bbset pceco.config.block.begin.resource {}                                                               {Resource}      
bbset pceco.config.block.begin.res   {CORES/[bbget pceco.config.block.begin.core] RAM/[bbget pceco.config.block.begin.ram] [bbget pceco.config.block.begin.resource]} {Resource setup for begin node}
bbset pceco.config.block.begin.enable {true}                                                           {Enable begin node}
bbset pceco.config.block.config.core {8}                                                              {CPU core}      
bbset pceco.config.block.config.ram  {25000}                                                          {Memmory}       
bbset pceco.config.block.config.resource {}                                                               {Resource}      
bbset pceco.config.block.config.res  {CORES/[bbget pceco.config.block.config.core] RAM/[bbget pceco.config.block.config.ram] [bbget pceco.config.block.config.resource]} {Resource setup for config node}
bbset pceco.config.block.config.enable {true}                                                           {Enable config node}
bbset pceco.config.block.config.PreFlow {outs/pre_flow.sh}                                               {Pre-flow shell script name}
bbset pceco.config.block.config.RunScript {outs/pceco.tcl}                                                 {PCECO run script name}
bbset pceco.config.block.config.PostFlow {outs/post_flow.sh}                                              {Post-flow shell script name}
bbset pceco.config.block.scen.core   {8}                                                              {CPU core}      
bbset pceco.config.block.scen.ram    {25000}                                                          {Memmory}       
bbset pceco.config.block.scen.resource {}                                                               {Resource}      
bbset pceco.config.block.scen.res    {CORES/[bbget pceco.config.block.scen.core] RAM/[bbget pceco.config.block.scen.ram] [bbget pceco.config.block.scen.resource]} {Resource setup for scen node}
bbset pceco.config.block.scen.enable {true}                                                           {Enable scen node}
bbset pceco.config.block.pceco.core  {32}                                                             {CPU core}      
bbset pceco.config.block.pceco.ram   {128000}                                                         {Memmory}       
bbset pceco.config.block.pceco.resource {}                                                               {Resource}      
bbset pceco.config.block.pceco.res   {CORES/[bbget pceco.config.block.pceco.core] RAM/[bbget pceco.config.block.pceco.ram] [bbget pceco.config.block.pceco.resource]} {Resource setup for pceco node}
bbset pceco.config.block.pceco.enable {true}                                                           {Enable pceco node}
bbset pceco.config.block.pceco.EnableLogScreener {false}                                                          {Enable logscreener at the end of pceco node}
bbset pceco.config.EcoDebug          {0}                                                              {Set > 1 to dump more information during run. Type: int}
bbset pceco.config.SdpProfiling      {0}                                                              {SDP profiling. Enable ONLY IF specifically requested by SNPS Support.}
bbset pceco.plugins.SearchPath       {[bbget .info.PD_TOOLS_DIR]/eco/pceco/plugins}                   {default PCECO plugin search path}
bbset pceco.plugins.EcoSessionSearchPath {[bbget .info.PD_TOOLS_DIR]/eco/pceco/write_eco_session}         {default write_eco_session plugin search path}
bbset pceco.plugins.create_tool_hook.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.create_fixing_recipes.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.create_fixing_recipes.CustomizedPCRoot {}                                                               {Full PC tool root for customized version}
bbset pceco.plugins.create_fixing_recipes.OOTBRecipe {[bbget .info.PROCESS_DIR]/eco/pceco/lib/tcl/OOTB/fix_default}   {# No Comment}  
bbset pceco.plugins.hook_before_libin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_before_libin.Hook {}                                                               {Hook source to be added to pre-libin hook}
bbset pceco.plugins.hook_after_libin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_after_libin.Hook {}                                                               {Hook source to be added to pre-libin hook}
bbset pceco.plugins.hook_before_lefin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_before_lefin.Hook {}                                                               {Hook source to be added to pre-lefin hook}
bbset pceco.plugins.hook_after_lefin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_after_lefin.Hook {}                                                               {Hook source to be added to pre-lefin hook}
bbset pceco.plugins.hook_before_verilogin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_before_verilogin.Hook {}                                                               {Hook source to be added to pre-verilogin hook}
bbset pceco.plugins.hook_after_verilogin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_after_verilogin.Hook {}                                                               {Hook source to be added to pre-verilogin hook}
bbset pceco.plugins.hook_before_defin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_before_defin.Hook {}                                                               {Hook source to be added to pre-defin hook}
bbset pceco.plugins.hook_after_defin.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_after_defin.Hook {}                                                               {Hook source to be added to pre-defin hook}
bbset pceco.plugins.hook_before_consistency.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_before_consistency.Hook {}                                                               {Hook source to be added to pre-consistency hook}
bbset pceco.plugins.hook_before_consistency.InstanceListFile {}                                                               {Create ECO domain on the given instance list only. Format: one-inst-name-per-line}
bbset pceco.plugins.hook_before_consistency.InstanceGuardband {}                                                               {Guardband for instance-based fixing}
bbset pceco.plugins.hook_before_consistency.CongestionAware {false}                                                          {Enable congestion-aware setup}
bbset pceco.plugins.hook_before_consistency.CongestionThreshold {0.8}                                                            {Congestion-aware threshold}
bbset pceco.plugins.hook_before_consistency.CongestionTopLayer {M13}                                                            {Top layer of congestion db}
bbset pceco.plugins.hook_before_consistency.CongestionBottomLayer {M1}                                                             {Bottom layer of congestion db}
bbset pceco.plugins.hook_before_consistency.CornerPruning {false}                                                          {Enable corner pruning}
bbset pceco.plugins.hook_before_consistency.PruningByNumber {11}                                                             {Target corner number. Type: Integer}
bbset pceco.plugins.hook_before_consistency.PruningSetupThreshold {0.9}                                                            {Target setup threshold to determine dominant corners. Range: 0.0-1.0}
bbset pceco.plugins.hook_before_consistency.PruningHoldThreshold {0.9}                                                            {Target hold threshold to determine dominant corners. Range: 0.0-1.0}
bbset pceco.plugins.hook_before_consistency.PruningConstraintThreshold {0.9}                                                            {Target constraint threshold to determine dominant corners. Range: 0.0-1.0}
bbset pceco.plugins.hook_before_consistency.CornerPruningOpt {}                                                               {Additional command option for corner pruning}
bbset pceco.plugins.hook_after_consistency.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hook_after_consistency.Hook {}                                                               {Hook source to be added to pre-consistency hook}
bbset pceco.plugins.hook_after_consistency.IgnoreIOTwfSlack {true}                                                           {Ignore IO slack during fixing}
bbset pceco.plugins.post_process_lic_file.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.node_slack_histogram.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.power_domain_checker.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.pceco_qor_collector.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.pceco_qor_collector.CustomPythonScript {}                                                               {Customized python script}
bbset pceco.plugins.pceco_qor_collector.CustomShellScript {}                                                               {Customized shell script}
bbset pceco.plugins.mail_notification.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.mail_notification.Users {}                                                               {Mail notification receiver full mail address list. E.g. yumingy@google.com}
bbset pceco.plugins.mail_notification.Subject {PCECO completed}                                                {Mail notification subject}
bbset pceco.plugins.mail_notification.File {rpts/metrics.tsv}                                               {Mail notification template}
bbset pceco.plugins.gchips_preamble.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_license.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_license.LicenseNames {ECO-APX ECO-BASE}                                               {Name for preserving PC license}
bbset pceco.plugins.setup_license.PreserveLicNum {}                                                               {Number of preserve PC license. Empty for tool auto reservation}
bbset pceco.plugins.setup_license.TimeOut {86400}                                                          {Waiting time of check-out license}
bbset pceco.plugins.set_host_options.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.set_host_options.WorkerSubmitCmd {}                                                               {Command to overwrite default job submission cmd for DMSA}
bbset pceco.plugins.set_host_options.WorkerResources {}                                                               {NC resources to overwrite the default setup in worker submission. E.g. "-r \\\"CORES/32 RAM/50000\\\""}
bbset pceco.plugins.set_host_options.WorkerAddlOption {}                                                               {Additional options for NC worker submit command}
bbset pceco.plugins.set_host_options.MaxCoresPerWorker {[bbget sta.config.block.bb_sta.core]}                           {The maximum number of CPU cores that can be used in current and remote processes}
bbset pceco.plugins.set_host_options.SMSACores {}                                                               {The maximum number of CPU cores that is used for SMSA fixing}
bbset pceco.plugins.enable_tbc.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.enable_tbc.ToolTbcList {}                                                               {TBC list with full path}
bbset pceco.plugins.enable_tbc.ProcessTbcList {
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/runtime.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/pc_power_eco_dt.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/PT_PC_google_start_hosts_fix_20240502.custom.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/enhance_hold_delay_insertion_runtime.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/enhance_the_consistency_check_hang_issue.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/fix_the_read_verilog_crash_issue_without_read_lef.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/apply_set_min_vt_width_when_restore_session_in_metal_eco.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/enable_advance_pb_pin_access_rule_check_during_eco.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/fix_power_net_check_runtime_issue_in_consistency_check.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/support_dump_and_read_for_set_scenario_options.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/speed_up_the_eco_runtime_with_enable_parallel_arc_pruning_1128.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/enable_to_bypass_missing_else_statment_in_icc2tcl.tbc
                                      [bbget .info.PROCESS_DIR]/eco/pceco/lib/tbc/enable_leakage_aware_timing_eco.tbc
                                      } {Process-dependent TBC list with full path. Be overwritten in process/[node]/vars/eco.var}
bbset pceco.plugins.setup_tool.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_tool.TechNode {2}                                                              {Technology node for tool setup. Available: 3e}
bbset pceco.plugins.setup_tool.PhysicalIgnoreCells {[bbget "eco.PhysicalIgnoreCells"]}                              {Physical cells to be ignored list}
bbset pceco.plugins.setup_tool.ForceKeepPhysicalCells {}                                                               {Always treat the listed cells as physical}
bbset pceco.plugins.setup_tool.AddlToolVariables {
                                      {_slk_power_eco_dont_legalize_physical_vio_cells false}
                                      {_compare_cell_equal_by_internal_pin_count true}
                                      {enable_cell_edge_spacing_rule_cross_cell_check true}
                                      {enable_cell_via0_avoid_power_strap true}
                                      {_inbound_cell_ears_no_check_abut_rule false}
                                      {_enable_vt_jog_rule false}
                                      {aspen_customized_eco_dir fixing_recipes}
                                      } {User define tool variables. Format: { {VAR_NAME VAR_VALUE} }}
bbset pceco.plugins.setup_ir_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_ir_eco.IRReportRoot {[bbfiles -bundles emir_and_eco -filetype emir4twkr -block [bbget pceco.TopCellName]]} {IR eco report root for ir eco}
bbset pceco.plugins.setup_ir_eco.IRReportScenario {}                                                               {Dynamic ir scenario. Support one scenario only }
bbset pceco.plugins.setup_ir_eco.TargetIRDrop {8}                                                              {Target dropped ratio for ir eco. Unit: percentage}
bbset pceco.plugins.setup_ir_eco.DomainGuardband {10}                                                             {Value of guardband option. Unit: um}
bbset pceco.plugins.setup_ir_eco.CoresForRHSC {1}                                                              {CPU cores for RHSC}
bbset pceco.plugins.setup_tool_recipe.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_tool_recipe.Path {[bbget .info.BOB_RUN_DIR]/pceco/pceco/fixing_recipes}           {Folder path for fixing recipes}
bbset pceco.plugins.setup_tool_hook.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_tool_hook.Path {[bbget .info.BOB_RUN_DIR]/pceco/pceco/pre_script}               {Folder path for pre-defined tool hooks}
bbset pceco.plugins.pt_cross_version.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.pt_cross_version.CustomizedPTShell {}                                                               {Full PT shell path for customized version}
bbset pceco.plugins.read_eco_session.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.read_eco_session.EcoSessionRoot {[bbfiles -bundles power_and_eco_sessions -category pceco -filetype power4pceco -block [bbget pceco.TopCellName]] [bbfiles -bundles sta_and_eco_sessions -category pceco -filetype sta4pceco -block [bbget pceco.TopCellName]]} {Eco session path. Eg. {.../main/power .../main/sta} Type:list}
bbset pceco.plugins.read_eco_session.EcoSessionPrefix {power_analysis.primepower sta.bb_sta setup.scenario}            {Eco session folder path prefix}
bbset pceco.plugins.read_eco_session.HierPrefix {}                                                               {Hier-prefix for sub-module name in top eco session}
bbset pceco.plugins.read_eco_session.PostRestoreSessionHook {}                                                               {Hook path for post-restore-session script}
bbset pceco.plugins.read_eco_session.AddlOption {}                                                               {Additional option for read_eco_session command}
bbset pceco.plugins.read_eco_session.EcoSessionSource {[bbget .info.BOB_RUN_DIR]/pceco/}                               {The pceco path for storing eco session}
bbset pceco.plugins.read_lef_list.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.read_lef_list.TechLefQuery {file_type=='techlef' && track=~'[bbget .Track]' && stack=='[bbget .Stack]' && rdl=='[bbget .TechRdlType]' && is_shdmim=='[bbget .TechIsShdmim]'} {Pattern for techlef file query}
bbset pceco.plugins.read_lef_list.TechFileQuery {file_type=='techfile' && tool=='icc2' && track=~'[bbget .Track]' && stack=='[bbget .Stack]' && rdl=='[bbget .TechRdlType]' && is_shdmim=='[bbget .TechIsShdmim]'} {Pattern for techfile file query}
bbset pceco.plugins.read_lef_list.AddlLefList {}                                                               {List of additional lef list}
bbset pceco.plugins.read_lef_list.UseTechFileFlow {true}                                                           {Read design rule from techfile (true) or techlef (false)}
bbset pceco.plugins.read_lef_list.ContinueOnError {False}                                                          {Show warning/error message instead of error-out. Default: False}
bbset pceco.plugins.read_upf.enable  {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.read_upf.Sources {}                                                               {User-defined upf files source that overwrites the default source from hierarchy. Format {{subblock1 upf1} {subblock2 upf2} ...}}
bbset pceco.plugins.read_upf.ContinueOnError {False}                                                          {Show warning/error message instead of error-out. Default: False}
bbset pceco.plugins.read_def_and_voltage_area_file.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.read_def_and_voltage_area_file.Sources {}                                                               {User-defined def files source that overwrites the default source from hierarchy. Format {{subblock1 def1 va1} {subblock2 def2 va2} ...}}
bbset pceco.plugins.read_def_and_voltage_area_file.SiteMapping {[bbget "eco.SiteNameMapping"]}                                  {Site-name mapping for FC blocks}
bbset pceco.plugins.read_def_and_voltage_area_file.SkipVoltageAreaFile {False}                                                          {Skip read voltage area file. Default: False}
bbset pceco.plugins.read_def_and_voltage_area_file.DefMissingVerilogCellsPhysical {False}                                                          {Treat cells in DEF but missing from Verilog as physical-cells. Default: False}
bbset pceco.plugins.read_def_and_voltage_area_file.DefPlaceOnly {False}                                                          {Only read placement from DEF file when set to True. Default: False}
bbset pceco.plugins.read_def_and_voltage_area_file.ContinueOnError {False}                                                          {Show warning/error message instead of error-out. Default: False}
bbset pceco.plugins.read_ndm.enable  {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.read_ndm.Sources {}                                                               {User-defined NDM source that overwrites the default source from hierarchy. Format {{subblock1 file1} {subblock2 file2} ...}}
bbset pceco.plugins.read_ndm.SiteMapping {[bbget "eco.SiteNameMapping"]}                                  {Site-name mapping for FC blocks}
bbset pceco.plugins.define_eco_corner.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.define_eco_corner.MergeCornerOption {false}                                                          {Force to merge setup/hold corner by set_merge_corner_options}
bbset pceco.plugins.setup_derate.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_derate.SMSADerate {true}                                                           {enable/disable SMSA derate setup}
bbset pceco.plugins.setup_derate.DMSADerate {true}                                                           {enable/disable SMSA derate setup}
bbset pceco.plugins.restore_smsa_session.enable {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.restore_smsa_session.SessionPath {}                                                               {SMSA session path}
bbset pceco.plugins.dmsa.enable      {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.dmsa.DMSAReport  {true}                                                           {Dump report when re-generating SMSA data}
bbset pceco.plugins.dmsa.NodeSlackRpt {false}                                                          {Dump node slack report when re-generating SMSA data}
bbset pceco.plugins.dmsa.SlackLesserThan {[bbget sta.config.pc_eco_session.SlackLesserThan]}              {slack-lesser-than threshold used while dumping eco session}
bbset pceco.plugins.dmsa.NworstMax   {[bbget sta.config.pc_eco_session.NworstMax]}                    {nworst threshold for max(setup) path used while dumping eco session }
bbset pceco.plugins.dmsa.NworstMin   {[bbget sta.config.pc_eco_session.NworstMin]}                    {nworst threshold for min(hold) path used while dumping eco session }
bbset pceco.plugins.dmsa.MaxPath     {[bbget sta.config.pc_eco_session.MaxPath]}                      {max path setup while dumping eco session }
bbset pceco.plugins.dmsa.ReportPBAMode {[bbget sta.config.pc_eco_session.PbaMode]}                      {Report PBA mode}
bbset pceco.plugins.dmsa.StartEndTypes {[bbget sta.config.pc_eco_session.StartEndTypes]}                {Type list for -start_end_types option used in reporting. Ava: in_to_out | in_to_reg | reg_to_out | reg_to_reg}
bbset pceco.plugins.dmsa.CoverDesign {[bbget sta.config.pc_eco_session.CoverDesign]}                  {Enable cover-design while dumping eco session}
bbset pceco.plugins.smsa_eco.enable  {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.smsa_eco.SMSADataFormat {[bbget sta.config.pc_eco_session.SMSADataFormat]}               {SMSA data format. Available: binary, ascii}
bbset pceco.plugins.smsa_eco.PathType {reg_to_reg}                                                     {Path type for timing path filter. Ava: internal, external, interface, interblock, reg_to_reg, and empty for all}
bbset pceco.plugins.smsa_eco.DRCType {reg_to_reg}                                                     {DRC type for drc path filter. Ava: reg_to_reg, internal, interface_wires, and empty for all}
bbset pceco.plugins.smsa_eco.PowerType {reg_to_reg}                                                     {Path type for path filter. Ava: internal, reg_to_reg, and empty for all}
bbset pceco.plugins.smsa_eco.PbaMode {[bbget sta.config.pc_eco_session.PbaMode]}                      {PBA mode for re-generating timing report. Available: none, path, exhaustive}
bbset pceco.plugins.smsa_eco.PathGroup {}                                                               {Build eco domain with the given path group only}
bbset pceco.plugins.smsa_eco.EndpointListFile {}                                                               {Define the endpoint list in smsa_eco plugin. Don't forget to add to path/drc/power type. Format: one line per endpoint}
bbset pceco.plugins.smsa_eco.EnableMetalEco {false}                                                          {Enable metal-only eco}
bbset pceco.plugins.smsa_eco.HierPrefix {[bbget pceco.plugins.read_eco_session.HierPrefix]}              {Hier-prefix for sub-module name in top eco session}
bbset pceco.plugins.smsa_eco.AddlOption {[bbget sta.config.pc_eco_session.AddlOption]}                   {Additional option for smsa_eco command}
bbset pceco.plugins.smsa_eco.EnableExtractMargin {False}                                                          {Enable extract margin for hold fixing}
bbset pceco.plugins.smsa_eco.TWFEnableRefinement {[bbget sta.config.pc_eco_session.TWFEnableRefinement]}          {# No Comment}  
bbset pceco.plugins.smsa_eco.EnableLeakageAwareTiming {False}                                                          {Enable leakage-awarw ECO, default: false}
bbset pceco.plugins.smsa_eco.LeakageImpactThreshold {0.001}                                                          {Default 0.1%. Leakage threshold = 100 mw * 0.001 = 0.1mw which means, leakage cannot be more than (100 + 0.1 = 100.1 mw ) at any time during the eco}
bbset pceco.plugins.setup_dont_use.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_dont_use.DontUseLibCell {*SVT *ELVT}                                                     {User-define dont-use lib-cell list}
bbset pceco.plugins.setup_dont_touch.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_dont_touch.DontTouchModule {}                                                               {User-define dont-touch module list}
bbset pceco.plugins.setup_dont_touch.DontTouchLibCell {*SVT *ELVT}                                                     {User-define dont-touch lib-cell list}
bbset pceco.plugins.setup_dont_touch.DontTouchInst {*DONT_TOUCH* *DONTTOUCH* *SPARE_FP_* *dont_touch* *donttouch*}  {User-define dont-touch instance list}
bbset pceco.plugins.setup_dont_touch.SizeOnlyCells {*SIZE_ONLY* *SIZEONLY* *size_only* *sizeonly*}                  {Instance name patterns to apply set_dont_touch_cell_by_sdc}
bbset pceco.plugins.eco_cell_types.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.eco_cell_types.BufferList {BUFF*}                                                          {Buffer list for repeater insertion}
bbset pceco.plugins.eco_cell_types.AonBufferList {PTBUFF*}                                                        {Always-on Buffer list for repeater insertion}
bbset pceco.plugins.eco_cell_types.InverterList {INV*}                                                           {Inverter list for repeater insertion}
bbset pceco.plugins.eco_cell_types.DelayCellList {BUFF* DEL*}                                                     {Delay cell list for delay insertion}
bbset pceco.plugins.eco_cell_types.MECOSpareCells {*SPARE_FP_*}                                                    {Existing spare cells which can be used for metal eco}
bbset pceco.plugins.eco_cell_types.MECOTieCells {GTIE*}                                                          {Tie-low/high cells for metal-only eco}
bbset pceco.plugins.eco_cell_types.MECOGateArrayBodyCell {}                                                               {Gate-array body cells to use during metal-eco}
bbset pceco.plugins.eco_cell_types.MECOGateArrayFuncCell {}                                                               {Gate-array functional cells to use during metal-eco}
bbset pceco.plugins.general_eco_vars.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.general_eco_vars.SizingMaxShift {1}                                                              {Max shift distance for sizing cell}
bbset pceco.plugins.general_eco_vars.PruneBufList {true}                                                           {Pruning buffer list to speec up ECO runtime}
bbset pceco.plugins.general_eco_vars.MaxTransLimitDerate {0.95}                                                           {Max transition limit derate threshold}
bbset pceco.plugins.general_eco_vars.WatchDominateCorer {true}                                                           {Watch dominate corner slack in auto fixing}
bbset pceco.plugins.general_eco_vars.WatchTimingWindowOnly {true}                                                           {Watch timing window instead of path slack while fixing}
bbset pceco.plugins.general_eco_vars.UndoPredictImpact {false}                                                          {Undo predict impact in auto fix. Recommend for timing eco only}
bbset pceco.plugins.general_eco_vars.ECOOnDefFixedInst {false}                                                          {Default: false to skip ECO on def-fixed instance}
bbset pceco.plugins.general_eco_vars.ReportLimit {99999}                                                          {Max number of reporting count}
bbset pceco.plugins.general_eco_vars.CellMappingRule {}                                                               {Cell mapping rule for swapping}
bbset pceco.plugins.check_design.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.check_design.CheckPowerDomain {true}                                                           {Check logic/physical power domain match or not}
bbset pceco.plugins.save_pre_eco_session.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.pre_eco_interactive.enable {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.switch_to_dmsa.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.switch_to_dmsa.SlackLesserThan {[bbget sta.config.pc_eco_session.SlackLesserThan]}              {slack-lesser-than threshold used while dumping eco session}
bbset pceco.plugins.switch_to_dmsa.NworstMax {[bbget sta.config.pc_eco_session.NworstMax]}                    {nworst threshold for max(setup) path used while dumping eco session }
bbset pceco.plugins.switch_to_dmsa.NworstMin {[bbget sta.config.pc_eco_session.NworstMin]}                    {nworst threshold for min(hold) path used while dumping eco session }
bbset pceco.plugins.switch_to_dmsa.MaxPath {[bbget sta.config.pc_eco_session.MaxPath]}                      {max path setup while dumping eco session }
bbset pceco.plugins.switch_to_dmsa.StartEndTypes {[bbget sta.config.pc_eco_session.StartEndTypes]}                {Type list for -start_end_types option used in reporting. Ava: in_to_out | in_to_reg | reg_to_out | reg_to_reg}
bbset pceco.plugins.switch_to_dmsa.CoverDesign {[bbget sta.config.pc_eco_session.CoverDesign]}                  {Enable cover-design while dumping eco session}
bbset pceco.plugins.eco_cells_derate.enable {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.dmsa_report.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.dmsa_report.ReportPBAMode {[bbget pceco.plugins.smsa_eco.PbaMode]}                         {Report PBA mode}
bbset pceco.plugins.switch_to_smsa.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.switch_to_smsa.SMSADataFormat {[bbget pceco.plugins.smsa_eco.SMSADataFormat]}                  {SMSA data format. Available: binary, ascii}
bbset pceco.plugins.switch_to_smsa.PathType {[bbget pceco.plugins.smsa_eco.PathType]}                        {Path type for path filter}
bbset pceco.plugins.switch_to_smsa.DRCType {[bbget pceco.plugins.smsa_eco.DRCType]}                         {DRC type for drc path filter. Ava: reg_to_reg, internal, interface_wires, and empty for all}
bbset pceco.plugins.switch_to_smsa.PowerType {[bbget pceco.plugins.smsa_eco.PowerType]}                       {Path type for path filter. Ava: internal, reg_to_reg, and empty for all}
bbset pceco.plugins.switch_to_smsa.PbaMode {[bbget pceco.plugins.smsa_eco.PbaMode]}                         {PBA mode for re-generating timing report. Available: none, path, exhaustive}
bbset pceco.plugins.switch_to_smsa.PathGroup {[bbget pceco.plugins.smsa_eco.PathGroup]}                       {Report violation for the given path group only}
bbset pceco.plugins.switch_to_smsa.EndpointListFile {[bbget pceco.plugins.smsa_eco.EndpointListFile]}                {If defined, flow skips all path filter and fixes the endpoint list only. Format: one line per endpoint}
bbset pceco.plugins.switch_to_smsa.HierPrefix {[bbget pceco.plugins.read_eco_session.HierPrefix]}              {Hier-prefix for sub-module name in top eco session}
bbset pceco.plugins.switch_to_smsa.AddlOption {[bbget pceco.plugins.smsa_eco.AddlOption]}                      {Additional option for switch_to_smsa command}
bbset pceco.plugins.switch_to_smsa.EnableExtractMargin {[pceco.plugins.smsa_eco.EnableExtractMargin]}                   {Enable extract margin for hold fixing}
bbset pceco.plugins.pre_eco_smsa_report.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.max_cap_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.max_cap_eco.ValidMethods {
                                      size_cell
                                      insert_buffer
                                      insert_inverter_pair
                                      recovery
                                      } {Available ECO methods for max_cap eco}
bbset pceco.plugins.max_cap_eco.Methods {size_cell insert_buffer}                                        {Method list for max_cap eco}
bbset pceco.plugins.max_cap_eco.SizeMethods {vt sizing}                                                      {Size method list for setup eco Ava: vt sizing vt_sizing function}
bbset pceco.plugins.max_cap_eco.SizeMaxShift {1}                                                              {Max shift distance for size_cell method, including vt-swap and sizing}
bbset pceco.plugins.max_cap_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in max_cap eco}
bbset pceco.plugins.max_cap_eco.DRCType {[bbget pceco.plugins.smsa_eco.DRCType]}                         {Path type for path filter. Ava: reg_to_reg, internal, interface_wires}
bbset pceco.plugins.max_cap_eco.EndpointListFile {}                                                               {If defined, flow skips DRCType and fixes the endpoint list only. Format: one line per endpoint}
bbset pceco.plugins.max_cap_eco.BufferList {[concat [bbget pceco.plugins.eco_cell_types.BufferList] [bbget pceco.plugins.eco_cell_types.AonBufferList]]} {Buffer list used in max_cap eco}
bbset pceco.plugins.max_cap_eco.PhysicalMode {open_site}                                                      {Usage of physical data to size or insert cells. Ava: none, open_site, occupied_site, freeze_silicon}
bbset pceco.plugins.max_cap_eco.SetupMargin {}                                                               {Preserved setup margin for fixing}
bbset pceco.plugins.max_cap_eco.HoldMargin {}                                                               {Preserved hold margin for fixing}
bbset pceco.plugins.max_cap_eco.CellMappingRule {[bbget pceco.plugins.general_eco_vars.CellMappingRule]}         {Cell mapping rule for swapping}
bbset pceco.plugins.max_cap_eco.CellType {}                                                               {List of ECO cell types. Ava: combinational clock_network}
bbset pceco.plugins.max_cap_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.max_cap_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.max_cap_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.max_tran_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.max_tran_eco.ValidMethods {
                                      size_cell
                                      insert_buffer
                                      insert_inverter_pair
                                      recovery
                                      } {Available ECO methods for max_tran eco}
bbset pceco.plugins.max_tran_eco.Methods {size_cell insert_buffer}                                        {Method list for max_tran eco}
bbset pceco.plugins.max_tran_eco.SizeMethods {vt sizing}                                                      {Size method list for setup eco Ava: vt sizing vt_sizing function}
bbset pceco.plugins.max_tran_eco.SizeMaxShift {1}                                                              {Max shift distance for size_cell method, including vt-swap and sizing}
bbset pceco.plugins.max_tran_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in max_trans eco}
bbset pceco.plugins.max_tran_eco.DRCType {[bbget pceco.plugins.smsa_eco.DRCType]}                         {Path type for path filter. Ava: reg_to_reg, internal, interface_wires}
bbset pceco.plugins.max_tran_eco.EndpointListFile {}                                                               {If defined, flow skips DRCType and fixes the endpoint list only. Format: one line per endpoint}
bbset pceco.plugins.max_tran_eco.BufferList {[concat [bbget pceco.plugins.eco_cell_types.BufferList] [bbget pceco.plugins.eco_cell_types.AonBufferList]]} {Buffer list used in max_tran eco}
bbset pceco.plugins.max_tran_eco.PhysicalMode {open_site}                                                      {Usage of physical data to size or insert cells. Ava: none, open_site, occupied_site, freeze_silicon}
bbset pceco.plugins.max_tran_eco.SetupMargin {}                                                               {Preserved setup margin for fixing}
bbset pceco.plugins.max_tran_eco.HoldMargin {}                                                               {Preserved hold margin for fixing}
bbset pceco.plugins.max_tran_eco.CellMappingRule {[bbget pceco.plugins.general_eco_vars.CellMappingRule]}         {Cell mapping rule for swapping}
bbset pceco.plugins.max_tran_eco.CellType {}                                                               {List of ECO cell types. Ava: combinational clock_network}
bbset pceco.plugins.max_tran_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.max_tran_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.max_tran_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.setup_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.setup_eco.ValidMethods {
                                      size_cell
                                      size_cell_side_load
                                      insert_buffer
                                      insert_buffer_on_route
                                      insert_inverter_pair
                                      insert_buffer_at_load_pins
                                      insert_buffer_at_driver_pins
                                      bypass_buffer
                                      recovery
                                      } {Available ECO methods for setup eco}
bbset pceco.plugins.setup_eco.Methods {size_cell insert_buffer}                                        {Method list for setup eco}
bbset pceco.plugins.setup_eco.SizeMethods {vt sizing}                                                      {Size method list for setup eco Ava: vt sizing vt_sizing function}
bbset pceco.plugins.setup_eco.SizeMaxShift {1}                                                              {Max shift distance for size_cell method, including vt-swap and sizing}
bbset pceco.plugins.setup_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in setup eco}
bbset pceco.plugins.setup_eco.BufferList {[concat [bbget pceco.plugins.eco_cell_types.BufferList] [bbget pceco.plugins.eco_cell_types.AonBufferList]]} {Buffer list used in setup eco}
bbset pceco.plugins.setup_eco.PhysicalMode {open_site}                                                      {Usage of physical data to size or insert cells. Ava: none, open_site, occupied_site, freeze_silicon}
bbset pceco.plugins.setup_eco.SetupMargin {}                                                               {Preserved setup margin for fixing}
bbset pceco.plugins.setup_eco.HoldMargin {}                                                               {Preserved hold margin for fixing}
bbset pceco.plugins.setup_eco.SlackLesserThan {}                                                               {Slack filter to select path for fixing}
bbset pceco.plugins.setup_eco.SlackGreaterThan {}                                                               {Slack filter to select path for fixing}
bbset pceco.plugins.setup_eco.PathType {[bbget .pceco.plugins.smsa_eco.PathType]}                       {Path type for path filter. Ava: internal, external, interface, interblock, reg_to_reg}
bbset pceco.plugins.setup_eco.EndpointListFile {}                                                               {If defined, flow skips PathType and fixes the endpoint list only. Format: one line per endpoint}
bbset pceco.plugins.setup_eco.PathGroup {[bbget pceco.plugins.smsa_eco.PathGroup]}                       {Report violation for the given path group only}
bbset pceco.plugins.setup_eco.PathOptions {}                                                               {Path selection options for get_timing_path command. Ava: -from, -to, -group, -pba_mode}
bbset pceco.plugins.setup_eco.CellMappingRule {[bbget pceco.plugins.general_eco_vars.CellMappingRule]}         {Cell mapping rule for swapping}
bbset pceco.plugins.setup_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.setup_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.setup_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.hold_eco.enable  {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.hold_eco.ValidMethods {
                                      size_cell
                                      size_cell_side_load
                                      insert_buffer
                                      insert_buffer_on_route
                                      insert_inverter_pair
                                      insert_buffer_at_load_pins
                                      insert_buffer_at_driver_pins
                                      bypass_buffer
                                      } {Available ECO methods for hold eco}
bbset pceco.plugins.hold_eco.Methods {size_cell insert_buffer}                                        {Method list for hold eco}
bbset pceco.plugins.hold_eco.SizeMethods {vt sizing}                                                      {Size method list for setup eco Ava: vt sizing vt_sizing function}
bbset pceco.plugins.hold_eco.SizeMaxShift {0}                                                              {Max shift distance for size_cell method, including vt-swap and sizing}
bbset pceco.plugins.hold_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in hold eco}
bbset pceco.plugins.hold_eco.BufferList {[bbget pceco.plugins.eco_cell_types.DelayCellList]}             {Buffer list used in hold eco}
bbset pceco.plugins.hold_eco.PhysicalMode {open_site}                                                      {Usage of physical data to size or insert cells. Ava: none, open_site, occupied_site, freeze_silicon}
bbset pceco.plugins.hold_eco.SetupMargin {}                                                               {Preserved setup margin for fixing}
bbset pceco.plugins.hold_eco.HoldMargin {}                                                               {Preserved hold margin for fixing}
bbset pceco.plugins.hold_eco.SlackLesserThan {}                                                               {Slack filter to select path for fixing}
bbset pceco.plugins.hold_eco.SlackGreaterThan {}                                                               {Slack filter to select path for fixing}
bbset pceco.plugins.hold_eco.PathType {[bbget .pceco.plugins.smsa_eco.PathType]}                       {Path type for path filter. Ava: internal, external, interface, interblock, reg_to_reg}
bbset pceco.plugins.hold_eco.EndpointListFile {}                                                               {If defined, flow skips PathType and fixes the endpoint list only. Format: one line per endpoint}
bbset pceco.plugins.hold_eco.PathGroup {[bbget pceco.plugins.smsa_eco.PathGroup]}                       {# Report violation for the given path group only}
bbset pceco.plugins.hold_eco.PathOptions {}                                                               {Path selection options for get_timing_path command. Ava: -from, -to, -group, -pba_mode}
bbset pceco.plugins.hold_eco.CellMappingRule {[bbget pceco.plugins.general_eco_vars.CellMappingRule]}         {Cell mapping rule for swapping}
bbset pceco.plugins.hold_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.hold_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.hold_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.leakage_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.leakage_eco.ValidMethods {
                                      size_cell
                                      remove_buffer
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.leakage_eco.Methods {size_cell}                                                      {Method list for leakage eco}
bbset pceco.plugins.leakage_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in leakage eco}
bbset pceco.plugins.leakage_eco.CellType {combinational}                                                  {List of ECO cell types. Ava: combinational sequential}
bbset pceco.plugins.leakage_eco.MergeTypes {false}                                                          {Merge multiple cells types into one fixing command}
bbset pceco.plugins.leakage_eco.PowerType {[bbget .pceco.plugins.smsa_eco.PowerType]}                      {Path type for path filter. Ava: internal, reg_to_reg}
bbset pceco.plugins.leakage_eco.UseCellPattern {True}                                                           {Use library default functional rule (False) or pattern_priority (True)}
bbset pceco.plugins.leakage_eco.SetupMargin {}                                                               {Specifies the amount of setup timing margin required to keep during power recovery }
bbset pceco.plugins.leakage_eco.HoldMargin {}                                                               {Specifies the amount of setup timing margin required to keep during power recovery }
bbset pceco.plugins.leakage_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.leakage_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.leakage_eco.CellMappingRule {}                                                               {Cell mapping rule definition}
bbset pceco.plugins.leakage_eco.VtPattern {SVT LVTLL LVT ULVTLL ULVT ELVT}                                 {Library cell pattern from highest to lowest priority used with pattern_priority}
bbset pceco.plugins.leakage_eco.MaxShift {0}                                                              {Max shift for leakage recovery. Unit: um}
bbset pceco.plugins.leakage_eco.VtTypeList {*SVT *LVTLL *LVT *ULVTLL *ULVT *ELVT}                           {VT type name list for leakage eco reference}
bbset pceco.plugins.leakage_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.dynamic_power_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.dynamic_power_eco.ValidMethods {
                                      size_cell
                                      remove_buffer
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.dynamic_power_eco.Methods {size_cell}                                                      {Method list for leakage eco}
bbset pceco.plugins.dynamic_power_eco.SAIFFile {}                                                               {SAIF file for dynamic power report}
bbset pceco.plugins.dynamic_power_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in dynamic eco}
bbset pceco.plugins.dynamic_power_eco.CellType {combinational}                                                  {List of ECO cell types. Ava: combinational sequential}
bbset pceco.plugins.dynamic_power_eco.PowerType {[bbget pceco.plugins.smsa_eco.PowerType]}                       {Path type for path filter. Ava: internal, reg_to_reg}
bbset pceco.plugins.dynamic_power_eco.UseCellPattern {False}                                                          {Use library default functional rule (False) or pattern_priority (True)}
bbset pceco.plugins.dynamic_power_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.dynamic_power_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.dynamic_power_eco.ContinueOnError {False}                                                          {Show warning/error message instead of error-out. Default: False}
bbset pceco.plugins.dynamic_power_eco.VtPattern {SVT LVTLL LVT ULVTLL ULVT ELVT}                                 {Library cell pattern from highest to lowest priority used with pattern_priority}
bbset pceco.plugins.dynamic_power_eco.MaxShift {0}                                                              {Max shift for leakage recovery. Unit: um}
bbset pceco.plugins.dynamic_power_eco.VtTypeList {*SVT *LVTLL *LVT *ULVTLL *ULVT *ELVT}                           {VT type name list for leakage eco reference}
bbset pceco.plugins.dynamic_power_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.area_eco.enable  {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.area_eco.ValidMethods {
                                      size_cell
                                      remove_cell
                                      defrag
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.area_eco.Methods {size_cell remove_cell defrag}                                   {Method list for leakage eco}
bbset pceco.plugins.area_eco.EcoDesignList {[bbget pceco.EcoDesignList]}                                    {Design list used in leakage eco}
bbset pceco.plugins.area_eco.SetupMargin {0.025}                                                          {Setup margin for area eco}
bbset pceco.plugins.area_eco.HoldMargin {0.0}                                                            {Hold margin for area eco}
bbset pceco.plugins.area_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.area_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.area_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.area_eco.Windows {}                                                               {Define a list of bbox that run area recovery in bbox region. Format: [list {llx1 lly1 urx1 ury1}  {llx2 lly2 urx2 ury2}  ...] }
bbset pceco.plugins.area_eco.CustRecipe {[bbget .info.PD_TOOLS_DIR]/eco/pceco/lib/tcl/area_eco/fix_eco_area.tcl} {Define area recovery recipe}
bbset pceco.plugins.clock_surgery_eco.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.clock_surgery_eco.ValidMethods {
                                      clock_surgery_common
                                      clock_surgery_endpoint
                                      insert_buffer
                                      insert_inverter_pair
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.clock_surgery_eco.Methods {clock_surgery_common clock_surgery_endpoint}                    {Method list for leakage eco}
bbset pceco.plugins.clock_surgery_eco.BufferList {[concat [bbget pceco.plugins.eco_cell_types.BufferList] [bbget pceco.plugins.eco_cell_types.InverterList] [bbget pceco.plugins.eco_cell_types.DelayCellList]]} {Buffer list used in setup eco}
bbset pceco.plugins.clock_surgery_eco.CellType {clock_network}                                                  {clock path type}
bbset pceco.plugins.clock_surgery_eco.MaxPositiveSlack {[bbget pceco.plugins.clock_surgery_eco.RptSetupSlackLesserThan]} {# No Comment}  
bbset pceco.plugins.clock_surgery_eco.EcoDesignList {}                                                               {Design list used in leakage eco}
bbset pceco.plugins.clock_surgery_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.clock_surgery_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.clock_surgery_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.clock_surgery_eco.RptSetupPath {1}                                                              {Generate setup path report for clock surgery}
bbset pceco.plugins.clock_surgery_eco.RptHoldPath {0}                                                              {Generate hold path report for clock surgery}
bbset pceco.plugins.clock_surgery_eco.RptPathGroupOpt {all_path_group}                                                 {Path group option for clock surgery report}
bbset pceco.plugins.clock_surgery_eco.RptSetupSlackLesserThan {0.040}                                                          {Slack-lesser-than threshold for setup path report}
bbset pceco.plugins.clock_surgery_eco.RptHoldSlackLesserThan {0.040}                                                          {Slack-lesser-than threshold for hold path report}
bbset pceco.plugins.clock_surgery_eco.RptHoldReportForSetup {1}                                                              {hold_report_for_setup_option used in clock surgery report}
bbset pceco.plugins.clock_surgery_eco.RptIgnoreIo {1}                                                              {Ignore IO option used in clock surgery report}
bbset pceco.plugins.clock_surgery_eco.RptDumpCommonEp {0}                                                              {Dumping report with both common endpoint, used in clock surgery report}
bbset pceco.plugins.vmin_eco.enable  {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.vmin_eco.ValidMethods {
                                      size_cell
                                      size_cell_side_load
                                      bypass_buffer
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.vmin_eco.Methods {size_cell size_cell_side_load bypass_buffer}                    {Method list for leakage eco}
bbset pceco.plugins.vmin_eco.EcoDesignList {}                                                               {Design list used in leakage eco}
bbset pceco.plugins.vmin_eco.CellType {combinational sequential}                                       {List of ECO cell types. Ava: combinational sequential}
bbset pceco.plugins.vmin_eco.SetupMargin {0.0}                                                            {Setup margin for vmin eco}
bbset pceco.plugins.vmin_eco.HoldMargin {0.0}                                                            {Hold margin for vmin eco}
bbset pceco.plugins.vmin_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.vmin_eco.Timeout {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.vmin_eco.VminTarget {0.01}                                                           {Default voltage slack target for vmin fix}
bbset pceco.plugins.vmin_eco.VminTargetPerOPPs {[bbget .twkrprep.vmin.VminTargetPerOPPs]}                       {Voltage slack target by corner for vmin fix. Format: [list {corner slack vdd_slack}]}
bbset pceco.plugins.vmin_eco.LeakageImpactThreshold {0.05}                                                           {Define the leakage impact threshold for vmin fix. Default: allow 5% impact}
bbset pceco.plugins.vmin_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.vmin_eco.RptNWorst {50}                                                             {nworst threshold for vmin report}
bbset pceco.plugins.vmin_eco.RptMaxViolator {1000000}                                                        {Max violators for vmin report}
bbset pceco.plugins.vmin_eco.RptVddSlackLesserThan {0.05}                                                           {Vdd-slack-lesser-than threshold for vmin report}
bbset pceco.plugins.vmin_eco.RptSlackLesserThan {0.02}                                                           {Slack-lesser-than for vmin report}
bbset pceco.plugins.vmin_eco.NonDSLGCellLimit {1}                                                              {The limit of cells without DSLG in a timing path}
bbset pceco.plugins.jsr_eco.enable   {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.jsr_eco.ValidMethods {
                                      size_cell
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.jsr_eco.Methods  {size_cell}                                                      {Method list for leakage eco}
bbset pceco.plugins.jsr_eco.Type     {dva_setup}                                                      {JSR fixing type: Ava: dva_setup|dva_hold}
bbset pceco.plugins.jsr_eco.BufferList {[bbget pceco.plugins.eco_cell_types.BufferList]}                {Buffer list used in hold eco}
bbset pceco.plugins.jsr_eco.EcoDesignList {}                                                               {Design list used in leakage eco}
bbset pceco.plugins.jsr_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.jsr_eco.Timeout  {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.jsr_eco.LeakageImpactThreshold {0.05}                                                           {Define the leakage impact threshold for jsr fix. Default: allow 5% impact}
bbset pceco.plugins.jsr_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.jsr_eco.RptNWorst {5}                                                              {nworst threshold for jsr report}
bbset pceco.plugins.jsr_eco.RptMaxViolator {1000000}                                                        {Max violators for jsr report}
bbset pceco.plugins.jsr_eco.RptSlackLesserThan {0.00}                                                           {Slack-lesser-than for jsr report}
bbset pceco.plugins.jsr_eco.RptSampleSize {1000000}                                                        {Sample size for jsr report}
bbset pceco.plugins.ir_eco.enable    {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.ir_eco.ValidMethods {
                                      size_cell
                                      coldspot_position
                                      moving
                                      } {Available ECO methods for leakage eco. Either one but not both}
bbset pceco.plugins.ir_eco.Methods   {size_cell coldspot_position}                                    {Method list for leakage eco}
bbset pceco.plugins.ir_eco.EcoDesignList {}                                                               {Design list used in leakage eco}
bbset pceco.plugins.ir_eco.CellType  {combinational sequential}                                       {List of ECO cell types. Ava: combinational sequential}
bbset pceco.plugins.ir_eco.PhysicalMode {open_site}                                                      {Usage of physical data to size or insert cells. Ava: none, open_site, occupied_site, freeze_silicon}
bbset pceco.plugins.ir_eco.SetupTarget {0.005}                                                          {Setup target slack}
bbset pceco.plugins.ir_eco.HoldTarget {0.0}                                                            {Hold target slack}
bbset pceco.plugins.ir_eco.IgnoreDrc {false}                                                          {Fixing with ignoring DRC}
bbset pceco.plugins.ir_eco.StageReport {true}                                                           {Dump stage reports}
bbset pceco.plugins.ir_eco.Timeout   {}                                                               {A timeout limit for fixing. Unit: minutes}
bbset pceco.plugins.ir_eco.AddlOption {}                                                               {Additional option for fixing command}
bbset pceco.plugins.post_eco_smsa_report.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.incr_eco_tcl.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.write_eco_tcl.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.write_eco_tcl.ValidEcoTclFormat {innovus icc2 pt}                                                {List of valid formats in which ECO Tcl can be written. Type: list}
bbset pceco.plugins.write_eco_tcl.EcoTclFormat {icc2}                                                           {Target formats in which ECO Tcl is to be written. Type: list}
bbset pceco.plugins.write_eco_tcl.EcoTclPrefix {eco}                                                            {Prefix name used in ECO tcl: outs/{top_block_name}.{prefix}.{format}.tcl}
bbset pceco.plugins.write_eco_tcl.InvTclProc {[bbget info.PROCESS_DIR]/eco/pceco/lib/tcl/invs_eco_proc/pc_invs_proc_H130.tcl} {Pre-defined proc for Invs ECO tcl}
bbset pceco.plugins.save_post_eco_session.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.post_eco_interactive.enable {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.whatif_dmsa.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.whatif_eco_cells_derate.enable {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.whatif_dmsa_report_node_slack.enable {false}                                                          {enable/disable this plugin}
bbset pceco.plugins.whatif_dmsa_report.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.whatif_dmsa_report.ReportPBAMode {[bbget pceco.plugins.smsa_eco.PbaMode]}                         {Report PBA mode}
bbset pceco.plugins.whatif_dmsa_report.SlackLesserThan {[bbget pceco.plugins.switch_to_dmsa.SlackLesserThan]}           {slack-lesser-than threshold used while dumping eco session}
bbset pceco.plugins.whatif_dmsa_report.NworstMax {[bbget pceco.plugins.switch_to_dmsa.NworstMax]}                 {nworst threshold for max(setup) path used while dumping eco session }
bbset pceco.plugins.whatif_dmsa_report.NworstMin {[bbget pceco.plugins.switch_to_dmsa.NworstMin]}                 {nworst threshold for min(hold) path used while dumping eco session }
bbset pceco.plugins.whatif_dmsa_report.MaxPath {[bbget pceco.plugins.switch_to_dmsa.MaxPath]}                   {max path setup while dumping eco session }
bbset pceco.plugins.whatif_dmsa_report.StartEndTypes {[bbget pceco.plugins.switch_to_dmsa.StartEndTypes]}             {Type list for -start_end_types option used in reporting. Ava: in_to_out | in_to_reg | reg_to_out | reg_to_reg}
bbset pceco.plugins.list_licenses.enable {true}                                                           {enable/disable this plugin}
bbset pceco.plugins.exit.enable      {true}                                                           {enable/disable this plugin}
bbset pceco.derate.DerateYaml        {[bbfiles -bundles sta_and_eco_sessions -filetype derate_yaml -hierarchy -annotated]} {# No Comment}  
bbset pceco.derate.DerateOnTopOnly   {1}                                                              {Set derate on top design only}
bbset pceco.derate.VoltageYaml       {[bbget sta.config.derate.voltage.yaml]}                         {Voltage derate yaml converted from TSMC derate PDF}
bbset pceco.derate.VoltageDefaultYaml {[bbget sta.config.derate.voltage.Default.yaml]}                 {Voltage default derate yaml}
bbset pceco.derate.TemperatureYaml   {[bbget sta.config.derate.temperature.yaml]}                     {Temperature derate yaml converted from TSMC derate PDF}
bbset pceco.derate.TemperatureDefaultYaml {[bbget sta.config.derate.temperature.Default.yaml]}             {Temperature default derate yaml}
bbset pceco.derate.CustomPowerDomainNetMap {}                                                               {Customized power domain to supply net mapping script}
bbset pceco.derate.VtNameFirst       {0}                                                              {Set derate by vt-name first. Runtime in small block may be longer if enabled}
bbset pceco.derate.RegexpsCellVt     {[bbget sta.config.hierarchy_info.RegexpsCellVt]}                {Define regular expressions to identify cell vt}
bbset pceco.derate.UseLibCellDerate  {0}                                                              {Enable/disable (1/0) lib cell derate}
bbset pceco.derate.LocalVoltageVariation.Enable {[bbget ".sta.config.derate.LocalVoltageVariation.enable"]}      {Enable local voltage variation derate or not}
bbset pceco.derate.VtMismatch.Enable {[bbget ".sta.config.derate.VtMismatch.enable"]}                 {Enable Vt mismatch derate or not}
bbset pceco.derate.VtMismatch.DerateCsvInput {[bbget ".sta.config.derate.VtMismatch.DerateCsvInput"]}         {Vt mismatch csv file path}
bbset pceco.derate.AddlVtMismatch.Enable {[bbget ".sta.config.derate.AddlVtMismatch.enable"]}             {Enable additional Vt mismatch derate or not}
bbset pceco.derate.Aging.Enable      {[bbget ".sta.config.derate.Aging.enable"]}                      {Enable aging derate or not}
bbset pceco.derate.Aging.DerateCsvInput {[bbget "sta.config.derate.Aging.DerateCsvInput"]}               {# No Comment}  
bbset pceco.derate.OdMismatch.Enable {[bbget ".sta.config.derate.ODMismatch.enable"]}                 {Enable Vt mismatch derate or not}
bbset pceco.derate.OdMismatch.DerateCsvInput {[bbget ".sta.config.derate.ODMismatch.DerateCsvInput"]}         {Vt mismatch csv file path}
bbset pceco.derate.foundry_process_addl_derate.DerateYaml {[bbget "sta.config.derate.foundry_process_addl_derate.yaml"]}   {DK Yaml file path for pdk v1.1}
bbset pceco.derate.foundry_process_addl_derate.DerateDefaultYaml {[bbget "sta.config.derate.foundry_process_addl_derate.DefaultYaml"]} {Default N3E Yaml file path for pdk v1.1}
bbset pceco.derate.foundry_process_addl_derate.Enable {[bbget "sta.config.derate.foundry_process_addl_derate.enable"]} {True|False(default) to enable foundry_process_addl_derate}
bbset pceco.derate.foundry_process_addl_derate.DerateType {[bbget "sta.config.derate.foundry_process_addl_derate.DerateType"]} {list of derate value, valid value: early_clock early_data late_clock late_data setup hold}
bbset pceco.derate.foundry_process_addl_derate.IncludeRcCorner {[bbget "sta.config.derate.foundry_process_addl_derate.IncludeRcCorner"]} {regexp corner pattern to include foundry_process_addl_derate derate, upper case}
bbset pceco.derate.foundry_process_addl_derate.ExcludeRcCorner {[bbget "sta.config.derate.foundry_process_addl_derate.ExcludeRcCorner"]} {regexp corner pattern to exclude foundry_process_addl_derate derate}
bbset pceco.derate.foundry_process_addl_derate.TableName {[bbget "sta.config.derate.foundry_process_addl_derate.TableName"]} {table name in yaml file}
bbset pceco.derate.foundry_process_addl_derate.CommandMapping {
                                      early_clock "set_timing_derate -cell_delay -incremental -early -clock"
                                      early_data  "set_timing_derate -cell_delay -incremental -early -data"
                                      late_clock  "set_timing_derate -cell_delay -incremental -late -clock"
                                      late_data   "set_timing_derate -cell_delay -incremental -late -data"
                                      setup       "set_timing_derate -cell_check -incremental -late"
                                      hold        "set_timing_derate -cell_check -incremental -early"
                                      } {Derate setup command in PC}
bbset pceco.derate.illegal_cell_margins.enable {[bbget "sta.config.illegal_cell_margins.enable"]}               {# No Comment}  
bbset pceco.derate.illegal_cell_margins.CellGroups {[bbget "sta.config.illegal_cell_margins.types"]}                {Cell groups for illegal cell derate}
bbset pceco.derate.illegal_cell_margins.InputYaml {[bbget "sta.config.illegal_cell_margins.yaml"]}                 {inpiut derate for illegal cell yaml}
bbset pceco.derate.wire_ocv.enable   {[bbget "sta.config.wire_ocv.enable"]}                           {# No Comment}  
bbset pceco.derate.wire_ocv.UseFlatDerate {[bbget "sta.config.wire_ocv.UseFlatDerate"]}                    {# No Comment}  
bbset pceco.derate.wire_ocv.Value    {[bbget "sta.config.wire_ocv.Derate.Value"]}                     {# format aligned with PnR, eg. { {*NM* {clock {early 0.10 late 0.14} data {early 0.10 late 0.14} {} {early 0.10 late 0.14} }} {*SUD* {clock {early 0.90 late 1.1} data {early 0.80 late 1.2} }}} }
bbset pceco.derate.wire_ocv.Type     {[bbget "sta.config.wire_ocv.Derate.Type"]}                      {# No Comment}  
bbset pceco.derate.wire_ocv.File     {[bbget "sta.config.wire_ocv.Derate.File"]}                      {# No Comment}  
bbset pceco.derate.light_weight_smva.MistrackYamlDerateSel {[bbget sta.config.light_weight_smva.MistrackYamlDerateSel]}     {Derate selection for light weight smva}
bbset pceco.derate.static_cell_derate.EarlyClock {0.00}                                                           {Static early clock derate on cell}
bbset pceco.derate.static_cell_derate.LateClock {1.10}                                                           {Static Late clock derate on cell}
bbset pceco.derate.static_cell_derate.EarlyData {0.98}                                                           {Static early data derate on cell}
bbset pceco.derate.static_cell_derate.LateData {1.05}                                                           {Static Late data derate on cell}
bbset pceco.derate.static_net_derate.EarlyClock {0.00}                                                           {Static early clock derate on net}
bbset pceco.derate.static_net_derate.LateClock {0.00}                                                           {Static Late clock derate on net}
bbset pceco.derate.static_net_derate.EarlyData {0.98}                                                           {Static early data derate on net}
bbset pceco.derate.static_net_derate.LateData {1.05}                                                           {Static Late data derate on net}
bbset pceco.derate.UseLocalVoltageVariation {[bbget sta.config.derate.LocalVoltageVariation.enable]}         {Use local voltage variation}
bbset pceco.derate.lowv_pocv.LowVoltagePvts {}                                                               {PVTs that to be in lowV conditions, wildcard supported, type=list}
bbset pceco.derate.lowv_pocv.LowVoltageCellVts {}                                                               {Cell Vts that to be in lowV conditions, to set HoldConstraintSubtractSigma, wildcard supported, type=list}
bbset pceco.derate.lowv_pocv.HoldConstraintSubtractSigma {[bbget sta.config.lowv_pocv.HoldConstraintSubtractSigma]}       {Hold subtract sigma}
bbset pceco.derate.lowv_pocv.CoefficientScaleFactor {[bbget sta.config.lowv_pocv.CoefficientScaleFactor]}            {Coefficient scale factor}
bbset pceco.DontUseCells             {
                                      [bbget "eco.DontUseCells"]
                                      } {DontUse cell classes for PCECO}
bbset pceco.SetupScenarios           {[bbget "sta.runs"]}                                             {Timing Scenarios for PCECO setup fixing}
bbset pceco.HoldScenarios            {[bbget "sta.runs"]}                                             {Timing Scenarios for PCECO hold fixing}
bbset pceco.ValidSetupScenarios      {[bbget "sta.metrics.reports.rpt_setup_scenarios"]}              {Valid setup scenarios for STA signoff}
bbset pceco.ValidHoldScenarios       {[bbget "sta.metrics.reports.rpt_hold_scenarios"]}               {Valid hold scenarios for STA signoff}
bbset pceco.LeakageScenario          {[bbget "sta.config.pc_eco_session.LeakageScenario"]}            {Name of one scenario for leakage power optimization}
bbset pceco.DynamicScenario          {[bbget "pceco.LeakageScenario"]}                                {Name of one scenario for dynamic power optimization}
bbset pceco.TopCellName              {[bbget ".info.BLOCK"]}                                          {Top cell name} 
bbset pceco.EcoDesignList            {[concat [bbget ".pceco.TopCellName"] [bbfiles -legacy_mode subblocks -block [bbget ".pceco.TopCellName"]]]} {List of designs for ECO. By default, the top cell and all subblocks are included}
bbset pceco.ValidEcoTypes            {
                                      max_tran_eco
                                      max_cap_eco
                                      setup_eco
                                      hold_eco
                                      leakage_eco
                                      dynamic_power_eco
                                      area_eco
                                      clock_surgery_eco
                                      vmin_eco
                                      jsr_eco
                                      ir_eco
                                      } {Available SMSA ECO types}
bbset pceco.EcoOrder                 {SMSA1 SMSA2}                                                    {ECO iterations with ECO order name. Max iterations: 4}
bbset pceco.SMSA1                    {max_tran_eco max_cap_eco setup_eco hold_eco}                    {Order of 1st ECO operations}
bbset pceco.SMSA2                    {max_tran_eco max_cap_eco setup_eco hold_eco}                    {Order of 2nd ECO operations}
bbset pceco.SMSA3                    {max_tran_eco max_cap_eco setup_eco hold_eco}                    {Order of 3rd ECO operations}
bbset eco.Sequence                   {itr1 itr2}                                                      {specify eco runs}
bbset eco.itr1.Stages                {tweaker applyeco pdp pex sta}                                   {eco1 stages}   
bbset eco.itr1.Recipes               {tweaker_aggressive_leakage_recipe}                              {eco1 recipe}   
bbset eco.itr2.Stages                {tweaker applyeco pdp pex sta}                                   {eco2 stages}   
bbset eco.itr2.Recipes               {tweaker_trans_setup_hold_recipe}                                {eco2 recipe}   
bbset lec.LEC_DW_DIR_SIM             {/google/gchips/tools/cadence/conformal/lec.24.20-p100/share/cfm/lec/library/verilog/dw} {# No Comment}  
bbset lec.FC_SynthesisExectuable     {/google/gchips/tools/synopsys/fc/U-2022.12-SP6-PRE-20240612/bin/fc_shell} {# No Comment}  
bbset lec.EnableWaterMarkInsertionCheck {1}                                                              {Default is 1 - set to 0 to disable Water Mark insertion check}
bbset lec.TAGBLOCK                   {}                                                               {Default is derived from whatever is defined in TAGBLOCK}
bbset lec.dft_block_rtl2synth_PinConstraints {/google/gchips/ipreleases/lajolla_[bbget .info.IP_PROJ]/[bbget .info.BLOCK]/[bbget .lec.TAGBLOCK]/bedft2pd/lec/[bbget .info.BLOCK]_dft_rtl2synth_constraints.tcl} {TBC}           
bbset lec.dft_block_rtl2synthdft_PinConstraints {/google/gchips/ipreleases/lajolla_[bbget .info.IP_PROJ]/[bbget .info.BLOCK]/[bbget .lec.TAGBLOCK]/bedft2pd/lec/[bbget .info.BLOCK]_dft_rtl2synthdft_constraints.tcl} {TBC}           
bbset lec.WriteHierCompareAdditionalOption {}                                                               {Default is empty null for WriteHierCompareAdditionalOption}
bbset lec.LECAbortDiagnosis          {1}                                                              {Turn on LEC Abort Diagnosis}
bbset lec.Stage                      {lec}                                                            {Default Stage} 
bbset lec.MILESTONE                  {}                                                               {Default is derived from whatever MILESTONE is set to}
bbset lec.TAG                        {}                                                               {Default is derived from whatever is defined in TAG}
bbset lec.dft_rtl2synth_PinConstraints {/google/gchips/ipreleases/lajolla_lec/dft_common_constraints/[bbget .lec.MILESTONE]/[bbget .lec.TAG]/dft_rtl2synth_constraints.tcl} {TBC}           
bbset lec.dft_rtl2synthdft_PinConstraints {/google/gchips/ipreleases/lajolla_lec/dft_common_constraints/[bbget .lec.MILESTONE]/[bbget .lec.TAG]/dft_rtl2synthdft_constraints.tcl} {TBC}           
bbset lec.NumCores                   {4}                                                              {number of cores for run}
bbset lec.RAM                        {64000}                                                          {# No Comment}  
bbset lec.Scheduler                  {[bbget .bob.Scheduler]}                                         {Default is derived from whatever bob.Scheduler is set to}
bbset lec.LECDiagnoseVal             {50}                                                             {Default is 50 - higher than this can somtimes lead to increased runtime.}
bbset lec.LECValEnumConstraint       {1}                                                              {Default is 1 - set to 0 to turn off -enumconstraint switch for golden read design command}
bbset lec.LECEL8Check                {1}                                                              {Default is 1 to make sure EL8 version check is forced - set to 0 if you need to run an older version of LEC below 24.XX}
bbset lec.CompareRecipes             {0}                                                              {Default is 0 - set to 1 to use the CompareRecipes flow - this also requires the SmartLec to be set to 1}
bbset lec.CompareRecipesRecipeList   {}                                                               {Default is empty and uses the default provided by lec/conformal/setup/dir.compare_recipes/order}
bbset lec.CadLic                     {0}                                                              {Default is 0 - set to 1 to use the CAD license server}
bbset lec.RunGenusDofiles            {0}                                                              {Default is 0 set to 1 to enable the running of the Genus auto-generated dofiles. Must also set RunGenusDofileRtl2Fv and/or RunGenusDofileSyn2Map}
bbset lec.RunGenusDofileRtl2Fv       {0}                                                              {Default is 0 set to 1 to enable the running of the Genus Rtl2Fv auto-generated dofile. Must also set RunGenusDofile}
bbset lec.RunGenusDofileSyn2Map      {0}                                                              {Default is 0 set to 1 to enable the running of the Genus Syn2Map auto-generated dofile. Must also set RunGenusDofile}
bbset lec.GoldenUPF                  {[bbget .syn.elaborate.InputUPFFile]}                            {Golden UPF File}
bbset lec.RevisedUPF                 {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.upf} {Revised UPF File - MUST match Revised Netlist}
bbset lec.vfile                      {[bbget .syn.elaborate.RTLFileList]}                             {Golden verilog file list. Default to syn elaborate file list}
bbset lec.split                      {compare}                                                        {LEC Mode}      
bbset lec.GoldenNetlist              {}                                                               {Golen Netlist} 
bbset lec.GenusFvDir                 {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1} {Genus FV directory}
bbset lec.Liblist_file               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/libgen/outs/ccs_lib.list} {Liblist file}  
bbset lec.REVISED_VFILE              {}                                                               {Revised Rtl sv File List}
bbset lec.VHDLFilelist               {}                                                               {Golden Rtl vhdl File List}
bbset lec.REV_VHDLFilelist           {}                                                               {Revised Rtl vhdl File List}
bbset lec.FlatRUN                    {0}                                                              {Enable flat run}
bbset lec.NONEQ_Stop_Count           {100}                                                            {Non equivalent nodes stop count for flat compare}
bbset lec.Compare_string             {set_compare_effort low; compare}                                {Compare String}
bbset lec.skipAbort                  {0}                                                              {Skip Abort}    
bbset lec.NoGated                    {0}                                                              {No gated}      
bbset lec.UseDft                     {0}                                                              {Use DFT}       
bbset lec.WordLevel                  {0}                                                              {Word Level}    
bbset lec.allowUndrivenSignal        {0}                                                              {Allow undriven signal}
bbset lec.EnableAutoBbox             {0}                                                              {Enable Auto BBox}
bbset lec.Append_string              { dofile [bbget .info.PD_TOOLS_DIR]/lec/conformal/setup/do_report_unmapped_points.tcl ; vpx report compare data -class abort } {Command options}
bbset lec.Prepend_string             {vpx report design data}                                         {Command Preprepend options}
bbset lec.AnalyzeHierRun             {0}                                                              {Analyze hierarchical run}
bbset lec.StaticHierRun              {0}                                                              {Static Hierarchcial Run}
bbset lec.ReadUPF                    {1}                                                              {Enable Read UPF}
bbset lec.DisableDPAnalysis          {0}                                                              {Disable DP Analsysis}
bbset lec.DisableComparePowerGrid    {0}                                                              {Disable power grid comparison}
bbset lec.GenusSyn                   {1}                                                              {Enable only for Genus Synthesis and for FC turn it to 0}
bbset lec.GoldenUpfFlow              {0}                                                              {Golden UPF Flow}
bbset lec.MBIT_SEPARATOR_TOKEN       {}                                                               {MBIT seperator token}
bbset lec.AppendLibs                 {}                                                               {Append Libs}   
bbset lec.PHASE_MAP                  {0}                                                              {Phase Map}     
bbset lec.RevisedVSDC                {}                                                               {Revised VSDC}  
bbset lec.ResourceFile               {}                                                               {Resource File} 
bbset lec.ReportMessages             {F14 F18 F20 F65.1}                                              {List of report messages separated by a space that can be reported}
bbset lec.RunTestCase                {0}                                                              {RunTest default 0 - must be set to 1 after writing the testcase}
bbset lec.WriteTest                  {0}                                                              {WriteTest default 0 - must be set to 1 to create and writeout a testcase}
bbset lec.libprep                    {false}                                                          {Enable libprep}
bbset lec.THREADS                    {4}                                                              {Number of threads}
bbset lec.THRESHOLD                  {}                                                               {Threshold value - default is null}
bbset lec.CONFIG                     {}                                                               {LEC Config}    
bbset lec.Mappingfile                {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.map.do} {Mapping file}  
bbset lec.Hier_dofile                {./scrs/hier.dofile}                                             {Hierarchy dofile}
bbset lec.IncrUPF                    {}                                                               {Incremental UPF file}
bbset lec.RTL2PRO                    {0}                                                              {RTL2PRO}       
bbset lec.SmartLec                   {0}                                                              {Enable Smart Lec}
bbset lec.RTL_DEFINES                {}                                                               {Rtl defines}   
bbset lec.signoff                    {0}                                                              {signoff default 0}
bbset lec.LecSignoff                 {0}                                                              {Signoff Lec Runs}
bbset lec.Writemapout                {./ufs_top.map}                                                  {Output mapping file}
bbset lec.NestedRtlFileList          {0}                                                              {If goden sv rtl file list has additional nested vf files apart from regular sv files, pls set it to 1}
bbset lec.NoTstvectorrpt             {1}                                                              {Dont generate test vectots by default}
bbset lec.GenPtpxMapFile             {0}                                                              {Generate namemap file for other flows. The flow end after map file generated}
bbset lec.IgnoreCharacter            {0}                                                              {IgnoreCharacter default 0 - for read guidance information command}
bbset lec.scenarios.Scenarios        {func.ssgnp-NM-m25-cworst_ccworst}                               {LEC scenarios} 
bbset lec.Res                        {CORES/8 RAM/16000}                                              {Default resources}
bbset lec.StdLibraryFileInclude      {}                                                               {use to include Std libraries match this regep}
bbset lec.StdLibraryFileExclude      {}                                                               {use to exclude Std libraries match this regep}
bbset lec.MacroLibraryFileInclude    {}                                                               {use to include Macro libraries match this regep}
bbset lec.MacroLibraryFileExclude    {}                                                               {use to exclude Macro libraries match this regep}
bbset lec.LocalRun                   {0}                                                              {Set to launch jobs locally on machine and not on nc farm}
bbset lec.RtlFileList                {[bbget .syn.elaborate.RTLFileList]}                             {Golden RTL SV / Verilog file list. Default to syn elaborate file list}
bbset lec.RevisedNetlist             {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.v.gz} {Revised Netlist}
bbset lec.RevisedFvMapFvJson         {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.fv.json} {Revised fv_map.fv.json file}
bbset lec.GenusMap                   {fv_map}                                                         {# No Comment}  
bbset lec.NoDiagrpt                  {1}                                                              {# No Comment}  
bbset lec.PostCmd.MailNotification.Enable {1}                                                              {# lec mail notification enablement}
bbset lec.PostCmd.MailNotification.Users {}                                                               {# lec mail receiver, defaut behavior: $USER only}
bbset lec.PostCmd.MailNotification.Subject {[bbget info.BLOCK] lec run result}                              {# lec mail subject}
bbset lec.PostCmd.MailNotification.File {./mail.txt}                                                     {# lec mail template}
bbset lec.syn_n2n.EnableWaterMarkInsertionCheck {1}                                                              {Default is 1 - set to 0 to disable Water Mark insertion check}
bbset lec.syn_n2n.TAGBLOCK           {}                                                               {Default is derived from whatever is defined in TAGBLOCK}
bbset lec.syn_n2n.dft_block_syn_n2n_PinConstraints {/google/gchips/ipreleases/lajolla_[bbget .info.IP_PROJ]/[bbget .info.BLOCK]/[bbget .lec.syn_n2n.TAGBLOCK]/bedft2pd/lec/[bbget .info.BLOCK]_dft_syn_n2n_constraints.tcl} {TBC}           
bbset lec.syn_n2n.WriteHierCompareAdditionalOption {}                                                               {Default is empty null for WriteHierCompareAdditionalOption}
bbset lec.syn_n2n.LECAbortDiagnosis  {1}                                                              {Turn on LEC Abort Diagnosis}
bbset lec.syn_n2n.Stage              {syn_n2n}                                                        {Default Stage} 
bbset lec.syn_n2n.MILESTONE          {[bbget .lec.MILESTONE]}                                         {Default is derived from whatever lec.MILESTONE is set to}
bbset lec.syn_n2n.TAG                {[bbget .lec.TAG]}                                               {Default is derived from whatever is defined in TAG}
bbset lec.syn_n2n.dft_syn_n2n_PinConstraints {/google/gchips/ipreleases/lajolla_lec/dft_common_constraints/[bbget .lec.syn_n2n.MILESTONE]/[bbget .lec.syn_n2n.TAG]/dft_syn_n2n_constraints.tcl} {TBC}           
bbset lec.syn_n2n.LECDiagnoseVal     {50}                                                             {Default is 50 - higher than this can somtimes lead to increased runtime.}
bbset lec.syn_n2n.CadLic             {0}                                                              {Default is 0 - set to 1 to use the CAD license server}
bbset lec.syn_n2n.NumCores           {4}                                                              {number of cores for run}
bbset lec.syn_n2n.RAM                {64000}                                                          {# No Comment}  
bbset lec.syn_n2n.Res                {CORES/8 RAM/16000}                                              {Default resources}
bbset lec.syn_n2n.GoldenUPF          {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.upf} {Golden UPF File}
bbset lec.syn_n2n.RevisedUPF         {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] end]/outs/[bbget .info.BLOCK].final.upf} {Revised UPF File}
bbset lec.syn_n2n.vfile              {}                                                               {Golden verilog file list. Default to syn elaborate file list}
bbset lec.syn_n2n.split              {compare2}                                                       {LEC Mode}      
bbset lec.syn_n2n.GoldenNetlist      {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.v.gz} {Golen Netlist} 
bbset lec.syn_n2n.RevisedNetlist     {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] end]/outs/[bbget .info.BLOCK].final.v.gz} {Revised Netlist}
bbset lec.syn_n2n.GenusFvDir         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/fv/1/} {Genus FV directory}
bbset lec.syn_n2n.Liblist_file       {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/libgen/outs/ccs_lib.list} {Liblist file}  
bbset lec.syn_n2n.REVISED_VFILE      {}                                                               {Revised Verilog File List}
bbset lec.syn_n2n.RtlFileList        {}                                                               {RTL file list} 
bbset lec.syn_n2n.FlatRUN            {1}                                                              {Enable flat run}
bbset lec.syn_n2n.NONEQ_Stop_Count   {100}                                                            {Non equivalent nodes stop count for flat compare}
bbset lec.syn_n2n.Compare_string     {set_compare_effort low; compare}                                {Compare String}
bbset lec.syn_n2n.skipAbort          {0}                                                              {Skip Abort}    
bbset lec.syn_n2n.NoGated            {0}                                                              {No gated}      
bbset lec.syn_n2n.UseDft             {0}                                                              {Use DFT}       
bbset lec.syn_n2n.WordLevel          {0}                                                              {Word Level}    
bbset lec.syn_n2n.allowUndrivenSignal {0}                                                              {Allow undriven signal}
bbset lec.syn_n2n.EnableAutoBbox     {0}                                                              {Enable Auto BBox}
bbset lec.syn_n2n.Append_string      {vpx report compare data -class abort; vpx analyze abort -compare -threads 4,4} {Command options}
bbset lec.syn_n2n.Prepend_string     {vpx report design data}                                         {Command Preprepend options}
bbset lec.syn_n2n.AnalyzeHierRun     {0}                                                              {Analyze hierarchical run}
bbset lec.syn_n2n.StaticHierRun      {0}                                                              {Static Hierarchcial Run}
bbset lec.syn_n2n.ReadUPF            {1}                                                              {Enable Read UPF}
bbset lec.syn_n2n.DisableDPAnalysis  {0}                                                              {Disable DP Analsysis}
bbset lec.syn_n2n.DisableComparePowerGrid {0}                                                              {Disable power grid comparison}
bbset lec.syn_n2n.GenusSyn           {1}                                                              {Genus synthesis}
bbset lec.syn_n2n.GoldenUpfFlow      {0}                                                              {Golden UPF Flow}
bbset lec.syn_n2n.MBIT_GCHIPS_SEPARATOR_TOKEN {}                                                               {MBIT seperator token}
bbset lec.syn_n2n.MBIT_GCHIPS_PREFIX {BANK_MBIT_}                                                     {MBIT prefix token}
bbset lec.syn_n2n.MBIT_GCHIPS_DELIMITER {_MB_}                                                           {MBIT delimiter token}
bbset lec.syn_n2n.AppendLibs         {}                                                               {Append Libs}   
bbset lec.syn_n2n.PHASE_MAP          {0}                                                              {Phase Map}     
bbset lec.syn_n2n.RevisedVSDC        {}                                                               {Revised VSDC}  
bbset lec.syn_n2n.ResourceFile       {}                                                               {Resource File} 
bbset lec.syn_n2n.signoff            {0}                                                              {signoff default 0}
bbset lec.syn_n2n.LecSignoff         {0}                                                              {Signoff Lec Runs}
bbset lec.syn_n2n.libprep            {false}                                                          {Enable libprep}
bbset lec.syn_n2n.THREADS            {4}                                                              {Number of threads}
bbset lec.syn_n2n.THRESHOLD          {}                                                               {Threshold value - default is null}
bbset lec.syn_n2n.CONFIG             {}                                                               {LEC Config}    
bbset lec.syn_n2n.Mappingfile        { /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/fv/1/fv_map.map.do /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/fv/1/ufs_topfinalvgz.map.do} {Mapping file - should have two mapping files defined seperated by a space to allow for extended mapping flow}
bbset lec.syn_n2n.Hier_dofile        {./scrs/hier.dofile}                                             {Hierarchy dofile}
bbset lec.syn_n2n.IncrUPF            {}                                                               {Incremental UPF file}
bbset lec.syn_n2n.RTL2PRO            {0}                                                              {RTL2PRO}       
bbset lec.syn_n2n.Writemapout        {./ufs_top.map}                                                  {Output mapping file}
bbset lec.syn_n2n.NestedRtlFileList  {0}                                                              {If goden sv rtl file list has additional nested vf files apart from regular sv files, pls set it to 1}
bbset lec.syn_n2n.NoTstvectorrpt     {1}                                                              {Dont generate test vectots by default}
bbset lec.syn_n2n.RTL_DEFINES        {}                                                               {# No Comment}  
bbset lec.syn_n2n.RevisedFvMapFvJson {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.fv.json} {Revised fv_map.fv.json file}
bbset lec.genus_rtl2fv.CadLic        {0}                                                              {Default is 0 - set to 1 to use the CAD license server}
bbset lec.genus_rtl2fv.Res           {CORES/8 RAM/16000}                                              {Default resources}
bbset lec.genus_rtl2fv.GenusFvDir    {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/main/syn/synth/outs/fv/1/} {Genus FV directory}
bbset lec.genus_syn2map.CadLic       {0}                                                              {Default is 0 - set to 1 to use the CAD license server}
bbset lec.genus_syn2map.Res          {CORES/8 RAM/16000}                                              {Default resources}
bbset lec.genus_syn2map.GenusFvDir   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/fv/1/} {Genus FV directory}
bbset lec.pnr_n2n.EnableWaterMarkInsertionCheck {1}                                                              {Default is 1 - set to 0 to disable Water Mark insertion check}
bbset lec.pnr_n2n.TAGBLOCK           {}                                                               {Default is derived from whatever is defined in TAGBLOCK}
bbset lec.pnr_n2n.dft_block_pnr_n2n_PinConstraints {/google/gchips/ipreleases/lajolla_[bbget .info.IP_PROJ]/[bbget .info.BLOCK]/[bbget .lec.pnr_n2n.TAGBLOCK]/bedft2pd/lec/[bbget .info.BLOCK]_dft_pnr_n2n_constraints.tcl} {TBC}           
bbset lec.pnr_n2n.WriteHierCompareAdditionalOption {}                                                               {Default is empty null for WriteHierCompareAdditionalOption}
bbset lec.pnr_n2n.LECAbortDiagnosis  {1}                                                              {Turn on LEC Abort Diagnosis}
bbset lec.pnr_n2n.Stage              {pnr_n2n}                                                        {Default Stage} 
bbset lec.pnr_n2n.MILESTONE          {[bbget .lec.MILESTONE]}                                         {Default is derived from whatever lec.MILESTONE is set to}
bbset lec.pnr_n2n.TAG                {[bbget .lec.TAG}                                                {Default is derived from whatever is defined in lec.TAG}
bbset lec.pnr_n2n.dft_pnr_n2n_PinConstraints {/google/gchips/ipreleases/lajolla_lec/dft_common_constraints/[bbget .lec.MILESTONE]/[bbget .lec.TAG]/dft_pnr_n2n_constraints.tcl} {TBC}           
bbset lec.pnr_n2n.LECDiagnoseVal     {50}                                                             {Default is 50 - higher than this can somtimes lead to increased runtime.}
bbset lec.pnr_n2n.CadLic             {0}                                                              {Default is 0 - set to 1 to use the CAD license server}
bbset lec.pnr_n2n.NumCores           {4}                                                              {number of cores for run}
bbset lec.pnr_n2n.RAM                {64000}                                                          {# No Comment}  
bbset lec.pnr_n2n.Res                {CORES/8 RAM/16000}                                              {Default resources}
bbset lec.pnr_n2n.vfile              {}                                                               {Golden verilog file list. Default to syn elaborate file list}
bbset lec.pnr_n2n.split              {compare2}                                                       {LEC Mode}      
bbset lec.pnr_n2n.GenusFvDir         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/fv/1/} {Genus FV directory}
bbset lec.pnr_n2n.Liblist_file       {[bbget .info.BOB_RUN_DIR]/pnr/libgen/outs/ccs_lib.list}         {Liblist file}  
bbset lec.pnr_n2n.PinConstraints     {[bbget .info.PD_TOOLS_DIR]/lec/conformal/MBU_synthdft2pnr_V1.tcl} {Pin constraints file}
bbset lec.pnr_n2n.REVISED_VFILE      {}                                                               {Revised Verilog File List}
bbset lec.pnr_n2n.RtlFileList        {}                                                               {RTL file list} 
bbset lec.pnr_n2n.FlatRUN            {1}                                                              {Enable flat run}
bbset lec.pnr_n2n.NONEQ_Stop_Count   {100}                                                            {Non equivalent nodes stop count for flat compare}
bbset lec.pnr_n2n.Compare_string     {set_compare_effort low; compare}                                {Compare String}
bbset lec.pnr_n2n.skipAbort          {0}                                                              {Skip Abort}    
bbset lec.pnr_n2n.NoGated            {0}                                                              {No gated}      
bbset lec.pnr_n2n.UseDft             {0}                                                              {Use DFT}       
bbset lec.pnr_n2n.WordLevel          {0}                                                              {Word Level}    
bbset lec.pnr_n2n.allowUndrivenSignal {0}                                                              {Allow undriven signal}
bbset lec.pnr_n2n.EnableAutoBbox     {0}                                                              {Enable Auto BBox}
bbset lec.pnr_n2n.Append_string      {vpx report compare data -class abort; vpx analyze abort -compare -threads 4,4} {Command options}
bbset lec.pnr_n2n.Prepend_string     {vpx report design data}                                         {Command Preprepend options}
bbset lec.pnr_n2n.AnalyzeHierRun     {0}                                                              {Analyze hierarchical run}
bbset lec.pnr_n2n.StaticHierRun      {0}                                                              {Static Hierarchcial Run}
bbset lec.pnr_n2n.ReadUPF            {1}                                                              {Enable Read UPF}
bbset lec.pnr_n2n.DisableDPAnalysis  {0}                                                              {Disable DP Analsysis}
bbset lec.pnr_n2n.signoff            {0}                                                              {signoff default 0}
bbset lec.pnr_n2n.LecSignoff         {0}                                                              {Signoff Lec Runs}
bbset lec.pnr_n2n.DisableComparePowerGrid {0}                                                              {Disable power grid comparison}
bbset lec.pnr_n2n.GenusSyn           {1}                                                              {Genus synthesis}
bbset lec.pnr_n2n.GoldenUpfFlow      {0}                                                              {Golden UPF Flow}
bbset lec.pnr_n2n.MBIT_SEPARATOR_TOKEN {}                                                               {MBIT seperator token}
bbset lec.pnr_n2n.AppendLibs         {}                                                               {Append Libs}   
bbset lec.pnr_n2n.PHASE_MAP          {0}                                                              {Phase Map}     
bbset lec.pnr_n2n.RevisedVSDC        {}                                                               {Revised VSDC}  
bbset lec.pnr_n2n.ResourceFile       {}                                                               {Resource File} 
bbset lec.pnr_n2n.libprep            {false}                                                          {Enable libprep}
bbset lec.pnr_n2n.THREADS            {4}                                                              {Number of threads}
bbset lec.pnr_n2n.THRESHOLD          {}                                                               {Threshold value - default is null}
bbset lec.pnr_n2n.CONFIG             {}                                                               {LEC Config}    
bbset lec.pnr_n2n.Mappingfile        {[bbget .info.BOB_RUN_DIR]/pnr/[lindex [bbget .pnr.Stages] end]/rpts/fv/invs/[bbget .info.BLOCK]/[bbget .info.BLOCK].map.mp} {Mapping file}  
bbset lec.pnr_n2n.Hier_dofile        {./scrs/hier.dofile}                                             {Hierarchy dofile}
bbset lec.pnr_n2n.IncrUPF            {}                                                               {Incremental UPF file}
bbset lec.pnr_n2n.RTL2PRO            {0}                                                              {RTL2PRO}       
bbset lec.pnr_n2n.Writemapout        {./ufs_top.map}                                                  {Output mapping file}
bbset lec.pnr_n2n.NestedRtlFileList  {0}                                                              {If goden sv rtl file list has additional nested vf files apart from regular sv files, pls set it to 1}
bbset lec.pnr_n2n.NoTstvectorrpt     {1}                                                              {Dont generate test vectots by default}
bbset lec.pnr_n2n.GenPtpxMapFile     {0}                                                              {Generate namemap file for other flows. The flow end after map file generated}
bbset lec.pnr_n2n.NorelLicense       {1}                                                              {# No Comment}  
bbset lec.pnr_n2n.RTL_DEFINES        {}                                                               {# No Comment}  
bbset lec.pnr_n2n.GoldenNetlist      {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] end]/outs/[bbget .info.BLOCK].final.v.gz} {Golen Netlist} 
bbset lec.pnr_n2n.GoldenUPF          {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] end]/outs/[bbget .info.BLOCK].final.upf} {Golden UPF File}
bbset lec.pnr_n2n.RevisedNetlist     {[bbget .info.BOB_RUN_DIR]/pnr/[lindex [bbget .pnr.Stages] end]/outs/[bbget .info.BLOCK].logical.pg.v.gz} {Revised Netlist}
bbset lec.pnr_n2n.RevisedUPF         {[bbget .info.BOB_RUN_DIR]/pnr/[lindex [bbget .pnr.Stages] end]/outs/[bbget .info.BLOCK].upf} {Revised UPF File}
bbset lec.pnr_n2n.RevisedFvMapFvJson {[bbget .info.BOB_RUN_DIR]/syn/[lindex [bbget .syn.Stages] 2]/outs/fv/1/fv_map.fv.json} {Revised fv_map.fv.json file}
bbset lec.r2r_fe2scan.TAGBLOCK       {}                                                               {Default is derived from whatever is defined in TAGBLOCK}
bbset lec.r2r_fe2scan.dft_block_r2r_fe2scan_PinConstraints {/google/gchips/ipreleases/lajolla_[bbget .info.IP_PROJ]/[bbget .info.BLOCK]/[bbget .lec.r2r_fe2scan.TAGBLOCK]/bedft2pd/lec/[bbget .info.BLOCK]_dft_r2r_fe2scan_constraints.tcl} {TBC}           
bbset lec.r2r_fe2scan.WriteHierCompareAdditionalOption {}                                                               {Default is empty null for WriteHierCompareAdditionalOption}
bbset lec.r2r_fe2scan.Stage          {r2r_fe2scan}                                                    {Default Stage} 
bbset lec.r2r_fe2scan.MILESTONE      {}                                                               {Default is derived from whatever MILESTONE}
bbset lec.r2r_fe2scan.TAG            {}                                                               {Default is derived from whatever is defined in TAG}
bbset lec.r2r_fe2scan.dft_r2r_fe2scan_PinConstraints {/google/gchips/ipreleases/lajolla_lec/dft_common_constraints/[bbget .lec.MILESTONE]/[bbget .lec.TAG]/dft_r2r_fe2scan_constraints.tcl} {TBC}           
bbset lec.r2r_fe2scan.LECDiagnoseVal {50}                                                             {Default is 50 - higher than this can somtimes lead to increased runtime.}
bbset lec.r2r_fe2scan.LECValEnumConstraint {0}                                                              {Default is 0 for r2r_fe2scan - set to 0 to turn off -enumconstraint switch for golden read design command}
bbset lec.r2r_fe2scan.LECEL8Check    {1}                                                              {Default is 1 to make sure EL8 version check is forced - set to 0 if you need to run an older version of LEC below 24.XX}
bbset lec.r2r_fe2scan.CompareRecipes {0}                                                              {Default is 0 - set to 1 to use the CompareRecipes flow - this also requires the SmartLec to be set to 1}
bbset lec.r2r_fe2scan.CadLic         {0}                                                              {Default is 0 - set to 1 to use the CAD license server}
bbset lec.r2r_fe2scan.GoldenUPF      {[bbget .syn.elaborate.InputUPFFile]}                            {Golden UPF File}
bbset lec.r2r_fe2scan.RevisedUPF     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.upf} {Revised UPF File}
bbset lec.r2r_fe2scan.vfile          {[bbget .syn.elaborate.RTLFileList]}                             {Golden verilog file list. Default to syn elaborate file list}
bbset lec.r2r_fe2scan.split          {compare}                                                        {LEC Mode}      
bbset lec.r2r_fe2scan.GoldenNetlist  {}                                                               {Golen Netlist} 
bbset lec.r2r_fe2scan.RevisedNetlist {}                                                               {Revised Netlist}
bbset lec.r2r_fe2scan.GenusFvDir     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/fv/1/} {Genus FV directory}
bbset lec.r2r_fe2scan.Liblist_file   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/libgen/outs/ccs_lib.list} {Liblist file}  
bbset lec.r2r_fe2scan.REVISED_VFILE  {}                                                               {Revised Verilog File List}
bbset lec.r2r_fe2scan.RtlFileList    {}                                                               {RTL file list} 
bbset lec.r2r_fe2scan.FlatRUN        {1}                                                              {Enable flat run}
bbset lec.r2r_fe2scan.NONEQ_Stop_Count {100}                                                            {Non equivalent nodes stop count for flat compare}
bbset lec.r2r_fe2scan.Compare_string {set_compare_effort low; compare}                                {Compare String}
bbset lec.r2r_fe2scan.skipAbort      {0}                                                              {Skip Abort}    
bbset lec.r2r_fe2scan.NoGated        {0}                                                              {No gated}      
bbset lec.r2r_fe2scan.UseDft         {0}                                                              {Use DFT}       
bbset lec.r2r_fe2scan.WordLevel      {0}                                                              {Word Level}    
bbset lec.r2r_fe2scan.allowUndrivenSignal {0}                                                              {Allow undriven signal}
bbset lec.r2r_fe2scan.EnableAutoBbox {0}                                                              {Enable Auto BBox}
bbset lec.r2r_fe2scan.Append_string  { vpx report compare data -class abort; vpx analyze abort -compare -threads 4,4 ; [bbget .info.PD_TOOLS_DIR]/lec/setup/do_report_unmapped_points.tcl } {Command options}
bbset lec.r2r_fe2scan.Prepend_string {vpx report design data}                                         {Command Preprepend options}
bbset lec.r2r_fe2scan.AnalyzeHierRun {0}                                                              {Analyze hierarchical run}
bbset lec.r2r_fe2scan.StaticHierRun  {0}                                                              {Static Hierarchcial Run}
bbset lec.r2r_fe2scan.ReadUPF        {1}                                                              {Enable Read UPF}
bbset lec.r2r_fe2scan.signoff        {0}                                                              {signoff default 0}
bbset lec.r2r_fe2scan.LecSignoff     {1}                                                              {Signoff Lec Runs}
bbset lec.r2r_fe2scan.DisableDPAnalysis {0}                                                              {Disable DP Analsysis}
bbset lec.r2r_fe2scan.DisableComparePowerGrid {0}                                                              {Disable power grid comparison}
bbset lec.r2r_fe2scan.GenusSyn       {1}                                                              {Genus synthesis}
bbset lec.r2r_fe2scan.GoldenUpfFlow  {0}                                                              {Golden UPF Flow}
bbset lec.r2r_fe2scan.MBIT_SEPARATOR_TOKEN {}                                                               {MBIT seperator token}
bbset lec.r2r_fe2scan.AppendLibs     {}                                                               {Append Libs}   
bbset lec.r2r_fe2scan.PHASE_MAP      {0}                                                              {Phase Map}     
bbset lec.r2r_fe2scan.RevisedVSDC    {}                                                               {Revised VSDC}  
bbset lec.r2r_fe2scan.ResourceFile   {}                                                               {Resource File} 
bbset lec.r2r_fe2scan.libprep        {false}                                                          {Enable libprep}
bbset lec.r2r_fe2scan.THREADS        {4}                                                              {Number of threads}
bbset lec.r2r_fe2scan.THRESHOLD      {}                                                               {Threshold value - default is null}
bbset lec.r2r_fe2scan.CONFIG         {}                                                               {LEC Config}    
bbset lec.r2r_fe2scan.Mappingfile    {}                                                               {Mapping file}  
bbset lec.r2r_fe2scan.Hier_dofile    {./scrs/hier.dofile}                                             {Hierarchy dofile}
bbset lec.r2r_fe2scan.IncrUPF        {}                                                               {Incremental UPF file}
bbset lec.r2r_fe2scan.RTL2PRO        {0}                                                              {RTL2PRO}       
bbset lec.r2r_fe2scan.Writemapout    {./ufs_top.map}                                                  {Output mapping file}
bbset lec.r2r_fe2scan.NestedRtlFileList {0}                                                              {If goden sv rtl file list has additional nested vf files apart from regular sv files, pls set it to 1}
bbset lec.r2r_fe2scan.NoTstvectorrpt {1}                                                              {Dont generate test vectots by default}
bbset lec.r2r_fe2scan.scenarios.Scenarios {func.ssgnp-NM-m25-cworst_ccworst}                               {LEC scenarios} 
bbset lec.r2r_fe2scan.NumCores       {4}                                                              {number of cores for run}
bbset lec.r2r_fe2scan.RAM            {64000}                                                          {# No Comment}  
bbset lec.r2r_fe2scan.Res            {CORES/8 RAM/16000}                                              {Default resources}
bbset lec.r2r_fe2scan.StdLibraryFileInclude {}                                                               {use to include Std libraries match this regep}
bbset lec.r2r_fe2scan.StdLibraryFileExclude {}                                                               {use to exclude Std libraries match this regep}
bbset lec.r2r_fe2scan.MacroLibraryFileInclude {}                                                               {use to include Macro libraries match this regep}
bbset lec.r2r_fe2scan.MacroLibraryFileExclude {}                                                               {use to exclude Macro libraries match this regep}
bbset lec.namemap_merge.split        {namemap_merge}                                                  {LEC Mode}      
bbset lec.namemap_merge.Rtl2SynMap   {[bbfiles -bundles lec -filetype namemap -category lec -purpose namemap_merge]} {RTL to Synthesis namemap}
bbset lec.namemap_merge.Syn2PnrMap   {[bbfiles -bundles lecv2v -filetype namemap -category lec -purpose namemap_merge]} {Synthesis to PnR namemap}
bbset lec.namemap_merge.libprep      {false}                                                          {Enable libprep}
bbset lec.config.CIA.CheckerSearchPath { [bbget .info.PD_TOOLS_DIR]/lec/CIA/checkers }                  {CIA checker search path for lec stage}
bbset lec.config.CIA.ConsolidateSummary { [bbget .info.BOB_RUN_DIR]/lec/cia.summary }                    {cia.summary path for Bob Audit System}
bbset lec.config.CIA.lecLogCheck.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecLogCheck.FunctionMap {
                                      {LEC_01_01  lecLogCheckAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecBlackbox.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecBlackbox.FunctionMap {
                                      {LEC_02_01  lecBlackboxAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecSignoff.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecSignoff.FunctionMap {
                                      {LEC_03_01  lecSignoffAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecNonequivalent.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecNonequivalent.FunctionMap {
                                      {LEC_04_01  lecNonequivalentAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecNotmapped.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecNotmapped.FunctionMap {
                                      {LEC_04_02  lecNotmappedAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecNotcompared.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecNotcompared.FunctionMap {
                                      {LEC_04_03  lecNotcomparedAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecCpcR2mNoneq.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecCpcR2mNoneq.FunctionMap {
                                      {LEC_05_01  lecCpcR2mNoneqAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecCpcR2mNotcompared.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecCpcR2mNotcompared.FunctionMap {
                                      {LEC_05_02  lecCpcR2mNotcomparedAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecCpgR2mNoneq.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecCpgR2mNoneq.FunctionMap {
                                      {LEC_06_01  lecCpgR2mNoneqAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset lec.config.CIA.lecCpgR2mNotmapped.Enable {True}                                                           {Flag to enable the CIA  checker}
bbset lec.config.CIA.lecCpgR2mNotmapped.FunctionMap {
                                      {LEC_06_02  lecCpgR2mNotmappedAudit}
                                      } {Defines 1:1 mapping for check_id and function}
bbset bbfiles.block                  {ufs_top}                                                        {default block of BoB block}
bbset bbfiles.bundles_yaml           {[bbget .wrap.BundleConfig]}                                     {default to using the wrap yaml}
bbset hierarchy.ufs_top.source       {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main} {set default block source}
bbset PreCmd.BqNodeUpload.Enable     {1}                                                              {default enabled}
bbset PreCmd.BqNodeUpload.File       {bq_precmd_node_upload.rpt}                                      {node status snapshot file to be generated}
bbset PostCmd.MailNotification.Enable {0}                                                              {default disabled}
bbset PostCmd.MailNotification.Users {}                                                               {additional mail receivers (flow creator is default included)}
bbset PostCmd.MailNotification.Subject {[BOB] Node exec notification}                                   {default mail subject, will be decorated with 1. stagename 2. nodename 3. run_dir}
bbset PostCmd.MailNotification.File  {./rpts/summary.rpt}                                             {mail content from this file}
bbset PostCmd.EnvSnapshot.Enable     {1}                                                              {default enabled}
bbset PostCmd.EnvSnapshot.File       {env_snapshot.rpt}                                               {env snapshot file to be generated}
bbset PostCmd.NodeStatusSnapshot.Enable {1}                                                              {default enabled}
bbset PostCmd.NodeStatusSnapshot.File {node_status_snapshot.rpt}                                       {node status snapshot file to be generated}
bbset PostCmd.BqNodeUpload.Enable    {1}                                                              {default enabled}
bbset PostCmd.BqNodeUpload.File      {bq_node_upload.rpt}                                             {node status snapshot file to be generated}
bbset PostCmd.RemoteNcTracker.Enable {1}                                                              {default enabled}
bbset PostCmd.RemoteNcTracker.SlurmInitWaitSecond {60}                                                             {# No Comment}  
bbset scf.InputRTLFileList           {}                                                               {RTL Filelist}  
bbset scf.InputNetlist               {}                                                               {Netlist for scf}
bbset scf.InputSDCFile               {}                                                               {SDC File for scf}
bbset scf.mission.InputSDCFile       {}                                                               {SDC File for scf mission}
bbset scf.merged.InputSDCFile        {}                                                               {SDC File for scf merged}
bbset scf.shift.InputSDCFile         {}                                                               {SDC File for scf shift}
bbset scf.Cores                      {16}                                                             {Cores}         
bbset scf.RAM                        {80000}                                                          {RAM}           
bbset scf.Resources                  {}                                                               {Resources}     
bbset scf.REPO_TOP                   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo} {REPO_TOP}      
bbset scf.auto_generate.LPCMClockSheet {}                                                               {LPCM Clock sheet path}
bbset scf.auto_generate.Incremental  {false}                                                          {Incremental Run}
bbset scf.auto_generate.EnableWriteETM {false}                                                          {Lib Writing}   
bbset scf.auto_generate.EnableETMUserBudget {false}                                                          {User budget override}
bbset scf.auto_generate.EnableWriteCG {false}                                                          {Clock Group Cons Writing}
bbset scf.auto_generate.EnableWriteIO {false}                                                          {IO Cons Writing}
bbset scf.auto_generate.BlackBoxModule {}                                                               {Modules to black box}
bbset scf.auto_generate.IOBudget     {0.45}                                                           {Budget split for external logic}
bbset scf.auto_generate.MaxDelay     {2}                                                              {Max Delay for non-timing critical path}
bbset scf.auto_generate.MinDelay     {0.2}                                                            {Min Delay for non-timing critical path}
bbset scf.auto_generate.ScaleFactor  {1}                                                              {Scale Freq}    
bbset scf.auto_generate.UserLibData  {  voltage_map("VDD_default",  0.6750);\n  voltage_map("VSS", 0);\n} {Voltage map addition in lib}
bbset scf.auto_generate.UserCellData {  pg_pin("VSS")  {\n  voltage_name : "VSS";\n  pg_type : primary_ground;\n  direction  : input;\n  }\n\n  pg_pin("VDD_default")  {\n  voltage_name : "VDD_default";\n  pg_type : primary_power;\n  direction  : input;\n  }\n } {PG pin information}
bbset scf.auto_generate.UserPinData  {* {	related_power_pin  : "VDD_default"\n\trelated_ground_pin : "VSS";}} {Related power and ground pin}
bbset scf.auto_generate.CornerDependentBlocks {sswrp_gpu sswrp_cpu sswrp_aoc sswrp_aurora sswrp_memss_top sswrp_gpcm_top sswrp_fabsyss sswrp_fabrt sswrp_fabmed sswrp_fabhbw} {Corner dependent blocks}
bbset scf.auto_generate.CentralMuxData {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/SCF/malibu/procs/case_analysis.V1.0.tcl} {mux case analysis data}
bbset scf.compile.TechSheet          {/google/gchips/ipreleases/malibu/SCF/TechSheet/V1.3/soc_tech.a0.constraints.V3.0.xlsx} {SoC Tech Sheet}
bbset scf.compile.FreqSheet          {$::env(SCF_FUNC_CENTRAL_CLOCK_HOME)/freq_sheet/all_clock_period.a0.constraints.V3.0.xlsx $::env(SCF_DFT_CENTRAL_CLOCK_HOME)/freq_sheet/all_clock_period_dft.a0.constraints.V3.0.xlsx} {Freq Sheet}    
bbset scf.compile.LPCMSheet          {}                                                               {LPCM Sheet for Constraints}
bbset scf.compile.LPCMNameMap        {}                                                               {Mapping file for LPCM clock sheet}
bbset scf.compile.ConstraintsSheets  {}                                                               {Constraints Sheets}
bbset scf.compile.DFTSheet           {/google/gchips/ipreleases/malibu/SCF/DFT_Sheets/M2V1/sswrp.common.dft.clocks.constraints.V3.0.xlsx} {DFT Constraints Sheet}
bbset scf.compile.PostDFTSheet       {/google/gchips/ipreleases/malibu/SCF/DFT_Sheets/M3V1/sswrp.common.dft.exceptions.constraints.V3.0.xlsx} {DFT Constraints Sheet}
bbset scf.compile.PPDFTSheet         {/google/gchips/ipreleases/malibu/SCF/DFT_Sheets/M2V1/sswrp.common.dft.clocks.constraints.V3.0.xlsx} {DFT Constraints Sheet}
bbset scf.compile.PostPPDFTSheet     {/google/gchips/ipreleases/malibu/SCF/DFT_Sheets/M3V1/sswrp.common.dft.exceptions.constraints.V3.0.xlsx} {DFT Constraints Sheet}
bbset scf.compile.HierBlocks         {}                                                               {Hier block and sheet for compile based pull up}
bbset scf.compile.TessentSDC         {}                                                               {Tessent SDC file}
bbset scf.compile.IPDFTSheet         {}                                                               {IP based DFT sheet}
bbset scf.compile.PostIPDFTSheet     {}                                                               {Post IP based DFT sheet}
bbset scf.compile.ClockJitterSheet   {/google/gchips/ipreleases/laguna/SCF/ClockJitterSheet/LGA_Jitter.V0.6.xlsx} {Central Clock Jitter Sheet}
bbset scf.dft_compile.IPDFTSheet     {}                                                               {IP based DFT sheet}
bbset scf.dft_compile.PostIPDFTSheet {}                                                               {Post IP based DFT sheet}
bbset scf.compile.Cores              {1}                                                              {Cores}         
bbset scf.compile.RAM                {4000}                                                           {RAM}           
bbset scf.compile.Resources          {}                                                               {Resources}     
bbset scf.HierBlocks                 {}                                                               {Hier Blocks for pushdown/pullup}
bbset scf.ATPGBlocks                 { aonss_top ambss_top gsm_top aoss_tpu aoss_tile  vce_com vce_enc_dec rdo dsu_wrapper  little_core_hm mid_core_hm cme_core_hm big_core_hm  dpu_fe_pd_wrap dpu_be_pd_wrap dpu_dsi_pd_wrap sswrp_ispfe_aux  sswrp_ispfe_misc fe_core csi1_pd_wrap csi2_pd_wrap  sswrp_gpu_aux ip_gpu_top rgx_texas5_c2 rgx_swift5_c2  rgx_mercer5 dpa ufs_top FABMEM_ifabric_FABMEM_wrap  CustomBlockCore sswrp_tpu_pg_logic ControlCluster TileV  TileH X280 Huffman_HIB mma_core_wrap slice sswrp_ispbe_aux_pd_wrap  btr0_pd_wrap btr1_pd_wrap btr2_pd_wrap orp_pd_wrap } {ATPG Blocks as per LAJ}
bbset scf.HierBlocksAndSDC           {}                                                               {Hier Blocks and SDC for pullup}
bbset scf.pullup.EnableSingleSDC     {1}                                                              {Pull up, enable consolidated SDC}
bbset scf.pullup.EnableIOConstraint  {true}                                                           {Pull up, enable IO cons}
bbset scf.check_constraints.EnableDebug {true}                                                           {Debug Reporting in check cons}
bbset scf.check_constraints.mission.WaiverFile {}                                                               {Waiver File for check cons in mission}
bbset scf.check_constraints.shift.WaiverFile {}                                                               {Waiver File for check cons in shift}
bbset scf.check_constraints.merged.WaiverFile {}                                                               {Waiver File for check cons in merged}
bbset scf.check_consistency.RuleSettings {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/SCF/lajolla/procs/check_consistency_rule_settings.tcl} {Rule Settings for check consistency}
bbset scf.libqa.Inputliblist         {}                                                               {list to libs for libqa or edit lib, not required if LinkToStage given}
bbset scf.RTLParsingVars             {}                                                               {vars to parse RTL}
bbset scf.Modes                      {outgoing_lib_checks}                                            {Mode in which run SCF}
bbset scf.outgoing_lib_checks.Stages {libqa}                                                          {Stage of SCF in given mode}
bbset scf.Tool                       {tv}                                                             {Tool for SCF}  
bbset scf.libqa.Cores                {1}                                                              {Cores for libqa Stage}
bbset scf.libqa.RAM                  {10000}                                                          {RAM for libqa Stage}
bbset scf.libqa.Resources            {}                                                               {Resource for libqa}
bbset scf.libqa.MaxTransitionLimit   {*71* 0.100 *61* 0.150 *54* 0.200 *475* 0.250}                   {Max transition limit to check against <corner_pattern> value}
bbset scf.libqa.MaxCapacitanceLimit  {*71* 0.150 *61* 0.150 *54* 0.200 *475* 0.200}                   {Max Capacitance limit to check against <corner_pattern> value}
bbset scf.libqa.OCVSigmaLimit        {*71* 0.050 *61* 0.070 *54* 0.100 *475* 0.100}                   {OCV sigma limit to check against <corner_pattern> value}
bbset scf.libqa.ClockLatencyRatioLimit {0.020}                                                          {Max Clock Latency Ratio to check against}
bbset scf.libqa.InputUPFFile         {}                                                               {UPF file to check power rail against, prime upf}
bbset scf.LinkToStages               {}                                                               {To Hook SCF graph with given flow}
bbset scf.libedit.Inputliblist       {}                                                               {list to libs for libqa or edit lib, not required if LinkToStage given}
bbset scf.libedit.CellParameters     {}                                                               {Edit lib cell parameters <parameter> value}
bbset scf.libedit.PinParameters      {}                                                               {Edit lib pin parameters <pin> {<parameter> value}}
bbset scf.libedit.Cores              {1}                                                              {Cores for libedit Stage}
bbset scf.libedit.RAM                {10000}                                                          {RAM for libedit Stage}
bbset scf.libedit.Resources          {}                                                               {Resources for libedit Stage}
bbset scf.libedit.ArcsToDerate       {}                                                               {<from> <to>}   
bbset scf.libedit.ArcsToDelete       {}                                                               {<from> <to>}   
bbset scf.libedit.ArcsToCopy         {}                                                               {<from> <to>}   
bbset scf.libedit.PinToAddArc        {}                                                               {pin_name to add arc on}
bbset scf.libedit.DeleteFilter       {}                                                               {Additional Filter}
bbset scf.libedit.CopyFilter         {}                                                               {Additional Filter}
bbset scf.libedit.DerateValue        {10}                                                             {Arc Derate value}
bbset scf.libedit.DerateFilter       {}                                                               {Additional Filter}
bbset scf.libcompare.Inputliblist    {}                                                               {Input lib list}
bbset scf.libcompare.RefrenceLiblist {}                                                               {Refrence lib list}
bbset scf.libcompare.RefrenceLibDirectory {}                                                               {Refrence lib dir}
bbset scf.libcompare.Cores           {1}                                                              {Cores}         
bbset scf.libcompare.RAM             {10000}                                                          {RAM}           
bbset scf.libcompare.Resources       {}                                                               {Resources}     
bbset scf.libbudget.STARunArea       {}                                                               {STA Run Area to pick lib and sdc}
bbset scf.libbudget.Cores            {1}                                                              {Cores}         
bbset scf.libbudget.RAM              {10000}                                                          {RAM}           
bbset scf.libbudget.Resources        {}                                                               {Resources}     
bbset scf.libbudget.Load             {0.05}                                                           {pin load to check budget on}
bbset scf.libbudget.Slew             {0.05}                                                           {pin slew to check budget on}
bbset scf.libbudget.BudgetPercentage {0.55}                                                           {Period percentage to calculate delay}
bbset scf.libbudget.MinPeriodPercentage {0.90}                                                           {Period percentage to calculate delay for Min Period}
bbset scf.libbudget.MinPulseWidthPercentage {0.90}                                                           {Period percentage to calculate delay for pulse width}
bbset scf.libbudget.DataTransitionPercentage {0.15}                                                           {Period percentage to calculate ref data tran number}
bbset scf.libbudget.ClockTransitionPercentage {0.10}                                                           {Period percentage to calculate ref clock tran number}
bbset scf.RunByTeam                  {}                                                               {Run by functional or DFT. Values = func, dft, test}
bbset scf.Milestone                  {}                                                               {Milestone}     
bbset scf.Run_type                   {local}                                                          {Local or central IO cons numbering}
bbset scf.check_constraints.CustomReportDump {0}                                                              {Enable/Disable multicorner report dumping}
bbset scf.tv.LogRules                {{SCF-01 Error {TV-ERROR}}
                                      {SCF-01 Info {TV-INFO}}
                                      {SCF-01 Debug {TV-DEBUG}}
                                      {SCF-01 FATAL {TV-FATAL}}
                                      } {List of timevision rules used to process the log file}
bbset scf.PreInputLibList            {}                                                               {new variable to give local libs}
bbset scf.HierarchyCategory          {Hier.Clock Hier.Case Hier.ClockSense Hier.InterClock}           {To specify the categories that can be enabled for Hierarchical analysis}
bbset scf.check_constraints.DebugRuleCount {500}                                                            {To specify the violation count number for which debug report is dumped}
bbset scf.WhichLibs                  {ccs}                                                            {Reading precreated tdb libs(fast) or ccs libs(slow)}
bbset scf.ValidationDashboardTag     {}                                                               {RTL Tag for Validation Runs}
bbset scf.custom_source              {0}                                                              {For global variables defined by 3rd party - specifically adding this var for hsio}
bbset scf.check_constraints.common_exceptions_removal_dv_vcs_sdc {common_exceptions_hsio.tcl fll_exceptions.tcl lpcm_exceptions.tcl miscellaneous_exceptions.tcl common_exceptions.tcl gspan_exceptions.tcl memory_exceptions.tcl power_cells_exceptions.tcl overrides_false_path.tcl overrides_multicycle_path.tcl ft_cons_sswrp.*.tcl} {Removing the following common exceptions file for dv_vcs_sdc}
bbset scf.async_input_ports_with_no_constraints {idft* idfd* gmrc_rx_id_* *repair_data* *rx_available*}          {# No Comment}  
bbset scf.async_output_ports_with_no_constraints {odft* odfd* *repair_data* *rx_available*}                       {# No Comment}  
bbset scf.async_gspan_input_ports_with_no_constraints {}                                                               {# No Comment}  
bbset scf.async_gspan_output_ports_with_no_constraints {}                                                               {# No Comment}  
bbset scf.async_feedthrough_input_ports_with_no_constraints {}                                                               {# No Comment}  
bbset scf.RunMode                    {}                                                               {Run Mode for SCF}
bbset scf.check_constraints.Enable_Func_Custom_Reports {0}                                                              {For Enabling Functional Custom Report}
bbset scf.check_constraints.DFT_Custom_Reports {}                                                               {For DFT Custom Report}
bbset scf.check_constraints.Enable_DFT_Custom_Reports {0}                                                              {For DFT Custom Report}
bbset scf.intentional_clock_cell     { .*CK.*(\[3-9\]|10).*CPDULVT.* }                                {For DFT Custom Report}
bbset scf.check_constraints.RuleSettings {}                                                               {Rule Settings for check cons, default from iprelease func area}
bbset scf.fe_parser_scf3.Level       {}                                                               {This variable controls which constraints will be selected or ignored based on the LEVEL column}
bbset scf.fe_parser_scf3.PrimaryWorkbooks {}                                                               {List of workbooks to take the primary role during constraint processing. The primary workbook default and IO sheets are used during backend processing}
bbset scf.fe_parser_scf3.SecondaryWorkbooks {}                                                               {List of workbooks to take the secondary role during constraint processing. The secondary workbook default and IO sheets are ignored during backend processing}
bbset scf.fe_parser_scf3.FuncFrequencySheet {}                                                               {The path to functional frequency sheet}
bbset scf.fe_parser_scf3.DftFrequencySheet {}                                                               {The path to DFT frequency sheet}
bbset scf.fe_parser_scf3.OutDir      {outs}                                                           {Output dir name}
bbset scf.fe_parser_scf3.OutFile     {}                                                               {Output file name. Default is the first workbook filename}
bbset scf.fe_parser_scf3.block_name  {}                                                               {block name for xlsx}
bbset scf.fe_parser_scf3.ClockPromoRemapFile {}                                                               {The path to clock_promo_remap.csv file}
bbset scf.fe_parser_scf3.GlobalsFile {}                                                               {The path to globals.tcl file}
bbset scf.fe_parser_scf3.ScfSourcemeFile {}                                                               {The path to scf.sourceme file from Frontend-Tools}
bbset scf.check_constraints.LPCMClockSheet {}                                                               {# No Comment}  
bbset scf.potential_patterns         {*/OSCTS2NSPLVRCA1_inst/FOSCOUTinternalclk */u_xtal/ABKXTLM2/XOUT */ioring/I_XHSION_CLKBUF_0_B/AIO200 */ioring/I_XHSIOS_CLKBUF_1/AIO200 */u_tcxo_clock_buffer_wrapper_top/u_tcxo_clock_buffer_top/out_clk} {# No Comment}  
bbset esa.flows                      {pnr power sta pdp pdv emir}                                     {# List of flows that have the esa requirment. Need to add esa namespace under these flow to define branch node}
bbset StdLibraryFileInclude          {}                                                               {# use to include Std libraries match this regep}
bbset StdLibraryFileExclude          {}                                                               {# use to exclude Std libraries match this regep}
bbset MacroLibraryFileInclude        {}                                                               {# use to include Macro libraries match this regep}
bbset MacroLibraryFileExclude        {}                                                               {# use to exclude Macro libraries match this regep}
bbset StdLibraryFileIncludeFromFiles {}                                                               {# Files use to include Std libraries match the regep}
bbset StdLibraryFileExcludeFromFiles {}                                                               {# Files use to exclude Std libraries match the regep}
bbset MacroLibraryFileIncludeFromFiles {}                                                               {# Files use to include Macro libraries match the regep}
bbset MacroLibraryFileExcludeFromFiles {}                                                               {# Files use to exclude Macro libraries match the regep}
bbset libgen.POKLibPattern           {hsp|hdp}                                                        {#regexp to filter POK libs}
bbset libgen.POKLibFileExtension     {dlvl
                                      pg
                                      udlvl
                                      ulvl
                                      } {POK libs extensions}
bbset libgen.POKlibRailVoltages      {VDD VSS VBP VBN}                                                {#Rail voltages of POK library cells}
bbset libgen.PvtFileTypes            {ccs_lib
                                      ccs_db
                                      apl_current {process temperature}
                                      apl_cap
                                      apl_pwcap
                                      macro_apl
                                      switch_apl
                                      avm
                                      dist_pocvm
                                      leakinfo
                                      socv
                                      pocvm
                                      nldm_db
                                      nldm_lib
                                      sglib
                                      mbecpo_tcl} {# file_types need to append PVT informations in pattern}
bbset libgen.MmmcFlow                {pnr syn sta power}                                              {# flow need to generate mmmc scripts. mmmc scripts format will be generated based on tool Tool({flow})}
bbset libgen.LibComplements          {}                                                               {# Library Name should go through lib complement with priority filtering}
bbset libgen.LibComplementsSingleLib {}                                                               {# Force lib Complements only return one libs after priority filtering}
bbset libgen.FileDictKeys            {library_name
                                      pwr_opt_name} {# List of DK attributes as key to create file dictionary for LibFilters/LibComplements feature}
bbset libgen.MacroUseWireRCCorner    {False}                                                          {# True|False, option to force follow wire RC corner when pick up timing libs}
bbset libgen.LibraryPriority.LibFilters {.*}                                                             {# Library Name should go through priority filtering}
bbset libgen.LibraryPriority.LibComplements {}                                                               {# Library Name should go through lib complement with priority filtering}
bbset libgen.LibraryPriority.LibComplementsSingleLib {}                                                               {# Force lib Complements only return one libs after priority filtering}
bbset libgen.LibraryPriority.PriorityList {
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {is_em false} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {is_em false} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {is_em false} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {is_em false} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}}}
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest}}
                                      {{process exact} {main_voltage exact} {sec_voltage exact} {temperature exact} {category macros} }
                                      {{process exact} {main_voltage exact} {sec_voltage exact} {temperature closest} {category macros} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} }
                                      {{process exact} {main_voltage exact} {temperature exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {temperature exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {temperature closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {temperature closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {temperature exact} }
                                      {{process exact} {main_voltage exact} {temperature exact} }
                                      {{process exact} {main_voltage exact} {temperature closest} }
                                      {{process exact} {main_voltage exact} {temperature closest} }
                                      {{process exact} {main_voltage closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage closest} {is_lvf true} }
                                      {{process exact} {main_voltage closest} {mode exact}}
                                      {{process exact} {main_voltage closest} {mode closest}}
                                      {{process exact} {main_voltage closest}}
                                      {{main_voltage closest}}
                                      } {List of DK attribute list for LibFilters and LibComplements feature to query the lib file in a library set}
bbset libgen.ExtraLibs.NamingConventionConfig {
                                      [bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/lib/python/libpreparation/extra_lib_naming_convention.yaml
                                      } {# yaml config file for extra lib match naming convention and extract library attributes}
bbset libgen.fe.ccs_lib              {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {FE libgen}     
bbset fe.scenarios.Scenarios         {func.ssgnp-NM-0-cworst_ccworst_t}                               {FE scenario}   
bbset audit.lec.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/lec/lec.conformal/logs/cia_summary
                                      [bbget info.BOB_RUN_DIR]/lec/lec.conformal_syn_n2n/logs/cia_summary
                                      [bbget info.BOB_RUN_DIR]/lec/lec.conformal_pnr_n2n/logs/cia_summary
                                      } {audit stage dependency}
bbset audit.lec.CIAMergeFlowArgs     {
                                      lec.conformal
                                      lec.conformal_syn_n2n
                                      lec.conformal_pnr_n2n
                                      } {LEC stages to pass to cia_merge -flow}
bbset audit.lec.checks.LEC_R2N_1_1.Name {LEC_R2N_1_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_1_1.Description {Document the the tool version used.}                            {Description}   
bbset audit.lec.checks.LEC_R2N_1_1.Category {R2N Tool Version}                                               {Category}      
bbset audit.lec.checks.LEC_R2N_1_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_1_2.Name {LEC_R2N_1_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_1_2.Description {Document the CAD flow/Repo version used.}                       {Description}   
bbset audit.lec.checks.LEC_R2N_1_2.Category {R2N Tool/Flow}                                                  {Category}      
bbset audit.lec.checks.LEC_R2N_1_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_1_3.Name {LEC_R2N_1_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_1_3.Description {Are there any local hacks done to the LEC setup files (compare.do and compare_lec.do)} {Description}   
bbset audit.lec.checks.LEC_R2N_1_3.Category {R2N Tool/Flow}                                                  {Category}      
bbset audit.lec.checks.LEC_R2N_1_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_2_1.Name {LEC_R2N_2_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_2_1.Description {Document the DK version used for Library Files}                 {Description}   
bbset audit.lec.checks.LEC_R2N_2_1.Category {R2N Library Collateral}                                         {Category}      
bbset audit.lec.checks.LEC_R2N_2_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_2_2.Name {LEC_R2N_2_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_2_2.Description {Document the Hard IP library path/wrap used for Partiton-in-Parition Lec runs } {Description}   
bbset audit.lec.checks.LEC_R2N_2_2.Category {R2N Library Collateral}                                         {Category}      
bbset audit.lec.checks.LEC_R2N_2_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_3_1.Name {LEC_R2N_3_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_3_1.Description {Document the RTL Filelist & Netlist tag/repo/wrap version}      {Description}   
bbset audit.lec.checks.LEC_R2N_3_1.Category {R2N Design Collateral}                                          {Category}      
bbset audit.lec.checks.LEC_R2N_3_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_4_1.Name {LEC_R2N_4_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_4_1.Description {Document the RTL & NL UPF tag/repo/wrap version}                {Description}   
bbset audit.lec.checks.LEC_R2N_4_1.Category {R2N Upf Collateral}                                             {Category}      
bbset audit.lec.checks.LEC_R2N_4_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_5_1.Name {LEC_R2N_5_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_5_1.Description {Document the Stage Names used for Signoff i.e:- RTL to Map/Compile or RTL to SynFinal or RTL to PNR} {Description}   
bbset audit.lec.checks.LEC_R2N_5_1.Category {R2N Signoff Stage}                                              {Category}      
bbset audit.lec.checks.LEC_R2N_5_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_6_1.Name {LEC_R2N_6_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_6_1.Description {Are the RTL defines used in LEC flow reviewed by the Design Team?} {Description}   
bbset audit.lec.checks.LEC_R2N_6_1.Category {R2N Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2N_6_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_6_2.Name {LEC_R2N_6_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_6_2.Description {Are there Notmapped Z Keypoints (Floating Nets) in the Run}     {Description}   
bbset audit.lec.checks.LEC_R2N_6_2.Category {R2N Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2N_6_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_6_3.Name {LEC_R2N_6_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_6_3.Description {Have the RTL/Golden Unreachable reports reviewed with Design & DFT teams ? } {Description}   
bbset audit.lec.checks.LEC_R2N_6_3.Category {R2N Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2N_6_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_6_4.Name {LEC_R2N_6_4}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_6_4.Description {Has the important_rule_check.rpt in the checks directory been reviewed with the Design Team. Critical messages are IGN3.2} {Description}   
bbset audit.lec.checks.LEC_R2N_6_4.Category {R2N Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2N_6_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_7_1.Name {LEC_R2N_7_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_7_1.Description {Have all the UPF Lint Messages been Reviewed?}                  {Description}   
bbset audit.lec.checks.LEC_R2N_7_1.Category {R2N UPF Lint Review}                                            {Category}      
bbset audit.lec.checks.LEC_R2N_7_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_8_1.Name {LEC_R2N_8_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_8_1.Description {Has the library lint and important rule check reports for library been reviewed?} {Description}   
bbset audit.lec.checks.LEC_R2N_8_1.Category {Library Lint Review}                                            {Category}      
bbset audit.lec.checks.LEC_R2N_8_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_9_1.Name {LEC_R2N_9_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_9_1.Description {Have all the Functional/DFT constraints used been reviewed? Document the bug id for constraints signoff} {Description}   
bbset audit.lec.checks.LEC_R2N_9_1.Category {R2N constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2N_9_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_9_2.Name {LEC_R2N_9_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_9_2.Description {Review the usage of -both option in the constraints command. Document why -both is needed} {Description}   
bbset audit.lec.checks.LEC_R2N_9_2.Category {R2N constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2N_9_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_9_3.Name {LEC_R2N_9_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_9_3.Description {Is there any Feedthru/Cloned ports present only in the Netlist. If so review the constraints with signoff team} {Description}   
bbset audit.lec.checks.LEC_R2N_9_3.Category {R2N constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2N_9_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_9_4.Name {LEC_R2N_9_4}                                                    {Name}          
bbset audit.lec.checks.LEC_R2N_9_4.Description {Is there any constraints applied on isolation control ports or sequential instances? if so capture the need for these constraints} {Description}   
bbset audit.lec.checks.LEC_R2N_9_4.Category {R2N constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2N_9_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_10_1.Name {LEC_R2N_10_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_10_1.Description {Have all the hooks present in the setup directory been reviewed} {Description}   
bbset audit.lec.checks.LEC_R2N_10_1.Category {R2N LEC Setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2N_10_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_10_2.Name {LEC_R2N_10_2}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_10_2.Description {Review all the LEC commands which affect the entire design. E.g :- command starts with set patterns} {Description}   
bbset audit.lec.checks.LEC_R2N_10_2.Category {R2N LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2N_10_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_10_3.Name {LEC_R2N_10_3}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_10_3.Description {Is there any additional flattening models used in the design. If so explain the need for the flattening commands} {Description}   
bbset audit.lec.checks.LEC_R2N_10_3.Category {R2N LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2N_10_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_10_4.Name {LEC_R2N_10_4}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_10_4.Description {Is there any user mapping file used in the run}                 {Description}   
bbset audit.lec.checks.LEC_R2N_10_4.Category {R2N LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2N_10_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_11_1.Name {LEC_R2N_11_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_11_1.Description {Has blackbox report reviewed and confirm no blackbox inferred in the analysis.} {Description}   
bbset audit.lec.checks.LEC_R2N_11_1.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_11_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_11_2.Name {LEC_R2N_11_2}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_11_2.Description {Is there Unbalanced BBOX present in the runs}                   {Description}   
bbset audit.lec.checks.LEC_R2N_11_2.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_11_2.Milestone { Have all those modules been Reviewed.}                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_11_3.Name {LEC_R2N_11_3}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_11_3.Description {Has the multidriven net report been reviewed. Make sure the design related Multidriven nets are reviewed with the Design team} {Description}   
bbset audit.lec.checks.LEC_R2N_11_3.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_11_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_11_4.Name {LEC_R2N_11_4}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_11_4.Description {Is there a Mapped Z keypoints. Confirm that}                    {Description}   
bbset audit.lec.checks.LEC_R2N_11_4.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_11_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_11_5.Name {LEC_R2N_11_5}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_11_5.Description {The notmapped Keypoints present in the run been reviewed}       {Description}   
bbset audit.lec.checks.LEC_R2N_11_5.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_11_5.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_11_6.Name {LEC_R2N_11_6}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_11_6.Description {The Extra PI/PO Keypoints present in the run been reviewed}     {Description}   
bbset audit.lec.checks.LEC_R2N_11_6.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_11_6.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_12_1.Name {LEC_R2N_12_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_12_1.Description {Is the CPI check executed? Has the status been Equivalent}      {Description}   
bbset audit.lec.checks.LEC_R2N_12_1.Category {R2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_R2N_12_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_12_2.Name {LEC_R2N_12_2}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_12_2.Description {Is the CPG check executed? Has the status been Equivalent}      {Description}   
bbset audit.lec.checks.LEC_R2N_12_2.Category {R2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_R2N_12_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_12_3.Name {LEC_R2N_12_3}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_12_3.Description {Have the constraints used for CPG check been reviewed with Signoff Team} {Description}   
bbset audit.lec.checks.LEC_R2N_12_3.Category {R2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_R2N_12_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_12_4.Name {LEC_R2N_12_4}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_12_4.Description {Is the CPC check executed? Has the status been Equivalent}      {Description}   
bbset audit.lec.checks.LEC_R2N_12_4.Category {R2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_R2N_12_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_13_1.Name {LEC_R2N_13_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_13_1.Description {Confirm there are 0 Nonequivalent in the Report}                {Description}   
bbset audit.lec.checks.LEC_R2N_13_1.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_13_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_13_2.Name {LEC_R2N_13_2}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_13_2.Description {Confirm there are 0 Aborts in the Report}                       {Description}   
bbset audit.lec.checks.LEC_R2N_13_2.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_13_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_13_3.Name {LEC_R2N_13_3}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_13_3.Description {Confirm the LEC Status PASS in the signoff report}              {Description}   
bbset audit.lec.checks.LEC_R2N_13_3.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_13_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_13_4.Name {LEC_R2N_13_4}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_13_4.Description {Have all the Warning/Error/Info messages in log file been reviewed} {Description}   
bbset audit.lec.checks.LEC_R2N_13_4.Category {R2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_13_4.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_14_1.Name {LEC_R2N_14_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_14_1.Description {All the waivers related to Design/UPF/LP checks and LEC flow options has to be reviewed and approved by the respective signoff owners} {Description}   
bbset audit.lec.checks.LEC_R2N_14_1.Category {R2N Waivers}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_14_1.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_15_1.Name {LEC_R2N_15_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_15_1.Description {Have all the hooks and waivers used been reviewed with CAD/Peer Reviewers} {Description}   
bbset audit.lec.checks.LEC_R2N_15_1.Category {R2N Review}                                                     {Category}      
bbset audit.lec.checks.LEC_R2N_15_1.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2N_16_1.Name {LEC_R2N_16_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2N_16_1.Description {Have all the LEC run logs}                                      {Description}   
bbset audit.lec.checks.LEC_R2N_16_1.Category {R2N Archive}                                                    {Category}      
bbset audit.lec.checks.LEC_R2N_16_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_1_1.Name {LEC_N2N_1_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_1_1.Description {Document the the tool version used.}                            {Description}   
bbset audit.lec.checks.LEC_N2N_1_1.Category {N2N Tool Version}                                               {Category}      
bbset audit.lec.checks.LEC_N2N_1_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_1_2.Name {LEC_N2N_1_2}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_1_2.Description {Document the CAD flow/Repo version used.}                       {Description}   
bbset audit.lec.checks.LEC_N2N_1_2.Category {N2N Tool/Flow}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_1_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_1_3.Name {LEC_N2N_1_3}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_1_3.Description {Are there any local hacks done to the LEC setup files like compare.do and compare_lec.do} {Description}   
bbset audit.lec.checks.LEC_N2N_1_3.Category {N2N Tool/Flow}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_1_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_2_1.Name {LEC_N2N_2_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_2_1.Description {Document the DK version used for Library Files}                 {Description}   
bbset audit.lec.checks.LEC_N2N_2_1.Category {N2N Library Collateral}                                         {Category}      
bbset audit.lec.checks.LEC_N2N_2_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_2_2.Name {LEC_N2N_2_2}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_2_2.Description {Document the Hard IP library path/wrap used for Partiton-in-Parition Lec runs } {Description}   
bbset audit.lec.checks.LEC_N2N_2_2.Category {N2N Library Collateral}                                         {Category}      
bbset audit.lec.checks.LEC_N2N_2_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_3_1.Name {LEC_N2N_3_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_3_1.Description {Document the RTL Filelist & Netlist tag/repo/wrap version}      {Description}   
bbset audit.lec.checks.LEC_N2N_3_1.Category {N2N Design Collateral}                                          {Category}      
bbset audit.lec.checks.LEC_N2N_3_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_4_1.Name {LEC_N2N_4_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_4_1.Description {Document the RTL & NL UPF tag/repo/wrap version}                {Description}   
bbset audit.lec.checks.LEC_N2N_4_1.Category {N2N Upf Collateral}                                             {Category}      
bbset audit.lec.checks.LEC_N2N_4_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_5_1.Name {LEC_N2N_5_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_5_1.Description {Document the Stage Names used for Signoff i.e:- Map/Compile to SynFinal (or/and) SynFinal to PNR} {Description}   
bbset audit.lec.checks.LEC_N2N_5_1.Category {N2N Signoff Stage}                                              {Category}      
bbset audit.lec.checks.LEC_N2N_5_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_6_1.Name {LEC_N2N_6_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_6_1.Description {Are there Notmapped Z Keypoints (Floating Nets) in the Run}     {Description}   
bbset audit.lec.checks.LEC_N2N_6_1.Category {N2N PD Review}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_6_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_6_2.Name {LEC_N2N_6_2}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_6_2.Description {Has the important_rule_check.rpt present in checks directory been reviewed ? } {Description}   
bbset audit.lec.checks.LEC_N2N_6_2.Category {N2N PD Review}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_6_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_7_1.Name {LEC_N2N_7_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_7_1.Description {Have all the UPF Lint Messages been Reviewed?}                  {Description}   
bbset audit.lec.checks.LEC_N2N_7_1.Category {N2N UPF Lint Review}                                            {Category}      
bbset audit.lec.checks.LEC_N2N_7_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_8_1.Name {LEC_N2N_8_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_8_1.Description {Has the library lint and important rule check reports for library been reviewed?} {Description}   
bbset audit.lec.checks.LEC_N2N_8_1.Category {Library Lint Review}                                            {Category}      
bbset audit.lec.checks.LEC_N2N_8_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_9_1.Name {LEC_N2N_9_1}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_9_1.Description {Have all the Functional/DFT constraints used been reviewed? Document the bug id for constraints signoff} {Description}   
bbset audit.lec.checks.LEC_N2N_9_1.Category {N2N Constraints}                                                {Category}      
bbset audit.lec.checks.LEC_N2N_9_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_9_2.Name {LEC_N2N_9_2}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_9_2.Description {Review the usage of -both option in the constraints command. Document why -both is needed} {Description}   
bbset audit.lec.checks.LEC_N2N_9_2.Category {N2N Constraints}                                                {Category}      
bbset audit.lec.checks.LEC_N2N_9_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_9_3.Name {LEC_N2N_9_3}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_9_3.Description {Is there any Feedthru/Cloned ports present in the one of the design (Golden/Revised). If so review the constraints with signoff team} {Description}   
bbset audit.lec.checks.LEC_N2N_9_3.Category {N2N Constraints}                                                {Category}      
bbset audit.lec.checks.LEC_N2N_9_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_9_4.Name {LEC_N2N_9_4}                                                    {Name}          
bbset audit.lec.checks.LEC_N2N_9_4.Description {Is there any constraints applied on isolation control ports or sequential instances? if so capture the need for these constraints} {Description}   
bbset audit.lec.checks.LEC_N2N_9_4.Category {N2N Constraints}                                                {Category}      
bbset audit.lec.checks.LEC_N2N_9_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_10_1.Name {LEC_N2N_10_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_10_1.Description {Have all the hooks present in the setup directory been reviewed} {Description}   
bbset audit.lec.checks.LEC_N2N_10_1.Category {N2N LEC Setup}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_10_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_10_2.Name {LEC_N2N_10_2}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_10_2.Description {Review all the LEC commands which affect the entire design. E.g :- command starts with set patterns} {Description}   
bbset audit.lec.checks.LEC_N2N_10_2.Category {N2N LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_10_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_10_3.Name {LEC_N2N_10_3}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_10_3.Description {Is there any additional flattening models used in the design. If so explain the need for those commands} {Description}   
bbset audit.lec.checks.LEC_N2N_10_3.Category {N2N LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_10_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_10_4.Name {LEC_N2N_10_4}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_10_4.Description {Is there any user mapping file used in the run}                 {Description}   
bbset audit.lec.checks.LEC_N2N_10_4.Category {N2N LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_N2N_10_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_11_1.Name {LEC_N2N_11_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_11_1.Description {Has blackbox report reviewed and confirm no blackbox inferred in the analysis.} {Description}   
bbset audit.lec.checks.LEC_N2N_11_1.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_11_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_11_2.Name {LEC_N2N_11_2}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_11_2.Description {Is there Unbalanced BBOX present in the runs}                   {Description}   
bbset audit.lec.checks.LEC_N2N_11_2.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_11_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_11_3.Name {LEC_N2N_11_3}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_11_3.Description {Has the multidriven net report been reviewed. Make sure the design related Multidriven are reviewed with the Design team} {Description}   
bbset audit.lec.checks.LEC_N2N_11_3.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_11_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_11_4.Name {LEC_N2N_11_4}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_11_4.Description {Is there a Mapped Z keypoints. Confirm that}                    {Description}   
bbset audit.lec.checks.LEC_N2N_11_4.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_11_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_11_5.Name {LEC_N2N_11_5}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_11_5.Description {The notmapped Keypoints present in the run been reviewed}       {Description}   
bbset audit.lec.checks.LEC_N2N_11_5.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_11_5.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_11_6.Name {LEC_N2N_11_6}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_11_6.Description {The Extra PI/PO Keypoints present in the run been reviewed}     {Description}   
bbset audit.lec.checks.LEC_N2N_11_6.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_11_6.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_12_1.Name {LEC_N2N_12_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_12_1.Description {Is the CPI check executed? Has the status been Equivalent}      {Description}   
bbset audit.lec.checks.LEC_N2N_12_1.Category {N2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_N2N_12_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_12_2.Name {LEC_N2N_12_2}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_12_2.Description {Is the CPG check executed? Has the status been Equivalent}      {Description}   
bbset audit.lec.checks.LEC_N2N_12_2.Category {N2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_N2N_12_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_12_3.Name {LEC_N2N_12_3}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_12_3.Description {Have the constraints used for CPG check been reviewed with Signoff Team} {Description}   
bbset audit.lec.checks.LEC_N2N_12_3.Category {N2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_N2N_12_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_12_4.Name {LEC_N2N_12_4}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_12_4.Description {Is the CPC check executed? Has the status been Equivalent}      {Description}   
bbset audit.lec.checks.LEC_N2N_12_4.Category {N2N LP Reports}                                                 {Category}      
bbset audit.lec.checks.LEC_N2N_12_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_13_1.Name {LEC_N2N_13_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_13_1.Description {Confirm there are 0 Nonequivalent in the Report}                {Description}   
bbset audit.lec.checks.LEC_N2N_13_1.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_13_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_13_2.Name {LEC_N2N_13_2}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_13_2.Description {Confirm there are 0 Aborts in the Report}                       {Description}   
bbset audit.lec.checks.LEC_N2N_13_2.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_13_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_13_3.Name {LEC_N2N_13_3}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_13_3.Description {Confirm the LEC Status PASS in the signoff report}              {Description}   
bbset audit.lec.checks.LEC_N2N_13_3.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_13_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_13_4.Name {LEC_N2N_13_4}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_13_4.Description {Have all the Warning/Error/Info messages in log file been reviewed} {Description}   
bbset audit.lec.checks.LEC_N2N_13_4.Category {N2N Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_13_4.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_14_1.Name {LEC_N2N_14_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_14_1.Description {All the waivers related to Design/UPF/LP checks and LEC flow options has to be reviewed and approved by the respective signoff owners} {Description}   
bbset audit.lec.checks.LEC_N2N_14_1.Category {N2N Waivers}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_14_1.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_15_1.Name {LEC_N2N_15_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_15_1.Description {Have all the hooks and waivers used been reviewed with CAD/Peer Reviewers} {Description}   
bbset audit.lec.checks.LEC_N2N_15_1.Category {N2N Review}                                                     {Category}      
bbset audit.lec.checks.LEC_N2N_15_1.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_N2N_16_1.Name {LEC_N2N_16_1}                                                   {Name}          
bbset audit.lec.checks.LEC_N2N_16_1.Description {Have all the LEC run logs}                                      {Description}   
bbset audit.lec.checks.LEC_N2N_16_1.Category {N2N Archive}                                                    {Category}      
bbset audit.lec.checks.LEC_N2N_16_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_1_1.Name  {LEC_1_1}                                                        {Name}          
bbset audit.lec.checks.LEC_1_1.Description {Are the UPFs used across R2N and N2N runs are consistent. }     {Description}   
bbset audit.lec.checks.LEC_1_1.Category {Upf Collateral}                                                 {Category}      
bbset audit.lec.checks.LEC_1_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_1_2.Name  {LEC_1_2}                                                        {Name}          
bbset audit.lec.checks.LEC_1_2.Description {Are the NL used in R2N and multiple stage of N2N are consistent.} {Description}   
bbset audit.lec.checks.LEC_1_2.Category {NL Collateral}                                                  {Category}      
bbset audit.lec.checks.LEC_1_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_1_3.Name  {LEC_1_3}                                                        {Name}          
bbset audit.lec.checks.LEC_1_3.Description {Is all the LEC runs are Lowpower Runs. If not}                  {Description}   
bbset audit.lec.checks.LEC_1_3.Category {Lowpower LEC}                                                   {Category}      
bbset audit.lec.checks.LEC_1_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_AUX_1_1.Name {LEC_AUX_1_1}                                                    {Name}          
bbset audit.lec.checks.LEC_AUX_1_1.Description {}                                                               {Description}   
bbset audit.lec.checks.LEC_AUX_1_1.Category {Lowpower LEC}                                                   {Category}      
bbset audit.lec.checks.LEC_AUX_1_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_1_1.Name {LEC_R2R_1_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_1_1.Description {Document the the tool version used.}                            {Description}   
bbset audit.lec.checks.LEC_R2R_1_1.Category {R2R Tool Version}                                               {Category}      
bbset audit.lec.checks.LEC_R2R_1_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_1_2.Name {LEC_R2R_1_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_1_2.Description {Document the CAD flow/Repo version used.}                       {Description}   
bbset audit.lec.checks.LEC_R2R_1_2.Category {R2R Tool/Flow}                                                  {Category}      
bbset audit.lec.checks.LEC_R2R_1_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_1_3.Name {LEC_R2R_1_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_1_3.Description {Are there any local hacks done to the LEC setup files (compare.do and compare_lec.do)} {Description}   
bbset audit.lec.checks.LEC_R2R_1_3.Category {R2R Tool/Flow}                                                  {Category}      
bbset audit.lec.checks.LEC_R2R_1_3.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_2_1.Name {LEC_R2R_2_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_2_1.Description {Document the DK version used for Library Files}                 {Description}   
bbset audit.lec.checks.LEC_R2R_2_1.Category {R2R Library Collateral}                                         {Category}      
bbset audit.lec.checks.LEC_R2R_2_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_2_2.Name {LEC_R2R_2_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_2_2.Description {Document the BBOXED (Soft IP) library path/wrap/stub verilog used for Partiton-in-Parition Lec runs } {Description}   
bbset audit.lec.checks.LEC_R2R_2_2.Category {R2R Library Collateral}                                         {Category}      
bbset audit.lec.checks.LEC_R2R_2_2.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_3_1.Name {LEC_R2R_3_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_3_1.Description {Document the Golden RTL Filelist & Revised RTL Filelist tag/repo/wrap version} {Description}   
bbset audit.lec.checks.LEC_R2R_3_1.Category {R2R Design Collateral}                                          {Category}      
bbset audit.lec.checks.LEC_R2R_3_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_4_1.Name {LEC_R2R_4_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_4_1.Description {Document the Stage Name for this Comparison (i.e PreMbist to PostMbist or Arm RTL vs PreMbist RTL)} {Description}   
bbset audit.lec.checks.LEC_R2R_4_1.Category {R2R Signoff Stage}                                              {Category}      
bbset audit.lec.checks.LEC_R2R_4_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_5_1.Name {LEC_R2R_5_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_5_1.Description {Are the RTL defines used in LEC flow reviewed by the Design Team?} {Description}   
bbset audit.lec.checks.LEC_R2R_5_1.Category {R2R Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2R_5_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_5_2.Name {LEC_R2R_5_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_5_2.Description {Are there Notmapped Z Keypoints (Floating Nets) in the Run}     {Description}   
bbset audit.lec.checks.LEC_R2R_5_2.Category {R2R Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2R_5_2.Milestone { Is that reviewed by the Design/DFT team before constrained?}   {Milestone}     
bbset audit.lec.checks.LEC_R2R_5_3.Name {LEC_R2R_5_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_5_3.Description {Have the PreMbist/PostMbist Unreachable reports reviewed with Design & DFT teams ? } {Description}   
bbset audit.lec.checks.LEC_R2R_5_3.Category {R2R Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2R_5_3.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_5_4.Name {LEC_R2R_5_4}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_5_4.Description {Has the important_rule_check.rpt in the checks directory been reviewed with the Design Team. Critical messages are IGN3.2} {Description}   
bbset audit.lec.checks.LEC_R2R_5_4.Category {R2R Design Review}                                              {Category}      
bbset audit.lec.checks.LEC_R2R_5_4.Milestone {HRC3.10}                                                        {Milestone}     
bbset audit.lec.checks.LEC_R2R_6_1.Name {LEC_R2R_6_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_6_1.Description {Have all the Functional/DFT constraints used been reviewed? Document the bug id for constraints signoff} {Description}   
bbset audit.lec.checks.LEC_R2R_6_1.Category {R2R constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2R_6_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_6_2.Name {LEC_R2R_6_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_6_2.Description {Review the usage of -both option in the constraints command. Document why -both is needed} {Description}   
bbset audit.lec.checks.LEC_R2R_6_2.Category {R2R constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2R_6_2.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_6_3.Name {LEC_R2R_6_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_6_3.Description {Is there any Feedthru/Cloned ports present only in the Netlist. If so review the constraints with signoff team} {Description}   
bbset audit.lec.checks.LEC_R2R_6_3.Category {R2R constraints}                                                {Category}      
bbset audit.lec.checks.LEC_R2R_6_3.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_7_1.Name {LEC_R2R_7_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_7_1.Description {Have all the hooks present in the setup directory been reviewed} {Description}   
bbset audit.lec.checks.LEC_R2R_7_1.Category {R2R LEC Setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2R_7_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_7_2.Name {LEC_R2R_7_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_7_2.Description {Review all the LEC commands which affect the entire design. E.g :- command starts with set patterns} {Description}   
bbset audit.lec.checks.LEC_R2R_7_2.Category {R2R LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2R_7_2.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_7_3.Name {LEC_R2R_7_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_7_3.Description {Is there any additional flattening models used in the design. If so explain the need for the flattening commands} {Description}   
bbset audit.lec.checks.LEC_R2R_7_3.Category {R2R LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2R_7_3.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_7_4.Name {LEC_R2R_7_4}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_7_4.Description {Is there any user mapping file used in the run}                 {Description}   
bbset audit.lec.checks.LEC_R2R_7_4.Category {R2R LEC setup}                                                  {Category}      
bbset audit.lec.checks.LEC_R2R_7_4.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_8_1.Name {LEC_R2R_8_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_8_1.Description {Has blackbox report reviewed and confirm no blackbox inferred in the analysis.} {Description}   
bbset audit.lec.checks.LEC_R2R_8_1.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_8_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_8_2.Name {LEC_R2R_8_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_8_2.Description {Is there Unbalanced BBOX present in the runs}                   {Description}   
bbset audit.lec.checks.LEC_R2R_8_2.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_8_2.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_8_3.Name {LEC_R2R_8_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_8_3.Description {Has the multidriven net report been reviewed. Make sure the design related Multidriven nets are reviewed with the Design team} {Description}   
bbset audit.lec.checks.LEC_R2R_8_3.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_8_3.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_8_4.Name {LEC_R2R_8_4}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_8_4.Description {Is there a Mapped Z keypoints. Confirm that}                    {Description}   
bbset audit.lec.checks.LEC_R2R_8_4.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_8_4.Milestone { there is only inout modelled Z key points in the mapped Z reports} {Milestone}     
bbset audit.lec.checks.LEC_R2R_8_5.Name {LEC_R2R_8_5}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_8_5.Description {The notmapped Keypoints present in the run been reviewed}       {Description}   
bbset audit.lec.checks.LEC_R2R_8_5.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_8_5.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_8_6.Name {LEC_R2R_8_6}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_8_6.Description {The Extra PI/PO Keypoints present in the run been reviewed}     {Description}   
bbset audit.lec.checks.LEC_R2R_8_6.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_8_6.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_9_1.Name {LEC_R2R_9_1}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_9_1.Description {Confirm there are 0 Nonequivalent in the Report}                {Description}   
bbset audit.lec.checks.LEC_R2R_9_1.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_9_1.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_9_2.Name {LEC_R2R_9_2}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_9_2.Description {Confirm there are 0 Aborts in the Report}                       {Description}   
bbset audit.lec.checks.LEC_R2R_9_2.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_9_2.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_9_3.Name {LEC_R2R_9_3}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_9_3.Description {Confirm the LEC Status PASS in the signoff report}              {Description}   
bbset audit.lec.checks.LEC_R2R_9_3.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_9_3.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_9_4.Name {LEC_R2R_9_4}                                                    {Name}          
bbset audit.lec.checks.LEC_R2R_9_4.Description {Have all the Warning/Error/Info messages in log file been reviewed} {Description}   
bbset audit.lec.checks.LEC_R2R_9_4.Category {R2R Reports}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_9_4.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_10_1.Name {LEC_R2R_10_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2R_10_1.Description {All the waivers related to Design checks and LEC flow options has to be reviewed and approved by the respective signoff owners} {Description}   
bbset audit.lec.checks.LEC_R2R_10_1.Category {R2R Waivers}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_10_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_11_1.Name {LEC_R2R_11_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2R_11_1.Description {Have all the hooks and waivers used been reviewed with CAD/Peer Reviewers} {Description}   
bbset audit.lec.checks.LEC_R2R_11_1.Category {R2R Review}                                                     {Category}      
bbset audit.lec.checks.LEC_R2R_11_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_R2R_12_1.Name {LEC_R2R_12_1}                                                   {Name}          
bbset audit.lec.checks.LEC_R2R_12_1.Description {Have all the LEC run logs}                                      {Description}   
bbset audit.lec.checks.LEC_R2R_12_1.Category {R2R Archive}                                                    {Category}      
bbset audit.lec.checks.LEC_R2R_12_1.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.lec.checks.LEC_01_01.Name {LEC_01_01}                                                      {Name}          
bbset audit.lec.checks.LEC_01_01.Description {LEC Log File Check for errors}                                  {Description}   
bbset audit.lec.checks.LEC_01_01.Category {LogCheck}                                                       {Category}      
bbset audit.lec.checks.LEC_01_01.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_01_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_01_01.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_02_01.Name {LEC_02_01}                                                      {Name}          
bbset audit.lec.checks.LEC_02_01.Description {LEC Blackbox}                                                   {Description}   
bbset audit.lec.checks.LEC_02_01.Category {Blackbox}                                                       {Category}      
bbset audit.lec.checks.LEC_02_01.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_02_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_02_01.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_03_01.Name {LEC_03_01}                                                      {Name}          
bbset audit.lec.checks.LEC_03_01.Description {LEC Signoff report check}                                       {Description}   
bbset audit.lec.checks.LEC_03_01.Category {Signoff}                                                        {Category}      
bbset audit.lec.checks.LEC_03_01.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_03_01.WaiveFolder {}                                                               {Folder for CIA waivers}
bbset audit.lec.checks.LEC_03_01.WaiverTypes {}                                                               {CIA Waiver Typs}
bbset audit.lec.checks.LEC_04_01.Name {LEC_04_01}                                                      {Name}          
bbset audit.lec.checks.LEC_04_01.Description {LEC Nonequivalent report check}                                 {Description}   
bbset audit.lec.checks.LEC_04_01.Category {Nonequivalent}                                                  {Category}      
bbset audit.lec.checks.LEC_04_01.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_04_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_04_01.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_04_02.Name {LEC_04_02}                                                      {Name}          
bbset audit.lec.checks.LEC_04_02.Description {LEC Nonmapped report check}                                     {Description}   
bbset audit.lec.checks.LEC_04_02.Category {Notmapped}                                                      {Category}      
bbset audit.lec.checks.LEC_04_02.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_04_02.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_04_02.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_04_03.Name {LEC_04_03}                                                      {Name}          
bbset audit.lec.checks.LEC_04_03.Description {LEC Notcompared report check}                                   {Description}   
bbset audit.lec.checks.LEC_04_03.Category {Notcompared}                                                    {Category}      
bbset audit.lec.checks.LEC_04_03.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_04_03.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_04_03.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_05_01.Name {LEC_05_01}                                                      {Name}          
bbset audit.lec.checks.LEC_05_01.Description {LEC CPC r2m Noneq report check}                                 {Description}   
bbset audit.lec.checks.LEC_05_01.Category {CPCNoneq}                                                       {Category}      
bbset audit.lec.checks.LEC_05_01.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_05_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_05_01.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_05_02.Name {LEC_05_02}                                                      {Name}          
bbset audit.lec.checks.LEC_05_02.Description {LEC CPC r2m Notcompared report check}                           {Description}   
bbset audit.lec.checks.LEC_05_02.Category {CPCNotcompared}                                                 {Category}      
bbset audit.lec.checks.LEC_05_02.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_05_02.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_05_02.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_06_01.Name {LEC_06_01}                                                      {Name}          
bbset audit.lec.checks.LEC_06_01.Description {LEC CPG r2m Noneq report check}                                 {Description}   
bbset audit.lec.checks.LEC_06_01.Category {CPGNoneq}                                                       {Category}      
bbset audit.lec.checks.LEC_06_01.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_06_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_06_01.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.lec.checks.LEC_06_02.Name {LEC_06_02}                                                      {Name}          
bbset audit.lec.checks.LEC_06_02.Description {LEC CPG r2m Notmapped report check}                             {Description}   
bbset audit.lec.checks.LEC_06_02.Category {CPGNotmapped }                                                  {Category}      
bbset audit.lec.checks.LEC_06_02.Milestone {ALL}                                                            {Milestone}     
bbset audit.lec.checks.LEC_06_02.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.lec.checks.LEC_06_02.WaiverTypes {RegexpMatch}                                                    {CIA Waiver Typs}
bbset audit.upf.checks.UPF_R_01_01.Name {UPF_R_01_01}                                                    {Name}          
bbset audit.upf.checks.UPF_R_01_01.Description {Document the the tool version used for RTL runs}                {Description}   
bbset audit.upf.checks.UPF_R_01_01.Category {RTL Tool/Flow}                                                  {Category}      
bbset audit.upf.checks.UPF_R_01_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_01_02.Name {UPF_R_01_02}                                                    {Name}          
bbset audit.upf.checks.UPF_R_01_02.Description {Document the CAD flow version used for RTL runs}                {Description}   
bbset audit.upf.checks.UPF_R_01_02.Category {RTL Tool/Flow}                                                  {Category}      
bbset audit.upf.checks.UPF_R_01_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_01_03.Name {UPF_R_01_03}                                                    {Name}          
bbset audit.upf.checks.UPF_R_01_03.Description {Document the CAD methodology version used.}                     {Description}   
bbset audit.upf.checks.UPF_R_01_03.Category {RTL Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_R_01_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_01_04.Name {UPF_R_01_04}                                                    {Name}          
bbset audit.upf.checks.UPF_R_01_04.Description {Are there any override value defined for any of the app var defined by the flow/methodology} {Description}   
bbset audit.upf.checks.UPF_R_01_04.Category {RTL Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_R_01_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_01_05.Name {UPF_R_01_05}                                                    {Name}          
bbset audit.upf.checks.UPF_R_01_05.Description {Are there any additional app vars or tool config variables defined in the tool/flow/methodology other than the ones defined by the flow/methodology.} {Description}   
bbset audit.upf.checks.UPF_R_01_05.Category {RTL Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_R_01_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_01_06.Name {UPF_R_01_06}                                                    {Name}          
bbset audit.upf.checks.UPF_R_01_06.Description {Are any rule defined by the flow been disabled?}                {Description}   
bbset audit.upf.checks.UPF_R_01_06.Category {RTL Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_R_01_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_01.Name {UPF_R_02_01}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_01.Description {Are the power domains documented in the arch specification}     {Description}   
bbset audit.upf.checks.UPF_R_02_01.Category {Arch Collateral}                                                {Category}      
bbset audit.upf.checks.UPF_R_02_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_02.Name {UPF_R_02_02}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_02.Description {Are the supply states captured in the arch specification}       {Description}   
bbset audit.upf.checks.UPF_R_02_02.Category {Arch Collateral}                                                {Category}      
bbset audit.upf.checks.UPF_R_02_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_03.Name {UPF_R_02_03}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_03.Description {Are the power states captured in the arch specification}        {Description}   
bbset audit.upf.checks.UPF_R_02_03.Category {Arch Collateral}                                                {Category}      
bbset audit.upf.checks.UPF_R_02_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_04.Name {UPF_R_02_04}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_04.Description {Document the RTL tag/repo/wrap version}                         {Description}   
bbset audit.upf.checks.UPF_R_02_04.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_05.Name {UPF_R_02_05}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_05.Description {Document the list of RTL defines used while compiling the RTL}  {Description}   
bbset audit.upf.checks.UPF_R_02_05.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_06.Name {UPF_R_02_06}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_06.Description {Is RTL filelist used from the repo/wrap release without any local changes/hacks} {Description}   
bbset audit.upf.checks.UPF_R_02_06.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_07.Name {UPF_R_02_07}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_07.Description {Is the list of clamp-1 isolation documented}                    {Description}   
bbset audit.upf.checks.UPF_R_02_07.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_07.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_08.Name {UPF_R_02_08}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_08.Description {Is the list of clamp-latch isolation documented}                {Description}   
bbset audit.upf.checks.UPF_R_02_08.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_08.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_09.Name {UPF_R_02_09}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_09.Description {Is the list of AON signals documented}                          {Description}   
bbset audit.upf.checks.UPF_R_02_09.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_10.Name {UPF_R_02_10}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_10.Description {Is the list of instances or flops to be retained under power gating condition documented} {Description}   
bbset audit.upf.checks.UPF_R_02_10.Category {RTL Collateral}                                                 {Category}      
bbset audit.upf.checks.UPF_R_02_10.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_11.Name {UPF_R_02_11}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_11.Description {Is the power intent implementation specification captured and shared with all stakeholders} {Description}   
bbset audit.upf.checks.UPF_R_02_11.Category {RTL UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_R_02_11.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_12.Name {UPF_R_02_12}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_12.Description {Is the UPF read from the RTL repo/wrap release}                 {Description}   
bbset audit.upf.checks.UPF_R_02_12.Category {RTL UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_R_02_12.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_13.Name {UPF_R_02_13}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_13.Description {Is the latest tool config used}                                 {Description}   
bbset audit.upf.checks.UPF_R_02_13.Category {RTL UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_R_02_13.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_14.Name {UPF_R_02_14}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_14.Description {Is ISO spec defined for the design using add_lp_signal command in RTL stage} {Description}   
bbset audit.upf.checks.UPF_R_02_14.Category {RTL UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_R_02_14.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_15.Name {UPF_R_02_15}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_15.Description {Is the partitioning/floorplan info available from PD team}      {Description}   
bbset audit.upf.checks.UPF_R_02_15.Category {PD Collateral}                                                  {Category}      
bbset audit.upf.checks.UPF_R_02_15.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_16.Name {UPF_R_02_16}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_16.Description {Are all the db/lib used from the central area}                  {Description}   
bbset audit.upf.checks.UPF_R_02_16.Category {RTL DK Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_R_02_16.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_02_17.Name {UPF_R_02_17}                                                    {Name}          
bbset audit.upf.checks.UPF_R_02_17.Description {Does the lib match the signoff dk version}                      {Description}   
bbset audit.upf.checks.UPF_R_02_17.Category {RTL DK Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_R_02_17.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_01.Name {UPF_R_03_01}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_01.Description {Is the power intent reviewed with arch team?}                   {Description}   
bbset audit.upf.checks.UPF_R_03_01.Category {Arch Review}                                                    {Category}      
bbset audit.upf.checks.UPF_R_03_01.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_02.Name {UPF_R_03_02}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_02.Description {Has PST been reviewed with the arch team}                       {Description}   
bbset audit.upf.checks.UPF_R_03_02.Category {Arch Review}                                                    {Category}      
bbset audit.upf.checks.UPF_R_03_02.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_03.Name {UPF_R_03_03}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_03.Description {Has the power up and down sequence reviewed with the arch team} {Description}   
bbset audit.upf.checks.UPF_R_03_03.Category {Arch Review}                                                    {Category}      
bbset audit.upf.checks.UPF_R_03_03.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_04.Name {UPF_R_03_04}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_04.Description {Is the list of RTL defines used reiewed by the design team}     {Description}   
bbset audit.upf.checks.UPF_R_03_04.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_05.Name {UPF_R_03_05}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_05.Description {Is the power domain element list specified in the create_power_domain commands reviewed with design team} {Description}   
bbset audit.upf.checks.UPF_R_03_05.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_06.Name {UPF_R_03_06}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_06.Description {Are any additional power domain created for implementation requirements or otherwise other than the power domains defined in the arch spec. If so} {Description}   
bbset audit.upf.checks.UPF_R_03_06.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_07.Name {UPF_R_03_07}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_07.Description {Have all the RTL waivers reviewed by the design team.}          {Description}   
bbset audit.upf.checks.UPF_R_03_07.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_07.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_08.Name {UPF_R_03_08}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_08.Description {Do all the RTL stage waivers have a filter expression with at least one comparison operator.} {Description}   
bbset audit.upf.checks.UPF_R_03_08.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_08.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_09.Name {UPF_R_03_09}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_09.Description {Do all the RTL stage waivers have a -tag option specified}      {Description}   
bbset audit.upf.checks.UPF_R_03_09.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_10.Name {UPF_R_03_10}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_10.Description {Do all RTL stage waivers  filter expression use == comparison when there is no wildcard in the compare expression} {Description}   
bbset audit.upf.checks.UPF_R_03_10.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_10.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_11.Name {UPF_R_03_11}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_11.Description {When wildcard is used in the RTL stage waiver filter expression} {Description}   
bbset audit.upf.checks.UPF_R_03_11.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_11.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_12.Name {UPF_R_03_12}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_12.Description {Does the UPF files follow the standard UPF template}            {Description}   
bbset audit.upf.checks.UPF_R_03_12.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_12.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_13.Name {UPF_R_03_13}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_13.Description {Are the UPF files peer reviewed?}                               {Description}   
bbset audit.upf.checks.UPF_R_03_13.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_13.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_14.Name {UPF_R_03_14}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_14.Description {Are the set_voltage.tcl files reviewed with the PD team for the correct voltage specification} {Description}   
bbset audit.upf.checks.UPF_R_03_14.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_14.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_15.Name {UPF_R_03_15}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_15.Description {Document the enviroment and override variables used in the UPF or in the tool shell other than the environment variables set by the tool config script} {Description}   
bbset audit.upf.checks.UPF_R_03_15.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_15.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_16.Name {UPF_R_03_16}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_16.Description {Have all the PNR stage Netlist waivers been reviewed by the design team} {Description}   
bbset audit.upf.checks.UPF_R_03_16.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_16.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_17.Name {UPF_R_03_17}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_17.Description {Is the clamp-1 isolation list reviewed by the design team}      {Description}   
bbset audit.upf.checks.UPF_R_03_17.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_17.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_18.Name {UPF_R_03_18}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_18.Description {Is the clamp-latch isolation list reviewed by the design team}  {Description}   
bbset audit.upf.checks.UPF_R_03_18.Category {Design Review}                                                  {Category}      
bbset audit.upf.checks.UPF_R_03_18.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_03_19.Name {UPF_R_03_19}                                                    {Name}          
bbset audit.upf.checks.UPF_R_03_19.Description {If Block is hierarchical}                                       {Description}   
bbset audit.upf.checks.UPF_R_03_19.Category {Signoff Review}                                                 {Category}      
bbset audit.upf.checks.UPF_R_03_19.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_01.Name {UPF_R_04_01}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_01.Description {Does the design have RTL logical feedthrough crossing a power domain.} {Description}   
bbset audit.upf.checks.UPF_R_04_01.Category {RTL Feedthrough}                                                {Category}      
bbset audit.upf.checks.UPF_R_04_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_02.Name {UPF_R_04_02}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_02.Description {Is the ISO/LS strategy written using actual source and sink supplies for feedthrough paths} {Description}   
bbset audit.upf.checks.UPF_R_04_02.Category {RTL Feedthrough}                                                {Category}      
bbset audit.upf.checks.UPF_R_04_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_03.Name {UPF_R_04_03}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_03.Description {No repeater/pipeline stage added in the feedthrough power domain} {Description}   
bbset audit.upf.checks.UPF_R_04_03.Category {RTL Feedthrough}                                                {Category}      
bbset audit.upf.checks.UPF_R_04_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_04.Name {UPF_R_04_04}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_04.Description {No pst state dropped in the invalid_pst_state.rpt report}       {Description}   
bbset audit.upf.checks.UPF_R_04_04.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_05.Name {UPF_R_04_05}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_05.Description {No supply set state dropped }                                   {Description}   
bbset audit.upf.checks.UPF_R_04_05.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_06.Name {UPF_R_04_06}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_06.Description {No supply set state invalid in invalid_supply_state.rpt report} {Description}   
bbset audit.upf.checks.UPF_R_04_06.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_07.Name {UPF_R_04_07}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_07.Description {No invalid group state in invalid_group_state.rpt report}       {Description}   
bbset audit.upf.checks.UPF_R_04_07.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_07.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_08.Name {UPF_R_04_08}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_08.Description {Are all the PST states that require ISO and LS to be implemented coded in the add_pst or add_power_state commands} {Description}   
bbset audit.upf.checks.UPF_R_04_08.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_08.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_09.Name {UPF_R_04_09}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_09.Description {Are all the analog supply rails included in power state definition(add_pst or add_power_state)} {Description}   
bbset audit.upf.checks.UPF_R_04_09.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_09.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_10.Name {UPF_R_04_10}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_10.Description {Are all macro internal supplies used as related supply pin for the IOs of the macro specified in the higher level power state definition (add_pst or add_power_state)} {Description}   
bbset audit.upf.checks.UPF_R_04_10.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_10.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_11.Name {UPF_R_04_11}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_11.Description {The UPF has been coded with either add_port_state+add_pst or add_power_state commands to model the PST.} {Description}   
bbset audit.upf.checks.UPF_R_04_11.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_11.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_12.Name {UPF_R_04_12}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_12.Description {The supply values are specified either using voltage triplet or non-voltage triplet. There is no use of both voltage triplet and non-voltage triplet in the UPF files. No mixing of voltage triplets with non voltage triplets in add_port_state or add_power_state commands} {Description}   
bbset audit.upf.checks.UPF_R_04_12.Category {RTL PST}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_12.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_13.Name {UPF_R_04_13}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_13.Description {Do all memory macros(custom memories vs non-custome memories) used in the design common power intent. If not} {Description}   
bbset audit.upf.checks.UPF_R_04_13.Category {RTL Macros}                                                     {Category}      
bbset audit.upf.checks.UPF_R_04_13.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_14.Name {UPF_R_04_14}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_14.Description {Is the memory power gating (header/footer) documented}          {Description}   
bbset audit.upf.checks.UPF_R_04_14.Category {RTL Macros}                                                     {Category}      
bbset audit.upf.checks.UPF_R_04_14.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_15.Name {UPF_R_04_15}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_15.Description {Are all supplies to macros connected using CSN in the UPF including internal supply} {Description}   
bbset audit.upf.checks.UPF_R_04_15.Category {RTL Macros}                                                     {Category}      
bbset audit.upf.checks.UPF_R_04_15.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_16.Name {UPF_R_04_16}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_16.Description {Do the memories have separate sleep and retention controls for respective power domains} {Description}   
bbset audit.upf.checks.UPF_R_04_16.Category {RTL Macros}                                                     {Category}      
bbset audit.upf.checks.UPF_R_04_16.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_17.Name {UPF_R_04_17}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_17.Description {Is the simulation UPF loaded for all the macros that have simulation UPF} {Description}   
bbset audit.upf.checks.UPF_R_04_17.Category {RTL Macros}                                                     {Category}      
bbset audit.upf.checks.UPF_R_04_17.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_18.Name {UPF_R_04_18}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_18.Description {All DFT component power domain is reviewed with DFT team}       {Description}   
bbset audit.upf.checks.UPF_R_04_18.Category {DFT}                                                            {Category}      
bbset audit.upf.checks.UPF_R_04_18.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_19.Name {UPF_R_04_19}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_19.Description {The scan paths do not cross power domain post scan insertion}   {Description}   
bbset audit.upf.checks.UPF_R_04_19.Category {DFT}                                                            {Category}      
bbset audit.upf.checks.UPF_R_04_19.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_20.Name {UPF_R_04_20}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_20.Description {The placement of all core wrapper cells have been reviewed with DFT team} {Description}   
bbset audit.upf.checks.UPF_R_04_20.Category {DFT}                                                            {Category}      
bbset audit.upf.checks.UPF_R_04_20.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_21.Name {UPF_R_04_21}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_21.Description {The BISR register retention requirement have been review with DFT team} {Description}   
bbset audit.upf.checks.UPF_R_04_21.Category {DFT}                                                            {Category}      
bbset audit.upf.checks.UPF_R_04_21.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_22.Name {UPF_R_04_22}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_22.Description {The power switch strategy specified in RTL UPF matches the implementation strategy} {Description}   
bbset audit.upf.checks.UPF_R_04_22.Category {Power Switch}                                                   {Category}      
bbset audit.upf.checks.UPF_R_04_22.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_23.Name {UPF_R_04_23}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_23.Description {Is there requirement of  iso/LS on ack? If so}                  {Description}   
bbset audit.upf.checks.UPF_R_04_23.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_23.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_24.Name {UPF_R_04_24}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_24.Description {Has balanced ISO/LS used on all the clock path(if ISO/LS are implemented on clock path)} {Description}   
bbset audit.upf.checks.UPF_R_04_24.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_24.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_25.Name {UPF_R_04_25}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_25.Description {Is the UPF coded with only the allowed constructs}              {Description}   
bbset audit.upf.checks.UPF_R_04_25.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_25.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_26.Name {UPF_R_04_26}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_26.Description {There are no logic or functional changes implemented through upf} {Description}   
bbset audit.upf.checks.UPF_R_04_26.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_26.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_27.Name {UPF_R_04_27}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_27.Description {The specification and use of all ISO}                           {Description}   
bbset audit.upf.checks.UPF_R_04_27.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_27.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_28.Name {UPF_R_04_28}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_28.Description {The UPF is coded with the correct ISO/LS type: source side}     {Description}   
bbset audit.upf.checks.UPF_R_04_28.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_28.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_04_29.Name {UPF_R_04_29}                                                    {Name}          
bbset audit.upf.checks.UPF_R_04_29.Description {The save and restore conditions in the set_retention commands are specified as per the requirements of single-pin and zero-pin retention based on the retention type} {Description}   
bbset audit.upf.checks.UPF_R_04_29.Category {RTL UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_R_04_29.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_01.Name {UPF_R_05_01}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_01.Description {Have all the warning/Info messages during read_upf command execution been reviewed} {Description}   
bbset audit.upf.checks.UPF_R_05_01.Category {RTL Logs}                                                       {Category}      
bbset audit.upf.checks.UPF_R_05_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_02.Name {UPF_R_05_02}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_02.Description {Have all the warnings/info messages during check_lp command execution been reviewed} {Description}   
bbset audit.upf.checks.UPF_R_05_02.Category {RTL Logs}                                                       {Category}      
bbset audit.upf.checks.UPF_R_05_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_03.Name {UPF_R_05_03}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_03.Description {Has link/blackbox report(blackbox.rpt) been reviewed}           {Description}   
bbset audit.upf.checks.UPF_R_05_03.Category {RTL Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_R_05_04.Name {UPF_R_05_04}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_04.Description {Confirm there are 0 Error in check_lp report}                   {Description}   
bbset audit.upf.checks.UPF_R_05_04.Category {RTL Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_R_05_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_05.Name {UPF_R_05_05}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_05.Description {Confirm there are 0 Warning in check_lp report}                 {Description}   
bbset audit.upf.checks.UPF_R_05_05.Category {RTL Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_R_05_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_06.Name {UPF_R_05_06}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_06.Description {Have all applied waivers been reviewed in the waived.rpt?}      {Description}   
bbset audit.upf.checks.UPF_R_05_06.Category {RTL Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_R_05_06.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_07.Name {UPF_R_05_07}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_07.Description {Have all the details of lp.rpt generated through check_lp command by the flow been reviewed?} {Description}   
bbset audit.upf.checks.UPF_R_05_07.Category {RTL Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_R_05_07.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_08.Name {UPF_R_05_08}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_08.Description {There are no waivers that are applied on MISSING_INST tags and there are 0 errors and warnings for these tags} {Description}   
bbset audit.upf.checks.UPF_R_05_08.Category {RTL Tag Review}                                                 {Category}      
bbset audit.upf.checks.UPF_R_05_08.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_09.Name {UPF_R_05_09}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_09.Description {There are no waivers that are applied on ISO_INST_ALLOW/BLOCK and ISO_STRATEGY_ALLOW/BLOCK tags with the ISO spec and  } {Description}   
bbset audit.upf.checks.UPF_R_05_09.Category {RTL Tag Review}                                                 {Category}      
bbset audit.upf.checks.UPF_R_05_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_R_05_10.Name {UPF_R_05_10}                                                    {Name}          
bbset audit.upf.checks.UPF_R_05_10.Description {Have all the VCLP run logs}                                     {Description}   
bbset audit.upf.checks.UPF_R_05_10.Category {RTL Archive}                                                    {Category}      
bbset audit.upf.checks.UPF_R_05_10.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_01_01.Name {UPF_P_01_01}                                                    {Name}          
bbset audit.upf.checks.UPF_P_01_01.Description {Document the the tool version used.}                            {Description}   
bbset audit.upf.checks.UPF_P_01_01.Category {PNR Tool/Flow}                                                  {Category}      
bbset audit.upf.checks.UPF_P_01_02.Name {UPF_P_01_02}                                                    {Name}          
bbset audit.upf.checks.UPF_P_01_02.Description {Document the CAD flow version used.}                            {Description}   
bbset audit.upf.checks.UPF_P_01_02.Category {PNR Tool/Flow}                                                  {Category}      
bbset audit.upf.checks.UPF_P_01_03.Name {UPF_P_01_03}                                                    {Name}          
bbset audit.upf.checks.UPF_P_01_03.Description {Document the CAD methodology version used.}                     {Description}   
bbset audit.upf.checks.UPF_P_01_03.Category {PNR Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_P_01_04.Name {UPF_P_01_04}                                                    {Name}          
bbset audit.upf.checks.UPF_P_01_04.Description {Are there any override value defined for any of the app var defined by the flow/methodology} {Description}   
bbset audit.upf.checks.UPF_P_01_04.Category {PNR Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_P_01_05.Name {UPF_P_01_05}                                                    {Name}          
bbset audit.upf.checks.UPF_P_01_05.Description {Are there any additional app vars or tool config variables defined in the tool/flow/methodology other than the ones defined by the flow/methodology.} {Description}   
bbset audit.upf.checks.UPF_P_01_05.Category {PNR Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_P_01_06.Name {UPF_P_01_06}                                                    {Name}          
bbset audit.upf.checks.UPF_P_01_06.Description {Are any rule defined by the flow been disabled?}                {Description}   
bbset audit.upf.checks.UPF_P_01_06.Category {PNR Methodology}                                                {Category}      
bbset audit.upf.checks.UPF_S_02_01.Name {UPF_S_02_01}                                                    {Name}          
bbset audit.upf.checks.UPF_S_02_01.Description {Is the SYN stage UPF read from the repo/wrap release}           {Description}   
bbset audit.upf.checks.UPF_S_02_01.Category {SYN UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_S_02_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_02_02.Name {UPF_S_02_02}                                                    {Name}          
bbset audit.upf.checks.UPF_S_02_02.Description {Is the latest tool config used in SYN stage (applicable to golden} {Description}   
bbset audit.upf.checks.UPF_S_02_02.Category {SYN UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_S_02_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_02_03.Name {UPF_S_02_03}                                                    {Name}          
bbset audit.upf.checks.UPF_S_02_03.Description {Is ISO spec defined for the design using add_lp_signal command in SYN stage} {Description}   
bbset audit.upf.checks.UPF_S_02_03.Category {SYN UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_S_02_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_01.Name {UPF_P_02_01}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_01.Description {Is the PNR stage UPF read from the repo/wrap release}           {Description}   
bbset audit.upf.checks.UPF_P_02_01.Category {PNR UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_P_02_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_02.Name {UPF_P_02_02}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_02.Description {Is the latest tool config used in PNR stage (applicable to golden} {Description}   
bbset audit.upf.checks.UPF_P_02_02.Category {PNR UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_P_02_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_03.Name {UPF_P_02_03}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_03.Description {Is ISO spec defined for the design using add_lp_signal command in PNR stage} {Description}   
bbset audit.upf.checks.UPF_P_02_03.Category {PNR UPF Collateral}                                             {Category}      
bbset audit.upf.checks.UPF_P_02_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_04.Name {UPF_P_02_04}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_04.Description {Are all pushdown physical only cells documented(applicable if pushdown cells are implemented)} {Description}   
bbset audit.upf.checks.UPF_P_02_04.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_04.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_05.Name {UPF_P_02_05}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_05.Description {Document the synthesis netlist tag/repo/wrap version}           {Description}   
bbset audit.upf.checks.UPF_P_02_05.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_06.Name {UPF_P_02_06}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_06.Description {Is the synthesis netlist used been generated after ""synth"" stage of the synthesis} {Description}   
bbset audit.upf.checks.UPF_P_02_06.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_07.Name {UPF_P_02_07}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_07.Description {Does the synthesis netlist include DFT stage(scan compile/insertion)} {Description}   
bbset audit.upf.checks.UPF_P_02_07.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_07.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_08.Name {UPF_P_02_08}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_08.Description {Documen the PNR Netlist tag/repo/wrap version}                  {Description}   
bbset audit.upf.checks.UPF_P_02_08.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_08.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_09.Name {UPF_P_02_09}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_09.Description {Is PNR netlist after chipfinish stage of the flow}              {Description}   
bbset audit.upf.checks.UPF_P_02_09.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_10.Name {UPF_P_02_10}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_10.Description {Does the PNR stage netlist include the pg pin information}      {Description}   
bbset audit.upf.checks.UPF_P_02_10.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_10.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_11.Name {UPF_P_02_11}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_11.Description {Does the PNR stage netlist exclude physical only cells}         {Description}   
bbset audit.upf.checks.UPF_P_02_11.Category {PNR PD Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_11.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_12.Name {UPF_P_02_12}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_12.Description {Are all the db/lib used from the central area}                  {Description}   
bbset audit.upf.checks.UPF_P_02_12.Category {PNR DK Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_12.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_02_13.Name {UPF_P_02_13}                                                    {Name}          
bbset audit.upf.checks.UPF_P_02_13.Description {Does the lib match the signoff dk version}                      {Description}   
bbset audit.upf.checks.UPF_P_02_13.Category {PNR DK Collateral}                                              {Category}      
bbset audit.upf.checks.UPF_P_02_13.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_01.Name {UPF_P_03_01}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_01.Description {Is the UPF file peer reviewed?(applicable to golden}            {Description}   
bbset audit.upf.checks.UPF_P_03_01.Category {PNR Design Review}                                              {Category}      
bbset audit.upf.checks.UPF_P_03_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_02.Name {UPF_P_03_02}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_02.Description {Document the list of UPF variables used(applicable to golden}   {Description}   
bbset audit.upf.checks.UPF_P_03_02.Category {PNR Design Review}                                              {Category}      
bbset audit.upf.checks.UPF_P_03_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_03.Name {UPF_P_03_03}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_03.Description {Have all the PNR stage Netlist waivers reviewed by the FE/RTL team} {Description}   
bbset audit.upf.checks.UPF_P_03_03.Category {PNR Design Review}                                              {Category}      
bbset audit.upf.checks.UPF_P_03_03.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_04.Name {UPF_P_03_04}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_04.Description {No addition of elements to the power domain elements list}      {Description}   
bbset audit.upf.checks.UPF_P_03_04.Category {PNR Design Review}                                              {Category}      
bbset audit.upf.checks.UPF_P_03_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_05.Name {UPF_P_03_05}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_05.Description {Have all the PNR stage netlist waivers reviewed by the PD team} {Description}   
bbset audit.upf.checks.UPF_P_03_05.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_05.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_06.Name {UPF_P_03_06}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_06.Description {Do all the PNR stage netlist waivers have a filter expression with at least one comparison operator.} {Description}   
bbset audit.upf.checks.UPF_P_03_06.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_06.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_07.Name {UPF_P_03_07}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_07.Description {Do all the PNR stage waivers have a -tag option specified}      {Description}   
bbset audit.upf.checks.UPF_P_03_07.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_07.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_08.Name {UPF_P_03_08}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_08.Description {Do all PNR stage waivers  filter expression use == comparison when there is no wildcard in the compare expression} {Description}   
bbset audit.upf.checks.UPF_P_03_08.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_08.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_09.Name {UPF_P_03_09}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_09.Description {When wildcard is used in the PNR stage waiver filter expression} {Description}   
bbset audit.upf.checks.UPF_P_03_09.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_10.Name {UPF_P_03_10}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_10.Description {Are the set_voltage.tcl files reviewed with the PD team for the correct voltage specification} {Description}   
bbset audit.upf.checks.UPF_P_03_10.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_10.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_11.Name {UPF_P_03_11}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_11.Description {Document the enviroment and override variables used in the UPF other than the environment variables set by the tool config script} {Description}   
bbset audit.upf.checks.UPF_P_03_11.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_11.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_12.Name {UPF_P_03_12}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_12.Description {Have all analog nets reviewed by PD team}                       {Description}   
bbset audit.upf.checks.UPF_P_03_12.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_12.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_13.Name {UPF_P_03_13}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_13.Description {Is the clamp-1 isolation implemented in the netlist as per spec} {Description}   
bbset audit.upf.checks.UPF_P_03_13.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_13.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_14.Name {UPF_P_03_14}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_14.Description {Is the clamp latch isolation implemented in the netlist as per spec} {Description}   
bbset audit.upf.checks.UPF_P_03_14.Category {PNR PD Review}                                                  {Category}      
bbset audit.upf.checks.UPF_P_03_14.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_03_15.Name {UPF_P_03_15}                                                    {Name}          
bbset audit.upf.checks.UPF_P_03_15.Description {If block is hierarchical}                                       {Description}   
bbset audit.upf.checks.UPF_P_03_15.Category {PNR Signoff Review}                                             {Category}      
bbset audit.upf.checks.UPF_P_03_15.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_01.Name {UPF_P_04_01}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_01.Description {No local changes or hacks to PST for PNR stage}                 {Description}   
bbset audit.upf.checks.UPF_P_04_01.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_02.Name {UPF_P_04_02}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_02.Description {No pst state dropped(invalid_pst_state.rpt)}                    {Description}   
bbset audit.upf.checks.UPF_P_04_02.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_03.Name {UPF_P_04_03}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_03.Description {No supply set state dropped}                                    {Description}   
bbset audit.upf.checks.UPF_P_04_03.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_04.Name {UPF_P_04_04}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_04.Description {No supply set state invalid(invalid_supply_state.rpt)}          {Description}   
bbset audit.upf.checks.UPF_P_04_04.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_05.Name {UPF_P_04_05}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_05.Description {No invalid group state(invalid_group_state.rpt)}                {Description}   
bbset audit.upf.checks.UPF_P_04_05.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_06.Name {UPF_P_04_06}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_06.Description {Have all states covered in PST that require ISO and LS}         {Description}   
bbset audit.upf.checks.UPF_P_04_06.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_07.Name {UPF_P_04_07}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_07.Description {Have analog rails also included in PST}                         {Description}   
bbset audit.upf.checks.UPF_P_04_07.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_07.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_08.Name {UPF_P_04_08}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_08.Description {Are all macro internal supplies used as related pin specified in PST} {Description}   
bbset audit.upf.checks.UPF_P_04_08.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_08.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_09.Name {UPF_P_04_09}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_09.Description {No mixing of create_pst}                                        {Description}   
bbset audit.upf.checks.UPF_P_04_09.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_09.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_10.Name {UPF_P_04_10}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_10.Description {No mixing of voltage triplets with non voltage triplets in port state or add_power_state} {Description}   
bbset audit.upf.checks.UPF_P_04_10.Category {PNR PST}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_10.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_11.Name {UPF_P_04_11}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_11.Description {Are all supplies to macros connected using CSN in the UPF including internal supply} {Description}   
bbset audit.upf.checks.UPF_P_04_11.Category {PNR Macros}                                                     {Category}      
bbset audit.upf.checks.UPF_P_04_11.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_12.Name {UPF_P_04_12}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_12.Description {Has power switch daisy chain scheme been reviewed to ensure correct connection} {Description}   
bbset audit.upf.checks.UPF_P_04_12.Category {Power Switch}                                                   {Category}      
bbset audit.upf.checks.UPF_P_04_12.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_13.Name {UPF_P_04_13}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_13.Description {Does the hammer/all chain merging follow the standard methodology} {Description}   
bbset audit.upf.checks.UPF_P_04_13.Category {Power Switch}                                                   {Category}      
bbset audit.upf.checks.UPF_P_04_13.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_14.Name {UPF_P_04_14}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_14.Description {Has the physical pushdown cell connectivity reviewed}           {Description}   
bbset audit.upf.checks.UPF_P_04_14.Category {Pushdown}                                                       {Category}      
bbset audit.upf.checks.UPF_P_04_14.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_15.Name {UPF_P_04_15}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_15.Description {Does the logical hierarchy of the push down cell align with the power domain logical hierarchy and physical hierarchy} {Description}   
bbset audit.upf.checks.UPF_P_04_15.Category {Pushdown}                                                       {Category}      
bbset audit.upf.checks.UPF_P_04_15.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_16.Name {UPF_P_04_16}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_16.Description {Does the power domain of the push down cell align wit}          {Description}   
bbset audit.upf.checks.UPF_P_04_16.Category {Pushdown}                                                       {Category}      
bbset audit.upf.checks.UPF_P_04_16.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_17.Name {UPF_P_04_17}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_17.Description {Has the analog nets documented}                                 {Description}   
bbset audit.upf.checks.UPF_P_04_17.Category {Analog}                                                         {Category}      
bbset audit.upf.checks.UPF_P_04_17.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_18.Name {UPF_P_04_18}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_18.Description {Are analog nets specified with correct driver and receiver supplies} {Description}   
bbset audit.upf.checks.UPF_P_04_18.Category {Analog}                                                         {Category}      
bbset audit.upf.checks.UPF_P_04_18.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_19.Name {UPF_P_04_19}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_19.Description {No ISO/LS on analog net}                                        {Description}   
bbset audit.upf.checks.UPF_P_04_19.Category {Analog}                                                         {Category}      
bbset audit.upf.checks.UPF_P_04_19.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_20.Name {UPF_P_04_20}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_20.Description {If buffer is added on analog net}                               {Description}   
bbset audit.upf.checks.UPF_P_04_20.Category {Analog}                                                         {Category}      
bbset audit.upf.checks.UPF_P_04_20.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_21.Name {UPF_P_04_21}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_21.Description {If buffer is added on analog net}                               {Description}   
bbset audit.upf.checks.UPF_P_04_21.Category {Analog}                                                         {Category}      
bbset audit.upf.checks.UPF_P_04_21.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_22.Name {UPF_P_04_22}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_22.Description {Document logic nets to be aon buffered}                         {Description}   
bbset audit.upf.checks.UPF_P_04_22.Category {Buffering}                                                      {Category}      
bbset audit.upf.checks.UPF_P_04_22.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_23.Name {UPF_P_04_23}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_23.Description {Are the buf/inv on the retention signal on retention supply}    {Description}   
bbset audit.upf.checks.UPF_P_04_23.Category {Buffering}                                                      {Category}      
bbset audit.upf.checks.UPF_P_04_23.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_24.Name {UPF_P_04_24}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_24.Description {Are the buf/inv on the isolation control signal on sink supply or relatively ON supply} {Description}   
bbset audit.upf.checks.UPF_P_04_24.Category {Buffering}                                                      {Category}      
bbset audit.upf.checks.UPF_P_04_24.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_25.Name {UPF_P_04_25}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_25.Description {Are the buf/inv on the power switch sleep control and ack output on the ungated supply of the respective power switch} {Description}   
bbset audit.upf.checks.UPF_P_04_25.Category {Buffering}                                                      {Category}      
bbset audit.upf.checks.UPF_P_04_25.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_26.Name {UPF_P_04_26}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_26.Description {Document the number of ISO cells in the PNR netlist}            {Description}   
bbset audit.upf.checks.UPF_P_04_26.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_26.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_27.Name {UPF_P_04_27}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_27.Description {Document the number of LS cells in the PNR netlist}             {Description}   
bbset audit.upf.checks.UPF_P_04_27.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_27.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_28.Name {UPF_P_04_28}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_28.Description {Document the number of retention cells in the PNR netlist}      {Description}   
bbset audit.upf.checks.UPF_P_04_28.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_28.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_29.Name {UPF_P_04_29}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_29.Description {Document the number of nets with AON buffers with continuous n-well} {Description}   
bbset audit.upf.checks.UPF_P_04_29.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_29.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_30.Name {UPF_P_04_30}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_30.Description {Document the number of  nets with AON buffers with split n-well} {Description}   
bbset audit.upf.checks.UPF_P_04_30.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_30.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_31.Name {UPF_P_04_31}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_31.Description {If split n-well cells are used. document why continuous n-well cells cannot be used} {Description}   
bbset audit.upf.checks.UPF_P_04_31.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_31.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_32.Name {UPF_P_04_32}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_32.Description {Document the number of  nets with AON buffers with both continuous and split n-well. } {Description}   
bbset audit.upf.checks.UPF_P_04_32.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_32.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_33.Name {UPF_P_04_33}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_33.Description {If both continous and split n-well cells are used on a net}     {Description}   
bbset audit.upf.checks.UPF_P_04_33.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_33.Milestone {ML4.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_34.Name {UPF_P_04_34}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_34.Description {Document the number of switches in trickle/pre chain}           {Description}   
bbset audit.upf.checks.UPF_P_04_34.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_34.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_35.Name {UPF_P_04_35}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_35.Description {Document the number of switches in hammer/all chain}            {Description}   
bbset audit.upf.checks.UPF_P_04_35.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_35.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_36.Name {UPF_P_04_36}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_36.Description {Document the number of hammer/all switch chains}                {Description}   
bbset audit.upf.checks.UPF_P_04_36.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_36.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_37.Name {UPF_P_04_37}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_37.Description {Is balanced ISO/LS implemented for ISO/LS on all clock paths where ISO/LS is required on clock} {Description}   
bbset audit.upf.checks.UPF_P_04_37.Category {Instrumentation}                                                {Category}      
bbset audit.upf.checks.UPF_P_04_37.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_38.Name {UPF_P_04_38}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_38.Description {Is the UPF coded with only the allowed constructs(applicable to golden} {Description}   
bbset audit.upf.checks.UPF_P_04_38.Category {PNR UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_38.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_04_39.Name {UPF_P_04_39}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_39.Description {There are no logic or functional changes implemented through upf} {Description}   
bbset audit.upf.checks.UPF_P_04_39.Category {PNR UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_40.Name {UPF_P_04_40}                                                    {Name}          
bbset audit.upf.checks.UPF_P_04_40.Description {Only CSN and LS -no_shift commands in supplementatal UPF(applicable to golden} {Description}   
bbset audit.upf.checks.UPF_P_04_40.Category {PNR UPF}                                                        {Category}      
bbset audit.upf.checks.UPF_P_04_40.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_01.Name {UPF_S_05_01}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_01.Description {Have all the Warning/Info messages in log output of read_upf command been reviewed} {Description}   
bbset audit.upf.checks.UPF_S_05_01.Category {SYN Logs}                                                       {Category}      
bbset audit.upf.checks.UPF_S_05_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_02.Name {UPF_S_05_02}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_02.Description {check_lp.log reviewed for warnings and errors}                  {Description}   
bbset audit.upf.checks.UPF_S_05_02.Category {SYN Logs}                                                       {Category}      
bbset audit.upf.checks.UPF_S_05_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_03.Name {UPF_S_05_03}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_03.Description {Has link/blackbox report(blackbox.rpt) reviewed and confirm no blackbox inferred in the analysis.} {Description}   
bbset audit.upf.checks.UPF_S_05_03.Category {SYN Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_04.Name {UPF_S_05_04}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_04.Description {Confirm there are 0 Error in check_lp report}                   {Description}   
bbset audit.upf.checks.UPF_S_05_04.Category {SYN Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_05.Name {UPF_S_05_05}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_05.Description {Confirm there are 0 Warning in check_lp report}                 {Description}   
bbset audit.upf.checks.UPF_S_05_05.Category {SYN Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_06.Name {UPF_S_05_06}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_06.Description {Confirm there are 0 Error in check_lp report}                   {Description}   
bbset audit.upf.checks.UPF_S_05_06.Category {SYN Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_07.Name {UPF_S_05_07}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_07.Description {Confirm there are 0 Warning in check_lp report}                 {Description}   
bbset audit.upf.checks.UPF_S_05_07.Category {SYN Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_07.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_08.Name {UPF_S_05_08}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_08.Description {Has lp.rpt generated by the flow been reviewed?}                {Description}   
bbset audit.upf.checks.UPF_S_05_08.Category {SYN Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_08.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_09.Name {UPF_S_05_09}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_09.Description {confirm no waiver on MISSING_INST rules}                        {Description}   
bbset audit.upf.checks.UPF_S_05_09.Category {SYN Tag Review}                                                 {Category}      
bbset audit.upf.checks.UPF_S_05_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_10.Name {UPF_S_05_10}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_10.Description {Confirm there are 0 Errors for ISO_INST_ALLOW/BLOCK and ISO_STRATEGY_ALLOW/BLOCK tags with the ISO spec} {Description}   
bbset audit.upf.checks.UPF_S_05_10.Category {SYN Tag Review}                                                 {Category}      
bbset audit.upf.checks.UPF_S_05_10.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_S_05_11.Name {UPF_S_05_11}                                                    {Name}          
bbset audit.upf.checks.UPF_S_05_11.Description {Have all the VCLP run logs}                                     {Description}   
bbset audit.upf.checks.UPF_S_05_11.Category {SYN Archive}                                                    {Category}      
bbset audit.upf.checks.UPF_S_05_11.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_01.Name {UPF_P_05_01}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_01.Description {Have all the Warning/Info messages in log output of read_upf command been reviewed} {Description}   
bbset audit.upf.checks.UPF_P_05_01.Category {PNR Logs}                                                       {Category}      
bbset audit.upf.checks.UPF_P_05_01.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_02.Name {UPF_P_05_02}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_02.Description {check_lp.log reviewed for warnings and errors}                  {Description}   
bbset audit.upf.checks.UPF_P_05_02.Category {PNR Logs}                                                       {Category}      
bbset audit.upf.checks.UPF_P_05_02.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_03.Name {UPF_P_05_03}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_03.Description {Has link/blackbox report(blackbox.rpt) reviewed and confirm no blackbox inferred in the analysis.} {Description}   
bbset audit.upf.checks.UPF_P_05_03.Category {PNR Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_03.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_04.Name {UPF_P_05_04}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_04.Description {Confirm there are 0 Error in check_lp report}                   {Description}   
bbset audit.upf.checks.UPF_P_05_04.Category {PNR Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_04.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_05.Name {UPF_P_05_05}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_05.Description {Confirm there are 0 Warning in check_lp report}                 {Description}   
bbset audit.upf.checks.UPF_P_05_05.Category {PNR Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_05.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_06.Name {UPF_P_05_06}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_06.Description {Confirm there are 0 Error in check_lp report}                   {Description}   
bbset audit.upf.checks.UPF_P_05_06.Category {PNR Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_06.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_07.Name {UPF_P_05_07}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_07.Description {Confirm there are 0 Warning in check_lp report}                 {Description}   
bbset audit.upf.checks.UPF_P_05_07.Category {PNR Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_07.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_08.Name {UPF_P_05_08}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_08.Description {Has lp.rpt generated by the flow been reviewed?}                {Description}   
bbset audit.upf.checks.UPF_P_05_08.Category {PNR Reports}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_08.Milestone {ML2.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_09.Name {UPF_P_05_09}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_09.Description {confirm no waiver on MISSING_INST rules}                        {Description}   
bbset audit.upf.checks.UPF_P_05_09.Category {PNR Tag Review}                                                 {Category}      
bbset audit.upf.checks.UPF_P_05_09.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_10.Name {UPF_P_05_10}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_10.Description {Confirm there are 0 Errors for ISO_INST_ALLOW/BLOCK and ISO_STRATEGY_ALLOW/BLOCK tags with the ISO spec} {Description}   
bbset audit.upf.checks.UPF_P_05_10.Category {PNR Tag Review}                                                 {Category}      
bbset audit.upf.checks.UPF_P_05_10.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.upf.checks.UPF_P_05_11.Name {UPF_P_05_11}                                                    {Name}          
bbset audit.upf.checks.UPF_P_05_11.Description {Have all the VCLP run logs}                                     {Description}   
bbset audit.upf.checks.UPF_P_05_11.Category {PNR Archive}                                                    {Category}      
bbset audit.upf.checks.UPF_P_05_11.Milestone {ML3.0+}                                                         {Milestone}     
bbset audit.power.checks.POWER_1_1.Name {POWER_1_1}                                                      {Name}          
bbset audit.power.checks.POWER_1_1.Description {What is the Primepower tool version used?}                      {Description}   
bbset audit.power.checks.POWER_1_1.Category {Tool}                                                           {Category}      
bbset audit.power.checks.POWER_1_1.Sub-Category {Version}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_1_1.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_1_2.Name {POWER_1_2}                                                      {Name}          
bbset audit.power.checks.POWER_1_2.Description {Is the version of primepower tool qualified by CAD team?}       {Description}   
bbset audit.power.checks.POWER_1_2.Category {Tool}                                                           {Category}      
bbset audit.power.checks.POWER_1_2.Sub-Category {Version}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_1_2.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_1_3.Name {POWER_1_3}                                                      {Name}          
bbset audit.power.checks.POWER_1_3.Description {Is power signoff run with the planned tool version? If not, explain the need to use this version.} {Description}   
bbset audit.power.checks.POWER_1_3.Category {Tool}                                                           {Category}      
bbset audit.power.checks.POWER_1_3.Sub-Category {Version}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_1_3.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_2_1.Name {POWER_2_1}                                                      {Name}          
bbset audit.power.checks.POWER_2_1.Description {What is the power analysis CAD Methodology Version?}            {Description}   
bbset audit.power.checks.POWER_2_1.Category {Methodology}                                                    {Category}      
bbset audit.power.checks.POWER_2_1.Sub-Category {Version}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_2_1.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_2_2.Name {POWER_2_2}                                                      {Name}          
bbset audit.power.checks.POWER_2_2.Description {Are any hooks or overrides used in the methodology? If yes, explain the need for the hooks or overrides.} {Description}   
bbset audit.power.checks.POWER_2_2.Category {Methodology}                                                    {Category}      
bbset audit.power.checks.POWER_2_2.Sub-Category {Overrides}                                                      {Sub-Category}  
bbset audit.power.checks.POWER_2_2.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_2_3.Name {POWER_2_3}                                                      {Name}          
bbset audit.power.checks.POWER_2_3.Description {Are any hooks or overrides used in the methodology.}            {Description}   
bbset audit.power.checks.POWER_2_3.Category {Methodology}                                                    {Category}      
bbset audit.power.checks.POWER_2_3.Sub-Category {Overrides}                                                      {Sub-Category}  
bbset audit.power.checks.POWER_3_1.Name {POWER_3_1}                                                      {Name}          
bbset audit.power.checks.POWER_3_1.Description {Are all the db/lib used from the latest central area?}          {Description}   
bbset audit.power.checks.POWER_3_1.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_1.Sub-Category {Library}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_3_1.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_3_2.Name {POWER_3_2}                                                      {Name}          
bbset audit.power.checks.POWER_3_2.Description {What is the version of DK used for power sign-off?}             {Description}   
bbset audit.power.checks.POWER_3_2.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_2.Sub-Category {Library}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_3_2.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_3_3.Name {POWER_3_3}                                                      {Name}          
bbset audit.power.checks.POWER_3_3.Description {Is lib config used same as that used by PD/STA?}                {Description}   
bbset audit.power.checks.POWER_3_3.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_3.Sub-Category {Library}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_3_3.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_3_4.Name {POWER_3_4}                                                      {Name}          
bbset audit.power.checks.POWER_3_4.Description {If scaled power reports are generated, is the latest version of the scaling table for the respective DK used for generating scaled power reports?} {Description}   
bbset audit.power.checks.POWER_3_4.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_4.Sub-Category {FSDB}                                                           {Sub-Category}  
bbset audit.power.checks.POWER_3_4.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_3_5.Name {POWER_3_5}                                                      {Name}          
bbset audit.power.checks.POWER_3_5.Description {Are FSDB used from a release area?}                             {Description}   
bbset audit.power.checks.POWER_3_5.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_5.Sub-Category {FSDB}                                                           {Sub-Category}  
bbset audit.power.checks.POWER_3_5.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_3_6.Name {POWER_3_6}                                                      {Name}          
bbset audit.power.checks.POWER_3_6.Description {What is the fsdb clock frequency?}                              {Description}   
bbset audit.power.checks.POWER_3_6.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_6.Sub-Category {FSDB}                                                           {Sub-Category}  
bbset audit.power.checks.POWER_3_6.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_3_7.Name {POWER_3_7}                                                      {Name}          
bbset audit.power.checks.POWER_3_7.Description {Is the signoff version of the SPEF used for the final signoff runs?} {Description}   
bbset audit.power.checks.POWER_3_7.Category {Collateral}                                                     {Category}      
bbset audit.power.checks.POWER_3_7.Sub-Category {}                                                               {Sub-Category}  
bbset audit.power.checks.POWER_3_7.Milestone {}                                                               {Milestone}     
bbset audit.power.checks.POWER_4_1.Name {POWER_4_1}                                                      {Name}          
bbset audit.power.checks.POWER_4_1.Description {Are any app var defined other than the app var defined by the flow.} {Description}   
bbset audit.power.checks.POWER_4_1.Category {Config}                                                         {Category}      
bbset audit.power.checks.POWER_4_1.Sub-Category {App Vars}                                                       {Sub-Category}  
bbset audit.power.checks.POWER_4_2.Name {POWER_4_2}                                                      {Name}          
bbset audit.power.checks.POWER_4_2.Description {Are any override value defined for any of the app var defined by the flow.} {Description}   
bbset audit.power.checks.POWER_4_2.Category {Config}                                                         {Category}      
bbset audit.power.checks.POWER_4_2.Sub-Category {ML1.0}                                                          {Sub-Category}  
bbset audit.power.checks.POWER_5_1.Name {POWER_5_1}                                                      {Name}          
bbset audit.power.checks.POWER_5_1.Description {Document the Process, Temperature and Voltage used for power analysis} {Description}   
bbset audit.power.checks.POWER_5_1.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_1.Sub-Category {Operating conditions}                                           {Sub-Category}  
bbset audit.power.checks.POWER_5_1.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_2.Name {POWER_5_2}                                                      {Name}          
bbset audit.power.checks.POWER_5_2.Description {Is the PVT aligned with the SoC power requirements?}            {Description}   
bbset audit.power.checks.POWER_5_2.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_2.Sub-Category {Operating conditions}                                           {Sub-Category}  
bbset audit.power.checks.POWER_5_2.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_3.Name {POWER_5_3}                                                      {Name}          
bbset audit.power.checks.POWER_5_3.Description {Document the parasitics used in the power analysis runs?}       {Description}   
bbset audit.power.checks.POWER_5_3.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_3.Sub-Category {Operating conditions}                                           {Sub-Category}  
bbset audit.power.checks.POWER_5_3.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_4.Name {POWER_5_4}                                                      {Name}          
bbset audit.power.checks.POWER_5_4.Description {Is the parasitics used in the power analysis aligned with the SoC power requirements?} {Description}   
bbset audit.power.checks.POWER_5_4.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_4.Sub-Category {Parasitics}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_5_4.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_5.Name {POWER_5_5}                                                      {Name}          
bbset audit.power.checks.POWER_5_5.Description {What is the percentage of primepower fsdb vector annotation?}   {Description}   
bbset audit.power.checks.POWER_5_5.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_5.Sub-Category {Annotation}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_5_5.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_6.Name {POWER_5_6}                                                      {Name}          
bbset audit.power.checks.POWER_5_6.Description {Is the PI, PO annotation 100%}                                  {Description}   
bbset audit.power.checks.POWER_5_6.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_6.Sub-Category {Annotation}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_5_6.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_7.Name {POWER_5_7}                                                      {Name}          
bbset audit.power.checks.POWER_5_7.Description {Is the sequential annotation at least 99%}                      {Description}   
bbset audit.power.checks.POWER_5_7.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_7.Sub-Category {Annotation}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_5_7.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWERCAD_5_1.Name {POWERCAD_5_1}                                                   {Name}          
bbset audit.power.checks.POWERCAD_5_1.Description {Is the memory annotation at least 99%}                          {Description}   
bbset audit.power.checks.POWERCAD_5_1.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWERCAD_5_1.Sub-Category {Annotation}                                                     {Sub-Category}  
bbset audit.power.checks.POWERCAD_5_1.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_8.Name {POWER_5_8}                                                      {Name}          
bbset audit.power.checks.POWER_5_8.Description {Are there any activity overrides  using set_switching_activity} {Description}   
bbset audit.power.checks.POWER_5_8.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_8.Sub-Category {Annotation}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_5_8.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_9.Name {POWER_5_9}                                                      {Name}          
bbset audit.power.checks.POWER_5_9.Description {What is the percentage of spef annotation on the nets?}         {Description}   
bbset audit.power.checks.POWER_5_9.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_9.Sub-Category {Annotation}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_5_9.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_10.Name {POWER_5_10}                                                     {Name}          
bbset audit.power.checks.POWER_5_10.Description {What is the glitch derate used for non-sdf FSDB vector}         {Description}   
bbset audit.power.checks.POWER_5_10.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_10.Sub-Category {Derates}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_5_10.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_11.Name {POWER_5_11}                                                     {Name}          
bbset audit.power.checks.POWER_5_11.Description {What is the PVT derate used}                                    {Description}   
bbset audit.power.checks.POWER_5_11.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_11.Sub-Category {Derates}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_5_11.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_12.Name {POWER_5_12}                                                     {Name}          
bbset audit.power.checks.POWER_5_12.Description {Are other derates used? If yes, document the derates and explain the requirement to used these derates} {Description}   
bbset audit.power.checks.POWER_5_12.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_12.Sub-Category {Derates}                                                        {Sub-Category}  
bbset audit.power.checks.POWER_5_12.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_13.Name {POWER_5_13}                                                     {Name}          
bbset audit.power.checks.POWER_5_13.Description {Have the DFT pin constraints in simulation environment used for FSDB generation reviewed, example, memory margin controls} {Description}   
bbset audit.power.checks.POWER_5_13.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_13.Sub-Category {Constraints}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_5_13.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_14.Name {POWER_5_14}                                                     {Name}          
bbset audit.power.checks.POWER_5_14.Description {Have the pin constraints in primepower }                        {Description}   
bbset audit.power.checks.POWER_5_14.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_14.Sub-Category {Constraints}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_5_14.Milestone {TECO2}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_15.Name {POWER_5_15}                                                     {Name}          
bbset audit.power.checks.POWER_5_15.Description {Is the use-case analysis documented? Provide link to the document} {Description}   
bbset audit.power.checks.POWER_5_15.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_15.Sub-Category {Use-cases}                                                      {Sub-Category}  
bbset audit.power.checks.POWER_5_15.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_16.Name {POWER_5_16}                                                     {Name}          
bbset audit.power.checks.POWER_5_16.Description {Is the window of analysis documented? Provide link to the document} {Description}   
bbset audit.power.checks.POWER_5_16.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_16.Sub-Category {Use-cases}                                                      {Sub-Category}  
bbset audit.power.checks.POWER_5_16.Milestone {ML1.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_5_17.Name {POWER_5_17}                                                     {Name}          
bbset audit.power.checks.POWER_5_17.Description {Is the FSDB generated from a SDF based simulation.}             {Description}   
bbset audit.power.checks.POWER_5_17.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_17.Sub-Category {FSDB simulation type}                                           {Sub-Category}  
bbset audit.power.checks.POWER_5_18.Name {POWER_5_18}                                                     {Name}          
bbset audit.power.checks.POWER_5_18.Description {Does the netlist used for power analysis include physical only cells such as spare cells, Decap?} {Description}   
bbset audit.power.checks.POWER_5_18.Category {Setup}                                                          {Category}      
bbset audit.power.checks.POWER_5_18.Sub-Category {FSDB simulation type}                                           {Sub-Category}  
bbset audit.power.checks.POWER_6_1.Name {POWER_6_1}                                                      {Name}          
bbset audit.power.checks.POWER_6_1.Description {Is a power model available for the design}                      {Description}   
bbset audit.power.checks.POWER_6_1.Category {Target}                                                         {Category}      
bbset audit.power.checks.POWER_6_1.Sub-Category {Power Model}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_6_1.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_6_2.Name {POWER_6_2}                                                      {Name}          
bbset audit.power.checks.POWER_6_2.Description {Has the power model been reviewed}                              {Description}   
bbset audit.power.checks.POWER_6_2.Category {Target}                                                         {Category}      
bbset audit.power.checks.POWER_6_2.Sub-Category {Power Model}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_6_2.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_6_3.Name {POWER_6_3}                                                      {Name}          
bbset audit.power.checks.POWER_6_3.Description {Active power}                                                   {Description}   
bbset audit.power.checks.POWER_6_3.Category {Target}                                                         {Category}      
bbset audit.power.checks.POWER_6_3.Sub-Category {Dynamic power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_6_3.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_6_4.Name {POWER_6_4}                                                      {Name}          
bbset audit.power.checks.POWER_6_4.Description {Idle power}                                                     {Description}   
bbset audit.power.checks.POWER_6_4.Category {Target}                                                         {Category}      
bbset audit.power.checks.POWER_6_4.Sub-Category {Dynamic power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_6_4.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_6_5.Name {POWER_6_5}                                                      {Name}          
bbset audit.power.checks.POWER_6_5.Description {ON leakage}                                                     {Description}   
bbset audit.power.checks.POWER_6_5.Category {Target}                                                         {Category}      
bbset audit.power.checks.POWER_6_5.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_6_5.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_6_6.Name {POWER_6_6}                                                      {Name}          
bbset audit.power.checks.POWER_6_6.Description {OFF leakage}                                                    {Description}   
bbset audit.power.checks.POWER_6_6.Category {Target}                                                         {Category}      
bbset audit.power.checks.POWER_6_6.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_6_6.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_1.Name {POWER_7_1}                                                      {Name}          
bbset audit.power.checks.POWER_7_1.Description {Any known issues affecting the quality of results}              {Description}   
bbset audit.power.checks.POWER_7_1.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_1.Sub-Category {Setup}                                                          {Sub-Category}  
bbset audit.power.checks.POWER_7_1.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_2.Name {POWER_7_2}                                                      {Name}          
bbset audit.power.checks.POWER_7_2.Description {Were decaps considered in the primepower runs}                  {Description}   
bbset audit.power.checks.POWER_7_2.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_2.Sub-Category {Setup}                                                          {Sub-Category}  
bbset audit.power.checks.POWER_7_2.Milestone {TECO1}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_3.Name {POWER_7_3}                                                      {Name}          
bbset audit.power.checks.POWER_7_3.Description {Active power}                                                   {Description}   
bbset audit.power.checks.POWER_7_3.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_3.Sub-Category {Dynamic power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_3.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_4.Name {POWER_7_4}                                                      {Name}          
bbset audit.power.checks.POWER_7_4.Description {Idle power}                                                     {Description}   
bbset audit.power.checks.POWER_7_4.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_4.Sub-Category {Dynamic power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_4.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_5.Name {POWER_7_5}                                                      {Name}          
bbset audit.power.checks.POWER_7_5.Description {ON leakage}                                                     {Description}   
bbset audit.power.checks.POWER_7_5.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_5.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_5.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_6.Name {POWER_7_6}                                                      {Name}          
bbset audit.power.checks.POWER_7_6.Description {OFF leakage}                                                    {Description}   
bbset audit.power.checks.POWER_7_6.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_6.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_6.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_7.Name {POWER_7_7}                                                      {Name}          
bbset audit.power.checks.POWER_7_7.Description {If the power reports are generated based on scaling, is the scale power logs/reports reviewed} {Description}   
bbset audit.power.checks.POWER_7_7.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_7.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_7.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_8.Name {POWER_7_8}                                                      {Name}          
bbset audit.power.checks.POWER_7_8.Description {All memory power (SRAM and RF) accounted in power analysis? Does the .lib/.db have the power characterised?} {Description}   
bbset audit.power.checks.POWER_7_8.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_8.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_8.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_7_9.Name {POWER_7_9}                                                      {Name}          
bbset audit.power.checks.POWER_7_9.Description {Are the power numbers of macros/blackboxes like PLL, PHY and other analog macros accounted in the power analysis} {Description}   
bbset audit.power.checks.POWER_7_9.Category {Result}                                                         {Category}      
bbset audit.power.checks.POWER_7_9.Sub-Category {Leakage power}                                                  {Sub-Category}  
bbset audit.power.checks.POWER_7_9.Milestone {ML2.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_8_1.Name {POWER_8_1}                                                      {Name}          
bbset audit.power.checks.POWER_8_1.Description {Has saif based optimisation been done}                          {Description}   
bbset audit.power.checks.POWER_8_1.Category {Optimisation}                                                   {Category}      
bbset audit.power.checks.POWER_8_1.Sub-Category {PD}                                                             {Sub-Category}  
bbset audit.power.checks.POWER_8_1.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_8_2.Name {POWER_8_2}                                                      {Name}          
bbset audit.power.checks.POWER_8_2.Description {Has signoff recovery done: Dynamic recovery run}                {Description}   
bbset audit.power.checks.POWER_8_2.Category {Optimisation}                                                   {Category}      
bbset audit.power.checks.POWER_8_2.Sub-Category {PD}                                                             {Sub-Category}  
bbset audit.power.checks.POWER_8_2.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_8_3.Name {POWER_8_3}                                                      {Name}          
bbset audit.power.checks.POWER_8_3.Description {Has signoff recovery done: leakage recovery run}                {Description}   
bbset audit.power.checks.POWER_8_3.Category {Optimisation}                                                   {Category}      
bbset audit.power.checks.POWER_8_3.Sub-Category {PD}                                                             {Sub-Category}  
bbset audit.power.checks.POWER_8_3.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_8_4.Name {POWER_8_4}                                                      {Name}          
bbset audit.power.checks.POWER_8_4.Description {Have all dynamic power ECO implemented}                         {Description}   
bbset audit.power.checks.POWER_8_4.Category {Optimisation}                                                   {Category}      
bbset audit.power.checks.POWER_8_4.Sub-Category {PD}                                                             {Sub-Category}  
bbset audit.power.checks.POWER_8_4.Milestone {TECO2}                                                          {Milestone}     
bbset audit.power.checks.POWER_8_5.Name {POWER_8_5}                                                      {Name}          
bbset audit.power.checks.POWER_8_5.Description {Have all leakage power ECO implemented}                         {Description}   
bbset audit.power.checks.POWER_8_5.Category {Optimisation}                                                   {Category}      
bbset audit.power.checks.POWER_8_5.Sub-Category {PD}                                                             {Sub-Category}  
bbset audit.power.checks.POWER_8_5.Milestone {TECO2}                                                          {Milestone}     
bbset audit.power.checks.POWER_9_1.Name {POWER_9_1}                                                      {Name}          
bbset audit.power.checks.POWER_9_1.Description {Are physical IP such as thermal sensor placement that is driven by thermal/power hotspot been reviewed?} {Description}   
bbset audit.power.checks.POWER_9_1.Category {Implementation}                                                 {Category}      
bbset audit.power.checks.POWER_9_1.Sub-Category {Dependency}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_9_1.Milestone {ML4.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_9_2.Name {POWER_9_2}                                                      {Name}          
bbset audit.power.checks.POWER_9_2.Description {Is the VT usage and profile reviewed}                           {Description}   
bbset audit.power.checks.POWER_9_2.Category {Implementation}                                                 {Category}      
bbset audit.power.checks.POWER_9_2.Sub-Category {Dependency}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_9_2.Milestone {ML4.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_9_3.Name {POWER_9_3}                                                      {Name}          
bbset audit.power.checks.POWER_9_3.Description {Is the MBIT% reviewed}                                          {Description}   
bbset audit.power.checks.POWER_9_3.Category {Implementation}                                                 {Category}      
bbset audit.power.checks.POWER_9_3.Sub-Category {Dependency}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_9_3.Milestone {ML4.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_10_1.Name {POWER_10_1}                                                     {Name}          
bbset audit.power.checks.POWER_10_1.Description {Have use case and window of analysis for IR reviewed}           {Description}   
bbset audit.power.checks.POWER_10_1.Category {EMIR}                                                           {Category}      
bbset audit.power.checks.POWER_10_1.Sub-Category {Dependency}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_10_1.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_10_2.Name {POWER_10_2}                                                     {Name}          
bbset audit.power.checks.POWER_10_2.Description {Have fsdb for IR been delivered}                                {Description}   
bbset audit.power.checks.POWER_10_2.Category {EMIR}                                                           {Category}      
bbset audit.power.checks.POWER_10_2.Sub-Category {Dependency}                                                     {Sub-Category}  
bbset audit.power.checks.POWER_10_2.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_10_3.Name {POWER_10_3}                                                     {Name}          
bbset audit.power.checks.POWER_10_3.Description {Has IR analysis been done for scan scenario?}                   {Description}   
bbset audit.power.checks.POWER_10_3.Category {EMIR}                                                           {Category}      
bbset audit.power.checks.POWER_10_3.Sub-Category {DFT}                                                            {Sub-Category}  
bbset audit.power.checks.POWER_10_3.Milestone {ML3.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_11_1.Name {POWER_11_1}                                                     {Name}          
bbset audit.power.checks.POWER_11_1.Description {Has usecase been reviewed by Arch/design}                       {Description}   
bbset audit.power.checks.POWER_11_1.Category {Review}                                                         {Category}      
bbset audit.power.checks.POWER_11_1.Sub-Category {Arch review}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_11_1.Milestone {ML4.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_11_2.Name {POWER_11_2}                                                     {Name}          
bbset audit.power.checks.POWER_11_2.Description {Has the power-sign off setup}                                   {Description}   
bbset audit.power.checks.POWER_11_2.Category {Review}                                                         {Category}      
bbset audit.power.checks.POWER_11_2.Sub-Category {Peer Review}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_11_2.Milestone {ML4.0}                                                          {Milestone}     
bbset audit.power.checks.POWER_11_3.Name {POWER_11_3}                                                     {Name}          
bbset audit.power.checks.POWER_11_3.Description {Are the final power numbers reflecting on the power dashboard for the SoC power modelling team to consume?} {Description}   
bbset audit.power.checks.POWER_11_3.Category {Review}                                                         {Category}      
bbset audit.power.checks.POWER_11_3.Sub-Category {Peer Review}                                                    {Sub-Category}  
bbset audit.power.checks.POWER_11_3.Milestone {ML4.0}                                                          {Milestone}     
bbset audit.syn.checks.SYN_1_1.Name  {SYN_1_1}                                                        {Name}          
bbset audit.syn.checks.SYN_1_1.Description {DK version}                                                     {Description}   
bbset audit.syn.checks.SYN_1_1.Category {Versions}                                                       {Category}      
bbset audit.syn.checks.SYN_1_1.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_1_1.Script { cia_query -y [bbget syn.config.CIA.ConsolidateSummary] -c SYN_1_1 } {Script to query the status of check_id}
bbset audit.syn.checks.SYN_1_2.Name  {SYN_1_2}                                                        {Name}          
bbset audit.syn.checks.SYN_1_2.Description {PDK version}                                                    {Description}   
bbset audit.syn.checks.SYN_1_2.Category {Versions}                                                       {Category}      
bbset audit.syn.checks.SYN_1_2.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_1_3.Name  {SYN_1_3}                                                        {Name}          
bbset audit.syn.checks.SYN_1_3.Description {Synthesis/Physical synthesis Tool version}                      {Description}   
bbset audit.syn.checks.SYN_1_3.Category {Versions}                                                       {Category}      
bbset audit.syn.checks.SYN_1_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_3.Name  {SYN_2_3}                                                        {Name}          
bbset audit.syn.checks.SYN_2_3.Description {LEC Clean}                                                      {Description}   
bbset audit.syn.checks.SYN_2_3.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_4.Name  {SYN_2_4}                                                        {Name}          
bbset audit.syn.checks.SYN_2_4.Description {VC-LP checks @ synthesis}                                       {Description}   
bbset audit.syn.checks.SYN_2_4.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_5.Name  {SYN_2_5}                                                        {Name}          
bbset audit.syn.checks.SYN_2_5.Description {Reviewed exceptions for mission and DFT modes?}                 {Description}   
bbset audit.syn.checks.SYN_2_5.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_6.Name  {SYN_2_6}                                                        {Name}          
bbset audit.syn.checks.SYN_2_6.Description {Foundry dont_use (e.g. 1-FIN devices) honoured?}                {Description}   
bbset audit.syn.checks.SYN_2_6.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_6.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_8.Name  {SYN_2_8}                                                        {Name}          
bbset audit.syn.checks.SYN_2_8.Description {Reviewed the optimised (deleted) flops list with designer/RTL? Bug filed ?} {Description}   
bbset audit.syn.checks.SYN_2_8.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_8.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_9.Name  {SYN_2_9}                                                        {Name}          
bbset audit.syn.checks.SYN_2_9.Description {Latch Count / No unintended latches in the design?}             {Description}   
bbset audit.syn.checks.SYN_2_9.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_9.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_10.Name {SYN_2_10}                                                       {Name}          
bbset audit.syn.checks.SYN_2_10.Description {Synthesis synchronizer count = RTL synchronizer count ?}        {Description}   
bbset audit.syn.checks.SYN_2_10.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_10.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_12.Name {SYN_2_12}                                                       {Name}          
bbset audit.syn.checks.SYN_2_12.Description {Lint check at synthesis}                                        {Description}   
bbset audit.syn.checks.SYN_2_12.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_12.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_13.Name {SYN_2_13}                                                       {Name}          
bbset audit.syn.checks.SYN_2_13.Description {All functional and DFT dont-touch cells retatined (OCC}         {Description}   
bbset audit.syn.checks.SYN_2_13.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_13.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_14.Name {SYN_2_14}                                                       {Name}          
bbset audit.syn.checks.SYN_2_14.Description {No timing loops at synthesis ?}                                 {Description}   
bbset audit.syn.checks.SYN_2_14.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_14.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_15.Name {SYN_2_15}                                                       {Name}          
bbset audit.syn.checks.SYN_2_15.Description {Scan flop %, review all non-scan flops}                         {Description}   
bbset audit.syn.checks.SYN_2_15.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_15.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_17.Name {SYN_2_17}                                                       {Name}          
bbset audit.syn.checks.SYN_2_17.Description {No synthesis blackboxes }                                       {Description}   
bbset audit.syn.checks.SYN_2_17.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_17.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_18.Name {SYN_2_18}                                                       {Name}          
bbset audit.syn.checks.SYN_2_18.Description {Review all STUB defines and ensure any feedthroughs have `ifdef SIMULATION wrappers} {Description}   
bbset audit.syn.checks.SYN_2_18.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_18.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_19.Name {SYN_2_19}                                                       {Name}          
bbset audit.syn.checks.SYN_2_19.Description {Review `defines used for synthesis}                             {Description}   
bbset audit.syn.checks.SYN_2_19.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_19.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_20.Name {SYN_2_20}                                                       {Name}          
bbset audit.syn.checks.SYN_2_20.Description {Log file warnings reviewed /no errors}                          {Description}   
bbset audit.syn.checks.SYN_2_20.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_20.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_21.Name {SYN_2_21}                                                       {Name}          
bbset audit.syn.checks.SYN_2_21.Description {Document and review tool runtime}                               {Description}   
bbset audit.syn.checks.SYN_2_21.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_21.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_22.Name {SYN_2_22}                                                       {Name}          
bbset audit.syn.checks.SYN_2_22.Description {Correct floorplan / macro placement used in synthesis ( document floorplan snapshot)} {Description}   
bbset audit.syn.checks.SYN_2_22.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_22.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_2_23.Name {SYN_2_23}                                                       {Name}          
bbset audit.syn.checks.SYN_2_23.Description {DFT checks (Scan trace /DRC) clean @ synthesis}                 {Description}   
bbset audit.syn.checks.SYN_2_23.Category {Functionality}                                                  {Category}      
bbset audit.syn.checks.SYN_2_23.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_3_2.Name  {SYN_3_2}                                                        {Name}          
bbset audit.syn.checks.SYN_3_2.Description {I/O ports constraints honoured - drive and load set ?}          {Description}   
bbset audit.syn.checks.SYN_3_2.Category {Timing}                                                         {Category}      
bbset audit.syn.checks.SYN_3_2.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_3_3.Name  {SYN_3_3}                                                        {Name}          
bbset audit.syn.checks.SYN_3_3.Description {Timing across all path groups and dominant corners met at synthesis (all scenarios)?} {Description}   
bbset audit.syn.checks.SYN_3_3.Category {Timing}                                                         {Category}      
bbset audit.syn.checks.SYN_3_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_3_5.Name  {SYN_3_5}                                                        {Name}          
bbset audit.syn.checks.SYN_3_5.Description {Optimization corners finalized at synthesis (timing LOS across corners downstream) ?} {Description}   
bbset audit.syn.checks.SYN_3_5.Category {Timing}                                                         {Category}      
bbset audit.syn.checks.SYN_3_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_3_6.Name  {SYN_3_6}                                                        {Name}          
bbset audit.syn.checks.SYN_3_6.Description {Margins included for synthesis? (logical/physical) publish number} {Description}   
bbset audit.syn.checks.SYN_3_6.Category {Timing}                                                         {Category}      
bbset audit.syn.checks.SYN_3_6.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_3_8.Name  {SYN_3_8}                                                        {Name}          
bbset audit.syn.checks.SYN_3_8.Description {SDC read  - no errors and warnings reviewed ?}                  {Description}   
bbset audit.syn.checks.SYN_3_8.Category {Timing}                                                         {Category}      
bbset audit.syn.checks.SYN_3_8.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_3_10.Name {SYN_3_10}                                                       {Name}          
bbset audit.syn.checks.SYN_3_10.Description {Min-period with derates/ extra duty cycle margins met ?}        {Description}   
bbset audit.syn.checks.SYN_3_10.Category {Timing}                                                         {Category}      
bbset audit.syn.checks.SYN_3_10.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_1.Name  {SYN_4_1}                                                        {Name}          
bbset audit.syn.checks.SYN_4_1.Description {Reviewed Memory Selection - HD/HS periphery Vt}                 {Description}   
bbset audit.syn.checks.SYN_4_1.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_1.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_2.Name  {SYN_4_2}                                                        {Name}          
bbset audit.syn.checks.SYN_4_2.Description {Vt usage limited to IP budgets(publish VT histogram) use of pre-determined VT classes only } {Description}   
bbset audit.syn.checks.SYN_4_2.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_2.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_4.Name  {SYN_4_4}                                                        {Name}          
bbset audit.syn.checks.SYN_4_4.Description {Enabled Boundary Optimisation? (when possible)}                 {Description}   
bbset audit.syn.checks.SYN_4_4.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_5.Name  {SYN_4_5}                                                        {Name}          
bbset audit.syn.checks.SYN_4_5.Description {Clock Gating Coverage % number of levels}                       {Description}   
bbset audit.syn.checks.SYN_4_5.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_6.Name  {SYN_4_6}                                                        {Name}          
bbset audit.syn.checks.SYN_4_6.Description {Reviewed ungated flops reasons?}                                {Description}   
bbset audit.syn.checks.SYN_4_6.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_6.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_7.Name  {SYN_4_7}                                                        {Name}          
bbset audit.syn.checks.SYN_4_7.Description {Clock Gating min-bit / max-fanout set to appropriate numbers (document values) } {Description}   
bbset audit.syn.checks.SYN_4_7.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_7.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_8.Name  {SYN_4_8}                                                        {Name}          
bbset audit.syn.checks.SYN_4_8.Description {Enabled activity based optimisation? (when available/agreed)}   {Description}   
bbset audit.syn.checks.SYN_4_8.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_8.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_10.Name {SYN_4_10}                                                       {Name}          
bbset audit.syn.checks.SYN_4_10.Description {Architectural clock skew requirements (memories/ICGs etc.) appled ?} {Description}   
bbset audit.syn.checks.SYN_4_10.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_10.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_11.Name {SYN_4_11}                                                       {Name}          
bbset audit.syn.checks.SYN_4_11.Description {All synthesis PPA settings (hierarchical optimization sequentuial inversion etc.)  reviewed by PPA lead ?} {Description}   
bbset audit.syn.checks.SYN_4_11.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_11.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_13.Name {SYN_4_13}                                                       {Name}          
bbset audit.syn.checks.SYN_4_13.Description {Extra margins on clock gate enables applied (to model clock tree insertion delay) ?} {Description}   
bbset audit.syn.checks.SYN_4_13.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_13.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_14.Name {SYN_4_14}                                                       {Name}          
bbset audit.syn.checks.SYN_4_14.Description {Reviewed Datapath Inference report (report datapath -all in genus)} {Description}   
bbset audit.syn.checks.SYN_4_14.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_14.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_15.Name {SYN_4_15}                                                       {Name}          
bbset audit.syn.checks.SYN_4_15.Description {Multibit banking enabled }                                      {Description}   
bbset audit.syn.checks.SYN_4_15.Category {PPA}                                                            {Category}      
bbset audit.syn.checks.SYN_4_15.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_5_1.Name  {SYN_5_1}                                                        {Name}          
bbset audit.syn.checks.SYN_5_1.Description {Wrap tag}                                                       {Description}   
bbset audit.syn.checks.SYN_5_1.Category {Release}                                                        {Category}      
bbset audit.syn.checks.SYN_5_1.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_5_3.Name  {SYN_5_3}                                                        {Name}          
bbset audit.syn.checks.SYN_5_3.Description {Watermark cell present ?}                                       {Description}   
bbset audit.syn.checks.SYN_5_3.Category {Release}                                                        {Category}      
bbset audit.syn.checks.SYN_5_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_19.Name {SYN_4_19}                                                       {Name}          
bbset audit.syn.checks.SYN_4_19.Description {If using activity vector, report the annotation % (RTL align w/ vectors)} {Description}   
bbset audit.syn.checks.SYN_4_19.Category {Power}                                                          {Category}      
bbset audit.syn.checks.SYN_4_19.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_20.Name {SYN_4_20}                                                       {Name}          
bbset audit.syn.checks.SYN_4_20.Description {Self Gating (XOR Gating) enabled ? If no, Why? If yes, apply globally or specific flops? PPA Impact?} {Description}   
bbset audit.syn.checks.SYN_4_20.Category {Power}                                                          {Category}      
bbset audit.syn.checks.SYN_4_20.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_21.Name {SYN_4_21}                                                       {Name}          
bbset audit.syn.checks.SYN_4_21.Description {Multi stage clock gating enabled ?}                             {Description}   
bbset audit.syn.checks.SYN_4_21.Category {Power}                                                          {Category}      
bbset audit.syn.checks.SYN_4_21.Milestone {ML3+}                                                           {Milestone}     
bbset audit.syn.checks.SYN_4_22.Name {SYN_4_22}                                                       {Name}          
bbset audit.syn.checks.SYN_4_22.Description {Inferred CG coverage %, both top and breakdown into major hierachies} {Description}   
bbset audit.syn.checks.SYN_4_22.Category {Power}                                                          {Category}      
bbset audit.syn.checks.SYN_4_22.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pdv.checks.PDV_1_1.Name  {PDV_1_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_1.Description {TECH LEF}                                                       {Description}   
bbset audit.pdv.checks.PDV_1_1.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_2.Name  {PDV_1_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_2.Description {LEF vs GDS consistency for sub-blocks in SSWRP (Latest lef of sub blocks)} {Description}   
bbset audit.pdv.checks.PDV_1_2.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_3.Name  {PDV_1_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_3.Description {Is there watermark in the PnR gds}                              {Description}   
bbset audit.pdv.checks.PDV_1_3.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_4.Name  {PDV_1_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_4.Description {verilog netlist - is flatten_bus option is used -flatten option is used (FC blocks not used)} {Description}   
bbset audit.pdv.checks.PDV_1_4.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_5.Name  {PDV_1_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_5.Description {All power/gnd names include virtual powers and voltages}        {Description}   
bbset audit.pdv.checks.PDV_1_5.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_6.Name  {PDV_1_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_6.Description {LEF consistenecy check (LEF VS GDS CHECK ) Node IPQA}           {Description}   
bbset audit.pdv.checks.PDV_1_6.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_7.Name  {PDV_1_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_7.Description {Node Ipreleased?}                                               {Description}   
bbset audit.pdv.checks.PDV_1_7.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_8.Name  {PDV_1_8}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_8.Description {PNR chipfinish oasis}                                           {Description}   
bbset audit.pdv.checks.PDV_1_8.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_9.Name  {PDV_1_9}                                                        {Name}          
bbset audit.pdv.checks.PDV_1_9.Description {PNR chipfinish  flat.pg.v.gz}                                   {Description}   
bbset audit.pdv.checks.PDV_1_9.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_1_10.Name {PDV_1_10}                                                       {Name}          
bbset audit.pdv.checks.PDV_1_10.Description {PNR chipfinish hcell.list}                                      {Description}   
bbset audit.pdv.checks.PDV_1_10.Category {General}                                                        {Category}      
bbset audit.pdv.checks.PDV_1_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_1.Name  {PDV_2_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_2_1.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_2.Name  {PDV_2_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_2.Description {DK version}                                                     {Description}   
bbset audit.pdv.checks.PDV_2_2.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_3.Name  {PDV_2_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_3.Description {MDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_2_3.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_4.Name  {PDV_2_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_4.Description {Input pnr GDS}                                                  {Description}   
bbset audit.pdv.checks.PDV_2_4.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_5.Name  {PDV_2_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_5.Description {All GDS coming from either DK or iprelease area( for subblocks - noDK w/ dummyfill merge inputs)} {Description}   
bbset audit.pdv.checks.PDV_2_5.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_6.Name  {PDV_2_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_6.Description {sub blocks tags/version used and report the versions}           {Description}   
bbset audit.pdv.checks.PDV_2_6.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_7.Name  {PDV_2_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_7.Description {Make sure there is no empty reference file.}                    {Description}   
bbset audit.pdv.checks.PDV_2_7.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_8.Name  {PDV_2_8}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_8.Description {Using text2layout option, if so what are the layers adding.}    {Description}   
bbset audit.pdv.checks.PDV_2_8.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_13.Name {PDV_2_13}                                                       {Name}          
bbset audit.pdv.checks.PDV_2_13.Description {Voltage Text from chipfinish merged in ipmerge gds}             {Description}   
bbset audit.pdv.checks.PDV_2_13.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_9.Name  {PDV_2_9}                                                        {Name}          
bbset audit.pdv.checks.PDV_2_9.Description {Ipmerge using strict  true or false.}                           {Description}   
bbset audit.pdv.checks.PDV_2_9.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_10.Name {PDV_2_10}                                                       {Name}          
bbset audit.pdv.checks.PDV_2_10.Description {Ipreleased Path}                                                {Description}   
bbset audit.pdv.checks.PDV_2_10.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_11.Name {PDV_2_11}                                                       {Name}          
bbset audit.pdv.checks.PDV_2_11.Description {ipmerge nodk output}                                            {Description}   
bbset audit.pdv.checks.PDV_2_11.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_2_12.Name {PDV_2_12}                                                       {Name}          
bbset audit.pdv.checks.PDV_2_12.Description {ipmerge output}                                                 {Description}   
bbset audit.pdv.checks.PDV_2_12.Category {IPMERGE}                                                        {Category}      
bbset audit.pdv.checks.PDV_2_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_1.Name  {PDV_3_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_3_1.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_2.Name  {PDV_3_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_2.Description {PDK version}                                                    {Description}   
bbset audit.pdv.checks.PDV_3_2.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_3.Name  {PDV_3_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_3.Description {Capture FEOL and BEOL Rule deck versions.}                      {Description}   
bbset audit.pdv.checks.PDV_3_3.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_4.Name  {PDV_3_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_3_4.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_5.Name  {PDV_3_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_5.Description {Checksum b/w Released path and Runpath gds}                     {Description}   
bbset audit.pdv.checks.PDV_3_5.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_6.Name  {PDV_3_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_6.Description {FEOL & BEOL Generating or Reusing}                              {Description}   
bbset audit.pdv.checks.PDV_3_6.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_7.Name  {PDV_3_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_7.Description {Metal and Base Exclude layers present on Merged GDS. (IPQA)}    {Description}   
bbset audit.pdv.checks.PDV_3_7.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_8.Name  {PDV_3_8}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_8.Description {Switch setting changes in  IP/BLOCK vars}                       {Description}   
bbset audit.pdv.checks.PDV_3_8.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_9.Name  {PDV_3_9}                                                        {Name}          
bbset audit.pdv.checks.PDV_3_9.Description {Exclude layer present on i/p's & sub blocks feol}               {Description}   
bbset audit.pdv.checks.PDV_3_9.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_10.Name {PDV_3_10}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_10.Description {Exclude layer present on i/p's & sub blocks beol}               {Description}   
bbset audit.pdv.checks.PDV_3_10.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_11.Name {PDV_3_11}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_11.Description {Exclude layer present on i/p's & sub blocks via's}              {Description}   
bbset audit.pdv.checks.PDV_3_11.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_12.Name {PDV_3_12}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_12.Description {Exclude layers on 3PIP (dummy fill added on 3PIP ) physical check for now, automation ?} {Description}   
bbset audit.pdv.checks.PDV_3_12.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_13.Name {PDV_3_13}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_13.Description {Max Layer metal fill}                                           {Description}   
bbset audit.pdv.checks.PDV_3_13.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_14.Name {PDV_3_14}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_14.Description {Exclude layers to block dummy fill (include file??)}            {Description}   
bbset audit.pdv.checks.PDV_3_14.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_15.Name {PDV_3_15}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_15.Description {Ipreleased path}                                                {Description}   
bbset audit.pdv.checks.PDV_3_15.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_16.Name {PDV_3_16}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_16.Description {Dummyfill nodk output}                                          {Description}   
bbset audit.pdv.checks.PDV_3_16.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_3_17.Name {PDV_3_17}                                                       {Name}          
bbset audit.pdv.checks.PDV_3_17.Description {Dummyfill output}                                               {Description}   
bbset audit.pdv.checks.PDV_3_17.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdv.checks.PDV_3_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_4_1.Name  {PDV_4_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_4_1.Description {Chipfin path used}                                              {Description}   
bbset audit.pdv.checks.PDV_4_1.Category {DESIGNIN}                                                       {Category}      
bbset audit.pdv.checks.PDV_4_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_4_2.Name  {PDV_4_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_4_2.Description {Ipreleased path}                                                {Description}   
bbset audit.pdv.checks.PDV_4_2.Category {DESIGNIN}                                                       {Category}      
bbset audit.pdv.checks.PDV_4_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_4_3.Name  {PDV_4_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_4_3.Description {Output Designin hcell list}                                     {Description}   
bbset audit.pdv.checks.PDV_4_3.Category {DESIGNIN}                                                       {Category}      
bbset audit.pdv.checks.PDV_4_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_1.Name  {PDV_5_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_5_1.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_2.Name  {PDV_5_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_2.Description {Input netlist}                                                  {Description}   
bbset audit.pdv.checks.PDV_5_2.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_3.Name  {PDV_5_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_3.Description {Checksum b/w Released path and Runpath netlist}                 {Description}   
bbset audit.pdv.checks.PDV_5_3.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_4.Name  {PDV_5_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_4.Description {No Global and Connect statements.}                              {Description}   
bbset audit.pdv.checks.PDV_5_4.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_5.Name  {PDV_5_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_5.Description {Ipreleased path}                                                {Description}   
bbset audit.pdv.checks.PDV_5_5.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_6.Name  {PDV_5_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_6.Description {v2spi nodk netlist}                                             {Description}   
bbset audit.pdv.checks.PDV_5_6.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_5_7.Name  {PDV_5_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_5_7.Description {v2spi output netlist}                                           {Description}   
bbset audit.pdv.checks.PDV_5_7.Category {V2SPI}                                                          {Category}      
bbset audit.pdv.checks.PDV_5_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_1.Name  {PDV_6_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_1.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_6_1.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_2.Name  {PDV_6_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_2.Description {Input GDS should be dummyfill and not ipmerge GDS}              {Description}   
bbset audit.pdv.checks.PDV_6_2.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_2_1.Name {PDV_6_2_1}                                                      {Name}          
bbset audit.pdv.checks.PDV_6_2_1.Description {Checksum b/w dummyfill ipreleased & bumpoverlay input gds}      {Description}   
bbset audit.pdv.checks.PDV_6_2_1.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_2_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_3.Name  {PDV_6_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_3.Description {Input DEF}                                                      {Description}   
bbset audit.pdv.checks.PDV_6_3.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_4.Name  {PDV_6_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_4.Description {Input Bump_cell LEF}                                            {Description}   
bbset audit.pdv.checks.PDV_6_4.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_5.Name  {PDV_6_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_5.Description {Input Bump_cell GDS}                                            {Description}   
bbset audit.pdv.checks.PDV_6_5.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_6.Name  {PDV_6_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_6.Description {techlef fdi_n3e.map file coming from repo?}                     {Description}   
bbset audit.pdv.checks.PDV_6_6.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_7.Name  {PDV_6_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_7.Description {Input techlef used aligned with pnr}                            {Description}   
bbset audit.pdv.checks.PDV_6_7.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_8.Name  {PDV_6_8}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_8.Description {Node IPreleased (bump.merge.oas.gz)}                            {Description}   
bbset audit.pdv.checks.PDV_6_8.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_6_9.Name  {PDV_6_9}                                                        {Name}          
bbset audit.pdv.checks.PDV_6_9.Description {bump.merge output}                                              {Description}   
bbset audit.pdv.checks.PDV_6_9.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdv.checks.PDV_6_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_7_1.Name  {PDV_7_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_7_1.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_7_1.Category {POSTFIX}                                                        {Category}      
bbset audit.pdv.checks.PDV_7_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_7_2.Name  {PDV_7_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_7_2.Description {Node Ipreleased}                                                {Description}   
bbset audit.pdv.checks.PDV_7_2.Category {POSTFIX}                                                        {Category}      
bbset audit.pdv.checks.PDV_7_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_7_3.Name  {PDV_7_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_7_3.Description {Postfix output layout}                                          {Description}   
bbset audit.pdv.checks.PDV_7_3.Category {POSTFIX}                                                        {Category}      
bbset audit.pdv.checks.PDV_7_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_7_4.Name  {PDV_7_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_7_4.Description {Postfix output netlist}                                         {Description}   
bbset audit.pdv.checks.PDV_7_4.Category {POSTFIX}                                                        {Category}      
bbset audit.pdv.checks.PDV_7_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_7_5.Name  {PDV_7_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_7_5.Description {Postfix output hcell.list}                                      {Description}   
bbset audit.pdv.checks.PDV_7_5.Category {POSTFIX}                                                        {Category}      
bbset audit.pdv.checks.PDV_7_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_1.Name  {PDV_8_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_8_1.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_2.Name  {PDV_8_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_8_2.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_3.Name  {PDV_8_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_8_3.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_4.Name  {PDV_8_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_4.Description {Checksum b/w dummyfill ipreleased & DRC input gds}              {Description}   
bbset audit.pdv.checks.PDV_8_4.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_5.Name  {PDV_8_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_5.Description {DRC- Voltage Text Inputs (INCLUDE files)}                       {Description}   
bbset audit.pdv.checks.PDV_8_5.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_6.Name  {PDV_8_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_6.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_8_6.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_7.Name  {PDV_8_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_7.Description {No blackboxes}                                                  {Description}   
bbset audit.pdv.checks.PDV_8_7.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_8.Name  {PDV_8_8}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_8.Description {IP Tighten Density Enabled}                                     {Description}   
bbset audit.pdv.checks.PDV_8_8.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_9.Name  {PDV_8_9}                                                        {Name}          
bbset audit.pdv.checks.PDV_8_9.Description {VDD_TEXT}                                                       {Description}   
bbset audit.pdv.checks.PDV_8_9.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_10.Name {PDV_8_10}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_10.Description {VSS_TEXT}                                                       {Description}   
bbset audit.pdv.checks.PDV_8_10.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_11.Name {PDV_8_11}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_11.Description {PAD_TEXT}                                                       {Description}   
bbset audit.pdv.checks.PDV_8_11.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_12.Name {PDV_8_12}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_12.Description {DRC log and summary file}                                       {Description}   
bbset audit.pdv.checks.PDV_8_12.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_13.Name {PDV_8_13}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_13.Description {Node IPreleased (DRC_RES.db, DRC.rep should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_8_13.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_14.Name {PDV_8_14}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_14.Description {Density (base and metal)}                                       {Description}   
bbset audit.pdv.checks.PDV_8_14.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_15.Name {PDV_8_15}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_15.Description {ESD DRCs}                                                       {Description}   
bbset audit.pdv.checks.PDV_8_15.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_16.Name {PDV_8_16}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_16.Description {LUP DRCs}                                                       {Description}   
bbset audit.pdv.checks.PDV_8_16.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_17.Name {PDV_8_17}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_17.Description {TCD DRCs}                                                       {Description}   
bbset audit.pdv.checks.PDV_8_17.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_18.Name {PDV_8_18}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_18.Description {HV DRC}                                                         {Description}   
bbset audit.pdv.checks.PDV_8_18.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_19.Name {PDV_8_19}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_19.Description {Base DRCs}                                                      {Description}   
bbset audit.pdv.checks.PDV_8_19.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_19.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_20.Name {PDV_8_20}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_20.Description {Metal DRCs}                                                     {Description}   
bbset audit.pdv.checks.PDV_8_20.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_20.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_21.Name {PDV_8_21}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_21.Description {Base Layers DRC Warnings}                                       {Description}   
bbset audit.pdv.checks.PDV_8_21.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_21.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_8_22.Name {PDV_8_22}                                                       {Name}          
bbset audit.pdv.checks.PDV_8_22.Description {Metal Layer DRC Report  Warnings}                               {Description}   
bbset audit.pdv.checks.PDV_8_22.Category {DRC}                                                            {Category}      
bbset audit.pdv.checks.PDV_8_22.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_1.Name  {PDV_9_1}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_9_1.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_2.Name  {PDV_9_2}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_9_2.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_3.Name  {PDV_9_3}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_9_3.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_4.Name  {PDV_9_4}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_4.Description {Checksum b/w dummyfill ipreleased & ERC input gds}              {Description}   
bbset audit.pdv.checks.PDV_9_4.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_5.Name  {PDV_9_5}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_9_5.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_6.Name  {PDV_9_6}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_6.Description {No Blackbox}                                                    {Description}   
bbset audit.pdv.checks.PDV_9_6.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_7.Name  {PDV_9_7}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_7.Description {VVDD* text enabled in GDS?}                                     {Description}   
bbset audit.pdv.checks.PDV_9_7.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_8.Name  {PDV_9_8}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_8.Description {ERC/LVS - edtext}                                               {Description}   
bbset audit.pdv.checks.PDV_9_8.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_9.Name  {PDV_9_9}                                                        {Name}          
bbset audit.pdv.checks.PDV_9_9.Description {ERC/LVS - Virtual Connects}                                     {Description}   
bbset audit.pdv.checks.PDV_9_9.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_10.Name {PDV_9_10}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_10.Description {ERC/LVS - Include Files (PSUB2 Polygon addition)}               {Description}   
bbset audit.pdv.checks.PDV_9_10.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_11.Name {PDV_9_11}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_11.Description {POWER NAME}                                                     {Description}   
bbset audit.pdv.checks.PDV_9_11.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_12.Name {PDV_9_12}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_12.Description {GND NAME}                                                       {Description}   
bbset audit.pdv.checks.PDV_9_12.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_13.Name {PDV_9_13}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_13.Description {ERC log and report}                                             {Description}   
bbset audit.pdv.checks.PDV_9_13.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_14.Name {PDV_9_14}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_14.Description {Softchk Results}                                                {Description}   
bbset audit.pdv.checks.PDV_9_14.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_15.Name {PDV_9_15}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_15.Description {Node Ipreleased (calibre_erc.db, lvs_rep.ext should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_9_15.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_16.Name {PDV_9_16}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_16.Description {ERC Results}                                                    {Description}   
bbset audit.pdv.checks.PDV_9_16.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_17.Name {PDV_9_17}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_17.Description {ERC Extraction Results}                                         {Description}   
bbset audit.pdv.checks.PDV_9_17.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_9_18.Name {PDV_9_18}                                                       {Name}          
bbset audit.pdv.checks.PDV_9_18.Description {ERC Warnings}                                                   {Description}   
bbset audit.pdv.checks.PDV_9_18.Category {ERC}                                                            {Category}      
bbset audit.pdv.checks.PDV_9_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_1.Name {PDV_10_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_10_1.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_2.Name {PDV_10_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_10_2.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_3.Name {PDV_10_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_10_3.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_4.Name {PDV_10_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_4.Description {Checksum b/w dummyfill ipreleased & ANT input gds}              {Description}   
bbset audit.pdv.checks.PDV_10_4.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_5.Name {PDV_10_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_5.Description {Antenna log and summary file}                                   {Description}   
bbset audit.pdv.checks.PDV_10_5.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_6.Name {PDV_10_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_6.Description {Node IPreleased (DRC_RES.db, DRC.rep should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_10_6.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_7.Name {PDV_10_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_7.Description {Antenna Results}                                                {Description}   
bbset audit.pdv.checks.PDV_10_7.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_10_8.Name {PDV_10_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_10_8.Description {Antenna Warnings}                                               {Description}   
bbset audit.pdv.checks.PDV_10_8.Category {Antenna}                                                        {Category}      
bbset audit.pdv.checks.PDV_10_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_1.Name {PDV_11_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_11_1.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_2.Name {PDV_11_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_11_2.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_3.Name {PDV_11_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_11_3.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_4.Name {PDV_11_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_4.Description {Checksum b/w dummyfill ipreleased & sram_check input gds}       {Description}   
bbset audit.pdv.checks.PDV_11_4.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_5.Name {PDV_11_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_5.Description {SRAM Log and summary file}                                      {Description}   
bbset audit.pdv.checks.PDV_11_5.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_6.Name {PDV_11_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_6.Description {Node IPreleased (DRC.rep should be present in tag)}             {Description}   
bbset audit.pdv.checks.PDV_11_6.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_11_7.Name {PDV_11_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_11_7.Description {SRAM results}                                                   {Description}   
bbset audit.pdv.checks.PDV_11_7.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdv.checks.PDV_11_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_1.Name {PDV_12_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_12_1.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_2.Name {PDV_12_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_12_2.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_3.Name {PDV_12_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_3.Description {Input Netlist}                                                  {Description}   
bbset audit.pdv.checks.PDV_12_3.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_4.Name {PDV_12_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_4.Description {Checksum b/w v2spi ipreleased & input netlist}                  {Description}   
bbset audit.pdv.checks.PDV_12_4.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_5.Name {PDV_12_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_12_5.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_5_1.Name {PDV_12_5_1}                                                     {Name}          
bbset audit.pdv.checks.PDV_12_5_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdv.checks.PDV_12_5_1.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_5_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_6.Name {PDV_12_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_6.Description {No Blackbox}                                                    {Description}   
bbset audit.pdv.checks.PDV_12_6.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_7.Name {PDV_12_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_7.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdv.checks.PDV_12_7.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_8.Name {PDV_12_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_8.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_12_8.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_9.Name {PDV_12_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_12_9.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_12_9.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_10.Name {PDV_12_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_12_10.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdv.checks.PDV_12_10.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_11.Name {PDV_12_11}                                                      {Name}          
bbset audit.pdv.checks.PDV_12_11.Description {PERC TOPO log and summary file}                                 {Description}   
bbset audit.pdv.checks.PDV_12_11.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_12.Name {PDV_12_12}                                                      {Name}          
bbset audit.pdv.checks.PDV_12_12.Description {Node IPreleased (svdb should be present in tag)}                {Description}   
bbset audit.pdv.checks.PDV_12_12.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_13.Name {PDV_12_13}                                                      {Name}          
bbset audit.pdv.checks.PDV_12_13.Description {PERC TOPO results}                                              {Description}   
bbset audit.pdv.checks.PDV_12_13.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_12_14.Name {PDV_12_14}                                                      {Name}          
bbset audit.pdv.checks.PDV_12_14.Description {PERC TOPO Warnings}                                             {Description}   
bbset audit.pdv.checks.PDV_12_14.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdv.checks.PDV_12_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_1.Name {PDV_13_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_13_1.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_2.Name {PDV_13_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_13_2.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_3.Name {PDV_13_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_3.Description {Bumpoverlay gds used as input?}                                 {Description}   
bbset audit.pdv.checks.PDV_13_3.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_4.Name {PDV_13_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_13_4.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_5.Name {PDV_13_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_5.Description {Checksum b/w bumpoverlay ipreleased & input gds}                {Description}   
bbset audit.pdv.checks.PDV_13_5.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_6.Name {PDV_13_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_6.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_13_6.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_6_1.Name {PDV_13_6_1}                                                     {Name}          
bbset audit.pdv.checks.PDV_13_6_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdv.checks.PDV_13_6_1.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_6_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_7.Name {PDV_13_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_7.Description {Bumpdef edtext}                                                 {Description}   
bbset audit.pdv.checks.PDV_13_7.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_8.Name {PDV_13_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_8.Description {No blackbox}                                                    {Description}   
bbset audit.pdv.checks.PDV_13_8.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_9.Name {PDV_13_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_13_9.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdv.checks.PDV_13_9.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_10.Name {PDV_13_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_10.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdv.checks.PDV_13_10.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_11.Name {PDV_13_11}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_11.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_13_11.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_12.Name {PDV_13_12}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_12.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_13_12.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_13.Name {PDV_13_13}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_13.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdv.checks.PDV_13_13.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_14.Name {PDV_13_14}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_14.Description {PERC LDL log and summary file}                                  {Description}   
bbset audit.pdv.checks.PDV_13_14.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_15.Name {PDV_13_15}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_15.Description {Node IPreleased (dfmdb, perc.rep.ldl.rdb, lvs.rep.ext, TSMC.ESD.gds should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_13_15.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_16.Name {PDV_13_16}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_16.Description {PERC  LDL Results}                                              {Description}   
bbset audit.pdv.checks.PDV_13_16.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_13_17.Name {PDV_13_17}                                                      {Name}          
bbset audit.pdv.checks.PDV_13_17.Description {PERC LDL  Extraction Warnings}                                  {Description}   
bbset audit.pdv.checks.PDV_13_17.Category {PERC LDL}                                                       {Category}      
bbset audit.pdv.checks.PDV_13_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_1.Name {PDV_14_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_14_1.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_2.Name {PDV_14_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_14_2.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_3.Name {PDV_14_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_3.Description {Bumpoverlay gds used as input?}                                 {Description}   
bbset audit.pdv.checks.PDV_14_3.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_4.Name {PDV_14_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_14_4.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_5.Name {PDV_14_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_5.Description {Checksum b/w bumpoverlay ipreleased & input gds}                {Description}   
bbset audit.pdv.checks.PDV_14_5.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_6.Name {PDV_14_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_6.Description {TSMC.ESD.MARK.gds used from corresponding perc_ldl area}        {Description}   
bbset audit.pdv.checks.PDV_14_6.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_7.Name {PDV_14_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_7.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_14_7.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_7_1.Name {PDV_14_7_1}                                                     {Name}          
bbset audit.pdv.checks.PDV_14_7_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdv.checks.PDV_14_7_1.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_7_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_8.Name {PDV_14_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_8.Description {Bumpdef edtext}                                                 {Description}   
bbset audit.pdv.checks.PDV_14_8.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_9.Name {PDV_14_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_14_9.Description {PERC LDL REDUCED LAYERS AP to M5}                               {Description}   
bbset audit.pdv.checks.PDV_14_9.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_10.Name {PDV_14_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_10.Description {No blackbox}                                                    {Description}   
bbset audit.pdv.checks.PDV_14_10.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_11.Name {PDV_14_11}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_11.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdv.checks.PDV_14_11.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_12.Name {PDV_14_12}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_12.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdv.checks.PDV_14_12.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_13.Name {PDV_14_13}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_13.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_14_13.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_14.Name {PDV_14_14}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_14.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_14_14.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_15.Name {PDV_14_15}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_15.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdv.checks.PDV_14_15.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_16.Name {PDV_14_16}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_16.Description {PERC CD log and summary file}                                   {Description}   
bbset audit.pdv.checks.PDV_14_16.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_17.Name {PDV_14_17}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_17.Description {Node IPreleased (perc.rep.cd.rdb, lvs.rep.ext should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_14_17.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_18.Name {PDV_14_18}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_18.Description {PERC  CD Results}                                               {Description}   
bbset audit.pdv.checks.PDV_14_18.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_14_19.Name {PDV_14_19}                                                      {Name}          
bbset audit.pdv.checks.PDV_14_19.Description {PERC CD Extraction Warnings}                                    {Description}   
bbset audit.pdv.checks.PDV_14_19.Category {PERC CD}                                                        {Category}      
bbset audit.pdv.checks.PDV_14_19.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_1.Name {PDV_15_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_15_1.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_2.Name {PDV_15_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_15_2.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_3.Name {PDV_15_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_3.Description {Bumpoverlay gds used as input?}                                 {Description}   
bbset audit.pdv.checks.PDV_15_3.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_4.Name {PDV_15_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_15_4.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_5.Name {PDV_15_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_5.Description {Checksum b/w bumpoverlay ipreleased & input gds}                {Description}   
bbset audit.pdv.checks.PDV_15_5.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_6.Name {PDV_15_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_6.Description {TSMC.ESD.MARK.gds used from corresponding perc_ldl area}        {Description}   
bbset audit.pdv.checks.PDV_15_6.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_7.Name {PDV_15_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_7.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_15_7.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_7_1.Name {PDV_15_7_1}                                                     {Name}          
bbset audit.pdv.checks.PDV_15_7_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdv.checks.PDV_15_7_1.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_7_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_8.Name {PDV_15_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_8.Description {Bumpdef Edtext}                                                 {Description}   
bbset audit.pdv.checks.PDV_15_8.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_9.Name {PDV_15_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_15_9.Description {PERC LDL REDUCED LAYERS AP to M5}                               {Description}   
bbset audit.pdv.checks.PDV_15_9.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_10.Name {PDV_15_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_10.Description {No blackbox}                                                    {Description}   
bbset audit.pdv.checks.PDV_15_10.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_11.Name {PDV_15_11}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_11.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdv.checks.PDV_15_11.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_12.Name {PDV_15_12}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_12.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdv.checks.PDV_15_12.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_13.Name {PDV_15_13}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_13.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_15_13.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_14.Name {PDV_15_14}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_14.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_15_14.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_15.Name {PDV_15_15}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_15.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdv.checks.PDV_15_15.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_16.Name {PDV_15_16}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_16.Description {PERC P2P log and summary file}                                  {Description}   
bbset audit.pdv.checks.PDV_15_16.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_17.Name {PDV_15_17}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_17.Description {Node IPreleased (TSMC.ESD.P2P.rdb,  lvs.rep.ext should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_15_17.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_18.Name {PDV_15_18}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_18.Description {PERC  P2P Results}                                              {Description}   
bbset audit.pdv.checks.PDV_15_18.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_15_19.Name {PDV_15_19}                                                      {Name}          
bbset audit.pdv.checks.PDV_15_19.Description {PERC P2P  Extraction Warnings}                                  {Description}   
bbset audit.pdv.checks.PDV_15_19.Category {PERC P2P}                                                       {Category}      
bbset audit.pdv.checks.PDV_15_19.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_1.Name {PDV_16_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_16_1.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_2.Name {PDV_16_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_16_2.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_3.Name {PDV_16_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_16_3.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_4.Name {PDV_16_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_4.Description {Checksum b/w dummyfill ipreleased & input gds}                  {Description}   
bbset audit.pdv.checks.PDV_16_4.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_5.Name {PDV_16_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_16_5.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_6.Name {PDV_16_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_6.Description {No blackboxes}                                                  {Description}   
bbset audit.pdv.checks.PDV_16_6.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_7.Name {PDV_16_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_7.Description {DFM log and summary file}                                       {Description}   
bbset audit.pdv.checks.PDV_16_7.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_8.Name {PDV_16_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_8.Description {Node IPreleased (DRC_RES.db, DRC.rep should be present in tag)} {Description}   
bbset audit.pdv.checks.PDV_16_8.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_9.Name {PDV_16_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_16_9.Description {DFM Status}                                                     {Description}   
bbset audit.pdv.checks.PDV_16_9.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_16_10.Name {PDV_16_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_16_10.Description {DFM Warnings}                                                   {Description}   
bbset audit.pdv.checks.PDV_16_10.Category {DFM}                                                            {Category}      
bbset audit.pdv.checks.PDV_16_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_1.Name {PDV_17_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_17_1.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_2.Name {PDV_17_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_17_2.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_3.Name {PDV_17_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_3.Description {Input netlist}                                                  {Description}   
bbset audit.pdv.checks.PDV_17_3.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_4.Name {PDV_17_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_4.Description {Input hcell.list}                                               {Description}   
bbset audit.pdv.checks.PDV_17_4.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_4_1.Name {PDV_17_4_1}                                                     {Name}          
bbset audit.pdv.checks.PDV_17_4_1.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_17_4_1.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_4_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_4_2.Name {PDV_17_4_2}                                                     {Name}          
bbset audit.pdv.checks.PDV_17_4_2.Description {Checksum b/w dummyfill ipreleased & input gds}                  {Description}   
bbset audit.pdv.checks.PDV_17_4_2.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_4_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_5.Name {PDV_17_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_5.Description {Checksum b/w v2spi ipreleased & input netlist}                  {Description}   
bbset audit.pdv.checks.PDV_17_5.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_6.Name {PDV_17_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_6.Description {Input hcell.list used equivalent to ipreleased hcell.list}      {Description}   
bbset audit.pdv.checks.PDV_17_6.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_7.Name {PDV_17_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_7.Description {LVS - Virtual Connects}                                         {Description}   
bbset audit.pdv.checks.PDV_17_7.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_8.Name {PDV_17_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_8.Description {LVS - Include Files}                                            {Description}   
bbset audit.pdv.checks.PDV_17_8.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_9.Name {PDV_17_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_17_9.Description {LVS log and report}                                             {Description}   
bbset audit.pdv.checks.PDV_17_9.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_10.Name {PDV_17_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_17_10.Description {Node Ipreleased (svdb, lvs_rep.ext should be present in tag)}   {Description}   
bbset audit.pdv.checks.PDV_17_10.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_11.Name {PDV_17_11}                                                      {Name}          
bbset audit.pdv.checks.PDV_17_11.Description {LVS Status}                                                     {Description}   
bbset audit.pdv.checks.PDV_17_11.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_12.Name {PDV_17_12}                                                      {Name}          
bbset audit.pdv.checks.PDV_17_12.Description {LVS Extraction Results}                                         {Description}   
bbset audit.pdv.checks.PDV_17_12.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_17_13.Name {PDV_17_13}                                                      {Name}          
bbset audit.pdv.checks.PDV_17_13.Description {LVS Warnings}                                                   {Description}   
bbset audit.pdv.checks.PDV_17_13.Category {LVS}                                                            {Category}      
bbset audit.pdv.checks.PDV_17_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_1.Name {PDV_18_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdv.checks.PDV_18_1.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_2.Name {PDV_18_2}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdv.checks.PDV_18_2.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_3.Name {PDV_18_3}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdv.checks.PDV_18_3.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_4.Name {PDV_18_4}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_4.Description {Checksum b/w dummyfill ipreleased & input gds}                  {Description}   
bbset audit.pdv.checks.PDV_18_4.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_5.Name {PDV_18_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdv.checks.PDV_18_5.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_6.Name {PDV_18_6}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_6.Description {Edtext}                                                         {Description}   
bbset audit.pdv.checks.PDV_18_6.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_7.Name {PDV_18_7}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_7.Description {No blackbox}                                                    {Description}   
bbset audit.pdv.checks.PDV_18_7.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_8.Name {PDV_18_8}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_8.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdv.checks.PDV_18_8.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_9.Name {PDV_18_9}                                                       {Name}          
bbset audit.pdv.checks.PDV_18_9.Description {Matrix enabled}                                                 {Description}   
bbset audit.pdv.checks.PDV_18_9.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_10.Name {PDV_18_10}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_10.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdv.checks.PDV_18_10.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_11.Name {PDV_18_11}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_11.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_18_11.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_12.Name {PDV_18_12}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_12.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdv.checks.PDV_18_12.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_13.Name {PDV_18_13}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_13.Description {DESIGN_POWER_NAME}                                              {Description}   
bbset audit.pdv.checks.PDV_18_13.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_15.Name {PDV_18_15}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_15.Description {PERC CNOD log and summary file}                                 {Description}   
bbset audit.pdv.checks.PDV_18_15.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_16.Name {PDV_18_16}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_16.Description {Node IPreleased (svdb, lvs.rep.ext should be present in tag)}   {Description}   
bbset audit.pdv.checks.PDV_18_16.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_17.Name {PDV_18_17}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_17.Description {PERC  CNOD Results}                                             {Description}   
bbset audit.pdv.checks.PDV_18_17.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdv.checks.PDV_18_18.Name {PDV_18_18}                                                      {Name}          
bbset audit.pdv.checks.PDV_18_18.Description {PERC CNOD  Extraction Warnings}                                 {Description}   
bbset audit.pdv.checks.PDV_18_18.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdv.checks.PDV_18_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_99_2.Name {PDV_99_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_99_2.Description {No error in log of ipmerge}                                     {Description}   
bbset audit.pdp.checks.PDV_99_2.Category {ipmerge}                                                        {Category}      
bbset audit.pdp.checks.PDV_99_3.Name {PDV_99_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_99_3.Description {No error in log of dummyfill}                                   {Description}   
bbset audit.pdp.checks.PDV_99_3.Category {dummyfill}                                                      {Category}      
bbset audit.pdp.checks.PDV_99_4.Name {PDV_99_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_99_4.Description {No error in log of postfix}                                     {Description}   
bbset audit.pdp.checks.PDV_99_4.Category {postfix}                                                        {Category}      
bbset audit.pdp.checks.PDV_99_6.Name {PDV_99_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_99_6.Description {sub blocks tags/version used and report the versions}           {Description}   
bbset audit.pdp.checks.PDV_99_6.Category {ipmerge}                                                        {Category}      
bbset audit.pdv.checks.PDV_99_1.Name {PDV_99_1}                                                       {Name}          
bbset audit.pdv.checks.PDV_99_1.Description {XOR BTO Layer Check}                                            {Description}   
bbset audit.pdv.checks.PDV_99_1.Category {PV Signoff review (Results)}                                    {Category}      
bbset audit.pdv.checks.PDV_99_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.pdv.checks.PDV_99_5.Name {PDV_99_5}                                                       {Name}          
bbset audit.pdv.checks.PDV_99_5.Description {PG shorts and Opens}                                            {Description}   
bbset audit.pdv.checks.PDV_99_5.Category {Wrap Audit}                                                     {Category}      
bbset audit.pdp.checks.PDV_1_1.Name  {PDV_1_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_1.Description {TECH LEF}                                                       {Description}   
bbset audit.pdp.checks.PDV_1_1.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_2.Name  {PDV_1_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_2.Description {LEF vs GDS consistency for sub-blocks in SSWRP (Latest lef of sub blocks)} {Description}   
bbset audit.pdp.checks.PDV_1_2.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_3.Name  {PDV_1_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_3.Description {Is there watermark in the PnR gds}                              {Description}   
bbset audit.pdp.checks.PDV_1_3.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_4.Name  {PDV_1_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_4.Description {verilog netlist - is flatten_bus option is used -flatten option is used (FC blocks not used)} {Description}   
bbset audit.pdp.checks.PDV_1_4.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_5.Name  {PDV_1_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_5.Description {All power/gnd names include virtual powers and voltages}        {Description}   
bbset audit.pdp.checks.PDV_1_5.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_6.Name  {PDV_1_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_6.Description {LEF consistenecy check (LEF VS GDS CHECK ) Node IPQA}           {Description}   
bbset audit.pdp.checks.PDV_1_6.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_7.Name  {PDV_1_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_7.Description {Node Ipreleased?}                                               {Description}   
bbset audit.pdp.checks.PDV_1_7.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_8.Name  {PDV_1_8}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_8.Description {PNR chipfinish oasis}                                           {Description}   
bbset audit.pdp.checks.PDV_1_8.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_9.Name  {PDV_1_9}                                                        {Name}          
bbset audit.pdp.checks.PDV_1_9.Description {PNR chipfinish  flat.pg.v.gz}                                   {Description}   
bbset audit.pdp.checks.PDV_1_9.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_1_10.Name {PDV_1_10}                                                       {Name}          
bbset audit.pdp.checks.PDV_1_10.Description {PNR chipfinish hcell.list}                                      {Description}   
bbset audit.pdp.checks.PDV_1_10.Category {General}                                                        {Category}      
bbset audit.pdp.checks.PDV_1_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_1.Name  {PDV_2_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_2_1.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_2.Name  {PDV_2_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_2.Description {DK version}                                                     {Description}   
bbset audit.pdp.checks.PDV_2_2.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_3.Name  {PDV_2_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_3.Description {MDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_2_3.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_4.Name  {PDV_2_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_4.Description {Input pnr GDS}                                                  {Description}   
bbset audit.pdp.checks.PDV_2_4.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_5.Name  {PDV_2_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_5.Description {All GDS coming from either DK or iprelease area( for subblocks - noDK w/ dummyfill merge inputs)} {Description}   
bbset audit.pdp.checks.PDV_2_5.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_6.Name  {PDV_2_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_6.Description {sub blocks tags/version used and report the versions}           {Description}   
bbset audit.pdp.checks.PDV_2_6.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_7.Name  {PDV_2_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_7.Description {Make sure there is no empty reference file.}                    {Description}   
bbset audit.pdp.checks.PDV_2_7.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_8.Name  {PDV_2_8}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_8.Description {Using text2layout option, if so what are the layers adding.}    {Description}   
bbset audit.pdp.checks.PDV_2_8.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_13.Name {PDV_2_13}                                                       {Name}          
bbset audit.pdp.checks.PDV_2_13.Description {Voltage Text from chipfinish merged in ipmerge gds}             {Description}   
bbset audit.pdp.checks.PDV_2_13.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_9.Name  {PDV_2_9}                                                        {Name}          
bbset audit.pdp.checks.PDV_2_9.Description {Ipmerge using strict  true or false.}                           {Description}   
bbset audit.pdp.checks.PDV_2_9.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_10.Name {PDV_2_10}                                                       {Name}          
bbset audit.pdp.checks.PDV_2_10.Description {Ipreleased Path}                                                {Description}   
bbset audit.pdp.checks.PDV_2_10.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_11.Name {PDV_2_11}                                                       {Name}          
bbset audit.pdp.checks.PDV_2_11.Description {ipmerge nodk output}                                            {Description}   
bbset audit.pdp.checks.PDV_2_11.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_2_12.Name {PDV_2_12}                                                       {Name}          
bbset audit.pdp.checks.PDV_2_12.Description {ipmerge output}                                                 {Description}   
bbset audit.pdp.checks.PDV_2_12.Category {IPMERGE}                                                        {Category}      
bbset audit.pdp.checks.PDV_2_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_1.Name  {PDV_3_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_3_1.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_2.Name  {PDV_3_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_2.Description {PDK version}                                                    {Description}   
bbset audit.pdp.checks.PDV_3_2.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_3.Name  {PDV_3_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_3.Description {Capture FEOL and BEOL Rule deck versions.}                      {Description}   
bbset audit.pdp.checks.PDV_3_3.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_4.Name  {PDV_3_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_3_4.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_5.Name  {PDV_3_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_5.Description {Checksum b/w Released path and Runpath gds}                     {Description}   
bbset audit.pdp.checks.PDV_3_5.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_6.Name  {PDV_3_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_6.Description {FEOL & BEOL Generating or Reusing}                              {Description}   
bbset audit.pdp.checks.PDV_3_6.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_7.Name  {PDV_3_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_7.Description {Metal and Base Exclude layers present on Merged GDS. (IPQA)}    {Description}   
bbset audit.pdp.checks.PDV_3_7.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_8.Name  {PDV_3_8}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_8.Description {Switch setting changes in  IP/BLOCK vars}                       {Description}   
bbset audit.pdp.checks.PDV_3_8.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_9.Name  {PDV_3_9}                                                        {Name}          
bbset audit.pdp.checks.PDV_3_9.Description {Exclude layer present on i/p's & sub blocks feol}               {Description}   
bbset audit.pdp.checks.PDV_3_9.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_10.Name {PDV_3_10}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_10.Description {Exclude layer present on i/p's & sub blocks beol}               {Description}   
bbset audit.pdp.checks.PDV_3_10.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_11.Name {PDV_3_11}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_11.Description {Exclude layer present on i/p's & sub blocks via's}              {Description}   
bbset audit.pdp.checks.PDV_3_11.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_12.Name {PDV_3_12}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_12.Description {Exclude layers on 3PIP (dummy fill added on 3PIP ) physical check for now, automation ?} {Description}   
bbset audit.pdp.checks.PDV_3_12.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_13.Name {PDV_3_13}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_13.Description {Max Layer metal fill}                                           {Description}   
bbset audit.pdp.checks.PDV_3_13.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_14.Name {PDV_3_14}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_14.Description {Exclude layers to block dummy fill (include file??)}            {Description}   
bbset audit.pdp.checks.PDV_3_14.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_15.Name {PDV_3_15}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_15.Description {Ipreleased path}                                                {Description}   
bbset audit.pdp.checks.PDV_3_15.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_16.Name {PDV_3_16}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_16.Description {Dummyfill nodk output}                                          {Description}   
bbset audit.pdp.checks.PDV_3_16.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_3_17.Name {PDV_3_17}                                                       {Name}          
bbset audit.pdp.checks.PDV_3_17.Description {Dummyfill output}                                               {Description}   
bbset audit.pdp.checks.PDV_3_17.Category {DUMMYFILL}                                                      {Category}      
bbset audit.pdp.checks.PDV_3_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_4_1.Name  {PDV_4_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_4_1.Description {Chipfin path used}                                              {Description}   
bbset audit.pdp.checks.PDV_4_1.Category {DESIGNIN}                                                       {Category}      
bbset audit.pdp.checks.PDV_4_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_4_2.Name  {PDV_4_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_4_2.Description {Ipreleased path}                                                {Description}   
bbset audit.pdp.checks.PDV_4_2.Category {DESIGNIN}                                                       {Category}      
bbset audit.pdp.checks.PDV_4_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_4_3.Name  {PDV_4_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_4_3.Description {Output Designin hcell list}                                     {Description}   
bbset audit.pdp.checks.PDV_4_3.Category {DESIGNIN}                                                       {Category}      
bbset audit.pdp.checks.PDV_4_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_1.Name  {PDV_5_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_5_1.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_2.Name  {PDV_5_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_2.Description {Input netlist}                                                  {Description}   
bbset audit.pdp.checks.PDV_5_2.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_3.Name  {PDV_5_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_3.Description {Checksum b/w Released path and Runpath netlist}                 {Description}   
bbset audit.pdp.checks.PDV_5_3.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_4.Name  {PDV_5_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_4.Description {No Global and Connect statements.}                              {Description}   
bbset audit.pdp.checks.PDV_5_4.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_5.Name  {PDV_5_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_5.Description {Ipreleased path}                                                {Description}   
bbset audit.pdp.checks.PDV_5_5.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_6.Name  {PDV_5_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_6.Description {v2spi nodk netlist}                                             {Description}   
bbset audit.pdp.checks.PDV_5_6.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_5_7.Name  {PDV_5_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_5_7.Description {v2spi output netlist}                                           {Description}   
bbset audit.pdp.checks.PDV_5_7.Category {V2SPI}                                                          {Category}      
bbset audit.pdp.checks.PDV_5_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_1.Name  {PDV_6_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_1.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_6_1.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_2.Name  {PDV_6_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_2.Description {Input GDS should be dummyfill and not ipmerge GDS}              {Description}   
bbset audit.pdp.checks.PDV_6_2.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_2_1.Name {PDV_6_2_1}                                                      {Name}          
bbset audit.pdp.checks.PDV_6_2_1.Description {Checksum b/w dummyfill ipreleased & bumpoverlay input gds}      {Description}   
bbset audit.pdp.checks.PDV_6_2_1.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_2_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_3.Name  {PDV_6_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_3.Description {Input DEF}                                                      {Description}   
bbset audit.pdp.checks.PDV_6_3.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_4.Name  {PDV_6_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_4.Description {Input Bump_cell LEF}                                            {Description}   
bbset audit.pdp.checks.PDV_6_4.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_5.Name  {PDV_6_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_5.Description {Input Bump_cell GDS}                                            {Description}   
bbset audit.pdp.checks.PDV_6_5.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_6.Name  {PDV_6_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_6.Description {techlef fdi_n3e.map file coming from repo?}                     {Description}   
bbset audit.pdp.checks.PDV_6_6.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_7.Name  {PDV_6_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_7.Description {Input techlef used aligned with pnr}                            {Description}   
bbset audit.pdp.checks.PDV_6_7.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_8.Name  {PDV_6_8}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_8.Description {Node IPreleased (bump.merge.oas.gz)}                            {Description}   
bbset audit.pdp.checks.PDV_6_8.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_6_9.Name  {PDV_6_9}                                                        {Name}          
bbset audit.pdp.checks.PDV_6_9.Description {bump.merge output}                                              {Description}   
bbset audit.pdp.checks.PDV_6_9.Category {Bumpoverlay}                                                    {Category}      
bbset audit.pdp.checks.PDV_6_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_7_1.Name  {PDV_7_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_7_1.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_7_1.Category {POSTFIX}                                                        {Category}      
bbset audit.pdp.checks.PDV_7_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_7_2.Name  {PDV_7_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_7_2.Description {Node Ipreleased}                                                {Description}   
bbset audit.pdp.checks.PDV_7_2.Category {POSTFIX}                                                        {Category}      
bbset audit.pdp.checks.PDV_7_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_7_3.Name  {PDV_7_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_7_3.Description {Postfix output layout}                                          {Description}   
bbset audit.pdp.checks.PDV_7_3.Category {POSTFIX}                                                        {Category}      
bbset audit.pdp.checks.PDV_7_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_7_4.Name  {PDV_7_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_7_4.Description {Postfix output netlist}                                         {Description}   
bbset audit.pdp.checks.PDV_7_4.Category {POSTFIX}                                                        {Category}      
bbset audit.pdp.checks.PDV_7_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_7_5.Name  {PDV_7_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_7_5.Description {Postfix output hcell.list}                                      {Description}   
bbset audit.pdp.checks.PDV_7_5.Category {POSTFIX}                                                        {Category}      
bbset audit.pdp.checks.PDV_7_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_1.Name  {PDV_8_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_8_1.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_2.Name  {PDV_8_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_8_2.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_3.Name  {PDV_8_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_8_3.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_4.Name  {PDV_8_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_4.Description {Checksum b/w dummyfill ipreleased & DRC input gds}              {Description}   
bbset audit.pdp.checks.PDV_8_4.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_5.Name  {PDV_8_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_5.Description {DRC- Voltage Text Inputs (INCLUDE files)}                       {Description}   
bbset audit.pdp.checks.PDV_8_5.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_6.Name  {PDV_8_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_6.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_8_6.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_7.Name  {PDV_8_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_7.Description {No blackboxes}                                                  {Description}   
bbset audit.pdp.checks.PDV_8_7.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_8.Name  {PDV_8_8}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_8.Description {IP Tighten Density Enabled}                                     {Description}   
bbset audit.pdp.checks.PDV_8_8.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_9.Name  {PDV_8_9}                                                        {Name}          
bbset audit.pdp.checks.PDV_8_9.Description {VDD_TEXT}                                                       {Description}   
bbset audit.pdp.checks.PDV_8_9.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_10.Name {PDV_8_10}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_10.Description {VSS_TEXT}                                                       {Description}   
bbset audit.pdp.checks.PDV_8_10.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_11.Name {PDV_8_11}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_11.Description {PAD_TEXT}                                                       {Description}   
bbset audit.pdp.checks.PDV_8_11.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_12.Name {PDV_8_12}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_12.Description {DRC log and summary file}                                       {Description}   
bbset audit.pdp.checks.PDV_8_12.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_13.Name {PDV_8_13}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_13.Description {Node IPreleased (DRC_RES.db, DRC.rep should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_8_13.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_14.Name {PDV_8_14}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_14.Description {Density (base and metal)}                                       {Description}   
bbset audit.pdp.checks.PDV_8_14.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_15.Name {PDV_8_15}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_15.Description {ESD DRCs}                                                       {Description}   
bbset audit.pdp.checks.PDV_8_15.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_16.Name {PDV_8_16}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_16.Description {LUP DRCs}                                                       {Description}   
bbset audit.pdp.checks.PDV_8_16.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_17.Name {PDV_8_17}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_17.Description {TCD DRCs}                                                       {Description}   
bbset audit.pdp.checks.PDV_8_17.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_18.Name {PDV_8_18}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_18.Description {HV DRC}                                                         {Description}   
bbset audit.pdp.checks.PDV_8_18.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_19.Name {PDV_8_19}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_19.Description {Base DRCs}                                                      {Description}   
bbset audit.pdp.checks.PDV_8_19.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_19.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_20.Name {PDV_8_20}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_20.Description {Metal DRCs}                                                     {Description}   
bbset audit.pdp.checks.PDV_8_20.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_20.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_21.Name {PDV_8_21}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_21.Description {Base Layers DRC Warnings}                                       {Description}   
bbset audit.pdp.checks.PDV_8_21.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_21.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_8_22.Name {PDV_8_22}                                                       {Name}          
bbset audit.pdp.checks.PDV_8_22.Description {Metal Layer DRC Report  Warnings}                               {Description}   
bbset audit.pdp.checks.PDV_8_22.Category {DRC}                                                            {Category}      
bbset audit.pdp.checks.PDV_8_22.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_1.Name  {PDV_9_1}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_9_1.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_2.Name  {PDV_9_2}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_9_2.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_3.Name  {PDV_9_3}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_9_3.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_4.Name  {PDV_9_4}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_4.Description {Checksum b/w dummyfill ipreleased & ERC input gds}              {Description}   
bbset audit.pdp.checks.PDV_9_4.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_5.Name  {PDV_9_5}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_9_5.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_6.Name  {PDV_9_6}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_6.Description {No Blackbox}                                                    {Description}   
bbset audit.pdp.checks.PDV_9_6.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_7.Name  {PDV_9_7}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_7.Description {VVDD* text enabled in GDS?}                                     {Description}   
bbset audit.pdp.checks.PDV_9_7.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_8.Name  {PDV_9_8}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_8.Description {ERC/LVS - edtext}                                               {Description}   
bbset audit.pdp.checks.PDV_9_8.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_9.Name  {PDV_9_9}                                                        {Name}          
bbset audit.pdp.checks.PDV_9_9.Description {ERC/LVS - Virtual Connects}                                     {Description}   
bbset audit.pdp.checks.PDV_9_9.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_10.Name {PDV_9_10}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_10.Description {ERC/LVS - Include Files (PSUB2 Polygon addition)}               {Description}   
bbset audit.pdp.checks.PDV_9_10.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_11.Name {PDV_9_11}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_11.Description {POWER NAME}                                                     {Description}   
bbset audit.pdp.checks.PDV_9_11.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_12.Name {PDV_9_12}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_12.Description {GND NAME}                                                       {Description}   
bbset audit.pdp.checks.PDV_9_12.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_13.Name {PDV_9_13}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_13.Description {ERC log and report}                                             {Description}   
bbset audit.pdp.checks.PDV_9_13.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_14.Name {PDV_9_14}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_14.Description {Softchk Results}                                                {Description}   
bbset audit.pdp.checks.PDV_9_14.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_15.Name {PDV_9_15}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_15.Description {Node Ipreleased (calibre_erc.db, lvs_rep.ext should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_9_15.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_16.Name {PDV_9_16}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_16.Description {ERC Results}                                                    {Description}   
bbset audit.pdp.checks.PDV_9_16.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_17.Name {PDV_9_17}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_17.Description {ERC Extraction Results}                                         {Description}   
bbset audit.pdp.checks.PDV_9_17.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_9_18.Name {PDV_9_18}                                                       {Name}          
bbset audit.pdp.checks.PDV_9_18.Description {ERC Warnings}                                                   {Description}   
bbset audit.pdp.checks.PDV_9_18.Category {ERC}                                                            {Category}      
bbset audit.pdp.checks.PDV_9_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_1.Name {PDV_10_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_10_1.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_2.Name {PDV_10_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_10_2.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_3.Name {PDV_10_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_10_3.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_4.Name {PDV_10_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_4.Description {Checksum b/w dummyfill ipreleased & ANT input gds}              {Description}   
bbset audit.pdp.checks.PDV_10_4.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_5.Name {PDV_10_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_5.Description {Antenna log and summary file}                                   {Description}   
bbset audit.pdp.checks.PDV_10_5.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_6.Name {PDV_10_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_6.Description {Node IPreleased (DRC_RES.db, DRC.rep should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_10_6.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_7.Name {PDV_10_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_7.Description {Antenna Results}                                                {Description}   
bbset audit.pdp.checks.PDV_10_7.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_10_8.Name {PDV_10_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_10_8.Description {Antenna Warnings}                                               {Description}   
bbset audit.pdp.checks.PDV_10_8.Category {Antenna}                                                        {Category}      
bbset audit.pdp.checks.PDV_10_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_1.Name {PDV_11_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_11_1.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_2.Name {PDV_11_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_11_2.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_3.Name {PDV_11_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_11_3.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_4.Name {PDV_11_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_4.Description {Checksum b/w dummyfill ipreleased & sram_check input gds}       {Description}   
bbset audit.pdp.checks.PDV_11_4.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_5.Name {PDV_11_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_5.Description {SRAM Log and summary file}                                      {Description}   
bbset audit.pdp.checks.PDV_11_5.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_6.Name {PDV_11_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_6.Description {Node IPreleased (DRC.rep should be present in tag)}             {Description}   
bbset audit.pdp.checks.PDV_11_6.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_11_7.Name {PDV_11_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_11_7.Description {SRAM results}                                                   {Description}   
bbset audit.pdp.checks.PDV_11_7.Category {SRAM_CHECK}                                                     {Category}      
bbset audit.pdp.checks.PDV_11_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_1.Name {PDV_12_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_12_1.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_2.Name {PDV_12_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_12_2.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_3.Name {PDV_12_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_3.Description {Input Netlist}                                                  {Description}   
bbset audit.pdp.checks.PDV_12_3.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_4.Name {PDV_12_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_4.Description {Checksum b/w v2spi ipreleased & input netlist}                  {Description}   
bbset audit.pdp.checks.PDV_12_4.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_5.Name {PDV_12_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_12_5.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_5_1.Name {PDV_12_5_1}                                                     {Name}          
bbset audit.pdp.checks.PDV_12_5_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdp.checks.PDV_12_5_1.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_5_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_6.Name {PDV_12_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_6.Description {No Blackbox}                                                    {Description}   
bbset audit.pdp.checks.PDV_12_6.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_7.Name {PDV_12_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_7.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdp.checks.PDV_12_7.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_8.Name {PDV_12_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_8.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_12_8.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_9.Name {PDV_12_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_12_9.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_12_9.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_10.Name {PDV_12_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_12_10.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdp.checks.PDV_12_10.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_11.Name {PDV_12_11}                                                      {Name}          
bbset audit.pdp.checks.PDV_12_11.Description {PERC TOPO log and summary file}                                 {Description}   
bbset audit.pdp.checks.PDV_12_11.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_12.Name {PDV_12_12}                                                      {Name}          
bbset audit.pdp.checks.PDV_12_12.Description {Node IPreleased (svdb should be present in tag)}                {Description}   
bbset audit.pdp.checks.PDV_12_12.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_13.Name {PDV_12_13}                                                      {Name}          
bbset audit.pdp.checks.PDV_12_13.Description {PERC TOPO results}                                              {Description}   
bbset audit.pdp.checks.PDV_12_13.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_12_14.Name {PDV_12_14}                                                      {Name}          
bbset audit.pdp.checks.PDV_12_14.Description {PERC TOPO Warnings}                                             {Description}   
bbset audit.pdp.checks.PDV_12_14.Category {PERC TOPO}                                                      {Category}      
bbset audit.pdp.checks.PDV_12_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_1.Name {PDV_13_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_13_1.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_2.Name {PDV_13_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_13_2.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_3.Name {PDV_13_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_3.Description {Bumpoverlay gds used as input?}                                 {Description}   
bbset audit.pdp.checks.PDV_13_3.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_4.Name {PDV_13_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_13_4.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_5.Name {PDV_13_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_5.Description {Checksum b/w bumpoverlay ipreleased & input gds}                {Description}   
bbset audit.pdp.checks.PDV_13_5.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_6.Name {PDV_13_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_6.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_13_6.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_6_1.Name {PDV_13_6_1}                                                     {Name}          
bbset audit.pdp.checks.PDV_13_6_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdp.checks.PDV_13_6_1.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_6_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_7.Name {PDV_13_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_7.Description {Bumpdef edtext}                                                 {Description}   
bbset audit.pdp.checks.PDV_13_7.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_8.Name {PDV_13_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_8.Description {No blackbox}                                                    {Description}   
bbset audit.pdp.checks.PDV_13_8.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_9.Name {PDV_13_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_13_9.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdp.checks.PDV_13_9.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_10.Name {PDV_13_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_10.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdp.checks.PDV_13_10.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_11.Name {PDV_13_11}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_11.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_13_11.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_12.Name {PDV_13_12}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_12.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_13_12.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_13.Name {PDV_13_13}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_13.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdp.checks.PDV_13_13.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_14.Name {PDV_13_14}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_14.Description {PERC LDL log and summary file}                                  {Description}   
bbset audit.pdp.checks.PDV_13_14.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_15.Name {PDV_13_15}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_15.Description {Node IPreleased (dfmdb, perc.rep.ldl.rdb, lvs.rep.ext, TSMC.ESD.gds should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_13_15.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_16.Name {PDV_13_16}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_16.Description {PERC  LDL Results}                                              {Description}   
bbset audit.pdp.checks.PDV_13_16.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_13_17.Name {PDV_13_17}                                                      {Name}          
bbset audit.pdp.checks.PDV_13_17.Description {PERC LDL  Extraction Warnings}                                  {Description}   
bbset audit.pdp.checks.PDV_13_17.Category {PERC LDL}                                                       {Category}      
bbset audit.pdp.checks.PDV_13_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_1.Name {PDV_14_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_14_1.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_2.Name {PDV_14_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_14_2.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_3.Name {PDV_14_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_3.Description {Bumpoverlay gds used as input?}                                 {Description}   
bbset audit.pdp.checks.PDV_14_3.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_4.Name {PDV_14_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_14_4.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_5.Name {PDV_14_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_5.Description {Checksum b/w bumpoverlay ipreleased & input gds}                {Description}   
bbset audit.pdp.checks.PDV_14_5.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_6.Name {PDV_14_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_6.Description {TSMC.ESD.MARK.gds used from corresponding perc_ldl area}        {Description}   
bbset audit.pdp.checks.PDV_14_6.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_7.Name {PDV_14_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_7.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_14_7.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_7_1.Name {PDV_14_7_1}                                                     {Name}          
bbset audit.pdp.checks.PDV_14_7_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdp.checks.PDV_14_7_1.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_7_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_8.Name {PDV_14_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_8.Description {Bumpdef edtext}                                                 {Description}   
bbset audit.pdp.checks.PDV_14_8.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_9.Name {PDV_14_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_14_9.Description {PERC LDL REDUCED LAYERS AP to M5}                               {Description}   
bbset audit.pdp.checks.PDV_14_9.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_10.Name {PDV_14_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_10.Description {No blackbox}                                                    {Description}   
bbset audit.pdp.checks.PDV_14_10.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_11.Name {PDV_14_11}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_11.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdp.checks.PDV_14_11.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_12.Name {PDV_14_12}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_12.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdp.checks.PDV_14_12.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_13.Name {PDV_14_13}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_13.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_14_13.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_14.Name {PDV_14_14}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_14.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_14_14.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_15.Name {PDV_14_15}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_15.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdp.checks.PDV_14_15.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_16.Name {PDV_14_16}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_16.Description {PERC CD log and summary file}                                   {Description}   
bbset audit.pdp.checks.PDV_14_16.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_17.Name {PDV_14_17}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_17.Description {Node IPreleased (perc.rep.cd.rdb, lvs.rep.ext should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_14_17.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_18.Name {PDV_14_18}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_18.Description {PERC  CD Results}                                               {Description}   
bbset audit.pdp.checks.PDV_14_18.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_14_19.Name {PDV_14_19}                                                      {Name}          
bbset audit.pdp.checks.PDV_14_19.Description {PERC CD Extraction Warnings}                                    {Description}   
bbset audit.pdp.checks.PDV_14_19.Category {PERC CD}                                                        {Category}      
bbset audit.pdp.checks.PDV_14_19.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_1.Name {PDV_15_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_15_1.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_2.Name {PDV_15_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_15_2.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_3.Name {PDV_15_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_3.Description {Bumpoverlay gds used as input?}                                 {Description}   
bbset audit.pdp.checks.PDV_15_3.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_4.Name {PDV_15_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_4.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_15_4.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_5.Name {PDV_15_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_5.Description {Checksum b/w bumpoverlay ipreleased & input gds}                {Description}   
bbset audit.pdp.checks.PDV_15_5.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_6.Name {PDV_15_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_6.Description {TSMC.ESD.MARK.gds used from corresponding perc_ldl area}        {Description}   
bbset audit.pdp.checks.PDV_15_6.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_7.Name {PDV_15_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_7.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_15_7.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_7_1.Name {PDV_15_7_1}                                                     {Name}          
bbset audit.pdp.checks.PDV_15_7_1.Description {VOLT.INFO file}                                                 {Description}   
bbset audit.pdp.checks.PDV_15_7_1.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_7_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_8.Name {PDV_15_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_8.Description {Bumpdef Edtext}                                                 {Description}   
bbset audit.pdp.checks.PDV_15_8.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_9.Name {PDV_15_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_15_9.Description {PERC LDL REDUCED LAYERS AP to M5}                               {Description}   
bbset audit.pdp.checks.PDV_15_9.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_10.Name {PDV_15_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_10.Description {No blackbox}                                                    {Description}   
bbset audit.pdp.checks.PDV_15_10.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_11.Name {PDV_15_11}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_11.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdp.checks.PDV_15_11.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_12.Name {PDV_15_12}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_12.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdp.checks.PDV_15_12.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_13.Name {PDV_15_13}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_13.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_15_13.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_14.Name {PDV_15_14}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_14.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_15_14.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_14.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_15.Name {PDV_15_15}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_15.Description {GLOBAL_ESD_BUS}                                                 {Description}   
bbset audit.pdp.checks.PDV_15_15.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_16.Name {PDV_15_16}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_16.Description {PERC P2P log and summary file}                                  {Description}   
bbset audit.pdp.checks.PDV_15_16.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_17.Name {PDV_15_17}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_17.Description {Node IPreleased (TSMC.ESD.P2P.rdb,  lvs.rep.ext should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_15_17.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_18.Name {PDV_15_18}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_18.Description {PERC  P2P Results}                                              {Description}   
bbset audit.pdp.checks.PDV_15_18.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_15_19.Name {PDV_15_19}                                                      {Name}          
bbset audit.pdp.checks.PDV_15_19.Description {PERC P2P  Extraction Warnings}                                  {Description}   
bbset audit.pdp.checks.PDV_15_19.Category {PERC P2P}                                                       {Category}      
bbset audit.pdp.checks.PDV_15_19.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_1.Name {PDV_16_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_16_1.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_2.Name {PDV_16_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_16_2.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_3.Name {PDV_16_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_16_3.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_4.Name {PDV_16_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_4.Description {Checksum b/w dummyfill ipreleased & input gds}                  {Description}   
bbset audit.pdp.checks.PDV_16_4.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_5.Name {PDV_16_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_16_5.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_6.Name {PDV_16_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_6.Description {No blackboxes}                                                  {Description}   
bbset audit.pdp.checks.PDV_16_6.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_7.Name {PDV_16_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_7.Description {DFM log and summary file}                                       {Description}   
bbset audit.pdp.checks.PDV_16_7.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_8.Name {PDV_16_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_8.Description {Node IPreleased (DRC_RES.db, DRC.rep should be present in tag)} {Description}   
bbset audit.pdp.checks.PDV_16_8.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_9.Name {PDV_16_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_16_9.Description {DFM Status}                                                     {Description}   
bbset audit.pdp.checks.PDV_16_9.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_16_10.Name {PDV_16_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_16_10.Description {DFM Warnings}                                                   {Description}   
bbset audit.pdp.checks.PDV_16_10.Category {DFM}                                                            {Category}      
bbset audit.pdp.checks.PDV_16_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_1.Name {PDV_17_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_17_1.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_2.Name {PDV_17_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_17_2.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_3.Name {PDV_17_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_3.Description {Input netlist}                                                  {Description}   
bbset audit.pdp.checks.PDV_17_3.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_4.Name {PDV_17_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_4.Description {Input hcell.list}                                               {Description}   
bbset audit.pdp.checks.PDV_17_4.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_4_1.Name {PDV_17_4_1}                                                     {Name}          
bbset audit.pdp.checks.PDV_17_4_1.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_17_4_1.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_4_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_4_2.Name {PDV_17_4_2}                                                     {Name}          
bbset audit.pdp.checks.PDV_17_4_2.Description {Checksum b/w dummyfill ipreleased & input gds}                  {Description}   
bbset audit.pdp.checks.PDV_17_4_2.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_4_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_5.Name {PDV_17_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_5.Description {Checksum b/w v2spi ipreleased & input netlist}                  {Description}   
bbset audit.pdp.checks.PDV_17_5.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_6.Name {PDV_17_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_6.Description {Input hcell.list used equivalent to ipreleased hcell.list}      {Description}   
bbset audit.pdp.checks.PDV_17_6.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_7.Name {PDV_17_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_7.Description {LVS - Virtual Connects}                                         {Description}   
bbset audit.pdp.checks.PDV_17_7.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_8.Name {PDV_17_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_8.Description {LVS - Include Files}                                            {Description}   
bbset audit.pdp.checks.PDV_17_8.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_9.Name {PDV_17_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_17_9.Description {LVS log and report}                                             {Description}   
bbset audit.pdp.checks.PDV_17_9.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_10.Name {PDV_17_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_17_10.Description {Node Ipreleased (svdb, lvs_rep.ext should be present in tag)}   {Description}   
bbset audit.pdp.checks.PDV_17_10.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_11.Name {PDV_17_11}                                                      {Name}          
bbset audit.pdp.checks.PDV_17_11.Description {LVS Status}                                                     {Description}   
bbset audit.pdp.checks.PDV_17_11.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_12.Name {PDV_17_12}                                                      {Name}          
bbset audit.pdp.checks.PDV_17_12.Description {LVS Extraction Results}                                         {Description}   
bbset audit.pdp.checks.PDV_17_12.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_17_13.Name {PDV_17_13}                                                      {Name}          
bbset audit.pdp.checks.PDV_17_13.Description {LVS Warnings}                                                   {Description}   
bbset audit.pdp.checks.PDV_17_13.Category {LVS}                                                            {Category}      
bbset audit.pdp.checks.PDV_17_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_1.Name {PDV_18_1}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_1.Description {Calibre Version}                                                {Description}   
bbset audit.pdp.checks.PDV_18_1.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_1.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_2.Name {PDV_18_2}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_2.Description {PDK Version}                                                    {Description}   
bbset audit.pdp.checks.PDV_18_2.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_2.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_3.Name {PDV_18_3}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_3.Description {Input GDS}                                                      {Description}   
bbset audit.pdp.checks.PDV_18_3.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_3.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_4.Name {PDV_18_4}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_4.Description {Checksum b/w dummyfill ipreleased & input gds}                  {Description}   
bbset audit.pdp.checks.PDV_18_4.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_4.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_5.Name {PDV_18_5}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_5.Description {Any other INCLUDE Files (local hook files)}                     {Description}   
bbset audit.pdp.checks.PDV_18_5.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_5.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_6.Name {PDV_18_6}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_6.Description {Edtext}                                                         {Description}   
bbset audit.pdp.checks.PDV_18_6.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_6.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_7.Name {PDV_18_7}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_7.Description {No blackbox}                                                    {Description}   
bbset audit.pdp.checks.PDV_18_7.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_7.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_8.Name {PDV_18_8}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_8.Description {VIRTUAL CONNECT NAME commented}                                 {Description}   
bbset audit.pdp.checks.PDV_18_8.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_8.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_9.Name {PDV_18_9}                                                       {Name}          
bbset audit.pdp.checks.PDV_18_9.Description {Matrix enabled}                                                 {Description}   
bbset audit.pdp.checks.PDV_18_9.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_9.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_10.Name {PDV_18_10}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_10.Description {POWER_NAME}                                                     {Description}   
bbset audit.pdp.checks.PDV_18_10.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_10.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_11.Name {PDV_18_11}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_11.Description {GROUND_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_18_11.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_11.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_12.Name {PDV_18_12}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_12.Description {SIGNAL_NAME}                                                    {Description}   
bbset audit.pdp.checks.PDV_18_12.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_12.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_13.Name {PDV_18_13}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_13.Description {DESIGN_POWER_NAME}                                              {Description}   
bbset audit.pdp.checks.PDV_18_13.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_13.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_15.Name {PDV_18_15}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_15.Description {PERC CNOD log and summary file}                                 {Description}   
bbset audit.pdp.checks.PDV_18_15.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_15.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_16.Name {PDV_18_16}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_16.Description {Node IPreleased (svdb, lvs.rep.ext should be present in tag)}   {Description}   
bbset audit.pdp.checks.PDV_18_16.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_16.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_17.Name {PDV_18_17}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_17.Description {PERC  CNOD Results}                                             {Description}   
bbset audit.pdp.checks.PDV_18_17.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_17.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.pdp.checks.PDV_18_18.Name {PDV_18_18}                                                      {Name}          
bbset audit.pdp.checks.PDV_18_18.Description {PERC CNOD  Extraction Warnings}                                 {Description}   
bbset audit.pdp.checks.PDV_18_18.Category {PERC CNOD}                                                      {Category}      
bbset audit.pdp.checks.PDV_18_18.Milestone {FP/PRO/BTO/MTO}                                                 {Milestone}     
bbset audit.emir.checks.EMIR_1_1.Name {EMIR_1_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_1_1.Description {BLOCK NAME}                                                     {Description}   
bbset audit.emir.checks.EMIR_1_1.Category {Design Information}                                             {Category}      
bbset audit.emir.checks.EMIR_1_2.Name {EMIR_1_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_1_2.Description {Runs are at Block level or IP level}                            {Description}   
bbset audit.emir.checks.EMIR_1_2.Category {Design Information}                                             {Category}      
bbset audit.emir.checks.EMIR_1_3.Name {EMIR_1_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_1_3.Description {Owner LDAP}                                                     {Description}   
bbset audit.emir.checks.EMIR_1_3.Category {Design Information}                                             {Category}      
bbset audit.emir.checks.EMIR_1_4.Name {EMIR_1_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_1_4.Description {Run Path (s)}                                                   {Description}   
bbset audit.emir.checks.EMIR_1_4.Category {Design Information}                                             {Category}      
bbset audit.emir.checks.EMIR_2_1.Name {EMIR_2_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_1.Description {Design collateral picked from WRAP turnin}                      {Description}   
bbset audit.emir.checks.EMIR_2_1.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_1.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_2_2.Name {EMIR_2_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_2.Description {Design corresponding to signoff db}                             {Description}   
bbset audit.emir.checks.EMIR_2_2.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_2.Milestone {TO}                                                             {Milestone}     
bbset audit.emir.checks.EMIR_2_3.Name {EMIR_2_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_3.Description {TWF and FSDB (if applicable) picked from WRAP turnin}           {Description}   
bbset audit.emir.checks.EMIR_2_3.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_3.Milestone {ALL}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_2_4.Name {EMIR_2_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_4.Description {SDC available for main IR signoff corner}                       {Description}   
bbset audit.emir.checks.EMIR_2_4.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_4.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_2_5.Name {EMIR_2_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_5.Description {SDC has correct loads set on primary ouput ports}               {Description}   
bbset audit.emir.checks.EMIR_2_5.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_5.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_2_6.Name {EMIR_2_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_6.Description {TWF available for main IR signoff corner}                       {Description}   
bbset audit.emir.checks.EMIR_2_6.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_6.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_2_7.Name {EMIR_2_7}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_7.Description {If FSDB used, zero delay gate fsdb}                             {Description}   
bbset audit.emir.checks.EMIR_2_7.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_2_8.Name {EMIR_2_8}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_8.Description {If FSDB used, SDF-annotated FSDB?}                              {Description}   
bbset audit.emir.checks.EMIR_2_8.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_8.Milestone {TO}                                                             {Milestone}     
bbset audit.emir.checks.EMIR_2_9.Name {EMIR_2_9}                                                       {Name}          
bbset audit.emir.checks.EMIR_2_9.Description {If FSDB used, correct windows(s) identified by power team}      {Description}   
bbset audit.emir.checks.EMIR_2_9.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_9.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_2_10.Name {EMIR_2_10}                                                      {Name}          
bbset audit.emir.checks.EMIR_2_10.Description {If FSDB used, generated at correct corner and corresponding clock frequency} {Description}   
bbset audit.emir.checks.EMIR_2_10.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_10.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_2_11.Name {EMIR_2_11}                                                      {Name}          
bbset audit.emir.checks.EMIR_2_11.Description {BumpDEF generated from latest Lassen bumpDEF}                   {Description}   
bbset audit.emir.checks.EMIR_2_11.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_11.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_2_12.Name {EMIR_2_12}                                                      {Name}          
bbset audit.emir.checks.EMIR_2_12.Description {Decaps and filler cells inserted?}                              {Description}   
bbset audit.emir.checks.EMIR_2_12.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_12.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_2_13.Name {EMIR_2_13}                                                      {Name}          
bbset audit.emir.checks.EMIR_2_13.Description {Post route Opportunistic staple vias (V1 and V2) added}         {Description}   
bbset audit.emir.checks.EMIR_2_13.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_13.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_2_14.Name {EMIR_2_14}                                                      {Name}          
bbset audit.emir.checks.EMIR_2_14.Description {SDC TWF and FSDB (if applicable) available at all signoff corners} {Description}   
bbset audit.emir.checks.EMIR_2_14.Category {Design Collaterals}                                             {Category}      
bbset audit.emir.checks.EMIR_2_14.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_3_1.Name {EMIR_3_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_1.Description {CAD recommended DK and PDK used?}                               {Description}   
bbset audit.emir.checks.EMIR_3_1.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_1.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_2.Name {EMIR_3_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_2.Description {CAD recommended pd-tools and project repo used? (Mention version in comments)} {Description}   
bbset audit.emir.checks.EMIR_3_2.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_2.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_3.Name {EMIR_3_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_3.Description {CAD recommended RHSC version used? (Mention version in comments)} {Description}   
bbset audit.emir.checks.EMIR_3_3.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_3.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_4.Name {EMIR_3_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_4.Description {Operating voltage levels are accurate}                          {Description}   
bbset audit.emir.checks.EMIR_3_4.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_4.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_5.Name {EMIR_3_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_5.Description {Default clock frequency is accurate as per corner}              {Description}   
bbset audit.emir.checks.EMIR_3_5.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_5.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_6.Name {EMIR_3_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_6.Description {Runs are FSDB based (only)}                                     {Description}   
bbset audit.emir.checks.EMIR_3_6.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_6.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_3_7.Name {EMIR_3_7}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_7.Description {Runs are combination of FSDB and vectorless}                    {Description}   
bbset audit.emir.checks.EMIR_3_7.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_3_8.Name {EMIR_3_8}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_8.Description {Runs are vectorless only}                                       {Description}   
bbset audit.emir.checks.EMIR_3_8.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_8.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_9.Name {EMIR_3_9}                                                       {Name}          
bbset audit.emir.checks.EMIR_3_9.Description {Running at block-level}                                         {Description}   
bbset audit.emir.checks.EMIR_3_9.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_9.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_3_10.Name {EMIR_3_10}                                                      {Name}          
bbset audit.emir.checks.EMIR_3_10.Description {Running at IP-level (flat)}                                     {Description}   
bbset audit.emir.checks.EMIR_3_10.Category {Run Setup}                                                      {Category}      
bbset audit.emir.checks.EMIR_3_10.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_1.Name {EMIR_4_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_1.Description {LIB coverage is 100% (If not 100%, missing ones are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_1.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_1.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_4_2.Name {EMIR_4_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_2.Description {LEF coverage is 100% (If not 100%, missing ones are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_2.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_2.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_4_3.Name {EMIR_4_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_3.Description {APL/AVM coverage is 100% (If not 100%, missing ones are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_3.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_4.Name {EMIR_4_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_4.Description {GDS2RH coverage is 100% for switches and macros (If not 100%, missing ones are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_4.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_5.Name {EMIR_4_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_5.Description {SPEF coverage is 100% (If not 100%, missing ones are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_5.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_6.Name {EMIR_4_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_6.Description {TWF coverage is 100% (If not 100%, missing ones are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_6.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_6.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_7.Name {EMIR_4_7}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_7.Description {FSDB (if applicable) coverage is 100% (If not 100%, missing ones are reviewed ad waived?)} {Description}   
bbset audit.emir.checks.EMIR_4_7.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_8.Name {EMIR_4_8}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_8.Description {FSDB (if applicable), switching coverage checked and as expected?} {Description}   
bbset audit.emir.checks.EMIR_4_8.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_8.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_4_9.Name {EMIR_4_9}                                                       {Name}          
bbset audit.emir.checks.EMIR_4_9.Description {PLOC/Bumps annotation is 100%}                                  {Description}   
bbset audit.emir.checks.EMIR_4_9.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_9.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_4_10.Name {EMIR_4_10}                                                      {Name}          
bbset audit.emir.checks.EMIR_4_10.Description {If package used, package hooked correctly?}                     {Description}   
bbset audit.emir.checks.EMIR_4_10.Category {Data Integrity Checks}                                          {Category}      
bbset audit.emir.checks.EMIR_4_10.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_1.Name {EMIR_5_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_1.Description {Primary PG opens clean (std-cells, memories, physical/analog IPs)} {Description}   
bbset audit.emir.checks.EMIR_5_1.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_2.Name {EMIR_5_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_2.Description {Primary PG shorts clean (core and memories)}                    {Description}   
bbset audit.emir.checks.EMIR_5_2.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_2.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_3.Name {EMIR_5_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_3.Description {Secondary PG opens clean}                                       {Description}   
bbset audit.emir.checks.EMIR_5_3.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_4.Name {EMIR_5_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_4.Description {ESD cell logical connections are as per expectation (PD CHECK)} {Description}   
bbset audit.emir.checks.EMIR_5_4.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_5.Name {EMIR_5_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_5.Description {Missing vias reviewed and fixed/waived (INNOVUS CHECK)}         {Description}   
bbset audit.emir.checks.EMIR_5_5.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_6.Name {EMIR_5_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_6.Description {SPR < 1000 Ohms for primary PG}                                 {Description}   
bbset audit.emir.checks.EMIR_5_6.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_6.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_7.Name {EMIR_5_7}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_7.Description {SPR < 1600 Ohms for secondary PG}                               {Description}   
bbset audit.emir.checks.EMIR_5_7.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_8.Name {EMIR_5_8}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_8.Description {Reff < 100 Ohms for primary PG}                                 {Description}   
bbset audit.emir.checks.EMIR_5_8.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_8.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_9.Name {EMIR_5_9}                                                       {Name}          
bbset audit.emir.checks.EMIR_5_9.Description {Reff < 500 Ohms for secondary PG}                               {Description}   
bbset audit.emir.checks.EMIR_5_9.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_9.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_10.Name {EMIR_5_10}                                                      {Name}          
bbset audit.emir.checks.EMIR_5_10.Description {All memory PG pins are tapped (INNOVUS CHECK)}                  {Description}   
bbset audit.emir.checks.EMIR_5_10.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_10.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_11.Name {EMIR_5_11}                                                      {Name}          
bbset audit.emir.checks.EMIR_5_11.Description {VDDG pin of all power switches is connected to AON power directly} {Description}   
bbset audit.emir.checks.EMIR_5_11.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_11.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_5_12.Name {EMIR_5_12}                                                      {Name}          
bbset audit.emir.checks.EMIR_5_12.Description {Power-dense logical blocks should not be placed at < 1 bump pitch from edge of the block} {Description}   
bbset audit.emir.checks.EMIR_5_12.Category {Power Grid Robustness Check}                                    {Category}      
bbset audit.emir.checks.EMIR_5_12.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_6_1.Name {EMIR_6_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_6_1.Description {BQM maps are reviewed and no concerns seen}                     {Description}   
bbset audit.emir.checks.EMIR_6_1.Category {BQM}                                                            {Category}      
bbset audit.emir.checks.EMIR_6_1.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_6_2.Name {EMIR_6_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_6_2.Description {Power density is scaled to 1.5x}                                {Description}   
bbset audit.emir.checks.EMIR_6_2.Category {BQM}                                                            {Category}      
bbset audit.emir.checks.EMIR_6_2.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_7_1.Name {EMIR_7_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_1.Description {Static power report cross checked with PTPX estimates}          {Description}   
bbset audit.emir.checks.EMIR_7_1.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_2.Name {EMIR_7_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_2.Description {Memories and power-mgmt cells (LS/ISO/AON) have non-zero toggle rate} {Description}   
bbset audit.emir.checks.EMIR_7_2.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_2.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_3.Name {EMIR_7_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_3.Description {If vectorless, toggle rates are atleast data: 0.12 and clock: 2.0} {Description}   
bbset audit.emir.checks.EMIR_7_3.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_4.Name {EMIR_7_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_4.Description {If vectorless using target_power, min_clock_scale_factor NOT less than 0.7} {Description}   
bbset audit.emir.checks.EMIR_7_4.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_5.Name {EMIR_7_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_5.Description {If vectorless using target_power, total power is atleast 1.5X of PTPX peak power} {Description}   
bbset audit.emir.checks.EMIR_7_5.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_6.Name {EMIR_7_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_6.Description {PTPX peak power is SINGLE cycle worst AND padded for glitches}  {Description}   
bbset audit.emir.checks.EMIR_7_6.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_6.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_7.Name {EMIR_7_7}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_7.Description {If vectorless using target_power,  logfile DOESNT have ""Unable to scale"" warning messages} {Description}   
bbset audit.emir.checks.EMIR_7_7.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_7.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_8.Name {EMIR_7_8}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_8.Description {If vectored, combinational power has been boosted for including glitches} {Description}   
bbset audit.emir.checks.EMIR_7_8.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_8.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_9.Name {EMIR_7_9}                                                       {Name}          
bbset audit.emir.checks.EMIR_7_9.Description {Threshold Used in STA signoff at highest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_9.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_9.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_10.Name {EMIR_7_10}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_10.Description {Is SIR threshold used in STA same as Lassen signoff (NOT higher OR lower)} {Description}   
bbset audit.emir.checks.EMIR_7_10.Category {Static IR (w/o package) at highest operating voltage of IP}     {Category}      
bbset audit.emir.checks.EMIR_7_10.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_11.Name {EMIR_7_11}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_11.Description {IR drop on std cells < threshold at highest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_11.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_11.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_7_12.Name {EMIR_7_12}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_12.Description {IR drop on memories < threshold}                                {Description}   
bbset audit.emir.checks.EMIR_7_12.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_12.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_13.Name {EMIR_7_13}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_13.Description {IR drop on secondaryPG (LVLUO cells) < (tighter) threshold}     {Description}   
bbset audit.emir.checks.EMIR_7_13.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_13.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_7_14.Name {EMIR_7_14}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_14.Description {Threshold Used in STA signoff at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_14.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_14.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_15.Name {EMIR_7_15}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_15.Description {Is SIR threshold used in STA same as Lassen signoff (NOT higher OR lower) at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_15.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_15.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_16.Name {EMIR_7_16}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_16.Description {IR drop on std cells < threshold at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_16.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_16.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_7_17.Name {EMIR_7_17}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_17.Description {IR drop on memories < threshold at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_17.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_17.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_7_18.Name {EMIR_7_18}                                                      {Name}          
bbset audit.emir.checks.EMIR_7_18.Description {IR drop on secondaryPG (LVLUO cells) < (tighter) threshold at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_7_18.Category {Static IR (w/o package)}                                        {Category}      
bbset audit.emir.checks.EMIR_7_18.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_1.Name {EMIR_8_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_1.Description {Dynamic IR uses package model}                                  {Description}   
bbset audit.emir.checks.EMIR_8_1.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_1.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_2.Name {EMIR_8_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_2.Description {DvD reporting done at minWC }                                   {Description}   
bbset audit.emir.checks.EMIR_8_2.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_2.Milestone {Pre-ML3}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_3.Name {EMIR_8_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_3.Description {If vectorless, toggle rates are atleast data: 0.12 and clock: 2.0} {Description}   
bbset audit.emir.checks.EMIR_8_3.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_4.Name {EMIR_8_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_4.Description {If vectorless, switching coverage is close to 100%}             {Description}   
bbset audit.emir.checks.EMIR_8_4.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_5.Name {EMIR_8_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_5.Description {If vectorless,  macros are in high-power state (RRWW)}          {Description}   
bbset audit.emir.checks.EMIR_8_5.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_6.Name {EMIR_8_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_6.Description {Dynamic simulation uses frame_length as 2*clock_period (clock_period: slowest dominant non-DFT clock)} {Description}   
bbset audit.emir.checks.EMIR_8_6.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_6.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_7.Name {EMIR_8_7}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_7.Description {Dynamic simulation is atleast 20 clock-cycles long (clock_period: slowest dominant non-DFT clock)} {Description}   
bbset audit.emir.checks.EMIR_8_7.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_8.Name {EMIR_8_8}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_8.Description {If using package presim is enabled and currents have settled before actual simulation?} {Description}   
bbset audit.emir.checks.EMIR_8_8.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_8.Milestone {}                                                               {Milestone}     
bbset audit.emir.checks.EMIR_8_9.Name {EMIR_8_9}                                                       {Name}          
bbset audit.emir.checks.EMIR_8_9.Description {If vectorless and using 'target-power' power aligned or exceeding with PTPX expectations} {Description}   
bbset audit.emir.checks.EMIR_8_9.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_9.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_10.Name {EMIR_8_10}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_10.Description {Dynamic simulation uses time_step as 10ps}                      {Description}   
bbset audit.emir.checks.EMIR_8_10.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_10.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_11.Name {EMIR_8_11}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_11.Description {effDvD histogram 90% point <= 5% VDD, at highest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_8_11.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_11.Milestone {}                                                               {Milestone}     
bbset audit.emir.checks.EMIR_8_12.Name {EMIR_8_12}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_12.Description {Worst effDvD < 10% VDD, at highest operating voltage of IP}     {Description}   
bbset audit.emir.checks.EMIR_8_12.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_12.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_13.Name {EMIR_8_13}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_13.Description {Worst Clock effDvD <= 5% VDD, at highest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_8_13.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_13.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_14.Name {EMIR_8_14}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_14.Description {DvD drop on secondaryPG nets < Lassen threshold  at highest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_8_14.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_14.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_8_15.Name {EMIR_8_15}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_15.Description {DvD drop on SPiL cells < (tighter) Lassen threshold (applicable for UD SUD and UUD)} {Description}   
bbset audit.emir.checks.EMIR_8_15.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_15.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_16.Name {EMIR_8_16}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_16.Description {Lassen threshold, at lowest operating voltage of IP}            {Description}   
bbset audit.emir.checks.EMIR_8_16.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_16.Milestone {}                                                               {Milestone}     
bbset audit.emir.checks.EMIR_8_17.Name {EMIR_8_17}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_17.Description {DvD drop on std cells < Lassen threshold,  at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_8_17.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_17.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_18.Name {EMIR_8_18}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_18.Description {DvD drop on memories (VDDPE and VDDCE) < Lassen threshold, at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_8_18.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_18.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_19.Name {EMIR_8_19}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_19.Description {DvD drop on secondaryPG nets < Lassen threshold at lowest operating voltage of IP} {Description}   
bbset audit.emir.checks.EMIR_8_19.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_19.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_8_20.Name {EMIR_8_20}                                                      {Name}          
bbset audit.emir.checks.EMIR_8_20.Description {DvD drop on SPiL cells < (tighter) Lassen threshold (applicable for UD} {Description}   
bbset audit.emir.checks.EMIR_8_20.Category {Func-mode Dynamic IR }                                          {Category}      
bbset audit.emir.checks.EMIR_8_20.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_9_1.Name {EMIR_9_1}                                                       {Name}          
bbset audit.emir.checks.EMIR_9_1.Description {Power EM around clock drivers below threshold (100%) on all layers (including M15 and AP)} {Description}   
bbset audit.emir.checks.EMIR_9_1.Category {Power EM}                                                       {Category}      
bbset audit.emir.checks.EMIR_9_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_9_2.Name {EMIR_9_2}                                                       {Name}          
bbset audit.emir.checks.EMIR_9_2.Description {Power EM below threshold (100%) on all layers (including M15 and AP)} {Description}   
bbset audit.emir.checks.EMIR_9_2.Category {Power EM}                                                       {Category}      
bbset audit.emir.checks.EMIR_9_2.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_9_3.Name {EMIR_9_3}                                                       {Name}          
bbset audit.emir.checks.EMIR_9_3.Description {Power EM run at FFGNP, 125c, Cworst_CCworst, highest-voltage, corner for IP} {Description}   
bbset audit.emir.checks.EMIR_9_3.Category {Power EM}                                                       {Category}      
bbset audit.emir.checks.EMIR_9_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_9_4.Name {EMIR_9_4}                                                       {Name}          
bbset audit.emir.checks.EMIR_9_4.Description {Power EM run at most resident corner for IP}                    {Description}   
bbset audit.emir.checks.EMIR_9_4.Category {Power EM}                                                       {Category}      
bbset audit.emir.checks.EMIR_9_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_9_5.Name {EMIR_9_5}                                                       {Name}          
bbset audit.emir.checks.EMIR_9_5.Description {PowerEM used same power scenario as SIR}                        {Description}   
bbset audit.emir.checks.EMIR_9_5.Category {Power EM}                                                       {Category}      
bbset audit.emir.checks.EMIR_9_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_9_6.Name {EMIR_9_6}                                                       {Name}          
bbset audit.emir.checks.EMIR_9_6.Description {Peak Power EM check done for all secPG violators in NP-vectorless DIR} {Description}   
bbset audit.emir.checks.EMIR_9_6.Category {Power EM}                                                       {Category}      
bbset audit.emir.checks.EMIR_9_6.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_1.Name {EMIR_10_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_1.Description {DC Signal EM below threshold (100%) on clock nets}              {Description}   
bbset audit.emir.checks.EMIR_10_1.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_2.Name {EMIR_10_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_2.Description {RMS Signal EM below threshold (100%) on clock nets}             {Description}   
bbset audit.emir.checks.EMIR_10_2.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_2.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_3.Name {EMIR_10_3}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_3.Description {PEAK Signal EM below threshold (100%) on clock nets}            {Description}   
bbset audit.emir.checks.EMIR_10_3.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_4.Name {EMIR_10_4}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_4.Description {DC Signal EM below threshold (100%) on all nets}                {Description}   
bbset audit.emir.checks.EMIR_10_4.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_4.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_5.Name {EMIR_10_5}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_5.Description {RMS Signal EM below threshold (100%) on all nets}               {Description}   
bbset audit.emir.checks.EMIR_10_5.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_5.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_6.Name {EMIR_10_6}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_6.Description {PEAK Signal EM below threshold (100%) on all nets}              {Description}   
bbset audit.emir.checks.EMIR_10_6.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_6.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_7.Name {EMIR_10_7}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_7.Description {Dirty and dropped nets are negligable percentage (If not, all are reviewed and waived?)} {Description}   
bbset audit.emir.checks.EMIR_10_7.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_10_8.Name {EMIR_10_8}                                                      {Name}          
bbset audit.emir.checks.EMIR_10_8.Description {Toggle rates are data: 1.0 and clock: 2.0}                      {Description}   
bbset audit.emir.checks.EMIR_10_8.Category {Signal EM}                                                      {Category}      
bbset audit.emir.checks.EMIR_10_8.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_11_1.Name {EMIR_11_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_11_1.Description {Scan mode is vectorless}                                        {Description}   
bbset audit.emir.checks.EMIR_11_1.Category {Scan-mode Dynamic IR}                                           {Category}      
bbset audit.emir.checks.EMIR_11_1.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_11_2.Name {EMIR_11_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_11_2.Description {For vectorless the sequentials switching coverage should be > 95%} {Description}   
bbset audit.emir.checks.EMIR_11_2.Category {Scan-mode Dynamic IR}                                           {Category}      
bbset audit.emir.checks.EMIR_11_2.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_11_3.Name {EMIR_11_3}                                                      {Name}          
bbset audit.emir.checks.EMIR_11_3.Description {Scan mode is SDF-FSDB with window identified by DFT team}       {Description}   
bbset audit.emir.checks.EMIR_11_3.Category {Scan-mode Dynamic IR}                                           {Category}      
bbset audit.emir.checks.EMIR_11_3.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_11_4.Name {EMIR_11_4}                                                      {Name}          
bbset audit.emir.checks.EMIR_11_4.Description {For vectored the sequentials switching coverage should be ~100%} {Description}   
bbset audit.emir.checks.EMIR_11_4.Category {Scan-mode Dynamic IR}                                           {Category}      
bbset audit.emir.checks.EMIR_11_4.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_11_5.Name {EMIR_11_5}                                                      {Name}          
bbset audit.emir.checks.EMIR_11_5.Description {DvD violations meet same criteria as func-mode}                 {Description}   
bbset audit.emir.checks.EMIR_11_5.Category {Scan-mode Dynamic IR}                                           {Category}      
bbset audit.emir.checks.EMIR_11_5.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_12_1.Name {EMIR_12_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_12_1.Description {Power switch chaining done}                                     {Description}   
bbset audit.emir.checks.EMIR_12_1.Category {Rampup/Inrush }                                                 {Category}      
bbset audit.emir.checks.EMIR_12_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_12_2.Name {EMIR_12_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_12_2.Description {Inrush current and di/dt for PRE-chain is within spec}          {Description}   
bbset audit.emir.checks.EMIR_12_2.Category {Rampup/Inrush }                                                 {Category}      
bbset audit.emir.checks.EMIR_12_2.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_12_3.Name {EMIR_12_3}                                                      {Name}          
bbset audit.emir.checks.EMIR_12_3.Description {Wakeup latency for PRE chain is within spec (STA team CHECK)}   {Description}   
bbset audit.emir.checks.EMIR_12_3.Category {Rampup/Inrush }                                                 {Category}      
bbset audit.emir.checks.EMIR_12_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_12_4.Name {EMIR_12_4}                                                      {Name}          
bbset audit.emir.checks.EMIR_12_4.Description {Wakeup latency for ALL chains is within spec (STA team CHECK)}  {Description}   
bbset audit.emir.checks.EMIR_12_4.Category {Rampup/Inrush }                                                 {Category}      
bbset audit.emir.checks.EMIR_12_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_12_5.Name {EMIR_12_5}                                                      {Name}          
bbset audit.emir.checks.EMIR_12_5.Description {Wakeup latency for macros is within spec (STA team CHECK)}      {Description}   
bbset audit.emir.checks.EMIR_12_5.Category {Rampup/Inrush }                                                 {Category}      
bbset audit.emir.checks.EMIR_12_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_1.Name {EMIR_13_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_1.Description {All voltage nets of IP are present}                             {Description}   
bbset audit.emir.checks.EMIR_13_1.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_2.Name {EMIR_13_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_2.Description {All nets are at correct volatge (aligned with package team)}    {Description}   
bbset audit.emir.checks.EMIR_13_2.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_2.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_3.Name {EMIR_13_3}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_3.Description {Current is time varying (not single point)}                     {Description}   
bbset audit.emir.checks.EMIR_13_3.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_3.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_4.Name {EMIR_13_4}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_4.Description {CPM is lumped model}                                            {Description}   
bbset audit.emir.checks.EMIR_13_4.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_4.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_5.Name {EMIR_13_5}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_5.Description {CPM is per-bump model}                                          {Description}   
bbset audit.emir.checks.EMIR_13_5.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_5.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_6.Name {EMIR_13_6}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_6.Description {CPM model is signoff accurate}                                  {Description}   
bbset audit.emir.checks.EMIR_13_6.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_6.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_7.Name {EMIR_13_7}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_7.Description {Generated using coupled_simulation?}                            {Description}   
bbset audit.emir.checks.EMIR_13_7.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_7.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_13_8.Name {EMIR_13_8}                                                      {Name}          
bbset audit.emir.checks.EMIR_13_8.Description {Decap values as expected and cross checked with package team}   {Description}   
bbset audit.emir.checks.EMIR_13_8.Category {CPM generation}                                                 {Category}      
bbset audit.emir.checks.EMIR_13_8.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_14_1.Name {EMIR_14_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_14_1.Description {IPF based sims done and collateral delivered to Lassen}         {Description}   
bbset audit.emir.checks.EMIR_14_1.Category {Thermal sims}                                                   {Category}      
bbset audit.emir.checks.EMIR_14_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_14_2.Name {EMIR_14_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_14_2.Description {Temp sensor location finalized}                                 {Description}   
bbset audit.emir.checks.EMIR_14_2.Category {Thermal sims}                                                   {Category}      
bbset audit.emir.checks.EMIR_14_2.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_1.Name {EMIR_15_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_1.Description {LB width >= 10um : clamp-to-bump distance 400um (INNOVUS CHECK)} {Description}   
bbset audit.emir.checks.EMIR_15_1.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_1.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_2.Name {EMIR_15_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_2.Description {LB width < 10um : clamp-to-bump distance 200um (INNVOUS CHECK)} {Description}   
bbset audit.emir.checks.EMIR_15_2.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_2.Milestone {ML3}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_3.Name {EMIR_15_3}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_3.Description {PathFinder Connectivity Check}                                  {Description}   
bbset audit.emir.checks.EMIR_15_3.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_3.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_4.Name {EMIR_15_4}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_4.Description {PathFinder R Check (B2C)}                                       {Description}   
bbset audit.emir.checks.EMIR_15_4.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_4.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_5.Name {EMIR_15_5}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_5.Description {PathFinder R check (C2C)}                                       {Description}   
bbset audit.emir.checks.EMIR_15_5.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_5.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_6.Name {EMIR_15_6}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_6.Description {PathFinder R check (B2B)}                                       {Description}   
bbset audit.emir.checks.EMIR_15_6.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_6.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_7.Name {EMIR_15_7}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_7.Description {PathFinder CD Check}                                            {Description}   
bbset audit.emir.checks.EMIR_15_7.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_7.Milestone {ML4}                                                            {Milestone}     
bbset audit.emir.checks.EMIR_15_8.Name {EMIR_15_8}                                                      {Name}          
bbset audit.emir.checks.EMIR_15_8.Description {Lassen ESD waivers reviewed and signed-off (by haggag@ and gauravarya@)} {Description}   
bbset audit.emir.checks.EMIR_15_8.Category {ESD checks}                                                     {Category}      
bbset audit.emir.checks.EMIR_15_8.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_16_1.Name {EMIR_16_1}                                                      {Name}          
bbset audit.emir.checks.EMIR_16_1.Description {RHSC Errors reviewed and waived}                                {Description}   
bbset audit.emir.checks.EMIR_16_1.Category {Reviews}                                                        {Category}      
bbset audit.emir.checks.EMIR_16_1.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_16_2.Name {EMIR_16_2}                                                      {Name}          
bbset audit.emir.checks.EMIR_16_2.Description {RHSC Warnings reviewed and waived}                              {Description}   
bbset audit.emir.checks.EMIR_16_2.Category {Reviews}                                                        {Category}      
bbset audit.emir.checks.EMIR_16_2.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_16_3.Name {EMIR_16_3}                                                      {Name}          
bbset audit.emir.checks.EMIR_16_3.Description {Peer Review}                                                    {Description}   
bbset audit.emir.checks.EMIR_16_3.Category {Reviews}                                                        {Category}      
bbset audit.emir.checks.EMIR_16_3.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_16_4.Name {EMIR_16_4}                                                      {Name}          
bbset audit.emir.checks.EMIR_16_4.Description {CAD Team Review}                                                {Description}   
bbset audit.emir.checks.EMIR_16_4.Category {Reviews}                                                        {Category}      
bbset audit.emir.checks.EMIR_16_4.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.emir.checks.EMIR_16_5.Name {EMIR_16_5}                                                      {Name}          
bbset audit.emir.checks.EMIR_16_5.Description {Final runs logs reports}                                        {Description}   
bbset audit.emir.checks.EMIR_16_5.Category {Reviews}                                                        {Category}      
bbset audit.emir.checks.EMIR_16_5.Milestone {Mock-TO}                                                        {Milestone}     
bbset audit.pnr.checks.PNR_1_1.Name  {PNR_1_1}                                                        {Name}          
bbset audit.pnr.checks.PNR_1_1.Description {DK version}                                                     {Description}   
bbset audit.pnr.checks.PNR_1_1.Category {Versions}                                                       {Category}      
bbset audit.pnr.checks.PNR_1_1.Milestone {ALL}                                                            {Milestone}     
bbset audit.pnr.checks.PNR_1_2.Name  {PNR_1_2}                                                        {Name}          
bbset audit.pnr.checks.PNR_1_2.Description {PDK version}                                                    {Description}   
bbset audit.pnr.checks.PNR_1_2.Category {Versions}                                                       {Category}      
bbset audit.pnr.checks.PNR_1_2.Milestone {ALL}                                                            {Milestone}     
bbset audit.pnr.checks.PNR_1_3.Name  {PNR_1_3}                                                        {Name}          
bbset audit.pnr.checks.PNR_1_3.Description {Tool version}                                                   {Description}   
bbset audit.pnr.checks.PNR_1_3.Category {Versions}                                                       {Category}      
bbset audit.pnr.checks.PNR_1_3.Milestone {ALL}                                                            {Milestone}     
bbset audit.pnr.checks.PNR_3_3.Name  {PNR_3_3}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_3.Description {Review logical module placement with RTL team (attach screenshot)} {Description}   
bbset audit.pnr.checks.PNR_3_3.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_4.Name  {PNR_3_4}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_4.Description {Document all fences/bounds/regions/soft-bounds used with reasons. Check for unnecessary placement restrictions.} {Description}   
bbset audit.pnr.checks.PNR_3_4.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_5.Name  {PNR_3_5}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_5.Description {No Errors/  Warnings reviewed}                                  {Description}   
bbset audit.pnr.checks.PNR_3_5.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_6.Name  {PNR_3_6}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_6.Description {scan def read in / Scan chains identified ?}                    {Description}   
bbset audit.pnr.checks.PNR_3_6.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_6.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_7.Name  {PNR_3_7}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_7.Description {scan reorder switched on ?}                                     {Description}   
bbset audit.pnr.checks.PNR_3_7.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_7.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_8.Name  {PNR_3_8}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_8.Description {Check placement clean - No placement overlaps etc.}             {Description}   
bbset audit.pnr.checks.PNR_3_8.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_8.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_9.Name  {PNR_3_9}                                                        {Name}          
bbset audit.pnr.checks.PNR_3_9.Description {ECF (Early Clock Flow) enabled ? }                              {Description}   
bbset audit.pnr.checks.PNR_3_9.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_9.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_10.Name {PNR_3_10}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_10.Description {Maximum ECF clock skew limited to appropriate value (Recommended : 50ps) ?} {Description}   
bbset audit.pnr.checks.PNR_3_10.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_10.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_11.Name {PNR_3_11}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_11.Description {Review latency report if using early clock flow (ECF) or CCD for large latency pushouts} {Description}   
bbset audit.pnr.checks.PNR_3_11.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_11.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_14.Name {PNR_3_14}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_14.Description {Timing (reg2reg}                                                {Description}   
bbset audit.pnr.checks.PNR_3_14.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_14.Milestone { in2reg}                                                        {Milestone}     
bbset audit.pnr.checks.PNR_3_15.Name {PNR_3_15}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_15.Description {DFT scan trace/DRC clean ?}                                     {Description}   
bbset audit.pnr.checks.PNR_3_15.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_15.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_16.Name {PNR_3_16}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_16.Description {All functional and DFT dont-touch/size-only cells retatined (OCC} {Description}   
bbset audit.pnr.checks.PNR_3_16.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_16.Milestone { clock muxes etc.)}                                             {Milestone}     
bbset audit.pnr.checks.PNR_3_17.Name {PNR_3_17}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_17.Description {Review cell density hotspots (attach screeenshot)}              {Description}   
bbset audit.pnr.checks.PNR_3_17.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_17.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_18.Name {PNR_3_18}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_18.Description {Review congestion score / overflow (attach screenshot)}         {Description}   
bbset audit.pnr.checks.PNR_3_18.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_18.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_19.Name {PNR_3_19}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_19.Description {Review memory channel density  (attach screenshot)}             {Description}   
bbset audit.pnr.checks.PNR_3_19.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_19.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_20.Name {PNR_3_20}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_20.Description {Multibit merging/splitting enabled in placement ?}              {Description}   
bbset audit.pnr.checks.PNR_3_20.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_20.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_21.Name {PNR_3_21}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_21.Description {MBFF %}                                                         {Description}   
bbset audit.pnr.checks.PNR_3_21.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_21.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_24.Name {PNR_3_24}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_24.Description {Cell pareto (Cell refname / count table)  review if using non-standard dont use list} {Description}   
bbset audit.pnr.checks.PNR_3_24.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_24.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_25.Name {PNR_3_25}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_25.Description {Standard cell Utilization % ? }                                 {Description}   
bbset audit.pnr.checks.PNR_3_25.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_25.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_26.Name {PNR_3_26}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_26.Description {VT% }                                                           {Description}   
bbset audit.pnr.checks.PNR_3_26.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_26.Milestone { VT usage as per spec/plan ?}                                   {Milestone}     
bbset audit.pnr.checks.PNR_3_27.Name {PNR_3_27}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_27.Description {Spot check timing reports for correct derate/clock uncertainty/extra placement margins} {Description}   
bbset audit.pnr.checks.PNR_3_27.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_27.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_32.Name {PNR_3_32}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_32.Description {Activity aware placement enabled ? Right Leakage to dynamic ratios (LDR) applied ?} {Description}   
bbset audit.pnr.checks.PNR_3_32.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_32.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_33.Name {PNR_3_33}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_33.Description {NDR for critical paths enabled  }                               {Description}   
bbset audit.pnr.checks.PNR_3_33.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_33.Milestone {document NDRs used}                                             {Milestone}     
bbset audit.pnr.checks.PNR_3_34.Name {PNR_3_34}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_34.Description {Keepouts / decaps around top clock / pushdown cells}            {Description}   
bbset audit.pnr.checks.PNR_3_34.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_34.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_35.Name {PNR_3_35}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_35.Description {Extra uncertainty at placement (to account for CTS / route) applied for all clocks ?} {Description}   
bbset audit.pnr.checks.PNR_3_35.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_35.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_36.Name {PNR_3_36}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_36.Description {Review dont touch instance list}                                {Description}   
bbset audit.pnr.checks.PNR_3_36.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_36.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_37.Name {PNR_3_37}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_37.Description {Dynamic power at placement within spec ?}                       {Description}   
bbset audit.pnr.checks.PNR_3_37.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_37.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_38.Name {PNR_3_38}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_38.Description {Extra ICG path margin applied ? (extra safety margin for ECF flows)} {Description}   
bbset audit.pnr.checks.PNR_3_38.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_38.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_40.Name {PNR_3_40}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_40.Description {LEC clean ? }                                                   {Description}   
bbset audit.pnr.checks.PNR_3_40.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_40.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_41.Name {PNR_3_41}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_41.Description {VCLP clean ? }                                                  {Description}   
bbset audit.pnr.checks.PNR_3_41.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_41.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_1.Name  {PNR_4_1}                                                        {Name}          
bbset audit.pnr.checks.PNR_4_1.Description {No unintended buffering in the clock tree (pre-root clockgate } {Description}   
bbset audit.pnr.checks.PNR_4_1.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_1.Milestone { pre-OCC mux etc.)}                                             {Milestone}     
bbset audit.pnr.checks.PNR_4_2.Name  {PNR_4_2}                                                        {Name}          
bbset audit.pnr.checks.PNR_4_2.Description {Latency (all domainant corner)}                                 {Description}   
bbset audit.pnr.checks.PNR_4_2.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_2.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_3.Name  {PNR_4_3}                                                        {Name}          
bbset audit.pnr.checks.PNR_4_3.Description {Local skew histogram (CTS corners)}                             {Description}   
bbset audit.pnr.checks.PNR_4_3.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_4.Name  {PNR_4_4}                                                        {Name}          
bbset audit.pnr.checks.PNR_4_4.Description {Skew (all dominant corners)}                                    {Description}   
bbset audit.pnr.checks.PNR_4_4.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_5.Name  {PNR_4_5}                                                        {Name}          
bbset audit.pnr.checks.PNR_4_5.Description {IP level clock gate/ mux  }                                     {Description}   
bbset audit.pnr.checks.PNR_4_5.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_5.Milestone {  global clock distribution cell placement.}                    {Milestone}     
bbset audit.pnr.checks.PNR_4_8.Name  {PNR_4_8}                                                        {Name}          
bbset audit.pnr.checks.PNR_4_8.Description {Right clock cell types used (Clock gate types/ Decap CTS cells as decided ) etc. (Eg: MHICG} {Description}   
bbset audit.pnr.checks.PNR_4_8.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_8.Milestone { DECAPINV etc)}                                                 {Milestone}     
bbset audit.pnr.checks.PNR_4_10.Name {PNR_4_10}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_10.Description {Correct placement of root clock muxes / architectural ICGs}     {Description}   
bbset audit.pnr.checks.PNR_4_10.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_10.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_11.Name {PNR_4_11}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_11.Description {Max/min/average clock tree depth}                               {Description}   
bbset audit.pnr.checks.PNR_4_11.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_11.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_12.Name {PNR_4_12}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_12.Description {Clock cell Vt usage (ensure only vt type is used across CTS & BLK level)} {Description}   
bbset audit.pnr.checks.PNR_4_12.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_12.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_13.Name {PNR_4_13}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_13.Description {No Errors/  Warnings reviewed}                                  {Description}   
bbset audit.pnr.checks.PNR_4_13.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_13.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_14.Name {PNR_4_14}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_14.Description {Timing across all pathgroups/corners (reg2reg}                  {Description}   
bbset audit.pnr.checks.PNR_4_14.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_14.Milestone { in2reg}                                                        {Milestone}     
bbset audit.pnr.checks.PNR_4_15.Name {PNR_4_15}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_15.Description {CTS scenarios enabled ?}                                        {Description}   
bbset audit.pnr.checks.PNR_4_15.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_15.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_16.Name {PNR_4_16}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_16.Description {clock tree trunk plan/implementation (picture)}                 {Description}   
bbset audit.pnr.checks.PNR_4_16.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_16.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_17.Name {PNR_4_17}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_17.Description {DFT simulations/Scan trace pass}                                {Description}   
bbset audit.pnr.checks.PNR_4_17.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_17.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_18.Name {PNR_4_18}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_18.Description {Spot check timing reports for correct derate/clock uncertainty/extra margins} {Description}   
bbset audit.pnr.checks.PNR_4_18.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_18.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_20.Name {PNR_4_20}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_20.Description {Are scan paths enabled for hold fixing ?}                       {Description}   
bbset audit.pnr.checks.PNR_4_20.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_20.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_21.Name {PNR_4_21}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_21.Description {Hold fixing enabled ? Review un-fixed hold violations /}        {Description}   
bbset audit.pnr.checks.PNR_4_21.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_21.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_22.Name {PNR_4_22}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_22.Description {Extra uncertainty at CTS applied for all clocks ?}              {Description}   
bbset audit.pnr.checks.PNR_4_22.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_22.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_23.Name {PNR_4_23}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_23.Description {Document clock tran limits used for construction}               {Description}   
bbset audit.pnr.checks.PNR_4_23.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_23.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_24.Name {PNR_4_24}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_24.Description {No large magniture clock tran violations  }                     {Description}   
bbset audit.pnr.checks.PNR_4_24.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_24.Milestone { count of clock tran violations < ~50 ( reason out if not met)} {Milestone}     
bbset audit.pnr.checks.PNR_4_26.Name {PNR_4_26}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_26.Description {min-max routing layers set for clock nets ?}                    {Description}   
bbset audit.pnr.checks.PNR_4_26.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_26.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_27.Name {PNR_4_27}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_27.Description {Correct NDRs used for top/trunk/leaf ?}                         {Description}   
bbset audit.pnr.checks.PNR_4_27.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_27.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_28.Name {PNR_4_28}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_28.Description {All slow clocks/clock feedthroughs defined/consructed properly} {Description}   
bbset audit.pnr.checks.PNR_4_28.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_28.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_29.Name {PNR_4_29}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_29.Description {Appropriate inter clock balancing constraints applied ?}        {Description}   
bbset audit.pnr.checks.PNR_4_29.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_29.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_30.Name {PNR_4_30}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_30.Description {High freq clocks - Via ladders/stack used on clock cells ?}     {Description}   
bbset audit.pnr.checks.PNR_4_30.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_30.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_31.Name {PNR_4_31}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_31.Description {Review ungated power contributors thoroughly - check for gate placement } {Description}   
bbset audit.pnr.checks.PNR_4_31.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_31.Milestone { unnecessary buffering on the root etc.}                        {Milestone}     
bbset audit.pnr.checks.PNR_4_32.Name {PNR_4_32}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_32.Description {For multipoint CTS - Review MTAP/HTREE clock summary latency/skew within taps } {Description}   
bbset audit.pnr.checks.PNR_4_32.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_32.Milestone { tap sink distribution}                                         {Milestone}     
bbset audit.pnr.checks.PNR_4_33.Name {PNR_4_33}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_33.Description {CTS nets layer and NDR adherence review}                        {Description}   
bbset audit.pnr.checks.PNR_4_33.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_33.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_34.Name {PNR_4_34}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_34.Description {CTS fanout and cts net length histogram review}                 {Description}   
bbset audit.pnr.checks.PNR_4_34.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_34.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_35.Name {PNR_4_35}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_35.Description {No unclonable cell warning in place/CTS (check_design -type cts and check for warning ""CHKCTS"" warning)} {Description}   
bbset audit.pnr.checks.PNR_4_35.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_35.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_36.Name {PNR_4_36}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_36.Description {Clock shield review - are all the shields inserted ?}           {Description}   
bbset audit.pnr.checks.PNR_4_36.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_36.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_39.Name {PNR_4_39}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_39.Description {H-tree Antenna }                                                {Description}   
bbset audit.pnr.checks.PNR_4_39.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_39.Milestone { EM/IR clean (or under control) }                               {Milestone}     
bbset audit.pnr.checks.PNR_4_40.Name {PNR_4_40}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_40.Description {Setup WNS/TNS/NVP meets targets at CTS ?}                       {Description}   
bbset audit.pnr.checks.PNR_4_40.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_40.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_1.Name  {PNR_5_1}                                                        {Name}          
bbset audit.pnr.checks.PNR_5_1.Description {Overall congestion at last stage / overflow / hotspot score}    {Description}   
bbset audit.pnr.checks.PNR_5_1.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_1.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_4.Name  {PNR_5_4}                                                        {Name}          
bbset audit.pnr.checks.PNR_5_4.Description {shorts/opens}                                                   {Description}   
bbset audit.pnr.checks.PNR_5_4.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_5.Name  {PNR_5_5}                                                        {Name}          
bbset audit.pnr.checks.PNR_5_5.Description {DRC counts  - check for hotspots (Attach scrrenshot)}           {Description}   
bbset audit.pnr.checks.PNR_5_5.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_7.Name  {PNR_5_7}                                                        {Name}          
bbset audit.pnr.checks.PNR_5_7.Description {Hold timing (reg2reg}                                           {Description}   
bbset audit.pnr.checks.PNR_5_7.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_7.Milestone { in2reg}                                                        {Milestone}     
bbset audit.pnr.checks.PNR_5_8.Name  {PNR_5_8}                                                        {Name}          
bbset audit.pnr.checks.PNR_5_8.Description {Setup timing (reg2reg}                                          {Description}   
bbset audit.pnr.checks.PNR_5_8.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_8.Milestone { in2reg}                                                        {Milestone}     
bbset audit.pnr.checks.PNR_5_9.Name  {PNR_5_9}                                                        {Name}          
bbset audit.pnr.checks.PNR_5_9.Description {Max Wirelength (<150u or appropriate limit) excluding waived special cases (If found ensure tran } {Description}   
bbset audit.pnr.checks.PNR_5_9.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_9.Milestone { SI & Antenna are met)}                                         {Milestone}     
bbset audit.pnr.checks.PNR_5_10.Name {PNR_5_10}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_10.Description {Check SI on clock nets}                                         {Description}   
bbset audit.pnr.checks.PNR_5_10.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_10.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_11.Name {PNR_5_11}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_11.Description {DFT simulations pass ?}                                         {Description}   
bbset audit.pnr.checks.PNR_5_11.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_11.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_13.Name {PNR_5_13}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_13.Description {Signoff timing correlates with PNR timing ?}                    {Description}   
bbset audit.pnr.checks.PNR_5_13.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_13.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_14.Name {PNR_5_14}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_14.Description {DRV violation review}                                           {Description}   
bbset audit.pnr.checks.PNR_5_14.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_14.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_15.Name {PNR_5_15}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_15.Description {LEC clean ? }                                                   {Description}   
bbset audit.pnr.checks.PNR_5_15.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_15.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_16.Name {PNR_5_16}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_16.Description {VCLP clean ? }                                                  {Description}   
bbset audit.pnr.checks.PNR_5_16.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_16.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_19.Name {PNR_5_19}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_19.Description {Min/max/average clock stages (if using useful skew optimization enabled in route)} {Description}   
bbset audit.pnr.checks.PNR_5_19.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_19.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_20.Name {PNR_5_20}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_20.Description {Via pillars enabled for timing critical paths ? }               {Description}   
bbset audit.pnr.checks.PNR_5_20.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_20.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_21.Name {PNR_5_21}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_21.Description {Timing aware routing enabled ?}                                 {Description}   
bbset audit.pnr.checks.PNR_5_21.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_21.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_22.Name {PNR_5_22}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_22.Description {SI aware routing / SI avoidance enabled ?}                      {Description}   
bbset audit.pnr.checks.PNR_5_22.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_22.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_23.Name {PNR_5_23}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_23.Description {NDR for critical signals }                                      {Description}   
bbset audit.pnr.checks.PNR_5_23.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_23.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_24.Name {PNR_5_24}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_24.Description {Standard cell Utilization % (<70% exclusing macros/channels recommended)} {Description}   
bbset audit.pnr.checks.PNR_5_24.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_24.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_25.Name {PNR_5_25}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_25.Description {Visual check for DRC hotspots - cell utilization  }             {Description}   
bbset audit.pnr.checks.PNR_5_25.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_25.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_26.Name {PNR_5_26}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_26.Description {Spare cells placed as per the spare cell grid guidelines ? VT/size location at Route matches Floorplan ?} {Description}   
bbset audit.pnr.checks.PNR_5_26.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_26.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_27.Name {PNR_5_27}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_27.Description {Hold fixing enabled ? Review un-fixed hold violations}          {Description}   
bbset audit.pnr.checks.PNR_5_27.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_27.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_28.Name {PNR_5_28}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_28.Description {Hold buffer count/area increase during hold fixing ( are these on expected lines ) ? Right VT/cell types used for hold fixing ?} {Description}   
bbset audit.pnr.checks.PNR_5_28.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_28.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_29.Name {PNR_5_29}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_29.Description {Custom routes reviewed with the IP team (e.g. PLL signal routing?)} {Description}   
bbset audit.pnr.checks.PNR_5_29.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_29.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_30.Name {PNR_5_30}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_30.Description {AON routing done ? AON SPR checks clean.( document violations)} {Description}   
bbset audit.pnr.checks.PNR_5_30.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_30.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_31.Name {PNR_5_31}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_31.Description {Redundant Via % on PG}                                          {Description}   
bbset audit.pnr.checks.PNR_5_31.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_31.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_32.Name {PNR_5_32}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_32.Description {Check existence of route blockage at boundary}                  {Description}   
bbset audit.pnr.checks.PNR_5_32.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_32.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_35.Name {PNR_5_35}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_35.Description {Check distance between buffers and IO terminals < [bbget .pnr.check.BufferToIOMaxDistance -quiet]} {Description}   
bbset audit.pnr.checks.PNR_5_35.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_35.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_1.Name  {PNR_6_1}                                                        {Name}          
bbset audit.pnr.checks.PNR_6_1.Description {Wrap tag}                                                       {Description}   
bbset audit.pnr.checks.PNR_6_1.Category {Release}                                                        {Category}      
bbset audit.pnr.checks.PNR_6_1.Milestone {ALL}                                                            {Milestone}     
bbset audit.pnr.checks.PNR_6_3.Name  {PNR_6_3}                                                        {Name}          
bbset audit.pnr.checks.PNR_6_3.Description {Watermark cell present / named appropriately ?}                 {Description}   
bbset audit.pnr.checks.PNR_6_3.Category {Release}                                                        {Category}      
bbset audit.pnr.checks.PNR_6_3.Milestone {ALL}                                                            {Milestone}     
bbset audit.pnr.checks.PNR_6_5.Name  {PNR_6_5}                                                        {Name}          
bbset audit.pnr.checks.PNR_6_5.Description {DCAP cell types, counts, and snapshot of placement distribution} {Description}   
bbset audit.pnr.checks.PNR_6_5.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_5.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_6_6.Name  {PNR_6_6}                                                        {Name}          
bbset audit.pnr.checks.PNR_6_6.Description {Staple via existance}                                           {Description}   
bbset audit.pnr.checks.PNR_6_6.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_6.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_6_12.Name {PNR_6_12}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_12.Description {Antenna violations}                                             {Description}   
bbset audit.pnr.checks.PNR_6_12.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_12.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_6_16.Name {PNR_6_16}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_16.Description {Check IO buffer cell type and drive. Buffer don't use cell type = {[bbget .pnr.check.IOBufferDontUseCellType -quiet]}. Input Buffer Drive Constraint > D[bbget .pnr.check.MinInputBufferDriveStrength -quiet]. Output Buffer Drive Constraint > D[bbget .pnr.check.MinOutputBufferDriveStrength -quiet]} {Description}   
bbset audit.pnr.checks.PNR_6_16.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_16.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_18.Name {PNR_6_18}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_18.Description {Check net length between buffers and IO terminals < [bbget .pnr.check.BufferToIOMaxDistance -quiet]} {Description}   
bbset audit.pnr.checks.PNR_6_18.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_18.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_19.Name {PNR_6_19}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_19.Description {Check no existence of 'set_scope /' in output UPF file}         {Description}   
bbset audit.pnr.checks.PNR_6_19.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_19.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_20.Name {PNR_6_20}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_20.Description {Check no existence of PIN section for internal power pins in output LEF file} {Description}   
bbset audit.pnr.checks.PNR_6_20.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_20.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_21.Name {PNR_6_21}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_21.Description {Check existence of geometry for all pins in output LEF file}    {Description}   
bbset audit.pnr.checks.PNR_6_21.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_21.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_22.Name {PNR_6_22}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_22.Description {Check existence of antenna infomation for non-PG pins in output LEF file} {Description}   
bbset audit.pnr.checks.PNR_6_22.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_22.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_23.Name {PNR_6_23}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_23.Description {Check no existence of create_supply_port for internal power pins in output UPF file} {Description}   
bbset audit.pnr.checks.PNR_6_23.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_23.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_24.Name {PNR_6_24}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_24.Description {Output netlist for v2spi(.flat.pg.v.gz) has no assign statement} {Description}   
bbset audit.pnr.checks.PNR_6_24.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_24.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_25.Name {PNR_6_25}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_25.Description {Desgin floorplan is the same as floorplan pushown. bob variable .pnr.check.FloorplanPushdownDef should be specified to point to floorplan pushdown def} {Description}   
bbset audit.pnr.checks.PNR_6_25.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_25.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_26.Name {PNR_6_26}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_26.Description {verilog and lef port are matched}                               {Description}   
bbset audit.pnr.checks.PNR_6_26.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_26.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_27.Name {PNR_6_27}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_27.Description {R*C of IO nets < [bbget .pnr.check.MaxIONetsRC -quiet]}         {Description}   
bbset audit.pnr.checks.PNR_6_27.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_27.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_28.Name {PNR_6_28}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_28.Description {Timing QoR on Inputs/Outputs path setup/hold violation < Tcycle * [bbget .pnr.check.IOTimingSlackThreshold -quiet] with line of sight to closure in all scenario} {Description}   
bbset audit.pnr.checks.PNR_6_28.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_28.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_29.Name {PNR_6_29}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_29.Description {Top level PG offset in Chipfinish. Offset number should be set in bob variable {[bbget .pnr.check.PGVSSOffsetVariables -quiet]} or offset set file should be specified in [bbget .pnr.check.PGVSSOffsetFileVariable -quiet] to get the golden offset value} {Description}   
bbset audit.pnr.checks.PNR_6_29.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_29.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_30.Name {PNR_6_30}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_30.Description {gspan input clock insertion delay < [bbget .pnr.check.GspanInputClockLatencyConstraint -quiet]ns} {Description}   
bbset audit.pnr.checks.PNR_6_30.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_30.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_31.Name {PNR_6_31}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_31.Description {output gspan clock latency post point of divergence < [bbget .pnr.check.GspanOutputClockLatencyConstraint -quiet]ns} {Description}   
bbset audit.pnr.checks.PNR_6_31.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_31.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_32.Name {PNR_6_32}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_32.Description {Total accumulated Clock xtalk delay for outgoing gspan clocks < [bbget .pnr.check.GspanOutputClockCrosstalkConstraint -quiet]ns} {Description}   
bbset audit.pnr.checks.PNR_6_32.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_32.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_34.Name {PNR_6_34}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_34.Description {RDL layer: [bbget .pnr.BumpPhysicalPinLayer] in the LEF file need to be reviewed} {Description}   
bbset audit.pnr.checks.PNR_6_34.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_34.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_35.Name {PNR_6_35}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_35.Description {Check PG Ring in the design}                                    {Description}   
bbset audit.pnr.checks.PNR_6_35.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_35.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_6_36.Name {PNR_6_36}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_36.Description {Check IO buffer cell type meet spec file: [bbget .pnr.check.IOBufferPushdownCsv]} {Description}   
bbset audit.pnr.checks.PNR_6_36.Category {Chipfinish}                                                     {Category}      
bbset audit.pnr.checks.PNR_6_36.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_3.Name  {PNR_2_3}                                                        {Name}          
bbset audit.pnr.checks.PNR_2_3.Description {Memory channel reviewed for minimum width /power grid tappings/ congestion} {Description}   
bbset audit.pnr.checks.PNR_2_3.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_4.Name  {PNR_2_4}                                                        {Name}          
bbset audit.pnr.checks.PNR_2_4.Description {Inner/outer shape reviewed . Core to IO spacing adequate ?}     {Description}   
bbset audit.pnr.checks.PNR_2_4.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_5.Name  {PNR_2_5}                                                        {Name}          
bbset audit.pnr.checks.PNR_2_5.Description {Block boundary PG shield inserted/reviewed ?}                   {Description}   
bbset audit.pnr.checks.PNR_2_5.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_15.Name {PNR_2_15}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_15.Description {All power switches part of switch chain }                       {Description}   
bbset audit.pnr.checks.PNR_2_15.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_15.Milestone { document Hammer/trickle chain lengths}                         {Milestone}     
bbset audit.pnr.checks.PNR_2_16.Name {PNR_2_16}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_16.Description {spare cell preplaced as per regular placement grid / distribution ( attach screenshot)} {Description}   
bbset audit.pnr.checks.PNR_2_16.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_16.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_19.Name {PNR_2_19}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_19.Description {Pin placement frozen/reviewed with SOC and block owners ?}      {Description}   
bbset audit.pnr.checks.PNR_2_19.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_19.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_23.Name {PNR_2_23}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_23.Description {checkFPlan}                                                     {Description}   
bbset audit.pnr.checks.PNR_2_23.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_23.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_25.Name {PNR_2_25}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_25.Description {Visually review PG connection to Smallest and largest Memory}   {Description}   
bbset audit.pnr.checks.PNR_2_25.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_25.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_27.Name {PNR_2_27}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_27.Description {PG opens/shorts clean}                                          {Description}   
bbset audit.pnr.checks.PNR_2_27.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_27.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_28.Name {PNR_2_28}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_28.Description {Additional power near known IR areas (magnet placement IO buffers } {Description}   
bbset audit.pnr.checks.PNR_2_28.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_28.Milestone { high utilization channels )}                                   {Milestone}     
bbset audit.pnr.checks.PNR_2_29.Name {PNR_2_29}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_29.Description {Memory orientation R0/R180 }                                    {Description}   
bbset audit.pnr.checks.PNR_2_29.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_29.Milestone { abutment riles followed as per IP spec ?}                      {Milestone}     
bbset audit.pnr.checks.PNR_2_31.Name {PNR_2_31}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_31.Description {Custom routes reviewed with the IP team (e.g. PLL signal routing?)} {Description}   
bbset audit.pnr.checks.PNR_2_31.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_31.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_32.Name {PNR_2_32}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_32.Description {Dimensions are multiple of agreen minum grid (1.08u for lassen 5nm)} {Description}   
bbset audit.pnr.checks.PNR_2_32.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_32.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_33.Name {PNR_2_33}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_33.Description {Multivoltage regions reviewed - power grid }                    {Description}   
bbset audit.pnr.checks.PNR_2_33.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_33.Milestone { switches }                                                     {Milestone}     
bbset audit.pnr.checks.PNR_2_34.Name {PNR_2_34}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_34.Description {Errors/Warnings in Log files}                                   {Description}   
bbset audit.pnr.checks.PNR_2_34.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_34.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_2.Name {PNR_SOC_2_2}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_2.Description {checkPlace violations in db}                                    {Description}   
bbset audit.pnr.checks.PNR_SOC_2_2.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_2.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_4.Name {PNR_SOC_2_4}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_4.Description {check_design summary}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_2_4.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_4.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_5.Name {PNR_SOC_2_5}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_5.Description {VerifyPD Inst PG connectivity}                                  {Description}   
bbset audit.pnr.checks.PNR_SOC_2_5.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_5.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_6.Name {PNR_SOC_2_6}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_6.Description {VerifyPD Lib binding}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_2_6.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_6.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_7.Name {PNR_SOC_2_7}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_7.Description {VerifyPD Missing ISO on nets}                                   {Description}   
bbset audit.pnr.checks.PNR_SOC_2_7.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_7.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_8.Name {PNR_SOC_2_8}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_8.Description {Verify min channel width H280 5.502 H210 4.986}                 {Description}   
bbset audit.pnr.checks.PNR_SOC_2_8.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_8.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_9.Name {PNR_SOC_2_9}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_2_9.Description {Verify min channel height AlwaysOn 6.500 Switched 4.200}        {Description}   
bbset audit.pnr.checks.PNR_SOC_2_9.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_9.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_12.Name {PNR_SOC_2_12}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_2_12.Description {PG pin connection for hard macros}                              {Description}   
bbset audit.pnr.checks.PNR_SOC_2_12.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_12.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_13.Name {PNR_SOC_2_13}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_2_13.Description {Check tCIC results}                                             {Description}   
bbset audit.pnr.checks.PNR_SOC_2_13.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_13.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_14.Name {PNR_SOC_2_14}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_2_14.Description {Check tap cell placement}                                       {Description}   
bbset audit.pnr.checks.PNR_SOC_2_14.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_14.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_15.Name {PNR_SOC_2_15}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_2_15.Description {Check endcap cell placement}                                    {Description}   
bbset audit.pnr.checks.PNR_SOC_2_15.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_15.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_16.Name {PNR_SOC_2_16}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_2_16.Description {List blackbox instances. cells/macros not linked properly}      {Description}   
bbset audit.pnr.checks.PNR_SOC_2_16.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_16.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_2_17.Name {PNR_SOC_2_17}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_2_17.Description {Report cell VT distrubute}                                      {Description}   
bbset audit.pnr.checks.PNR_SOC_2_17.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_2_17.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_4.Name {PNR_SOC_3_4}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_3_4.Description {verifyConnectivity commands summary for drc, lvs issues}        {Description}   
bbset audit.pnr.checks.PNR_SOC_3_4.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_4.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_5.Name {PNR_SOC_3_5}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_3_5.Description {check_design summary}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_3_5.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_5.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_7.Name {PNR_SOC_3_7}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_3_7.Description {VerifyPD Inst PG connectivity}                                  {Description}   
bbset audit.pnr.checks.PNR_SOC_3_7.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_7.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_8.Name {PNR_SOC_3_8}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_3_8.Description {VerifyPD Lib binding}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_3_8.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_8.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_9.Name {PNR_SOC_3_9}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_3_9.Description {VerifyPD Missing ISO on nets}                                   {Description}   
bbset audit.pnr.checks.PNR_SOC_3_9.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_9.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_10.Name {PNR_SOC_3_10}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_3_10.Description {Check dont_use_cell is honored in the design}                   {Description}   
bbset audit.pnr.checks.PNR_SOC_3_10.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_10.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_13.Name {PNR_SOC_3_13}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_3_13.Description {Verify Vth for retimer cells}                                   {Description}   
bbset audit.pnr.checks.PNR_SOC_3_13.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_13.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_14.Name {PNR_SOC_3_14}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_3_14.Description {Verify signal nets that have fanout exceeding pnr fanout threshold} {Description}   
bbset audit.pnr.checks.PNR_SOC_3_14.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_14.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_3_15.Name {PNR_SOC_3_15}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_3_15.Description {Verify missing level shifter cells for nets crossing power domains} {Description}   
bbset audit.pnr.checks.PNR_SOC_3_15.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_SOC_3_15.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_2.Name {PNR_SOC_4_2}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_2.Description {checkPlace violations in db}                                    {Description}   
bbset audit.pnr.checks.PNR_SOC_4_2.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_2.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_3.Name {PNR_SOC_4_3}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_3.Description {verifyConnectivity commands summary for drc, lvs issues}        {Description}   
bbset audit.pnr.checks.PNR_SOC_4_3.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_3.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_4.Name {PNR_SOC_4_4}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_4.Description {check_design summary}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_4_4.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_4.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_5.Name {PNR_SOC_4_5}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_5.Description {check_timing summary}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_4_5.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_5.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_7.Name {PNR_SOC_4_7}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_7.Description {Verify Congestion overflow}                                     {Description}   
bbset audit.pnr.checks.PNR_SOC_4_7.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_7.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_8.Name {PNR_SOC_4_8}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_8.Description {VerifyPD Inst PG connectivity}                                  {Description}   
bbset audit.pnr.checks.PNR_SOC_4_8.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_8.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_9.Name {PNR_SOC_4_9}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_4_9.Description {VerifyPD Lib binding}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_4_9.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_9.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_10.Name {PNR_SOC_4_10}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_4_10.Description {VerifyPD Missing ISO on nets}                                   {Description}   
bbset audit.pnr.checks.PNR_SOC_4_10.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_10.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_13.Name {PNR_SOC_4_13}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_4_13.Description {Check dont_use_cell is honored in the design}                   {Description}   
bbset audit.pnr.checks.PNR_SOC_4_13.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_13.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_15.Name {PNR_SOC_4_15}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_4_15.Description {Check NDR setting is applied to all clocks}                     {Description}   
bbset audit.pnr.checks.PNR_SOC_4_15.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_15.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_4_16.Name {PNR_SOC_4_16}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_4_16.Description {Check no clock pins have max_transition violation}              {Description}   
bbset audit.pnr.checks.PNR_SOC_4_16.Category {Clock}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_4_16.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_1.Name {PNR_SOC_5_1}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_5_1.Description {Errors/Warnings in Log files}                                   {Description}   
bbset audit.pnr.checks.PNR_SOC_5_1.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_1.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_6.Name {PNR_SOC_5_6}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_5_6.Description {checkPlace violations in db}                                    {Description}   
bbset audit.pnr.checks.PNR_SOC_5_6.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_6.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_7.Name {PNR_SOC_5_7}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_5_7.Description {check_design summary}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_5_7.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_7.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_8.Name {PNR_SOC_5_8}                                                    {Name}          
bbset audit.pnr.checks.PNR_SOC_5_8.Description {check_timing summary}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_5_8.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_8.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_10.Name {PNR_SOC_5_10}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_5_10.Description {VerifyPD Inst PG connectivity}                                  {Description}   
bbset audit.pnr.checks.PNR_SOC_5_10.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_10.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_11.Name {PNR_SOC_5_11}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_5_11.Description {VerifyPD Lib binding}                                           {Description}   
bbset audit.pnr.checks.PNR_SOC_5_11.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_11.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_12.Name {PNR_SOC_5_12}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_5_12.Description {VerifyPD Missing ISO on nets}                                   {Description}   
bbset audit.pnr.checks.PNR_SOC_5_12.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_12.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_16.Name {PNR_SOC_5_16}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_5_16.Description {Check dont_use_cell is honored in the design}                   {Description}   
bbset audit.pnr.checks.PNR_SOC_5_16.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_16.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_SOC_5_17.Name {PNR_SOC_5_17}                                                   {Name}          
bbset audit.pnr.checks.PNR_SOC_5_17.Description {Check sub system LEF has antenna rules}                         {Description}   
bbset audit.pnr.checks.PNR_SOC_5_17.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_SOC_5_17.Milestone {}                                                               {Milestone}     
bbset audit.pnr.checks.PNR_2_42.Name {PNR_2_42}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_42.Description {M15/M14 layer alignment and Offsets from SoC team are consumed ?} {Description}   
bbset audit.pnr.checks.PNR_2_42.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_42.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_43.Name {PNR_2_43}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_43.Description {Do you have missing power switches in channels , boundaries , abound macros ?} {Description}   
bbset audit.pnr.checks.PNR_2_43.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_43.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_46.Name {PNR_2_46}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_46.Description {ESD Structural checks and logical connectivity correctness}     {Description}   
bbset audit.pnr.checks.PNR_2_46.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_46.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_53.Name {PNR_2_53}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_53.Description {routing blockage along the block boundary (only in innovus database)} {Description}   
bbset audit.pnr.checks.PNR_2_53.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_53.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_54.Name {PNR_2_54}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_54.Description {Tech LEF version}                                               {Description}   
bbset audit.pnr.checks.PNR_2_54.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_54.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_44.Name {PNR_2_44}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_44.Description {Physical/Analog IPs (ESD, CDMM, temperature sensor , promise etc) placement  guidelines are reviewed ?} {Description}   
bbset audit.pnr.checks.PNR_2_44.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_44.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_45.Name {PNR_2_45}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_45.Description {PG for special hard macros (ESD, etc) reviewed. All integration guidances reviewed. Ensure that non ESD M14/M15 (RDL) VDD rails should be changed to ESD VDD (eg: for a memory ESD, all core VDD rails on top of ESD should be trimmed and changed to memory ESD). No ESD rail should be connected to switched power.} {Description}   
bbset audit.pnr.checks.PNR_2_45.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_45.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_47.Name {PNR_2_47}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_47.Description {Ensure that temp sensors placements are not overlapping with bumps } {Description}   
bbset audit.pnr.checks.PNR_2_47.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_47.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_48.Name {PNR_2_48}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_48.Description {Ensure that ESD is meeting the distance requirements to bumps}  {Description}   
bbset audit.pnr.checks.PNR_2_48.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_48.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_49.Name {PNR_2_49}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_49.Description {Mbist grouping is reviewed based on floorplan ?}                {Description}   
bbset audit.pnr.checks.PNR_2_49.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_49.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_50.Name {PNR_2_50}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_50.Description {Watermark cell present & matching with Synth ?}                 {Description}   
bbset audit.pnr.checks.PNR_2_50.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_50.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_51.Name {PNR_2_51}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_51.Description {Review all Base viols in Calibre}                               {Description}   
bbset audit.pnr.checks.PNR_2_51.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_51.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_2_52.Name {PNR_2_52}                                                       {Name}          
bbset audit.pnr.checks.PNR_2_52.Description {Sec-PG stripes are present or not ?}                            {Description}   
bbset audit.pnr.checks.PNR_2_52.Category {Floorplan}                                                      {Category}      
bbset audit.pnr.checks.PNR_2_52.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_46.Name {PNR_3_46}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_46.Description {Sec-pg opens reported & reviewed ?}                             {Description}   
bbset audit.pnr.checks.PNR_3_46.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_46.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_3_47.Name {PNR_3_47}                                                       {Name}          
bbset audit.pnr.checks.PNR_3_47.Description {Ensure low power cells (isolation, AON, retention) are not clustered causing DRC/Sec PG issues} {Description}   
bbset audit.pnr.checks.PNR_3_47.Category {Placement}                                                      {Category}      
bbset audit.pnr.checks.PNR_3_47.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_46.Name {PNR_4_46}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_46.Description {H-tree has been implemented for all high frequency clocks; If not, state the reason} {Description}   
bbset audit.pnr.checks.PNR_4_46.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_46.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_47.Name {PNR_4_47}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_47.Description {Drive strength  <= D2 & >16x  & delay cells are for clock cells are banned ?} {Description}   
bbset audit.pnr.checks.PNR_4_47.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_47.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_48.Name {PNR_4_48}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_48.Description {All buffers/inverters and combo cells in the clock path should be clock type. The ref_name should be CK* and DCCK*} {Description}   
bbset audit.pnr.checks.PNR_4_48.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_48.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_49.Name {PNR_4_49}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_49.Description {Is NDR present in the routes till OCC mux/CTS root point. Is crosstalk zero for all paths till the topclock tap points ?} {Description}   
bbset audit.pnr.checks.PNR_4_49.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_49.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_4_50.Name {PNR_4_50}                                                       {Name}          
bbset audit.pnr.checks.PNR_4_50.Description {Is clock divider Vt type same as clock Vt ?}                    {Description}   
bbset audit.pnr.checks.PNR_4_50.Category {CTS}                                                            {Category}      
bbset audit.pnr.checks.PNR_4_50.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_39.Name {PNR_5_39}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_39.Description {Review resistance requirements for the PG routing for Analog macros (Use RedHawk . Review with IR team) } {Description}   
bbset audit.pnr.checks.PNR_5_39.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_39.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_40.Name {PNR_5_40}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_40.Description {Review resistance requirements for signal nets in analog macros} {Description}   
bbset audit.pnr.checks.PNR_5_40.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_40.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_41.Name {PNR_5_41}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_41.Description {Review the preplaced DECAP if any Attach screenshot after PRO}  {Description}   
bbset audit.pnr.checks.PNR_5_41.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_41.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_42.Name {PNR_5_42}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_42.Description {Ensure that static signals are tran fixed to lib limits & not by given limits (ref :b/301171145) } {Description}   
bbset audit.pnr.checks.PNR_5_42.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_42.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_5_43.Name {PNR_5_43}                                                       {Name}          
bbset audit.pnr.checks.PNR_5_43.Description {AON buffering is done for thermal sensor functional path from FCC to prtn_lvts ?} {Description}   
bbset audit.pnr.checks.PNR_5_43.Category {Route}                                                          {Category}      
bbset audit.pnr.checks.PNR_5_43.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_1.Name  {PNR_7_1}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_1.Description {Activity Based Optimization ? Yes/No. If yes, Which vector(s) used and weight % assigned for each vector?} {Description}   
bbset audit.pnr.checks.PNR_7_1.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_1.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_2.Name  {PNR_7_2}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_2.Description {If using activity vectors, report the annotation % (incoming synthesis netlist match w/ vectors)} {Description}   
bbset audit.pnr.checks.PNR_7_2.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_2.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_3.Name  {PNR_7_3}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_3.Description {PnR Power Opt High Effort level used ? If not why ?}            {Description}   
bbset audit.pnr.checks.PNR_7_3.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_3.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_4.Name  {PNR_7_4}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_4.Description {Leakage recovery with Tempus/PT ?}                              {Description}   
bbset audit.pnr.checks.PNR_7_4.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_4.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_5.Name  {PNR_7_5}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_5.Description {Confirm Vt usage is limited to IP budgets . (publish VT histogram)} {Description}   
bbset audit.pnr.checks.PNR_7_5.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_5.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_6.Name  {PNR_7_6}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_6.Description {Leakage Vs Dynamic Ratio used for PnR}                          {Description}   
bbset audit.pnr.checks.PNR_7_6.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_6.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_7.Name  {PNR_7_7}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_7.Description {CG clone/de-clone report for review, any other CG topology change? } {Description}   
bbset audit.pnr.checks.PNR_7_7.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_7.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_7_8.Name  {PNR_7_8}                                                        {Name}          
bbset audit.pnr.checks.PNR_7_8.Description {MultiBit Flop merge/split report, conversion rate change vs. synthesis} {Description}   
bbset audit.pnr.checks.PNR_7_8.Category {Power}                                                          {Category}      
bbset audit.pnr.checks.PNR_7_8.Milestone {ML3+}                                                           {Milestone}     
bbset audit.pnr.checks.PNR_6_38.Name {PNR_6_38}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_38.Description {Ensure that AP layer sheet is added for blocks during chip_finish (pnr.EnableBumpLayerBlockages)} {Description}   
bbset audit.pnr.checks.PNR_6_38.Category {Release}                                                        {Category}      
bbset audit.pnr.checks.PNR_6_38.Milestone {ALL}                                                            {Milestone}     
bbset audit.pnr.checks.PNR_6_39.Name {PNR_6_39}                                                       {Name}          
bbset audit.pnr.checks.PNR_6_39.Description {boundary routing blockage}                                      {Description}   
bbset audit.pnr.checks.PNR_6_39.Category {Release}                                                        {Category}      
bbset audit.pnr.checks.PNR_6_39.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/pex/pex.starrc/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.pex.CIAMergeFlowArgs     {
                                      pex.starrc
                                      } {PEX stages to pass to cia_merge -flow}
bbset audit.pex.checks.PEX_1_1.Name  {PEX_1_1}                                                        {Name}          
bbset audit.pex.checks.PEX_1_1.Description {StarVersion}                                                    {Description}   
bbset audit.pex.checks.PEX_1_1.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_1.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_2.Name  {PEX_1_2}                                                        {Name}          
bbset audit.pex.checks.PEX_1_2.Description {PDKVersion}                                                     {Description}   
bbset audit.pex.checks.PEX_1_2.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_2.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_3.Name  {PEX_1_3}                                                        {Name}          
bbset audit.pex.checks.PEX_1_3.Description {DKVersion}                                                      {Description}   
bbset audit.pex.checks.PEX_1_3.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_3.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_4.Name  {PEX_1_4}                                                        {Name}          
bbset audit.pex.checks.PEX_1_4.Description {NXTGRDVersion}                                                  {Description}   
bbset audit.pex.checks.PEX_1_4.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_4.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_5.Name  {PEX_1_5}                                                        {Name}          
bbset audit.pex.checks.PEX_1_5.Description {CornerMapping}                                                  {Description}   
bbset audit.pex.checks.PEX_1_5.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_5.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_6.Name  {PEX_1_6}                                                        {Name}          
bbset audit.pex.checks.PEX_1_6.Description {Reduction}                                                      {Description}   
bbset audit.pex.checks.PEX_1_6.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_6.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_7.Name  {PEX_1_7}                                                        {Name}          
bbset audit.pex.checks.PEX_1_7.Description {GeometryInfo}                                                   {Description}   
bbset audit.pex.checks.PEX_1_7.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_7.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_8.Name  {PEX_1_8}                                                        {Name}          
bbset audit.pex.checks.PEX_1_8.Description {KeepViaNodes}                                                   {Description}   
bbset audit.pex.checks.PEX_1_8.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_8.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_9.Name  {PEX_1_9}                                                        {Name}          
bbset audit.pex.checks.PEX_1_9.Description {NetlistComments}                                                {Description}   
bbset audit.pex.checks.PEX_1_9.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_9.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_10.Name {PEX_1_10}                                                       {Name}          
bbset audit.pex.checks.PEX_1_10.Description {MFHandling}                                                     {Description}   
bbset audit.pex.checks.PEX_1_10.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_10.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_13_1.Name {PEX_1_13_1}                                                     {Name}          
bbset audit.pex.checks.PEX_1_13_1.Description {SpefShorts}                                                     {Description}   
bbset audit.pex.checks.PEX_1_13_1.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_13_1.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_13_2.Name {PEX_1_13_2}                                                     {Name}          
bbset audit.pex.checks.PEX_1_13_2.Description {SpefOpens}                                                      {Description}   
bbset audit.pex.checks.PEX_1_13_2.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_13_2.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_14.Name {PEX_1_14}                                                       {Name}          
bbset audit.pex.checks.PEX_1_14.Description {Fill}                                                           {Description}   
bbset audit.pex.checks.PEX_1_14.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_14.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_15_1.Name {PEX_1_15_1}                                                     {Name}          
bbset audit.pex.checks.PEX_1_15_1.Description {DefBlockage}                                                    {Description}   
bbset audit.pex.checks.PEX_1_15_1.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_15_1.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_15_2.Name {PEX_1_15_2}                                                     {Name}          
bbset audit.pex.checks.PEX_1_15_2.Description {TopLayer}                                                       {Description}   
bbset audit.pex.checks.PEX_1_15_2.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_15_2.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_15_3.Name {PEX_1_15_3}                                                     {Name}          
bbset audit.pex.checks.PEX_1_15_3.Description {BumpLayer}                                                      {Description}   
bbset audit.pex.checks.PEX_1_15_3.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_15_3.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_16.Name {PEX_1_16}                                                       {Name}          
bbset audit.pex.checks.PEX_1_16.Description {FlatHierExtraction}                                             {Description}   
bbset audit.pex.checks.PEX_1_16.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_16.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_18.Name {PEX_1_18}                                                       {Name}          
bbset audit.pex.checks.PEX_1_18.Description {ErrorMessages}                                                  {Description}   
bbset audit.pex.checks.PEX_1_18.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_18.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_19.Name {PEX_1_19}                                                       {Name}          
bbset audit.pex.checks.PEX_1_19.Description {WarningMessages}                                                {Description}   
bbset audit.pex.checks.PEX_1_19.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_19.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_20.Name {PEX_1_20}                                                       {Name}          
bbset audit.pex.checks.PEX_1_20.Description {FloatingWire}                                                   {Description}   
bbset audit.pex.checks.PEX_1_20.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_20.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_21.Name {(PEX_1_21)}                                                     {Name}          
bbset audit.pex.checks.PEX_1_21.Description {DesignFiles}                                                    {Description}   
bbset audit.pex.checks.PEX_1_21.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_21.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_22.Name {(PEX_1_22)}                                                     {Name}          
bbset audit.pex.checks.PEX_1_22.Description {Bumps}                                                          {Description}   
bbset audit.pex.checks.PEX_1_22.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_22.Milestone {ALL}                                                            {Milestone}     
bbset audit.pex.checks.PEX_1_23.Name {PEX_1_23}                                                       {Name}          
bbset audit.pex.checks.PEX_1_23.Description {LefFiles}                                                       {Description}   
bbset audit.pex.checks.PEX_1_23.Category {Versions}                                                       {Category}      
bbset audit.pex.checks.PEX_1_23.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.EXT_1_2.Name  {EXT_1_2}                                                        {Name}          
bbset audit.sta.checks.EXT_1_2.Description {Please refer CIA reports for extraction audit checker <run directory>/main/pex/pex.starrc/logs/cia.* . Please make sure these reports are clean/PASS across all extraction corners. For waivers add bug ID} {Description}   
bbset audit.sta.checks.EXT_1_2.Category {Extraction CIA checker}                                         {Category}      
bbset audit.sta.checks.EXT_1_2.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.EXT_1_2.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.EXT_1_3.Name  {EXT_1_3}                                                        {Name}          
bbset audit.sta.checks.EXT_1_3.Description {STARRC settings review: Latest/Correct Macro LEF file used? Please review starrc.cmd and confirm if latest tags used for macro lef, review with PD leads} {Description}   
bbset audit.sta.checks.EXT_1_3.Category {Extraction}                                                     {Category}      
bbset audit.sta.checks.EXT_1_3.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.EXT_1_3.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.EXT_1_4.Name  {EXT_1_4}                                                        {Name}          
bbset audit.sta.checks.EXT_1_4.Description {Does block have boundary halo for routing to prevent boundary wire xtalk with upper hierarchy?} {Description}   
bbset audit.sta.checks.EXT_1_4.Category {Extraction}                                                     {Category}      
bbset audit.sta.checks.EXT_1_4.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.EXT_1_4.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.EXT_1_5.Name  {EXT_1_5}                                                        {Name}          
bbset audit.sta.checks.EXT_1_5.Description {"Are layers above highest design used layer (eg. IA/G1) modeled for extraction? For eg: For a sub block which is multiply instantiated, is LB being modeled as grounded sheet? For top level, is EMIR def being used to model LB PG Shapes?  Ensure that LB is not modeled just as a ""blockage"" in DEF, but is modeled as real PG geometry"} {Description}   
bbset audit.sta.checks.EXT_1_5.Category {Extraction}                                                     {Category}      
bbset audit.sta.checks.EXT_1_5.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.EXT_1_5.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.TOOL_1_6.Name {TOOL_1_6}                                                       {Name}          
bbset audit.sta.checks.TOOL_1_6.Description {Is correct/project-aligned PrimeTime version  and REPO used ?}  {Description}   
bbset audit.sta.checks.TOOL_1_6.Category {Tool settings}                                                  {Category}      
bbset audit.sta.checks.TOOL_1_6.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.TOOL_1_6.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.LNK_1_7.Name  {LNK_1_7}                                                        {Name}          
bbset audit.sta.checks.LNK_1_7.Description {Is STA run Flat  Note: ETMs cannot be used for signoff. Hyper scale can be used at SoC level for L2 designs only} {Description}   
bbset audit.sta.checks.LNK_1_7.Category {Linking}                                                        {Category}      
bbset audit.sta.checks.LNK_1_7.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.LNK_1_7.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.LNK_1_8.Name  {LNK_1_8}                                                        {Name}          
bbset audit.sta.checks.LNK_1_8.Description {Check for all unresolved references in the design}              {Description}   
bbset audit.sta.checks.LNK_1_8.Category {Linking}                                                        {Category}      
bbset audit.sta.checks.LNK_1_8.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.LNK_1_8.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.LNK_1_9.Name  {LNK_1_9}                                                        {Name}          
bbset audit.sta.checks.LNK_1_9.Description {Link log check ( voltage/extract/temp/link errros)}             {Description}   
bbset audit.sta.checks.LNK_1_9.Category {Linking}                                                        {Category}      
bbset audit.sta.checks.LNK_1_9.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.LNK_1_9.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.PARA_1_10.Name {PARA_1_10}                                                      {Name}          
bbset audit.sta.checks.PARA_1_10.Description {Is parasitics_command.log (parasitic annotation log) reviewed to ensure no PARA* errors exist?} {Description}   
bbset audit.sta.checks.PARA_1_10.Category {Parasitic check}                                                {Category}      
bbset audit.sta.checks.PARA_1_10.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.PARA_1_10.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.PARA_1_11.Name {PARA_1_11}                                                      {Name}          
bbset audit.sta.checks.PARA_1_11.Description {Is parasitics_command.log (parasitic annotation log) reviewed to ensure no PARA* warnings exist?} {Description}   
bbset audit.sta.checks.PARA_1_11.Category {Parasitic check}                                                {Category}      
bbset audit.sta.checks.PARA_1_11.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.PARA_1_11.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.PARA_1_12.Name {PARA_1_12}                                                      {Name}          
bbset audit.sta.checks.PARA_1_12.Description {Any warnings here indicate potential issues with PrimeTime's auto-location inference during spef stitching. Always specify the -axis_flip option for blocks with pins on one side only.} {Description}   
bbset audit.sta.checks.PARA_1_12.Category {Parasitic check}                                                {Category}      
bbset audit.sta.checks.PARA_1_12.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.PARA_1_12.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.PARA_1_13.Name {PARA_1_13}                                                      {Name}          
bbset audit.sta.checks.PARA_1_13.Description {Is design parasitic annotation clean on all pin to pin nets?}   {Description}   
bbset audit.sta.checks.PARA_1_13.Category {Parasitic check}                                                {Category}      
bbset audit.sta.checks.PARA_1_13.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.PARA_1_13.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_14.Name {STA_1_14}                                                       {Name}          
bbset audit.sta.checks.STA_1_14.Description {Timing Modes identified and aligned with all stake holders , document the modes in the comment column} {Description}   
bbset audit.sta.checks.STA_1_14.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_14.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_14.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_1_15.Name {STA_1_15}                                                       {Name}          
bbset audit.sta.checks.STA_1_15.Description {Modewise Constraints & design Frequency targets reviewed with respective domain owners} {Description}   
bbset audit.sta.checks.STA_1_15.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_15.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_15.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_1_16.Name {STA_1_16}                                                       {Name}          
bbset audit.sta.checks.STA_1_16.Description {Verify all the virtual clocks are intended. If real clock source pin/port is not found then its defined as a virtual clock Please review report_clock report} {Description}   
bbset audit.sta.checks.STA_1_16.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_16.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_16.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_1_17.Name {STA_1_17}                                                       {Name}          
bbset audit.sta.checks.STA_1_17.Description {Have all design clocks been propagated?  please review report_clock report and insure all the clocks has p attribute present} {Description}   
bbset audit.sta.checks.STA_1_17.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_17.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_17.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_18.Name {STA_1_18}                                                       {Name}          
bbset audit.sta.checks.STA_1_18.Description {Async FIFO checks: Have async fifo related custom checks on payload & pointers been performed? Also, have extreme (as applicable) voltage conditions been used for these checks?} {Description}   
bbset audit.sta.checks.STA_1_18.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_18.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_18.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_1_19.Name {STA_1_19}                                                       {Name}          
bbset audit.sta.checks.STA_1_19.Description {Is check_timing file reviewed across all the corners ?  Reports present in -->  rpts/check_timing.rpt.gz} {Description}   
bbset audit.sta.checks.STA_1_19.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_19.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_19.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_1_20.Name {STA_1_20}                                                       {Name}          
bbset audit.sta.checks.STA_1_20.Description {Is 'signal_level' clean in check_timing?}                       {Description}   
bbset audit.sta.checks.STA_1_20.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_20.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_20.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_21.Name {STA_1_21}                                                       {Name}          
bbset audit.sta.checks.STA_1_21.Description {Is 'supply_net_without_associated_supply_port' clean in check_timing?} {Description}   
bbset audit.sta.checks.STA_1_21.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_21.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_21.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_22.Name {STA_1_22}                                                       {Name}          
bbset audit.sta.checks.STA_1_22.Description {Is 'supply_net_voltage' clean in check_timing?}                 {Description}   
bbset audit.sta.checks.STA_1_22.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_22.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_22.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_23.Name {STA_1_23}                                                       {Name}          
bbset audit.sta.checks.STA_1_23.Description {Is 'unconnected_pg_pins' clean in check_timing?}                {Description}   
bbset audit.sta.checks.STA_1_23.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_23.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_23.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_24.Name {STA_1_24}                                                       {Name}          
bbset audit.sta.checks.STA_1_24.Description {Is 'voltage_level' clean in check_timing?}                      {Description}   
bbset audit.sta.checks.STA_1_24.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_24.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_24.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_1_25.Name {STA_1_25}                                                       {Name}          
bbset audit.sta.checks.STA_1_25.Description {Is the design free of combinational timing loops?}              {Description}   
bbset audit.sta.checks.STA_1_25.Category {Timing Modes & Constraints}                                     {Category}      
bbset audit.sta.checks.STA_1_25.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_1_25.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_26.Name {STA_2_26}                                                       {Name}          
bbset audit.sta.checks.STA_2_26.Description {Illegal Clock cell check: Has cell usage on clock tree been reviewed ? please review there should be NO violation on clock cells in dont use checks : outs/cell_check_rpt*} {Description}   
bbset audit.sta.checks.STA_2_26.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_26.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_26.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_27.Name {STA_2_27}                                                       {Name}          
bbset audit.sta.checks.STA_2_27.Description {Have Design max transition limits & violations been reviewed? For waivers please point to the bug} {Description}   
bbset audit.sta.checks.STA_2_27.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_27.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_27.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_28.Name {STA_2_28}                                                       {Name}          
bbset audit.sta.checks.STA_2_28.Description {Have design max capacitance limits & violations been reviewed? For waivers please point to the bug} {Description}   
bbset audit.sta.checks.STA_2_28.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_28.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_28.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_29.Name {STA_2_29}                                                       {Name}          
bbset audit.sta.checks.STA_2_29.Description {Is Min_period and min_pusle_width reviewed checked across all corners and modes ? For waivers please point to the bug} {Description}   
bbset audit.sta.checks.STA_2_29.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_29.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_29.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_30.Name {STA_2_30}                                                       {Name}          
bbset audit.sta.checks.STA_2_30.Description {Is setup clean across all corners ? For waivers please point to the bug} {Description}   
bbset audit.sta.checks.STA_2_30.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_30.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_30.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_31.Name {STA_2_31}                                                       {Name}          
bbset audit.sta.checks.STA_2_31.Description {Is hold clean across all corners? For waivers please point to the bug} {Description}   
bbset audit.sta.checks.STA_2_31.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_31.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_31.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_32.Name {STA_2_32}                                                       {Name}          
bbset audit.sta.checks.STA_2_32.Description {Are all STA log errors reviewed?  All errors and reason for waivers needs to be documented in a bug. Please point to the bug.} {Description}   
bbset audit.sta.checks.STA_2_32.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_32.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_32.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_33.Name {STA_2_33}                                                       {Name}          
bbset audit.sta.checks.STA_2_33.Description {Are all STA log warnings reviewed?  These warnings are low risk?} {Description}   
bbset audit.sta.checks.STA_2_33.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_33.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_33.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_34.Name {STA_2_34}                                                       {Name}          
bbset audit.sta.checks.STA_2_34.Description {Are all constraints/sdc read related errors reviewed across all timing runs ? Check logs/sdc.log} {Description}   
bbset audit.sta.checks.STA_2_34.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_34.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_34.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_35.Name {STA_2_35}                                                       {Name}          
bbset audit.sta.checks.STA_2_35.Description {Are all constraints/sdc read related warnings reviewed across all timing runs ? Check logs/sdc.log} {Description}   
bbset audit.sta.checks.STA_2_35.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_35.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_35.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_36.Name {STA_2_36}                                                       {Name}          
bbset audit.sta.checks.STA_2_36.Description {Have all timing waivers been documented here MBU STA Waivers , Archive Paths} {Description}   
bbset audit.sta.checks.STA_2_36.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_36.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_36.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_2_37.Name {STA_2_37}                                                       {Name}          
bbset audit.sta.checks.STA_2_37.Description {Check POCV Annotation Rate for coefficient and distance}        {Description}   
bbset audit.sta.checks.STA_2_37.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_37.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_37.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_38.Name {STA_2_38}                                                       {Name}          
bbset audit.sta.checks.STA_2_38.Description {Please check if the correct bob variable is used to get signoff list corners. Refer to go/mbu-timing-corners for corner information and report if any deviation. (For Multivoltage runs refer the doc go/mbu-power-clock.)} {Description}   
bbset audit.sta.checks.STA_2_38.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_38.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_38.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_2_39.Name {STA_2_39}                                                       {Name}          
bbset audit.sta.checks.STA_2_39.Description {Review the sta var file with IP lead  and STA CAD lead. To figure out non-default bob settings follow doc Review */sta.bb_summary/bbvarcheck* report.} {Description}   
bbset audit.sta.checks.STA_2_39.Category {STA signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_39.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_39.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_2_40.Name {STA_2_40}                                                       {Name}          
bbset audit.sta.checks.STA_2_40.Description {MV Checks: Has the design's multi-voltage signoff conditions been correctly modeled? Please review MMMC is aligned with go/mbu-upf-config , Review with low power lead} {Description}   
bbset audit.sta.checks.STA_2_40.Category {STA Signoff MV}                                                 {Category}      
bbset audit.sta.checks.STA_2_40.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_40.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_2_41.Name {STA_2_41}                                                       {Name}          
bbset audit.sta.checks.STA_2_41.Description {This check needs to be done by SoC STA team. Review load checker at soc level to ensure that it is not exceed the load constrained at the sswrp level  (25fF). Details are captured in this bug b/281389135  Please review sta/<corner>/rpts/sswrp_outs_load.csv sta/<corner>/sswrp_outs_load_vio.csv} {Description}   
bbset audit.sta.checks.STA_2_41.Category {STA Signoff, applicable for SoC only}                           {Category}      
bbset audit.sta.checks.STA_2_41.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_41.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_2_42.Name {STA_2_42}                                                       {Name}          
bbset audit.sta.checks.STA_2_42.Description {Clock voltage swing checks are done? Note: Clock swing check needs to be reviewed across all corners inlcluding IRSTA please check rpts/clock_swing_check_vio.rpt.gz and rpts/clock_swing_check_detail.rpt.gz} {Description}   
bbset audit.sta.checks.STA_2_42.Category {STA Signoff}                                                    {Category}      
bbset audit.sta.checks.STA_2_42.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_2_42.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_3_43.Name {STA_3_43}                                                       {Name}          
bbset audit.sta.checks.STA_3_43.Description {Is Custom checks i.e. Loop delay enabled in run and clean? This check exposes paths with high clock divergence.    1. Please review main/sta/*/CLOCK_DIVERGENCE/*High_clock_divergence_path.csv with PD and DFT/RTL. these are week clock structure paths. 2. Verify if the path margin file (main/sta/*/clock_divergence_path_margin.tcl ) is incorporated in the intended database.} {Description}   
bbset audit.sta.checks.STA_3_43.Category {Custom check(divergence)}                                       {Category}      
bbset audit.sta.checks.STA_3_43.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_3_43.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_3_44.Name {STA_3_44}                                                       {Name}          
bbset audit.sta.checks.STA_3_44.Description {Is AMIS checker enabled in run and clean?  Please use the path margin file(*/AMIS/set_path_margin.tcl) in STA sessions and close timing. please refer MBU MIS refinements} {Description}   
bbset audit.sta.checks.STA_3_44.Category {Custom check (AMIS)}                                            {Category}      
bbset audit.sta.checks.STA_3_44.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_3_44.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_4_45.Name {STA_4_45}                                                       {Name}          
bbset audit.sta.checks.STA_4_45.Description {Jitter Computation based on actual clock latencies done and bounds jitter used, document deviations if jitter used is higher} {Description}   
bbset audit.sta.checks.STA_4_45.Category {Jitters & Margins}                                              {Category}      
bbset audit.sta.checks.STA_4_45.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_4_45.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_5_46.Name {STA_5_46}                                                       {Name}          
bbset audit.sta.checks.STA_5_46.Description {EMT runs needs to be done independently , one corner ffgnp highest voltage 125c using bbset sta.config.emt_setup.enable    {True}  Review the EMT violation reports : rpts/report_cell_em_violation*   Details} {Description}   
bbset audit.sta.checks.STA_5_46.Category {EMT}                                                            {Category}      
bbset audit.sta.checks.STA_5_46.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_5_46.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.STA_6_47.Name {STA_6_47}                                                       {Name}          
bbset audit.sta.checks.STA_6_47.Description {Is IR STA run for all the scenarios present in go/mbu_timing_corners and No setup/hold violations present?   Is annotation/QA clean for IR STA? Please check  a) DvD annotation coverage should be checked for IR STA runs. Please review rpts/dvd_annotation_summary.rpt b) Review DVD-006 Errors in log. c) NO SLG* errors and warnings in IRSTA log files. This will ensure no extrapolation for voltage scaling.} {Description}   
bbset audit.sta.checks.STA_6_47.Category {IRSTA}                                                          {Category}      
bbset audit.sta.checks.STA_6_47.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_6_47.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.STA_7_48.Name {STA_7_48}                                                       {Name}          
bbset audit.sta.checks.STA_7_48.Description {SSWRAPS with more than one digital supply need to run R2R Timing checks for hold , these can be enabled by adding _R2R to mode names , example   bbset mmmc.modes "func shift  func_R2R shift_R2R" For power supply infomation check the document go/mbu-power-clock.} {Description}   
bbset audit.sta.checks.STA_7_48.Category {Rail to Rail Mistrack}                                          {Category}      
bbset audit.sta.checks.STA_7_48.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.STA_7_48.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.NOISE_1_49.Name {NOISE_1_49}                                                     {Name}          
bbset audit.sta.checks.NOISE_1_49.Description {Noise settings check done? Noise threshold check done?}         {Description}   
bbset audit.sta.checks.NOISE_1_49.Category {NOISE}                                                          {Category}      
bbset audit.sta.checks.NOISE_1_49.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.NOISE_1_49.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.NOISE_1_50.Name {NOISE_1_50}                                                     {Name}          
bbset audit.sta.checks.NOISE_1_50.Description {Is STA Noise analysis done & clean for all corners and modes? Please review the check_noise report present in sta/<corner>/rpts/report_noise.all_violators.rpt.gz} {Description}   
bbset audit.sta.checks.NOISE_1_50.Category {NOISE}                                                          {Category}      
bbset audit.sta.checks.NOISE_1_50.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.NOISE_1_50.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.NOISE_1_51.Name {NOISE_1_51}                                                     {Name}          
bbset audit.sta.checks.NOISE_1_51.Description {Please review the check_noise report present in sta/<corner>/rpts/check_noise.rpt} {Description}   
bbset audit.sta.checks.NOISE_1_51.Category {NOISE}                                                          {Category}      
bbset audit.sta.checks.NOISE_1_51.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.NOISE_1_51.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.PS_1_52.Name  {PS_1_52}                                                        {Name}          
bbset audit.sta.checks.PS_1_52.Description {Is JSR > 95% for all setup corners ? Document the JSR numbers across all critical setup corners and leakage cost at power corner.  If JSR is NOT optimized then add "NOT OPTIMIZED".  Document the JSR numbers in this bug. JSR needs to be reported by using the bob JSR recipe as a seperate STA run which removes the Robustness margins before reporting JSR Document JSR numbers here : MBU JSR Results} {Description}   
bbset audit.sta.checks.PS_1_52.Category {Primeshield}                                                    {Category}      
bbset audit.sta.checks.PS_1_52.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.PS_1_52.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.MTBF_1_53.Name {MTBF_1_53}                                                      {Name}          
bbset audit.sta.checks.MTBF_1_53.Description {Is the MTBF checker run at sswrp flat level ? Document if there are any failures on synchronizers.Please review MTBF reports present in outs/<sswrp>_MTBF_Fail.rpt} {Description}   
bbset audit.sta.checks.MTBF_1_53.Category {MTBF/Synchronizers}                                             {Category}      
bbset audit.sta.checks.MTBF_1_53.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MTBF_1_53.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.MTBF_1_54.Name {MTBF_1_54}                                                      {Name}          
bbset audit.sta.checks.MTBF_1_54.Description {Is generate_b2b_flop_report  report clean?  This report is generated post synthesis and reports back to back flops. The output of this report needs to be reveived with RTL team to check if any synchronizer is implemented as a flop.} {Description}   
bbset audit.sta.checks.MTBF_1_54.Category {MTBF/Synchronizers (WIP)}                                       {Category}      
bbset audit.sta.checks.MTBF_1_54.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MTBF_1_54.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.MTBF_1_55.Name {MTBF_1_55}                                                      {Name}          
bbset audit.sta.checks.MTBF_1_55.Description {If regular flops are used as sychronizers then these are the checks needs to be done and list needs to be reviewed with RTL/TDI team.  No action if regular flops are NOT used as synchronizers} {Description}   
bbset audit.sta.checks.MTBF_1_55.Category {MTBF/Synchronizers}                                             {Category}      
bbset audit.sta.checks.MTBF_1_55.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MTBF_1_55.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_56.Name {DOC_1_56}                                                       {Name}          
bbset audit.sta.checks.DOC_1_56.Description {Is leakage Recovery Done ? Document the leakage reduction and vt profile change post leakage recovery} {Description}   
bbset audit.sta.checks.DOC_1_56.Category {DOCUMENTATION}                                                  {Category}      
bbset audit.sta.checks.DOC_1_56.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_56.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_57.Name {DOC_1_57}                                                       {Name}          
bbset audit.sta.checks.DOC_1_57.Description {Document the highest Vt used for Synchronizer cells}            {Description}   
bbset audit.sta.checks.DOC_1_57.Category {DOCUMENTATION}                                                  {Category}      
bbset audit.sta.checks.DOC_1_57.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_57.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.DOC_1_58.Name {DOC_1_58}                                                       {Name}          
bbset audit.sta.checks.DOC_1_58.Description {Document final tags of inputs, netlist,pex, upf all inputs used for STA runs and review with PD lead.} {Description}   
bbset audit.sta.checks.DOC_1_58.Category {DOCUMENTATION}                                                  {Category}      
bbset audit.sta.checks.DOC_1_58.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_58.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_59.Name {DOC_1_59}                                                       {Name}          
bbset audit.sta.checks.DOC_1_59.Description {Document the REPO version + CLs used if any for STA , PEX}      {Description}   
bbset audit.sta.checks.DOC_1_59.Category {DOCUMENTATION}                                                  {Category}      
bbset audit.sta.checks.DOC_1_59.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_59.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_60.Name {DOC_1_60}                                                       {Name}          
bbset audit.sta.checks.DOC_1_60.Description {Are there any extra margins used? Derates or uncertainty outside the bob flow? If yes please document and add bug details} {Description}   
bbset audit.sta.checks.DOC_1_60.Category {DOCUMENTATION}                                                  {Category}      
bbset audit.sta.checks.DOC_1_60.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_60.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_61.Name {DOC_1_61}                                                       {Name}          
bbset audit.sta.checks.DOC_1_61.Description {Are the final STA run areas documented here MBU STA Waivers , Archive Paths ?} {Description}   
bbset audit.sta.checks.DOC_1_61.Category {Archival}                                                       {Category}      
bbset audit.sta.checks.DOC_1_61.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_61.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_62.Name {DOC_1_62}                                                       {Name}          
bbset audit.sta.checks.DOC_1_62.Description {Are all bugs related to STA, PEX closed ?}                      {Description}   
bbset audit.sta.checks.DOC_1_62.Category {Bugs}                                                           {Category}      
bbset audit.sta.checks.DOC_1_62.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_62.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_63.Name {DOC_1_63}                                                       {Name}          
bbset audit.sta.checks.DOC_1_63.Description {STA signoff peer review}                                        {Description}   
bbset audit.sta.checks.DOC_1_63.Category {Timing Signoff Review}                                          {Category}      
bbset audit.sta.checks.DOC_1_63.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_63.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_64.Name {DOC_1_64}                                                       {Name}          
bbset audit.sta.checks.DOC_1_64.Description {Review with STA Signoff(vars, repo &DK) CAD team}               {Description}   
bbset audit.sta.checks.DOC_1_64.Category {Timing Signoff Review}                                          {Category}      
bbset audit.sta.checks.DOC_1_64.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_64.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.DOC_1_65.Name {DOC_1_65}                                                       {Name}          
bbset audit.sta.checks.DOC_1_65.Description {Review(checklist) with TDI team}                                {Description}   
bbset audit.sta.checks.DOC_1_65.Category {Timing Signoff Review}                                          {Category}      
bbset audit.sta.checks.DOC_1_65.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.DOC_1_65.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.MISC_1_66.Name {MISC_1_66}                                                      {Name}          
bbset audit.sta.checks.MISC_1_66.Description {Each PHY based SSWRP should provide the ref clk insertion delays(from clk source) at all the Voltages for that PHY at the slow corners. Please file a bug on SoC STA team and document the latency numbers} {Description}   
bbset audit.sta.checks.MISC_1_66.Category {Latency/Jitter for REF clk input to PHYs}                       {Category}      
bbset audit.sta.checks.MISC_1_66.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MISC_1_66.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.MISC_1_67.Name {MISC_1_67}                                                      {Name}          
bbset audit.sta.checks.MISC_1_67.Description {Clock Crosstalk on clocks should checked to be zero for the ones which go as a input to PHYs? Document deviations. This will help avoiding timing surprizes at the next level : save_rptx/*/*/*.clock_si.csv} {Description}   
bbset audit.sta.checks.MISC_1_67.Category {SI check for REF clk to PHY}                                    {Category}      
bbset audit.sta.checks.MISC_1_67.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MISC_1_67.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.MISC_1_68.Name {MISC_1_68}                                                      {Name}          
bbset audit.sta.checks.MISC_1_68.Description {Report switch chain delay from chain startpoint to chain endpoint at required PVT (check with EMIR team on PVT)} {Description}   
bbset audit.sta.checks.MISC_1_68.Category {EMIR Power switch chain timing report}                          {Category}      
bbset audit.sta.checks.MISC_1_68.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MISC_1_68.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.MISC_1_69.Name {MISC_1_69}                                                      {Name}          
bbset audit.sta.checks.MISC_1_69.Description {Is sign-off derate summary matching with golden derate summary for all scenario other than R2R runs? Please review outs/check_golden_derate.rpt and outs/check_golden_derate.mem.rpt, Check with STA CAD (Jerry Lin) team on deviations. To query the derates at different OPPs refer the csv --> sta.bb_summary/derate-summary.csv} {Description}   
bbset audit.sta.checks.MISC_1_69.Category {Miscellaneous}                                                  {Category}      
bbset audit.sta.checks.MISC_1_69.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MISC_1_69.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.MISC_1_70.Name {MISC_1_70}                                                      {Name}          
bbset audit.sta.checks.MISC_1_70.Description {Have SDFs with no padding been provided for final GLS?}         {Description}   
bbset audit.sta.checks.MISC_1_70.Category {GLS}                                                            {Category}      
bbset audit.sta.checks.MISC_1_70.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.MISC_1_70.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.HS_1_71.Name  {HS_1_71}                                                        {Name}          
bbset audit.sta.checks.HS_1_71.Description {Review clock_map and bounday port reports in the top level run where HS models are consumed rpts/report_clock.map.rpt  rpts/report_constraint.boundary_check.rpt rpts/report_clock.cells.rpt} {Description}   
bbset audit.sta.checks.HS_1_71.Category {Hyperscale - SoC Only (WIP)}                                    {Category}      
bbset audit.sta.checks.HS_1_71.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.HS_1_71.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.sta.checks.HS_1_72.Name  {HS_1_72}                                                        {Name}          
bbset audit.sta.checks.HS_1_72.Description {Review all HS warnings while the model is dumped/consumed}      {Description}   
bbset audit.sta.checks.HS_1_72.Category {Hyperscale}                                                     {Category}      
bbset audit.sta.checks.HS_1_72.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.HS_1_72.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.HS_1_73.Name  {HS_1_73}                                                        {Name}          
bbset audit.sta.checks.HS_1_73.Description {Review all HS Errors while the model is dumped/consumed}        {Description}   
bbset audit.sta.checks.HS_1_73.Category {Hyperscale}                                                     {Category}      
bbset audit.sta.checks.HS_1_73.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.HS_1_73.AutoComment {Automated}                                                      {AutoComment}   
bbset audit.sta.checks.HS_1_74.Name  {HS_1_74}                                                        {Name}          
bbset audit.sta.checks.HS_1_74.Description {Is HS model to Scenario mapping reviewed when HS consumed?}     {Description}   
bbset audit.sta.checks.HS_1_74.Category {Hyperscale - SoC Only (WIP)}                                    {Category}      
bbset audit.sta.checks.HS_1_74.Milestone {ALL}                                                            {Milestone}     
bbset audit.sta.checks.HS_1_74.AutoComment {Manual check}                                                   {AutoComment}   
bbset audit.vclp.Inputs              {
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_rtl/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_synth/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_synthdft/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_floorplan/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_placeopt/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_clock/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_clockopt/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_route/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_routeopt/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/vclp/vclp_chipfinish/logs/cia.summary
                                      } {audit stage dependency}
bbset audit.vclp.CIAMergeFlowArgs    {
                                      vclp_rtl
                                      vclp_synth
                                      vclp_synthdft
                                      vclp_floorplan
                                      vclp_placeopt
                                      vclp_clock
                                      vclp_clockopt
                                      vclp_route
                                      vclp_routeopt
                                      vclp_chipfinish
                                      } {VCLP stages to pass to cia_merge -flow}
bbset audit.vclp.checks.VCLP_01_01.Name {VCLP_01_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_01_01.Description {VCLP Blackbox Check - vclpBlackboxAudit}                        {Checks for existence of blackboxes}
bbset audit.vclp.checks.VCLP_01_01.Category {Blackbox}                                                       {Category of the check}
bbset audit.vclp.checks.VCLP_01_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_01_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.vclp.checks.VCLP_01_01.WaiveTypes {RegexpMatch}                                                    {CIA Waiver types}
bbset audit.vclp.checks.VCLP_02_01.Name {VCLP_02_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_02_01.Description {VCLP Session Tags Check - vclpSessionTagsAudit}                 {Checks for errors and warnings in the vcst_session.log}
bbset audit.vclp.checks.VCLP_02_01.Category {SessionTags}                                                    {Category of the check}
bbset audit.vclp.checks.VCLP_02_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_02_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.vclp.checks.VCLP_02_01.WaiveTypes {RegexpMatch}                                                    {CIA Waiver types}
bbset audit.vclp.checks.VCLP_03_01.Name {VCLP_03_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_03_01.Description {VCLP Report Files Existence and Size Check - vclpReportsSizeAudit} {Verifies empty invalid group state, invalid pst state and invalid supply state reports}
bbset audit.vclp.checks.VCLP_03_01.Category {ReportsSize}                                                    {Category of the check}
bbset audit.vclp.checks.VCLP_03_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_03_01.WaiveFolder {}                                                               {Report File Size Audit checks cannot be waived via CIA}
bbset audit.vclp.checks.VCLP_03_01.WaiveTypes {}                                                               {Not applicable as CIA Waiver mechanism is not supported for this check}
bbset audit.vclp.checks.VCLP_04_01.Name {VCLP_04_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_04_01.Description {VCLP UPF_Read Tags Check - vclpUpfTagsAudit}                    {Checks for infos, erors and warnings during UPF read}
bbset audit.vclp.checks.VCLP_04_01.Category {UpfTags}                                                        {Category of the check}
bbset audit.vclp.checks.VCLP_04_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_04_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.vclp.checks.VCLP_04_01.WaiveTypes {RegexpMatch}                                                    {CIA Waiver types}
bbset audit.vclp.checks.VCLP_05_01.Name {VCLP_05_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_05_01.Description {VCLP Check_lp Tags Check - vclpClpTagsAudit}                    {Checks for infos, warnings and errors during check_lp}
bbset audit.vclp.checks.VCLP_05_01.Category {ClpTags}                                                        {Category of the check}
bbset audit.vclp.checks.VCLP_05_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_05_01.WaiveFolder {./cia_waivers/}                                                 {Folder for CIA waivers}
bbset audit.vclp.checks.VCLP_05_01.WaiveTypes {RegexpMatch}                                                    {CIA Waiver types}
bbset audit.vclp.checks.VCLP_06_01.Name {VCLP_06_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_06_01.Description {VCLP Low Power Report Check - vclpLpRptAudit}                   {Checks for all reported message tags in the low-power report}
bbset audit.vclp.checks.VCLP_06_01.Category {LpRpt}                                                          {Category of the check}
bbset audit.vclp.checks.VCLP_06_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_06_01.WaiveFolder {}                                                               {Low Power Report Audit checks cannot be waived via CIA; they can be waived only via the VCLP flow}
bbset audit.vclp.checks.VCLP_06_01.WaiveTypes {}                                                               {Not applicable as CIA Waiver mechanism is not supported for this check}
bbset audit.vclp.checks.VCLP_07_01.Name {VCLP_07_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_07_01.Description {VCLP Upf Local path Check}                                      {Checks for all reported message tags in the low-power report}
bbset audit.vclp.checks.VCLP_07_01.Category {LpRpt}                                                          {Category of the check}
bbset audit.vclp.checks.VCLP_07_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_07_01.WaiveFolder {}                                                               {Low Power Report Audit checks cannot be waived via CIA; they can be waived only via the VCLP flow}
bbset audit.vclp.checks.VCLP_07_01.WaiveTypes {}                                                               {Not applicable as CIA Waiver mechanism is not supported for this check}
bbset audit.vclp.checks.VCLP_08_01.Name {VCLP_08_01}                                                     {Unique audit checker tag name}
bbset audit.vclp.checks.VCLP_08_01.Description {VCLP Sam Model Interal Node Check}                              {Checks for all reported message tags in the low-power report}
bbset audit.vclp.checks.VCLP_08_01.Category {LpRpt}                                                          {Category of the check}
bbset audit.vclp.checks.VCLP_08_01.Milestone {ALL}                                                            {Milestone to which the check applies}
bbset audit.vclp.checks.VCLP_08_01.WaiveFolder {}                                                               {Low Power Report Audit checks cannot be waived via CIA; they can be waived only via the VCLP flow}
bbset audit.vclp.checks.VCLP_08_01.WaiveTypes {}                                                               {Not applicable as CIA Waiver mechanism is not supported for this check}
bbset audit.Flows                    {syn pnr sta emir pex pdv lec vclp upf pdp power}                {the flows require audit framework}
bbset audit.syn.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/syn/elaborate/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/syn/synth/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/syn/synthdft/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.pnr.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/pnr/floorplan/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pnr/placeopt/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pnr/clock/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pnr/clockopt/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pnr/routeoptdesign/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pnr/chipfinish/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.emir.Inputs              {
                                      [bbget info.BOB_RUN_DIR]/emir/consolidate_emir.rhsc/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.pdp.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/pdp/ipmerge/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdp/dummyfill/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdp/v2spi/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdp/postfix/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdp/designin/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.pdv.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/pdv/ant/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/drc/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/lvs/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/erc/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/perc_cd/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/perc_ldl/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/perc_p2p/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/perc_topo/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/perc_cnod/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/info_bump/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/flipchip_bump/logs/cia.summary
                                      [bbget info.BOB_RUN_DIR]/pdv/sram_check/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.sta.Inputs               {
                                      [bbget info.BOB_RUN_DIR]/sta/sta.bb_summary/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.power.Inputs             {
                                      [bbget info.BOB_RUN_DIR]/power/consolidate_metrics.primepower/logs/cia.summary
                                      } {cia.summary pass to audit framework}
bbset audit.syn.CIAMergeFlowArgs     {elaborate synth synthdft}                                       {the list pass to cia_merge -flow}
bbset audit.pnr.CIAMergeFlowArgs     {floorplan placeopt clock clockopt route routeopt chipfinish}    {the list pass to cia_merge -flow}
bbset audit.emir.CIAMergeFlowArgs    {StaticIr DynamicIr Sem}                                         {the list pass to cia_merge -flow}
bbset audit.pdv.CIAMergeFlowArgs     {[bbget pdv.runpdv.jobs]}                                        {the list pass to cia_merge -flow}
bbset audit.pdp.CIAMergeFlowArgs     {[bbget pdp.runpdp.jobs]}                                        {the list pass to cia_merge -flow}
bbset audit.sta.CIAMergeFlowArgs     {sta}                                                            {the list pass to cia_merge -flow}
bbset audit.power.CIAMergeFlowArgs   {power}                                                          {the list pass to cia_merge -flow}
bbset audit.syn.CIAMergeDetailReportSearchPathArgs {../../../../syn/*/logs/cia.detail}                              {# No Comment}  
bbset audit.syn.CIAMergeRawPatternArgs {../../../../syn/*/logs/cia.raw_data}                            {# No Comment}  
bbset audit.sta.CIAMergeRawPatternArgs {../../../../sta/sta.bb_scen_summary.*/logs/cia.raw_data}        {setup to cia_merge --raw_pattern}
bbset audit.sta.CIAMergeDetailReportSearchPathArgs {../../../../sta/sta.bb_scen_summary.*/logs/cia.detail}          {setup to cia_merge --detail}
bbset audit.power.CIAMergeRawPatternArgs {../../../../power/power_analysis.*/logs/cia.raw_data}           {setup to cia_merge --raw_pattern}
bbset audit.power.CIAMergeDetailReportSearchPathArgs {../../../../power/power_analysis.*/logs/cia.detail}             {setup to cia_merge --detail}
bbset audit.emir.CIAMergeRawPatternArgs {../../emir/emir_analysis.*/logs/cia.raw_data}                   {setup to cia_merge --raw_pattern}
bbset audit.emir.CIAMergeDetailReportSearchPathArgs {../../emir/emir_analysis.*/logs/cia.detail}                     {setup to cia_merge --detail}
bbset audit.pnr.CIAMergeRawPatternArgs {../../../../pnr/*/logs/cia.raw_data}                            {setup to cia_merge --raw_pattern}
bbset audit.pnr.CIAMergeDetailReportSearchPathArgs {../../../../pnr/*/logs/cia.detail}                              {setup to cia_merge --detail}
bbset audit.pdp.CIAMergeRawPatternArgs {../../../../pdp/*/logs/cia.raw_data}                            {setup to cia_merge --raw_pattern}
bbset audit.pdp.CIAMergeDetailReportSearchPathArgs {../../../../pdp/*/logs/cia.detail}                              {setup to cia_merge --detail}
bbset audit.pdv.CIAMergeRawPatternArgs {../../../../pdv/*/logs/cia.raw_data}                            {setup to cia_merge --raw_pattern}
bbset audit.pdv.CIAMergeDetailReportSearchPathArgs {../../../../pdv/*/logs/cia.detail}                              {setup to cia_merge --detail}
bbset proteus.Enabled                {0}                                                              {Enable proteus tool in genus/innovus}
bbset proteus.OutputDirPath          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt/rpts/proteus/} {Central path to checkin the files}
bbset proteus.InputDirPath           {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/common/PROTEUS_DIR/be_collaterals/} {Central path to checkout the files}
bbset proteus.LicenseServerPath      {28020@prod.licenses.gchips.dev}                                 {License server path}
bbset proteus.PrtnUnitTopInstList    {u_prtn_unit_top_128stma_h156_dft_wrapper/prtn_unit_top_128stma_h156_inst u_prtn_unit_top_128stma_h130_dft_wrapper/prtn_unit_top_128stma_h130_inst} {# No Comment}  
bbset proteus.PrtnFCTopInstList      {u_prtn_fc_top/prtn_fc_cpu_inst/prtn_fc_top_cpu_fcc u_prtn_fc_top/prtn_fc_ro_inst/prtn_fc_top_ro_fcc} {# No Comment}  
bbset proteus.HTBClkAdj              {0.030}                                                          {# No Comment}  
bbset proteus.HTBCDClkAdj            {0.100}                                                          {# No Comment}  
bbset proteus.PatchFiles             {}                                                               {# No Comment}  
bbset proteus.MACLOCK                {}                                                               {# No Comment}  
bbset proteus.MAenablerepeaterskew   {true}                                                           {# No Comment}  
bbset proteus.MAboundasregion        {false}                                                          {# No Comment}  
bbset proteus.WAIVERS                {true}                                                           {# No Comment}  
bbset proteus.MApathgroup            {false}                                                          {# No Comment}  
bbset proteus.RCroscdistance         {}                                                               {# No Comment}  
bbset proteus.RCroscoffset           {}                                                               {# No Comment}  
bbset proteus.MAclockgatecoveragelimit {100}                                                            {# No Comment}  
bbset proteus.MAflipflopstomonitorfile {}                                                               {# No Comment}  
bbset proteus.MAflipflopstoexcludefile {}                                                               {# No Comment}  
bbset proteus.MAskewedflipflopsfile  {}                                                               {# No Comment}  
bbset proteus.MAclockgatestoexcludefile {}                                                               {# No Comment}  
bbset proteus.MAexcludefromdbflipflopsfile {}                                                               {# No Comment}  
bbset proteus.MAforuserflopslimitnum {}                                                               {# No Comment}  
bbset proteus.MAflipflopstomonitoroptimizationmode {}                                                               {# No Comment}  
bbset proteus.MAutilizeallinputs     {}                                                               {# No Comment}  
bbset proteus.MAalgophysicalawareenable {}                                                               {# No Comment}  
bbset proteus.MAalgophysicalawarefanout {}                                                               {# No Comment}  
bbset proteus.MAalgophysicalawareradius {}                                                               {# No Comment}  
bbset proteus.MAalgoexcludechannelwidth {}                                                               {# No Comment}  
bbset proteus.MAalgototalcoveragelimit {}                                                               {# No Comment}  
bbset proteus.MAalgocoveragethreshold {}                                                               {# No Comment}  
bbset proteus.MAalgoconnectpinsperagent {2}                                                              {# No Comment}  
bbset proteus.MAexcludeclockgatepatterns {}                                                               {# No Comment}  
bbset proteus.MAexcludefromdbclockgatesfile {}                                                               {# No Comment}  
bbset proteus.MAconnectbudgetlist    {}                                                               {# No Comment}  
bbset proteus.MAboundeffort          {}                                                               {# No Comment}  
bbset proteus.MAbounddimensions      {}                                                               {# No Comment}  
bbset proteus.MACHECKbifurcationminallowedbuffers {}                                                               {# No Comment}  
bbset proteus.MACHECKbifurcationmaxallowedbuffers {}                                                               {# No Comment}  
bbset proteus.MAALGOoptimizationmode {cg_by_flop_with_max_fanin}                                      {# No Comment}  
bbset proteus.MAclonedclockgatepatterns {}                                                               {# No Comment}  
bbset proteus.EXCLUDEchecksperstage  {}                                                               {# No Comment}  
bbset proteus.PROTEUSimplementargs   {}                                                               {# No Comment}  
bbset proteus.CHECKprtnconstraintsadditionalargs {}                                                               {# No Comment}  
bbset proteus.CHECKxortreestructureadditionalargs {}                                                               {# No Comment}  
bbset proteus.CHECKsoftboundsadditionalargs {}                                                               {# No Comment}  
bbset proteus.CHECKrcroscplacementadditionalargs {}                                                               {# No Comment}  
bbset proteus.PCA1placementboundthreshold {}                                                               {# No Comment}  
bbset proteus.FUNCTIONALview         {}                                                               {# No Comment}  
bbset proteus.TESTview               {}                                                               {# No Comment}  
bbset proteus.UNITfullname           {}                                                               {# No Comment}  
bbset proteus.FCfullname             {}                                                               {# No Comment}  
bbset proteus.MAREFERENCEbuffer      {}                                                               {# No Comment}  
bbset proteus.MAREFERENCEclockgatebuffer {}                                                               {# No Comment}  
bbset proteus.MAXORusefulskew        {{{32 0.090} {16 0.073} {8 0.062} {4 0.056} {2 0.045}}}          {# No Comment}  
bbset proteus.MAXORusefulskewbuffers {}                                                               {# No Comment}  
bbset proteus.DPAboundtype           {}                                                               {# No Comment}  
bbset proteus.DPAclockphase          {}                                                               {# No Comment}  
bbset proteus.CHANGEnamesmap         {}                                                               {# No Comment}  
bbset proteus.CHANGEnameskeeplastvector {}                                                               {# No Comment}  
bbset proteus.DPAbboxorigin          {}                                                               {# No Comment}  
bbset proteus.DPAbboxboundtype       {}                                                               {# No Comment}  
bbset proteus.PRTNCLKffsinprtnfcskewgroup {}                                                               {# No Comment}  
bbset proteus.OADPAbboxorigin        {}                                                               {# No Comment}  
bbset proteus.OADPAbbox              {}                                                               {# No Comment}  
bbset proteus.OADPAbboxutilization   {}                                                               {# No Comment}  
bbset proteus.CHECKtdcplacementnetlengththreshold {}                                                               {# No Comment}  
bbset proteus.MAAlgoUsePtdmDataCollection {true}                                                           {# No Comment}  
bbset proteus.MAAlgoSkipCellsForPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAAlgoLibertyFilesForPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAAlgoLibertyFilesListForPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAAlgoPtdmDesignDataDir {}                                                               {# No Comment}  
bbset proteus.MAAlgoMultiThreadPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAScenariosForResetUncertainty {}                                                               {# No Comment}  
bbset proteus.CellsColorMapping      {}                                                               {# No Comment}  
bbset proteus.ProteusMaIncrementalOptArgs {}                                                               {# No Comment}  
bbset proteus.CheckSoftBoundsDpaDelayRatio {}                                                               {# No Comment}  
bbset proteus.MAAlgoCoverageThresholdPerFlop {}                                                               {# No Comment}  
bbset proteus.MAAlgoOptimizationPlan {}                                                               {# No Comment}  
bbset proteus.MAAlgoEnableOptimizationPlan {false}                                                          {# No Comment}  
bbset proteus.MAAlgoMinRequiredCoverage {}                                                               {# No Comment}  
bbset proteus.MARemoveFloatingNets   {}                                                               {# No Comment}  
bbset proteus.MAAlgoBigCone          {}                                                               {# No Comment}  
bbset proteus.MAClocksSplitMap       {}                                                               {# No Comment}  
bbset proteus.CIATDCFlip             {}                                                               {# No Comment}  
bbset proteus.CIATDCOrigin           {}                                                               {# No Comment}  
bbset proteus.DPABbox                {}                                                               {# No Comment}  
bbset proteus.VIATDCOrigin           {}                                                               {# No Comment}  
bbset proteus.VIATDCFlip             {}                                                               {# No Comment}  
bbset proteus.PCA2TDCOrigin          {}                                                               {# No Comment}  
bbset proteus.OPTIONSFile            {}                                                               {# No Comment}  
bbset proteus.NMATDCOrigin           {}                                                               {# No Comment}  
bbset proteus.NMATDCFlip             {}                                                               {# No Comment}  
bbset proteus.MACLOCKBalanceAlgo     {}                                                               {# No Comment}  
bbset proteus.DevelopersArgs         {}                                                               {# No Comment}  
bbset proteus.CIAHipNames            {}                                                               {# No Comment}  
bbset proteus.CIARtlParams           {}                                                               {# No Comment}  
bbset proteus.DPABoxNames            {}                                                               {# No Comment}  
bbset proteus.DPANames               {}                                                               {# No Comment}  
bbset proteus.DPARtlParams           {}                                                               {# No Comment}  
bbset proteus.IPInterfaceVersion     {}                                                               {# No Comment}  
bbset proteus.IPPath                 {}                                                               {# No Comment}  
bbset proteus.IPVersion              {}                                                               {# No Comment}  
bbset proteus.LTABoxNames            {}                                                               {# No Comment}  
bbset proteus.LTAClockPhase          {}                                                               {# No Comment}  
bbset proteus.LTARtlParams           {}                                                               {# No Comment}  
bbset proteus.LVTSHipType            {}                                                               {# No Comment}  
bbset proteus.LVTSPlugRtlParams      {}                                                               {# No Comment}  
bbset proteus.MAAlgoBigConeMinNum    {}                                                               {# No Comment}  
bbset proteus.MAAlgoBigConesPercentile {}                                                               {# No Comment}  
bbset proteus.MAAlgoCellsMissingLibInfoThreshold {}                                                               {# No Comment}  
bbset proteus.MAAlgoCoverageThresholdSelectionPercentile {}                                                               {# No Comment}  
bbset proteus.MAAlgoFlopFaninMinNum  {}                                                               {# No Comment}  
bbset proteus.MAAlgoFlopIncrementalCoverage {}                                                               {# No Comment}  
bbset proteus.MAAlgoSkipCgReportGenPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAAlgoSkipLibParserPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAAlgoSkipMultilevelClockgateFlop {}                                                               {# No Comment}  
bbset proteus.MAAlgoSkipVerilogGenPtdmDataCollection {}                                                               {# No Comment}  
bbset proteus.MAAtpgMode             {}                                                               {# No Comment}  
bbset proteus.MAAvailableSizes       {}                                                               {# No Comment}  
bbset proteus.MABoxNames             {}                                                               {# No Comment}  
bbset proteus.MADelaylineLength      {}                                                               {# No Comment}  
bbset proteus.MAManualXorMonitorPairs {}                                                               {# No Comment}  
bbset proteus.MANames                {}                                                               {# No Comment}  
bbset proteus.MAParkingMode          {}                                                               {# No Comment}  
bbset proteus.MAPowerDomain          {}                                                               {# No Comment}  
bbset proteus.MAReferenceBudgetList  {}                                                               {# No Comment}  
bbset proteus.MARtlParams            {}                                                               {# No Comment}  
bbset proteus.NMAHipNames            {}                                                               {# No Comment}  
bbset proteus.NMARtlParams           {}                                                               {# No Comment}  
bbset proteus.OABoxNames             {}                                                               {# No Comment}  
bbset proteus.PCA1BoxNames           {}                                                               {# No Comment}  
bbset proteus.PCA1HipNames           {}                                                               {# No Comment}  
bbset proteus.PCA1RtlParams          {}                                                               {# No Comment}  
bbset proteus.PCA2BoxNames           {}                                                               {# No Comment}  
bbset proteus.PCA2HipNames           {}                                                               {# No Comment}  
bbset proteus.PCA2RtlParams          {}                                                               {# No Comment}  
bbset proteus.PCAClockPhase          {}                                                               {# No Comment}  
bbset proteus.PostClockTreeSpecImpl  {}                                                               {# No Comment}  
bbset proteus.Process                {}                                                               {# No Comment}  
bbset proteus.RCRoscDistanceRange    {}                                                               {# No Comment}  
bbset proteus.RTLPatterns            {}                                                               {# No Comment}  
bbset proteus.ToolPath               {}                                                               {# No Comment}  
bbset proteus.ToolVersion            {}                                                               {# No Comment}  
bbset proteus.TotalDpaBoxes          {}                                                               {# No Comment}  
bbset proteus.VIARtlParams           {}                                                               {# No Comment}  
bbset proteus.WorkloadClockPhase     {}                                                               {# No Comment}  
bbset proteus.WorkloadHipNames       {}                                                               {# No Comment}  
bbset proteus.WorkloadRtlParams      {}                                                               {# No Comment}  
bbset proteus.XORusefullskew         {}                                                               {# No Comment}  
bbset proteus.XORusefullskewbuffers  {}                                                               {# No Comment}  
bbset proteus.PrtnPwrScenario        {legacy}                                                         {# No Comment}  
bbset proteus.ATPGShiftClockPeriod   {10}                                                             {ATPG shift clock period }
bbset proteus.PrtnClockName          {}                                                               {Protean Clock name}
bbset proteus.PrtnClockCycleTime     {26.041700}                                                      {Protean Clock cycle time}
bbset proteus.PrtnClockDiv           {}                                                               {Protean Clock Divider}
bbset proteus.PrtnClkPrefix          {}                                                               {Protean Clock clock prefix}
bbset proteus.SysClkName             {}                                                               {Protean FCC systme Clock Name}
bbset proteus.SysClkPortOrPinName    {}                                                               {Protean FCC systme Clock port or pin name}
bbset proteus.PrtnClkPortName        {}                                                               {Protean clock port name}
bbset proteus.SkipClockSettings      {0}                                                              {Skip clock settings and sdc consumption}
bbset proteus.PlaceOptimizationTcl   {}                                                               {Tcl constraints for SDPs placement opt close to agents}
bbset proteus.ConfigFile             {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/protean/proteus_project_cfg.tcl} {project config file for proteanTecs}
bbset proteus.config.ClockGateCell   {}                                                               {clock gate cell type config  settings}
bbset proteus.config.FastestVT       {}                                                               {fastest VT cell type config  settings}
bbset proteus.config.HTandCell       {}                                                               {HT cell type config  settings}
bbset proteus.config.HTBufferCell    {}                                                               {HT Buffer cell type config  settings}
bbset proteus.config.HTClockBufferCell {}                                                               {HT Clock Buffer cell type config  settings}
bbset proteus.config.HTMux2Cell      {}                                                               {MUX of hieght 2 cell type config  settings}
bbset proteus.config.HTMux4Cell      {}                                                               {MUX of hieght 4 cell type config  settings}
bbset proteus.config.HTOutputXorCell {}                                                               {HT Output XOR gate cell type config  settings}
bbset proteus.config.HTXorCell       {}                                                               {HT XOR cell type config  settings}
bbset proteus.config.Mux2CaliberatedCell {}                                                               {calibrated Mux cell type config  settings}
bbset proteus.config.RoscBufferCell  {}                                                               {ROSC buffer cell type config  settings}
bbset proteus.config.RoscRCDistance  {}                                                               {RC distance for ROSC cell}
bbset proteus.config.RtaDelayCell    {}                                                               {RTA delay/buffer cell type config  settings}
bbset proteus.config.RtaClockBufferCell {}                                                               {RTA clock buffer cell type config  settings}
bbset proteus.config.RtaFFDCCell     {}                                                               {RTA FFDC cell type config  settings}
bbset proteus.config.RtaMux2Cell     {}                                                               {RTA MUX2 cell type config  settings}
bbset proteus.config.RtaNMABufferCell {}                                                               {RTA NMA buffer cell type config  settings}
bbset proteus.config.ReferenceBufferCell {}                                                               {Ref buffer cell type config  settings}
bbset proteus.config.MfoRoscDefaultCells {}                                                               {MFO ROSC default cell type config  settings}
bbset proteus.config.RoscDefaultCells {}                                                               {ROSC default cell type config  settings}
bbset proteus.config.CellsHeights    {}                                                               {Cell heights list}
bbset proteus.config.LibraryFiles    {}                                                               {Library Files} 
bbset proteus.config.SpiceNetlistFiles {}                                                               {Spice netlist Files}
bbset proteus.config.ModelsUsageFile {}                                                               {Model usage file}
bbset proteus.config.VTinUse         {}                                                               {VT patterns in use for protean}
bbset proteus.config.ListAgents      {}                                                               {List of agents}
bbset proteus.config.ProteanUnitsCount {}                                                               {Number of protean units}
bbset proteus.config.SkipTemplates   {}                                                               {Skip templates pattern}
bbset proteus.config.LEffectiveInUse {}                                                               {L-Effective value in use}
bbset proteus.config.FCCConfiguration {}                                                               {FCC configuration}
bbset proteus.config.DPAExcludeCells {}                                                               {DPA exclude cells patterns}
bbset proteus.config.EnablePowerGating {false}                                                          {Enable power gating support}
bbset proteus.config.IOleInUse       {}                                                               {io_le_in_use setting}
bbset proteus.config.IOVTInUse       {}                                                               {io_vt_in_use setting}
bbset proteus.config.OperatingConditionsMapping {}                                                               {operating_conditions_mapping setting}
bbset proteus.config.Process         {}                                                               {Process name}  
bbset proteus.config.Voltages        {}                                                               {Voltages list} 
bbset proteus.config.Temperatures    {}                                                               {Temperatures List}
bbset proteus.config.NominalVoltage  {}                                                               {Nominal Voltage}
bbset proteus.config.NominalTemperature {}                                                               {Nominal Temperature}
bbset proteus.config.ReferenceCorner {}                                                               {Reference corner}
bbset proteus.config.ResetType       {}                                                               {Reset type}    
bbset proteus.config.SynTimingUnit   {}                                                               {Synth timing unit}
bbset proteus.config.CustomerID      {}                                                               {Customer ID}   
bbset proteus.config.ProjectID       {}                                                               {Project ID}    
bbset proteus.config.Simulator       {}                                                               {Simulator}     
bbset proteus.config.StdLibrarySource {}                                                               {Standard library source vendor name}
bbset proteus.config.EDAVendorsSupport {}                                                               {EDA vendors supported in the config}
bbset proteus.config.MAParking       {}                                                               {ma parking}    
bbset proteus.config.PermissionManagement {}                                                               {Permission management}
bbset proteus.config.JavaMaxMemory   {}                                                               {Java max virtual memory}
bbset proteus.CellInfoFile           {}                                                               {CSV cell info file for the process}
bbset syn.synth.ProteusOptionFile    {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/common/PROTEUS_DIR/be_collaterals/BE/40stma_143mh_advisor_data.tar.gz} {Init filepath to load proteus options into the tool}
bbset syn.synthopt.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset syn.synthdft.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset syn.synthdftopt.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.setup.ProteusOptionFile    {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.placeopt.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.clock.ProteusOptionFile    {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.clockopt.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.route.ProteusOptionFile    {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.routeopt.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.chipfinish.ProteusOptionFile {}                                                               {Init filepath to load proteus options into the tool}
bbset pnr.proteus.TieInsertionRegexPattern {*prtn_unit_top_*/*prtn_dt* *prtn_fc_top*/*prtn_dt*}             {cells pattern to enable tie insertion}
bbset pnr.proteus.TieExclusionRegexPattern {*prtn_unit_top_*/*prtn_dtn_size_only* *prtn_fc_top*/*prtn_dtn_size_only*} {cells pattern to ignore tie insertion}
bbset FlowEnableSifai                {0}                                                              {Enable sifai feature in the sif flow}
bbset cerebrus.BuildValidationFile   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/cerebrus/CCR-2724009_3.tcl} {build tcl for cerebrus initialization}
bbset cerebrus.DistributionFile      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/bin/dist.py} {NC distribution Setting}
bbset cerebrus.InputPrimitiveFiles   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/cerebrus/user_primitives.tcl} {Primitives definition Files}
bbset cerebrus.MaxWorkingProcesses   {10}                                                             {maximum number of parallel working processes to use}
bbset cerebrus.MLSetupFIle           {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/cerebrus/ml_setup.tcl} {ml setup file} 
bbset cerebrus.FlowObjective         {leakage dynamic}                                                {run objective. It can be in {setup hold leakage dynamic}}
bbset cerebrus.DisablePhaseCostCalculation {setup floorplan synth_dft}                                      {Flow phases with cost calc disabled}
bbset cerebrus.RunTag                {N3E_exp}                                                        {run tag}       
bbset cerebrus.PathGroups            {REG2REG REG2ICG IN2ICG MEM2REG REG2MEM}                         {Path Groups for Timing Costing calculation}
bbset cerebrus.PushDownScenarios     {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.synth.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.setup.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.floorplan.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.placeopt.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.clock.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.clockopt.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.route.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.ispatial.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.routeopt.PushDownScenarios {1}                                                              {1 of N scenarios to be pushed to the next flow phase}
bbset cerebrus.cost.ComponentsList   {  timing.setup.wns.cerebrus timing.setup.tns.cerebrus timing.setup.wns.mode  timing.hold.wns.cerebrus  timing.hold.tns.cerebrus   power.switching  power.leakage  power.internal       design.congestion.hotspot.total design.congestion.hotspot.max  design.density } {List if cost component metrics}
bbset cerebrus.cost.timing.setup.wns.cerebrus {2}                                                              {Setup WNS timingweight}
bbset cerebrus.cost.timing.setup.tns.cerebrus {2}                                                              {Setup TNS timingweight}
bbset cerebrus.cost.timing.hold.wns.cerebrus {0}                                                              {Hold wns timing weight}
bbset cerebrus.cost.timing.hold.tns.cerebrus {0}                                                              {Hold TNS timing weight}
bbset cerebrus.cost.power.switching  {4}                                                              {Switching Power weight}
bbset cerebrus.cost.power.leakage    {3}                                                              {Leakage Power weight}
bbset cerebrus.cost.power.internal   {4}                                                              {Internal Power weight}
bbset cerebrus.cost.design.congestion.hotspot.total {0}                                                              {Design congestion total hotspot}
bbset cerebrus.cost.design.congestion.hotspot.max {0.5}                                                            {Design congestion max hotspot}
bbset cerebrus.cost.design.density   {0.5}                                                            {Design density weight}
bbset cerebrus.clockopt.cost.timing.hold.wns.cerebrus {1}                                                              {Hold wns timing weight for clockopt}
bbset cerebrus.clockopt.cost.timing.hold.tns.cerebrus {1}                                                              {Hold wns timing weight for clockopt}
bbset cerebrus.route.cost.timing.hold.wns.cerebrus {2}                                                              {Hold wns timing weight for route}
bbset cerebrus.route.cost.timing.hold.tns.cerebrus {2}                                                              {Hold wns timing weight for route}
bbset cerebrus.routeopt.cost.timing.hold.wns.cerebrus {2}                                                              {Hold wns timing weight for routeopt}
bbset cerebrus.routeopt.cost.timing.hold.tns.cerebrus {2}                                                              {Hold TNS timing weight for routeopt}
bbset pnr.cerebrus.MaxScenarios      {20}                                                             {Default max scenarios for the stage}
bbset pnr.cerebrus.setup.MaxScenarios {1}                                                              {Max scenarios for pnr/setup stage}
bbset pnr.cerebrus.floorplan.MaxScenarios {1}                                                              {Max scenarios for pnr/floorplan stage}
bbset pnr.cerebrus.LogRules          {}                                                               {List of Innovus rules used to process the log file}
bbset syn.cerebrus.LogRules          {}                                                               {List of Innovus rules used to process the log file}
bbset syn.ExportMLFeaturePostMegaCommand {0}                                                              {write ML feature immediately after tool mega commands}
bbset pnr.ExportMLFeaturePostMegaCommand {1}                                                              {write ML feature immediately after tool mega commands}
bbset hiergen.ValidFlows             {tweaker sta lec vclp}                                           {All flow that support -model_type switch in bbfiles cmd}
bbset hiergen.Stages                 {tweaker sta lec vclp}                                           {All stages that support -model_type switch in bbfiles cmd}
bbset hiergen.BlackBoxFlows          {etm spefFlatten stub_netlist stub_lef hsModel sdfFlatten}       {model_type which are black-box}
bbset hiergen.vclp.ValidModelTypes   {verilog sam upf stub_netlist}                                   {available model_type for vclp flow}
bbset hiergen.vclp.VerilogModelType  {{{bundle "chipfinish"} {filetype "verilog"} {category "pg"}}}   {definition of verilog model_type in vlcp flow}
bbset hiergen.vclp.SamModelType      {{{bundle "chipfinish"} {filetype "sam"} {purpose "vclp"}}}      {definition of sam model_type in vlcp flow}
bbset hiergen.vclp.UpfModelType      {{{bundle "chipfinish"} {filetype "upf"} {purpose "lp"}}}        {definition of upf model_type in vlcp flow}
bbset hiergen.lec.ValidModelTypes    {verilog upf stub_netlist}                                       {available model_type for lec flow}
bbset hiergen.lec.VerilogModelType   {{{bundle "chipfinish"} {filetype "verilog"} {category "pg"}}}   {definition of verilog model_type in lec flow}
bbset hiergen.lec.UpfModelType       {{{bundle "chipfinish"} {filetype "upf"} {purpose "lp"}}}        {definition of upf model_type in lec flow}
bbset hiergen.tweaker.ValidModelTypes {verilog spef def stub_netlist stub_lef etm}                     {available model_type for tweaker flow}
bbset hiergen.sta.ValidModelTypes    {verilog verilogPG spef spefFlatten gpd etm sdf sdfFlatten hsModel hsContext stub def lef} {available model_type for sta flow}
bbset hierarchy.sta.ModelType        {verilogPG gpd derate_yaml}                                      {default model_type for sta flow}
bbset hierarchy.power.ModelType      {verilog spef def lef}                                           {default model_type for sta flow}
bbset hierarchy.tweaker.ModelType    {verilog spef def}                                               {default model_type for tweaker flow}
bbset hierarchy.vclp.ModelType       {verilog upf}                                                    {default model_type for vclp flow}
bbset hierarchy.lec.ModelType        {verilog upf}                                                    {default model_type for lec flow}
bbset hierarchy.Bucket               {laj-ipreleases}                                                 {Bucket name to release the wrap data. bbfile also used this to get data mount path}
bbset hierarchy.SoftLinkBucket       {laj-ipreleases}                                                 {Bucket name to create softlink to release bucket. bbfile has used this to get release mount_path higher priority}
bbset spp.Job                        {leakage_power}                                                  {# SPICE job type; only leakage_power is supported now, and internal_power and timing stuff are being planned}
bbset spp.Libs                       {}                                                               {# Library file list}
bbset spp.Libcells                   {*}                                                              {# Target libcells; default is * and wildcard is support}
bbset spp.ExcludeLibcells            {*MUX8* *PGAT*}                                                  {# Libcells to be excluded; default are *MUX8* (SNPS's mux) and *PGAT* (SNPS's power gater)}
bbset spp.Processes                  { {/usr/local/google/gchips/access-group/whitechapel/foundry-kit-zuma/tsmc/N5/tsmc/pdk/2021-09-30/cln5_1d2_sp/15M_1X1Xb1Xe1Ya1Yb5Y2Yy2Z/cln5_1d2_sp_v1d1_2p2/cln5_1d2_sp_v1d1_2p2_usage.l FFGNPGlobalCorner_LocalMC_MOS_MOSCAP /usr/local/google/gchips/access-group/whitechapel/foundry-kit-zuma/tsmc/N5/tsmc/pdk/2021-09-30/cln5_1d2_sp/15M_1X1Xb1Xe1Ya1Yb5Y2Yy2Z/cln5_1d2_sp_v1d1_2p2/cln5_1d2_sp_v1d1_2p2_usage.l FF_RES_DISRES} {/usr/local/google/gchips/access-group/whitechapel/foundry-kit-zuma/tsmc/N5/tsmc/pdk/2021-09-30/cln5_1d2_sp/15M_1X1Xb1Xe1Ya1Yb5Y2Yy2Z/cln5_1d2_sp_v1d1_2p2/cln5_1d2_sp_v1d1_2p2_usage.l SSGNPGlobalCorner_LocalMC_MOS_MOSCAP /usr/local/google/gchips/access-group/whitechapel/foundry-kit-zuma/tsmc/N5/tsmc/pdk/2021-09-30/cln5_1d2_sp/15M_1X1Xb1Xe1Ya1Yb5Y2Yy2Z/cln5_1d2_sp_v1d1_2p2/cln5_1d2_sp_v1d1_2p2_usage.l SS_RES_DISRES} {/usr/local/google/gchips/access-group/whitechapel/foundry-kit-zuma/tsmc/N5/tsmc/pdk/2021-09-30/cln5_1d2_sp/15M_1X1Xb1Xe1Ya1Yb5Y2Yy2Z/cln5_1d2_sp_v1d1_2p2/cln5_1d2_sp_v1d1_2p2_usage.l TTMacro_MOS_MOSCAP /usr/local/google/gchips/access-group/whitechapel/foundry-kit-zuma/tsmc/N5/tsmc/pdk/2021-09-30/cln5_1d2_sp/15M_1X1Xb1Xe1Ya1Yb5Y2Yy2Z/cln5_1d2_sp_v1d1_2p2/cln5_1d2_sp_v1d1_2p2_usage.l TT_RES_DISRES} } {# Processes simulated; pattern: {<model_file_2> <model_card_1> <model_file_2> <model_card_2> ...} {...}}
bbset spp.Voltages                   {0.55 1.05 0.05}                                                 {# Voltages simulated; pattern: <start> <end> <step>}
bbset spp.Temperatures               {25 105 10}                                                      {# Temperatures simulated; patterh: <start> <end> <step>}
bbset spp.CustomTemperatures         {-40 0 25 35 45 55 65 75 85 95 105 125}                          {# Temperatures simulated, taking higher priority than Temperatures specification}
bbset spp.Subckts                    {}                                                               {# Subckts paired with Processes; pattern: {<subckt_1> <subckt_2> ...} {...}}
bbset spp.CustomDeckOption           {}                                                               {# SPICE-deck option add-on}
bbset spp.PreConsolidateCallback     {}                                                               {# Callback before consolidation}
bbset spp.ConsolidateCallback        {}                                                               {# Callback to be executed in the consolidation node}
bbset spp.PostConsolidateCallback    {}                                                               {# Callback after consolidation}
bbset spp.PreEndCallback             {}                                                               {# Callback before end}
bbset spp.EndCallback                {}                                                               {# Callback to be executed in the end node}
bbset spp.PostEndCallback            {}                                                               {# Callback after end}
bbset spp.ProcessMap                 {}                                                               {# List of list describing process mapping; pattern: {<existing> <new>} {...} ..., ex. {FFGNPGlobalCorner_LocalMC_MOS_MOSCAP ffgnp} {SSGNPGlobalCorner_LocalMC_MOS_MOSCAP ssgnp} {TTGlobalCorner_LocalMC_MOS_MOSCAP tt}}
bbset spp.PrimaryPowerPins           {}                                                               {# List of primary power pins; pattern: <vdd1> <vdd2> ..., ex. VDD VDDG}
bbset spp.JobSupportType             {leakage_power}                                                  {# Supported job type}
bbset spp.DeckOption                 {method=trap parhier=global brief nomod accurate measdgt=8 runlvl=6 optlst=0 mcbrief=1 list=0 ingold=0 measfile=1 measout=1 measform=3 autostop itrprt=0 dcon=1 gmin=1e-15 converge=100 post=0 finesim_num_meas_per_line=0 finesim_tolscale=1e-1 ignore_boundary_leakage=1} {# Default deck options; validated passing SPICE-vs-lib correlation}
bbset spp.IsUnifySP                  {True}                                                           {# Unify SPICE deck gen. and run into one node}
bbset spp.IsUnifyTemperature         {True}                                                           {# Unify different temperature runs into one node}
bbset spp.LibcellFilters             { {comb {is_combinational variables} {is_level_shifter is_isolation_cell}} } {# Filters applied to Libcells; pattern: {<filter_1> {<include_libcell_attr> ...} {<exclude_libcell_attr> ...}} {<filter_2> ...}}
bbset spp.SkipSPExec                 {False}                                                          {# Skip SPICE run; default is False, but suggested to be True for presubmit tests}
bbset spp.SPLicQueuing               {True}                                                           {# Enable license queuing for SPICE runs; default is True, but suggested to be False for dev/staging tests}
bbset spp.SpiceDeckTemplate          {[bbget .info.PD_TOOLS_DIR]/spp/template/leakage_power.template} {# SPICE deck template for leakage_power job}
bbset tcf.stages                     {innovus_pt innovus_starrc}                                      {Value: innovus_pt, innovus_starrc. List of stage name should be used for timing correlation flow}
bbset tcf.scenarios.Scenarios        {
                                      func.ssgnp-NM-125-cworst_ccworst_t
                                      func.ffgnp-NM-125-cworst_ccworst
                                      } {scenarios use for TCF flow}
bbset tcf.scenarios.status.Default   {
                                      {func.ssgnp-NM-125-cworst_ccworst_t {setup} }
                                      {func.ffgnp-NM-125-cworst_ccworst   {setup hold} }
                                      } {Default scenario status to decide setup/hold should be check for each scenario}
bbset tcf.innovus.InputDatabase      {[bbget .info.BOB_RUN_DIR]/pnr/chipfinish/outs/[bbget .info.BLOCK].enc.dat} {Innovus input database for TCF flow}
bbset tcf.innovus.Spefs              {[bbfiles -bundles chipfinish -filetype spef -category sta -purpose esa -stage sta -hierarchy]} {All possible Innovus input spef files for TCF flow}
bbset tcf.pt.StaSessions             {
                                      [bbfiles -bundles sta_and_sessions -category sta -filetype ptsession -category tcf]
                                      } {All the possible PT sessions candidate for TCF flow}
bbset tcf.starrc.Spefs               { [bbfiles -bundles pex -filetype spef -category sta -purpose signoff -stage sta -hierarchy] } {All possible StarRC input spef files for TCF flow}
bbset tcf.innovus_pt.pt.Resources    {License:PrimeTime#1 RAM/50000 CORES/16}                         {Resource for innovus_pt pt node}
bbset tcf.innovus_pt.pt.Cores        {[bbget .sta.config.global.max_threads]}                         {Number of cores used in pt session}
bbset tcf.innovus_pt.pt.SetupSlacklt {500}                                                            {report_timing -delay_type max -slack_lesser_than value}
bbset tcf.innovus_pt.pt.HoldSlacklt  {500}                                                            {report_timing -delay_type min -slack_lesser_than value}
bbset tcf.innovus_pt.pt.SummaryMaxPaths {1000000}                                                        {number of maximum paths for summary reports}
bbset tcf.innovus_pt.pt.DetailMaxPaths {100}                                                            {number of maximum paths for detail reports}
bbset tcf.innovus_pt.pt.SummaryAdditionalOptions {}                                                               {Options to add to default report_timing options incrementally}
bbset tcf.innovus_pt.pt.DetailAdditionalOptions {}                                                               {Options to add to default report_timing options incrementally}
bbset tcf.innovus_pt.innovus.Resources {License:Innovus_Impl_System#1 RAM/50000 CORES/16}               {Resource for innovus_pt innovus node}
bbset tcf.innovus_pt.innovus.Cores   {[bbget .pnr.Cores]}                                             {Number of cores used in innovus session}
bbset tcf.innovus_pt.innovus.SetupSlacklt {500}                                                            {report_timing -delay_type max -slack_lesser_than value}
bbset tcf.innovus_pt.innovus.HoldSlacklt {500}                                                            {report_timing -delay_type min -slack_lesser_than value}
bbset tcf.innovus_pt.innovus.SummaryMaxPaths {1000000}                                                        {number of maximum paths for summary reports}
bbset tcf.innovus_pt.innovus.DetailMaxPaths {100}                                                            {number of maximum paths for detail reports}
bbset tcf.innovus_pt.innovus.PTReports {}                                                               {Input PT reports}
bbset tcf.innovus_pt.innovus.AECompareSlacksOption {}                                                               {Options to overwrite the default ac_compare_slacks options}
bbset tcf.innovus_pt.innovus.AECompareTimingOption {}                                                               {Options to overwrite the default ae_compare_timing options}
bbset tcf.innovus_pt.innovus.AECompareTransitionsOption {}                                                               {Options to overwrite the default ae_compare_transitions options}
bbset tcf.innovus_pt.innovus.AECompareCapacitanceOption {}                                                               {Options to overwrite the default ae_compare_capacitance options}
bbset tcf.innovus_starrc.Resources   {RAM/50000 CORES/16}                                             {Resource for innovus_starrc node}
bbset tcf.innovus_starrc.ExcludeOpenShortNets {1}                                                              {Exclude open/shorts point}
bbset tcf.innovus_starrc.Cores       {16}                                                             {Number of cores used in starrc and innovus spef comparison}
bbset tcf.innovus_starrc.MinData     {0.0}                                                            {Default: 0.0. Specifies the minimum capacitance, resistance, or slack filter value}
bbset tcf.innovus_starrc.MaxData     {}                                                               {Default:  {}. Specifies the maximum capacitance, resistance, or slack filter value}
bbset tcf.innovus_starrc.MinVsX      {}                                                               {Default: 0.0. Specifies the minimum value on the x axis of the vs plot}
bbset tcf.innovus_starrc.MaxVsX      {}                                                               {Default:  {}. Specifies the maximum value on the x axis of the vs plot}
bbset tcf.innovus_starrc.MinVsY      {}                                                               {Default: 0.0. Specifies the minimum value on the y axis of the vs plot}
bbset tcf.innovus_starrc.MaxVsY      {}                                                               {Default:  {}. Specifies the maximum value on the y axis of the vs plot}
bbset mmmc.pvt_config                {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/pvt_spec/pvt.yaml} {# pvt config file to generate scenaio}
bbset mmmc.vdomain.EnhancedDerateDeltaVTTbl {True}                                                           {# Use enhanced DerateDeltaVTLookup table to calculate delta-V value}
bbset mmmc.vdomain.DerateDeltaVTLookup {
                                      {default tt    0.0  10}
                                      {default ssgnp 0.03 10}
                                      {default sfg 0.03 10}
                                      {default fsg 0.03 10}
                                      {default ffgnp 0.04 10}
                                      {ssgnp * * typical 0 10}
                                      {ssgnp 0p9* * *_t 0 10}
                                      {ssgnp 0p8* * *_t 0 10}
                                      {ssgnp 0p7* * *_t 0 10}
                                      {ssgnp 0p6* * *_t 0 10}
                                      {ssgnp 0p5* * *_t 0 10}
                                      {* 0p4750 * *_t 0 5}
                                      {* 0p4500 * *_t 0 5}
                                      {tt * * * 0 10}
                                      {* 0p9450 * *_ccworst  0.03 10}
                                      {* 0p8550 * *_ccworst 0.03 10}
                                      {* 0p7650 * *_ccworst 0.03 10}
                                      {* 0p6750 * *_ccworst 0.03 10}
                                      {* 0p6350 * *_ccworst 0.03 10}
                                      {* 0p5850 * *_ccworst 0.023 10}
                                      {* 0p5400 * *_ccworst 0.020 10}
                                      {* 0p5150 * *_ccworst 0.020 10}
                                      {* 0p5200 * *_ccworst 0.020 10}
                                      {* 0p4750 * *_ccworst 0.010 5}
                                      {* 0p4500 * *_ccworst 0.010 5}
                                      } {# align with laj @2025/01/10}
bbset mmmc.vdomain.DeltaVScalingTable {}                                                               {# Delta-V scaling table, must be defined in process vars}
bbset mmmc.vdomain.DeltaVThresholdTable {}                                                               {# Delta-V threshold table, must use with DeltaVScalingTable and defined in process vars}
bbset mmmc.scenarios.constraints     {
                                      {apply "*.ssgnp-NM-*" {AVDD075_UFS0_EMBD_VP 0p6750} {AVDD075_UFS0_EMBD_VPDIG 0p6750} {AVDD12_UFS0_EMBD 1p0800} {VDD_HSIOS 0p6750} {VDD_STBY_S 0p6750}}
                                      {apply "*.ffgnp-NM-*" {AVDD075_UFS0_EMBD_VP 0p8250} {AVDD075_UFS0_EMBD_VPDIG 0p8250} {AVDD12_UFS0_EMBD 1p3200} {VDD_HSIOS 0p8250} {VDD_STBY_S 0p8250}}
                                      {create "*.*"}
                                      } {# constraints to change the vdomain voltage in scenarios and create scenarios. scenario object rely on this to support multiple voltage domain design}
bbset mmmc.scenarios.post_constraints {
                                      {exclude "[bbget sta.rail2rail.exclude.runs]" }
                                      {exclude "[bbget sta.ir_sta.exclude.runs]" }
                                      } {# post constraints to change scenario definition}
bbset memory_prediction.AvailableMethods {"infra_ml" "statistical"}                                       {# No Comment}  
bbset memory_prediction.Enable       {1}                                                              {1: Enable, 0: Disable -1:Lookup user_list in central config}
bbset memory_prediction.PredictValueCeiling {950000}                                                         {Dont let ram prediction result go over 950G, no machine available}
bbset memory_prediction.ApplyRules   {
                                      {* * sta/sta.bb_sta* statistical 1.2 15000 0}
                                      {* * sta/* statistical 1.2 15000 0}
                                      {* * syn/* statistical 1.2 15000 0}
                                      {* * pnr/* statistical 1.2 15000 0}
                                      {* * pdp/* statistical 1.2 15000 0}
                                      {* * pdv/* statistical 1.2 15000 0}
                                      {* * emir/* statistical 1.2 15000 0}
                                      {* * esd/* statistical 1.2 15000 0}
                                      } {# No Comment}  
bbset memory_prediction.ExcludeJobPatterns {}                                                               {format: {job_pattern_1 job_pattern_2 ...} }
bbset memory_prediction.StatisticalSource {google.com:gchips-dashboards.BoB_Statistics.bob_statistical_memory_prediction} {Default BQ datasource}
bbset memory_prediction.InfraMLSource {tools/aiservice/bob_maxram_prediction}                          {Default infra_ml modulefile}
bbset memory_prediction.DistributedApplyRules {
                                      {* * emir/create_vcv_view.rhsc* distributed_statistic 1.2 15000 0}
                                      {* * emir/create_design_view.rhsc* distributed_statistic 1.2 15000 0}
                                      {* * emir/create_timing_view.rhsc* distributed_statistic 1.2 15000 0}
                                      {* * emir/emir_analysis.rhsc* distributed_statistic 1.2 15000 0}
                                      {* * emir/create_eco_report.rhsc* distributed_statistic 1.2 15000 0}
                                      {* * emir/thermal_analysis.rhsc* distributed_statistic 1.2 15000 0}
                                      {* * esd/create_design_view.* distributed_statistic 1.2 15000 0}
                                      {* * esd/esd_analysis.* distributed_statistic 1.2 15000 0}
                                      {* * pdv/*calibre* distributed_statistic 1.2 15000 0}
                                      {* * pdp/dummyfill*calibre* distributed_statistic 1.2 15000 0}
                                      } {# No Comment}  
bbset memory_prediction.DistributedStatisticalSource {google.com:gchips-dashboards.BoB_Statistics.bob_distributed_memory_prediction_rank} {Default BQ datasource}
bbset memory_prediction.DistributedVarMapping {
                                      {emir/create_vcv_view.rhsc* emir.Ram}
                                      {emir/create_design_view.rhsc* emir.Ram}
                                      {emir/create_timing_view.rhsc* emir.Ram}
                                      {emir/emir_analysis.rhsc* emir.Ram}
                                      {emir/create_eco_report.rhsc* emir.Ram}
                                      {emir/thermal_analysis.rhsc* emir.Ram}
                                      {emir/consolidate_emir.rhsc* emir.Ram}
                                      {esd/create_design_view.* esd.Ram}
                                      {esd/esd_analysis.* esd.Ram}
                                      {pdp/dummyfill.feol.calibre pdp.dummyfill.feol_remote_host_memory}
                                      {pdp/dummyfill.beol.calibre pdp.dummyfill.beol_remote_host_memory}
                                      {pdv/drc.calibre pdv.drc.remote_host_memory}
                                      {pdv/drc.calibre.beol pdv.drc.remote_host_memory}
                                      {pdv/drc.calibre.feol pdv.drc.remote_host_memory}
                                      {pdv/drc.calibre.esdlup pdv.drc.remote_host_memory}
                                      {pdv/drc.calibre.density pdv.drc.remote_host_memory}
                                      {pdv/drc.calibre.voltage pdv.drc.remote_host_memory}
                                      {pdv/drc.calibre.voltage_debug pdv.drc.remote_host_memory}
                                      {pdv/ant.calibre pdv.ant.remote_host_memory}
                                      {pdv/erc.calibre pdv.erc.remote_host_memory}
                                      {pdv/lvs.calibre pdv.lvs.remote_host_memory}
                                      {pdv/info_bump pdv.info_bump.remote_host_memory}
                                      {pdv/perc_topo.calibre pdv.perc_topo.remote_host_memory}
                                      {pdv/perc_ldl.calibre pdv.perc_ldl.remote_host_memory}
                                      {pdv/perc_cd.calibre pdv.perc_cd.remote_host_memory}
                                      {pdv/perc_p2p.calibre pdv.perc_p2p.remote_host_memory}
                                      {pdv/perc_cnod.calibre pdv.perc_cnod.remote_host_memory}
                                      {pdv/sram_check.calibre pdv.sram_check.remote_host_memory}
                                      {pdv/flipchip_bump.calibre pdv.flipchip_bump.remote_host_memory}
                                      {pdv/drc_dfm.calibre pdv.drc_dfm.remote_host_memory}
                                      } {# No Comment}  
bbset memory_prediction.DistributedExcludeJobPatterns {}                                                               {format: {job_pattern_1 job_pattern_2 ...} }
bbset mlsta.Tool                     {primetime}                                                      {EDA tool for running csv generation required by faSTrAck ML-STA prediction}
bbset mlsta.ToolVersion              {U-2022.12-SP5-2}                                                {PrimeTime tool version}
bbset mlsta.Milestone                {}                                                               {Design milestone}
bbset mlsta.Modes                    {csvgen_and_prediction}                                          {Fastrack mode - csvgen_and_prediction, prediction}
bbset mlsta.SetupHoldAnalysisMode    {setup}                                                          {Analysis mode for prediction. Valid values - setup, hold, setup_hold}
bbset mlsta.ReferenceScenarios       {}                                                               {List of reference scenarios for prediction}
bbset mlsta.ReportNWorst             {1}                                                              {Value of -nworst option in get_timing_paths query}
bbset mlsta.ReportMaxPaths           {200000}                                                         {Value of -max_paths option in get_timing_paths query}
bbset mlsta.ReportSlackThreshold     {INF}                                                            {Value of -slack_lesser_than option in get_timing_paths query}
bbset mlsta.ReportPBAMode            {path}                                                           {Value of -pba_mode option in get_timing_paths query}
bbset mlsta.ReportPathType           {full_clock_exp}                                                 {Value of -path_type option in get_timing_paths query}
bbset mlsta.ScenarioConfigFile       {}                                                               {Scenario config JSON file}
bbset mlsta.csvgen_and_prediction.Stages {csvgen predict}                                                 {Valid stages for csvgen_and_prediction mode}
bbset mlsta.prediction.Stages        {predict}                                                        {Valid stages for prediction mode}
bbset mlsta.csvgen.Cores             {32}                                                             {NC Cores for csvgen}
bbset mlsta.csvgen.RAM               {400000}                                                         {NC RAM for csvgen}
bbset mlsta.csvgen.Resources         {}                                                               {Additional NC resources for csvgen}
bbset mlsta.csvgen.STASessionDir     {}                                                               {Directory containing all STA sessions for csvgen stage}
bbset mlsta.csvgen.PNRDatabaseDir    {}                                                               {Directory containing PNR db for csvgen stage}
bbset mlsta.csvgen.ParallelExecuteProcesses {16}                                                             {Number of processes for parallel_execute during csvgen stage. The recommended value is 16}
bbset mlsta.csvgen.ForAllScenariosInConfig {1}                                                              {Generates ML_stage_* csv files for all scenarios listed in the Scenario Config JSON or only for the dominant scenario}
bbset mlsta.predict.Cores            {32}                                                             {NC Cores for predict}
bbset mlsta.predict.RAM              {400000}                                                         {NC RAM for predict}
bbset mlsta.predict.Resources        {}                                                               {Additional NC resources for predict}
bbset mlsta.predict.OutputDir        {[pwd]/mlsta}                                                    {Output directory where prediction results are stored}
bbset mlsta.predict.InputModelDir    {}                                                               {Path to the trained model root directory}
bbset mlsta.predict.CSVDir           {}                                                               {Path to where the input CSV files for the reference scenario are stored}
bbset mlsta.predict.ScenarioConfigFileOverride {}                                                               {User override for scenario config JSON file}
bbset mlsta.predict.MarginPaddingAbs {0.002}                                                          {Margin padding abs}
bbset mlsta.predict.MarginPaddingPercentage {0.0}                                                            {Margin padding percentage}
bbset mlsta.predict.PredictionBinary {[bbget .info.REPO_TOP]/soc/sta/fastrack/predict_main.par}       {Fastrack prediction binary}
bbset mlsta.predict.PredictionBinaryOverride {}                                                               {User override for Fastrack prediction binary}
bbset mlsta.predict.WaitNonDominantScenarios {False}                                                          {Predict node neet to wait non-dominant scenarios}
bbset mlsta.training.RAM             {400000}                                                         {NC RAM for training}
bbset mlsta.training.Cores           {32}                                                             {NC Cores for training}
bbset mlsta.training.Resources       {}                                                               {Additional NC resources for training}
bbset mlsta.training.STASessionDir   {}                                                               {Directory containing all STA sessions for training stage}
bbset mlsta.training.ParallelExecuteProcesses {16}                                                             {Number of processes for parallel_execute during training stage. The recommended value is 16}
bbset mlsta.training.modelgen.enable {False}                                                          {# enable model generation after training node}
bbset mlsta.training.modelgen.binary {}                                                               {#binary for model generation}
bbset mlsta.training.modelgen.rootdir {}                                                               {# target model path}
bbset mlsta.training.modelgen.batchsize {1024}                                                           {# batch size for model gen binary}
bbset Signoff                        {0}                                                              {#signoff Mode: 0|1}
bbset Modules.Path.process_path      {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/modulefiles} {# module path for module load pd-cad/$PROCESS}
bbset Modules.Base.process_module    {pd-cad/[bbget .info.PROCESS]}                                   {# make bbenv to module load pd-cad/$PROCESS}
bbset Process                        {n2p}                                                            {technology process}
bbset PdkVersion                     {2025-04-22}                                                     {pdk version to load}
bbset DkVersion                      {v1.0_2025-04-19}                                                {dk version to load}
bbset MdkVersion                     {v1.0_2025-04-23}                                                {mdk version to load}
bbset Stack                          {15M_1X1Xb1Xc1Xd1Ya1Yb4Y2Yt2Z}                                   {Metal Stack attribute defined in PDK}
bbset Pitch                          {M1P48_M2P26_M3P35_M4P35_M5P42_M6P76_M7P76_M8P76_M9P76_M10P76_M11P76_M12P90_M13P90} {pitch attribute defined in PDK}
bbset TechRdlType                    {sRDL}                                                           {rdl attribute defined in PDK}
bbset TechIsShdmim                   {true}                                                           {is_shdmim attribute defined in PDK}
bbset bbquery.dk.Config              {{annotate {is_multi_voltage "true"} "sec_voltage!~'^$'"}
                                      {annotate {mode ""} "file=~'.*' && file_type=~'.*_lib|.*_db|avm|apl|pgv|socv|pocvm|icd.*|par.*|leakinfo|sglib|mis.*|trf'"}
                                      {annotate {vt "elt"}    "vt=='e'"}
                                      {annotate {vt "lvt"}    "vt=='l'"}
                                      {annotate {vt "lvtll"}  "vt=='m'"}
                                      {annotate {vt "svt"}    "vt=='s'"}
                                      {annotate {vt "ult"}    "vt=='v'"}
                                      {annotate {vt "ultll"}  "vt=='w'"}
                                      {annotate {channel_length "l3p48"} "channel_length=='p48l3'"}
                                      {annotate {channel_length "l3p54"} "channel_length=='p54l3'"}
                                      {annotate {process "sfg"} "process=='sfgnp'"}
                                      {annotate {process "fsg"} "process=='fsgnp'"}
                                      {annotate {process "ssgnp"} "category=='macros' && library_name=~'dwc_.*' && process=='ss'"}
                                      {annotate {process "ffgnp"} "category=='macros' && library_name=~'dwc_.*' && process=='ff'"}
                                      {annotate {sub_process ""} "process!~'^$'"}
                                      {annotate {sub_process "ssgnp,sfg,fsg"} "process=~'ssgnp' && temperature=='0' && rc_corner =~ 'cworst_ccworst_t' && (main_voltage=='0p6750' || sec_voltage=='0p6750')"}
                                      {annotate {sub_process "ssgnp,sfg,fsg"} "process=~'ssgnp' && library_name=~'PLL.*|tph.*|ABK.*|dwc_.*|IP93X12C.*|tef.*|OSCT.*|tpm.*'"}
                                      {exclude  "file=~'.+gcustom_gsl_clk.+dp/.+gcustom_gsl_clk.+dp_2r.+'"}
                                      {exclude  "file=~'supercell' && file_type=~'lef|full_ndm'"}
                                      {exclude  "file=~'.+\/ip_dwc_.+\/(?!.*_pg\.lib\.gz$).+\.lib\.gz$'"}
                                      {exclude  "file=~'.+\/ip_dwc_.+\/(?!.*_pg\.db$).+\.db$'"}
                                      {annotate {track "h130"} "category=='macros' && file=~'.*/.*bwp143.*_gcustom_gsl_clk_div'"}
                                      {annotate {track "h156"} "category=='macros' && file=~'.*/.*bwp169.*_gcustom_gsl_clk_div'"}
                                      {annotate {track "h130"} "category=='macros' && file=~'.*/.*bwph130.*_gcustom_gsl_clk_div'"}
                                      {annotate {track "h156"} "category=='macros' && file=~'.*/.*bwph156.*_gcustom_gsl_clk_div'"}
                                      {annotate {compiler "googleclkdiv_lvt"} "file_type=='lef' && category=='macros' && file=~'.*/ip_.*clk_div.*/.*_lvt_.*'"}
                                      {annotate {compiler "googleclkdiv_lvtll"} "file_type=='lef' && category=='macros' && file=~'.*/ip_.*clk_div.*/.*_lvtll_.*'"}
                                      {annotate {compiler "googleclkdiv_ulvt"} "file_type=='lef' && category=='macros' && file=~'.*/ip_.*clk_div.*/.*_ulvt_.*'"}
                                      {annotate {compiler "googleclkdiv_ulvtll"} "file_type=='lef' && category=='macros' && file=~'.*/ip_.*clk_div.*/.*_ulvtll_.*'"}
                                      {annotate {macro_type ""} "category=='stdlib'"}
                                      {annotate {macro_type "ip"} "category=='macros'"}
                                      {annotate {macro_type "mem"} "category=='macros' && file=~'.*/mem_.*' "}
                                      {annotate {cell_height "idr"} "file_type=='lef' && category=='macros' && file=~'.*/mem_.*'"}
                                      {annotate {cell_height "rom"} "file_type=='lef' && category=='macros' && (file=~'.*/mem_.*ROM.*' || file=~'.*/mem_.*rom.*')"}
                                      {annotate {cell_height "edr"} "file_type=='lef' && category=='macros' && (file=~'.*/mem_.*02padr.*' || file=~'.*/mem_.*02pl1.*' || file=~'.*/mem_.*02PADR.*' || file=~'.*/mem_.*02PL1.*')"}
                                      {annotate {compiler "all_all"}         "file_type=='lef' && category=='macros' && (file=~'.*/mem_.*')"}
                                      {annotate {compiler "thirdips_allvt"} "file_type=='lef' && category=='macros' && file=~'.*/ip_.*/'"}
                                      {annotate {compiler "googleother_allvt"} "file_type=='lef' && category=='macros' && file=~'ip_aging_sensor_top|ip_amux_top|ip_prtn|ip_aging_sensor_top|ip_amux_top|ip_boxcar_cs_top|ip_DTCD|ip_fiducial_h130|ip_fiducial_h156|ip_fll_top|ip_ICOVL|ip_ols075_top|ip_ols12_top|ip_pmc_top|ip_tcxo_clock_buffer_top|ip_tdiode_top|ip_temp_sensor_top|ip_prtn_lvts|ip_prtn_ro_h130|ip_prtn_ro_h156'"}
                                      {annotate {rc_corner "rcbest_ccbest,cbest_ccbest_t"} "process=~'ffgnp' && temperature=='125' && main_voltage=='1p1550' && library_name=~'tdiode_top' && rc_corner == 'cbest_ccbest_t'"}
                                      {annotate {rc_corner "rcworst_ccworst_t,rcworst_ccworst"} "process=~'ssgnp' && temperature=='125' && main_voltage=='0p4750' && library_name=~'aging_sensor_top|boxcar_cs_top|temp_sensor_top' && rc_corner == 'rcworst_ccworst'"} {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDLVT/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDLVT.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDLVT"} {is_defect "false"} {is_pnr "false"} }
                                      {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVT/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVT.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVT"} {is_defect "false"} {is_pnr "false"} }
                                      {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVTLL/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV_1P5_130HPNPN3P48CPDULVTLL.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV_1P5_143M3P48CPDLVT"} {is_defect "false"} {is_pnr "false"} }
                                      {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDLVT/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDLVT.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDLVT"} {is_defect "false"} {is_pnr "false"} }
                                      {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVT/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVT.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVT"} {is_defect "false"} {is_pnr "false"} }
                                      {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVTLL/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVTLL.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVTLL"} {is_defect "false"} {is_pnr "false"} }
                                      {add {file "/google/gchips/ipreleases/lajolla/GCUSTOM_GSL_CLK_DIV50_DP_2R_156HPNPN3P48CPDULVT/[bbget bbquery.dk.ClockDivVersion]/pnr/chipfinish/outs/GCUSTOM_GSL_CLK_DIV50_DP_2R_156HPNPN3P48CPDULVT.def.gz"} {file_type "def"} {category "macros"} {library_name "GCUSTOM_GSL_CLK_DIV50_DP_2R_156HPNPN3P48CPDULVT"} {is_defect "false"} {is_pnr "false"} } {annotate {rc_corner ""} "file=~'.*/sc_.*' && file_type=='leakinfo'"}
                                      {annotate {temperature "m40"} "temperature=='n40'"}
                                      {add {file "/google/gchips/lib/3pip/lajolla/synopsys/CandleStick/dwc_mipi_mphy_type1_g6_22_tsmc2pns/5.00a_cust1_pre2/pma/timing/15M_1X_h_1Xb_v_1Xc_h_1Xd_v_1Ya_h_1Yb_v_4Y_hvhv_2Yt_hv_2Z/lib_pg/dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns_ssgnp0p675v0c_cworst_CCworst_pg.db"} {library_name "dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns"}  
                                      {file "/google/gchips/lib/foundry/tsmc/n2p/tsmc/mdk/v0.9_2025-04-10/ccs_db/mem_ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom/ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom_ssgnp_0p675v_0c_cworst_ccworst_t.db"} {library_name "ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom"}
                                      {file "/google/gchips/lib/foundry/tsmc/n2p/tsmc/mdk/v0.9_2025-04-10/ccs_db/mem_ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom/ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom_ssgnp_0p675v_0c_cworst_ccworst_t.db"} {library_name "ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom"}
                                      }
                                      } {# initialize bbquery variable}
bbset bbquery.pdk.Config             {{annotate {is_shdmim "true"} "file=~'PRTF_ICC2.*StarDummyMap.*_SHDMIM.*'"} {add {file "[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/psub2_check/psub2_check.rules"} {file_type "rulefile"} {tool "calibre"} {function "psub2_check"}}} {# initialize bbquery variable}
bbset bbquery.dk.ClockDivVersion     {CLKDIV_01042025_DK_RELEASE}                                     {# No Comment}  
bbset dontuse.PnnpCells              {.PNNP.}                                                         { pnnpcells (N2P dontuse od cells)}
bbset dontuse.PpnnCells              {.PPNN.}                                                         {ppnncells (N2P dontuse od cells)}
bbset dontuse.NppnCells              {.NPPN.}                                                         { nppncells (N2P dontuse od cells)}
bbset dontuse.NeverUse               { TSMCPDK1P1RemovedCells
                                      } {Cells which must always be in the DontUse list}
bbset dontuse.AllCells               {{\\S+}}                                                         {all cells (for debug)}
bbset dontuse.ClockLACCells          {DCCK.*LAC}                                                      {GOOG cell group}
bbset dontuse.GooGCells              {GOOG}                                                           {GOOG cell group}
bbset dontuse.AntennaCells           {ANTENNA}                                                        {Antenna Diode cell group}
bbset dontuse.SvtCells               {{SVT\$}}                                                        {Standard Vt cell group}
bbset dontuse.LvtCells               {{\[^UE\]LVT\$}}                                                 {Low Vt cell group}
bbset dontuse.UlvtCells              {{ULVT\$}}                                                       {Ultra-low Vt cell group}
bbset dontuse.AllElvtCells           {{ELVT\$}}                                                       {Extreme-low Vt cell group}
bbset dontuse.LvtllCells             {{\[^UE\]LVTLL\$}}                                               {Low leakage, low Vt cell group}
bbset dontuse.UlvtllCells            {{ULVTLL\$}}                                                     {Ultra-Low leakage, low Vt cell group}
bbset dontuse.D10PlusCells           {{D(\[1-9\]\\d|\\d{3,})BWP}}                                     {D10 and larger cell group}
bbset dontuse.D12PlusCells           {{D(1\[2-9\]|\[2-9\]\\d|\\d{3,})BWP}}                            {D12 and larger cell group}
bbset dontuse.D14PlusCells           {{D(1\[4-9\]|\[2-9\]\\d|\\d{3,})BWP}}                            {D14 and larger cell group}
bbset dontuse.D16PlusCells           {{D(1\[6-9\]|\[2-9\]\\d|\\d{3,})BWP}}                            {D16 and larger cell group}
bbset dontuse.D18PlusCells           {{D(1\[8-9\]|\[2-9\]\\d|\\d{3,})BWP}}                            {D18 and larger cell group}
bbset dontuse.D20PlusCells           {{D(\[2-9\]\\d|\\d{3,})BWP}}                                     {D20 and larger cell group}
bbset dontuse.AllD24PlusCells        {{D(2\[4-9\]|\[3-9\]\\d|\\d{3,})BWP}}                            {D24 and larger cell group}
bbset dontuse.AllD16PlusCells        {{D(1\[6-9\]|\[2-9\]\\d|\\d{3,})BWP}}                            {D16 and larger cell group}
bbset dontuse.D32PlusCells           {{D(3\[2-9\]|\[4-9\]\\d|\\d{3,})BWP}}                            {D32 and larger cell group}
bbset dontuse.D48PlusCells           {{D(4\[8-9\]|\[5-9\]\\d|\\d{3,})BWP}}                            {D48 and larger cell group}
bbset dontuse.SeqSvtCells            {[exec cat [bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/SeqSvtCells.list]} {Never Use for IPs going below NM}
bbset dontuse.NonSeqSvtCells         {[exec cat [bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/NonSeqSvtCells.list]} {SVT cells other than Flops}
bbset dontuse.AllD0P5LVTLLCells      {{D0P5.*CPDLVTLL\$}}                                             {fractional LVTLL cells}
bbset dontuse.AllD0P6LVTLLCells      {{D0P6.*CPDLVTLL\$}}                                             {fractional LVTLL cells}
bbset dontuse.AllD0P7LVTLLCells      {{D0P7.*CPDLVTLL\$}}                                             {fractional LVTLL cells}
bbset dontuse.AllFractionalLVTLLFlopsCells {{DF.*D0P7.*CPDLVTLL\$}}                                         {fractional LVTLL cells}
bbset dontuse.AllD0P8LVTLLCells      {{D0P8.*CPDLVTLL\$}}                                             {fractional D0P8 LVTLL cells}
bbset dontuse.AllFractionalSVTCells  {{D0P.*CPDSVT\$}}                                                {fractional SVT cells}
bbset dontuse.AllSKCells             {.*SK.*}                                                         {Timing Skewed Low leakage cells}
bbset dontuse.AllLlkgCells           {.*LLKG.*}                                                       {Low leakage cells}
bbset dontuse.MetalEcoCells          {^G}                                                             {Metal-only ECO cells, thus much bigger is size hence should be used for metal ECOs}
bbset dontuse.DelayCells             {.*DEL.*BWP.*CPD.*}                                              {Delay cells, for hold-fixing}
bbset dontuse.ClockCells             {^CK|^DCCK}                                                      {Clock cells (only to be used in clock path)}
bbset dontuse.ClockIllegalCells      {^(?!CK|DCCK|ISO|LVL).*BWP.*}                                    {# No Comment}  
bbset dontuse.ClockD2LessCells       {[exec cat [bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/ClockD2LessCells.list]} {Drives less than D2  group}
bbset dontuse.HighDriveHighCurrentCells {[exec cat [bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/HighDriveHighCurrentCells.list]} {# No Comment}  
bbset dontuse.TSMCPDK1P1RemovedCells {[exec cat [bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/TSMCPDK1P1RemovedCells.list]} {# No Comment}  
bbset dontuse.N2PExtra1P0Cells       {[exec cat [bbget .info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/N2PExtra1P0Cells.list]} {# No Comment}  
bbset dontuse.Sync1Cells             {SDFSYNC1}                                                       {Avoid single stage syncers usage. Instead use multiple stage Synchronizer cells}
bbset dontuse.TieCells               {{TIE\[LH\]}}                                                    {Tie-high, tie-low cell group}
bbset dontuse.AllHighPerfCells       {.*SPG.* .*SR2.* .*BFY.* .*OPT.*}                                {# No Comment}  
bbset dontuse.AllFractionalLvtUlvtllUlvtCells {{.*D0.*BWP.*CPDLVT$} {.*D0.*BWP.*CPDULVTLL$} {.*D0.*BWP.*CPDULVT$}} {# No Comment}  
bbset dontuse.AllSvtLowDriveCells    {.*D1BWP.*SVT .*D1P5BWP.*SVT .*D2BWP.*SVT}                       {# No Comment}  
bbset dontuse.AllSvtMediumDriveCells {.*D3BWP.*SVT .*D4BWP.*SVT}                                      {# No Comment}  
bbset dontuse.AllLvtllLowDriveCells  {.*D1BWP.*CPDLVTLL .*XOR.*D2BWP.*CPDLVTLL .*SK.*D2BWP.*CPDLVTLL} {# No Comment}  
bbset dontuse.AllSKLowDriveCells     {{.*SK.*D1BWP.*CPDLVT$} {.*SK.*D1BWP.*CPDULVT$} {.*SK.*D1BWP.*CPDULVTLL$}} {# No Comment}  
bbset dontuse.EcoCells               {NONE}                                                           {ECO cell group. These cells have dont_use set in .libs}
bbset dontuse.NoMbitEquivalentFlopCells {^SDFKRPQD.* ^SDFKSNQD.* ^SDFKSRPQD.* ^SDFMQD.* ^SDFNQD.* ^SDFNRPQD.* ^SDFNSNQD.* ^SDFNSRPQD.* ^SDFQND.* ^SDFRPQND.* ^SDFSNQND.* ^SDFSRPQD.* ^SEDFKRPQD.* ^SEDFQD.* ^SEDFRPQD.* ^EDF.*} {# No Comment}  
bbset DontUseDataCells               {restrict(AllElvtCells) restrict(AllFractionalSVTCells) restrict(AllFractionalLVTLLFlopsCells) restrict(AllD0P5LVTLLCells) restrict(AllD0P7LVTLLCells) restrict(AllD24PlusCells) restrict(MetalEcoCells) restrict(DelayCells) restrict(ClockCells) restrict(SeqSvtCells) restrict(NonSeqSvtCells) restrict(Sync1Cells) restrict(HighDriveHighCurrentCells) restrict(TSMCPDK1P1RemovedCells) restrict(N2PExtra1P0Cells) restrict(ClockLACCells) {
                                      restrict(PpnnCells)
                                      restrict(PnnpCells)
                                      }} {Dont Use default for data}
bbset DontUseClockCells              {restrict(AllElvtCells) restrict(AllFractionalSVTCells) restrict(AllD24PlusCells) restrict(MetalEcoCells) restrict(DelayCells) restrict(SeqSvtCells) restrict(NonSeqSvtCells) restrict(Sync1Cells) restrict(ClockD2LessCells) restrict(ClockIllegalCells) restrict(TSMCPDK1P1RemovedCells) restrict(N2PExtra1P0Cells) restrict(ClockLACCells) {
                                      restrict(PpnnCells)
                                      restrict(PnnpCells)
                                      }} {Dont Use default for clock}
bbset syn.DontUseCells               {restrict(AllElvtCells) restrict(AllFractionalSVTCells) restrict(AllFractionalLVTLLFlopsCells) restrict(AllD0P5LVTLLCells) restrict(AllD0P7LVTLLCells) restrict(AllD24PlusCells) restrict(MetalEcoCells) restrict(DelayCells) restrict(ClockCells) restrict(SeqSvtCells) restrict(NonSeqSvtCells) restrict(Sync1Cells) restrict(HighDriveHighCurrentCells) restrict(TSMCPDK1P1RemovedCells) restrict(N2PExtra1P0Cells) restrict(ClockLACCells) {
                                      restrict(PpnnCells)
                                      restrict(PnnpCells)
                                      }
                                      restrict(UlvtllCells)
                                      restrict(UlvtCells)
                                      restrict(AllElvtCells)
                                      
                                      restrict(UlvtllCells)
                                      restrict(UlvtCells)
                                      restrict(AllElvtCells)
                                      } {Dont Use append for syn}
bbset pnr.DontUseCells               {restrict(AllElvtCells) restrict(AllFractionalSVTCells) restrict(AllFractionalLVTLLFlopsCells) restrict(AllD0P5LVTLLCells) restrict(AllD0P7LVTLLCells) restrict(AllD24PlusCells) restrict(MetalEcoCells) restrict(DelayCells) restrict(ClockCells) restrict(SeqSvtCells) restrict(NonSeqSvtCells) restrict(Sync1Cells) restrict(HighDriveHighCurrentCells) restrict(TSMCPDK1P1RemovedCells) restrict(N2PExtra1P0Cells) restrict(ClockLACCells) {
                                      restrict(PpnnCells)
                                      restrict(PnnpCells)
                                      }
                                      restrict(UlvtllCells)
                                      restrict(UlvtCells)
                                      restrict(AllElvtCells)
                                      
                                      restrict(UlvtllCells)
                                      restrict(UlvtCells)
                                      restrict(AllElvtCells)
                                      } {Dont Use append for pnr}
bbset eco.DontUseCells               {restrict(AllElvtCells) restrict(AllFractionalSVTCells) restrict(AllFractionalLVTLLFlopsCells) restrict(AllD0P5LVTLLCells) restrict(AllD0P7LVTLLCells) restrict(AllD24PlusCells) restrict(MetalEcoCells) restrict(DelayCells) restrict(ClockCells) restrict(SeqSvtCells) restrict(NonSeqSvtCells) restrict(Sync1Cells) restrict(HighDriveHighCurrentCells) restrict(TSMCPDK1P1RemovedCells) restrict(N2PExtra1P0Cells) restrict(ClockLACCells) allow(DelayCells) {
                                      restrict(PpnnCells)
                                      restrict(PnnpCells)
                                      }} {DontUse cell classes for ECO tools}
bbset pteco.DontUseCells             {
                                      [bbget "eco.DontUseCells"]
                                      } {DontUse cell classes for PTECO}
bbset tweaker.DontUseCells           {
                                      [bbget "eco.DontUseCells"]
                                      } {DontUse cell classes for Tweaker}
bbset sta.data.DontUseCells          {
                                      [bbget ".DontUseDataCells"]
                                      } {# No Comment}  
bbset dontuse.reporting              {
                                      {AllElvtCells error {ELVT are never use}}
                                      {AllFractionalSVTCells error {These are cells with high variation, reccomendation is to open these up only for leakage recovery}}
                                      {AllFractionalLVTLLFlopsCells warning {These are cells with high variation, reccomendation is to open it selectively}}
                                      {AllD0P5LVTLLCells error {These are cells with high variation, reccomendation is to open it selectively}}
                                      {AllD0P7LVTLLCells error {These are cells with high variation, reccomendation is to open it selectively}}
                                      {AllD24PlusCells error {Recommendation is not to have power hungry cells leading to high IR drop , no high drive CKGOLD should have more than 8% drop}}
                                      {MetalEcoCells error {Metal ECO only cells can be there only if for Metal ECO}}
                                      {DelayCells warning {only for hold fixing}}
                                      {ClockCells warning {only for CTS}}
                                      {SeqSvtCells error {Not allowed }}
                                      {NonSeqSvtCells error {Recommendation is to avoid these in iumplementation as they have high variation can be opened up for leakage recovery}}
                                      {Sync1Cells error {Review with design team that these are not single stage synchronizers}}
                                      {ClockD2LessCells error {Cells used in clock path less than D3}}
                                      {ClockIllegalCells error {Cells used in clock not CK version}}
                                      {AllFractionalLvtUlvtllUlvtCells warning {JSR limiter}}
                                      {AllSvtLowDriveCells warning {JSR limiter}}
                                      {AllSvtMediumDriveCells warning {JSR limiter}}
                                      {AllLvtllLowDriveCells warning {JSR limiter}}
                                      {AllSKLowDriveCells warning {JSR limiter}}
                                      {HighDriveHighCurrentCells warning {IR drop prone, high current  limiter}}
                                      {TSMCPDK1P1RemovedCells error {Removed in PDK1.0 based DK}}
                                      {ClockLACCells error {PNPN libcell having Merged OD internal to it}}
                                      {N2PExtra1P0Cells error {Extra 1.0 PDK cells will be removed from dont touch once all libs come}}
                                      
                                      } {# No Comment}  
bbset sta.derate.DontUseCells        {restrict(AllElvtCells) restrict(AllD0P5LVTLLCells) restrict(AllD0P6LVTLLCells) restrict(AllD0P7LVTLLCells) restrict(AllD0P8LVTLLCells) restrict(AllFractionalSVTCells) restrict(ClockD2LessCells) restrict(ClockIllegalCells) restrict(SeqSvtCells) restrict(AllFractionalLvtUlvtllUlvtCells) restrict(AllSvtLowDriveCells) restrict(AllSvtMediumDriveCells) restrict(AllLvtllLowDriveCells) restrict(AllSKLowDriveCells) {
                                      restrict(PpnnCells)
                                      restrict(PnnpCells)
                                      }} {# No Comment}  
bbset pnr.pg.CreatePSDLFileM0PGPreProcessCallback {
    set fiducial_boxes [dbShape [dbGet [dbGet top.insts.cell.name fiducial* -p2].boxes -e] SIZE 0.01]
    if { $fiducial_boxes != "" } {
        createRouteBlk -layer {M0 VIA0 M1} -boxlist $fiducial_boxes -name m0_fiducail_blkg
    }
} {# No Comment}  
bbset pnr.innovus.FloorplanPowerGridPostProcessCallback {
    if { ${::pnr.floorplan.RowEdgeRblkgs} == 1} {
        deleteRouteBlk -name row_edge_rblkgs
    }
} {# No Comment}  
bbset pnr.innovus.FloorplanBoundaryCellsPreProcessCallback {

    if { ${::pnr.floorplan.EnableDenseTapRegions} } {
        set num_dense_tap_regions 0
        foreach pad_inst [dbGet top.insts.cell.subClass pad* -p2] {
            set lup_layer [dbGet $pad_inst.cell.layerShapeObstructions.layer.name LUP* -e]
            if { $lup_layer == "" } {
                continue
            }
            set rect_boxes [dbGet [dbGet $pad_inst.cell.layerShapeObstructions.layer.name LUP* -e -p2].shapes.rect]
            sif::minfo "inst : [dbGet $pad_inst.name], boxes : $rect_boxes"
            foreach lup_box $rect_boxes {
                set lup_box [dbTransform -inst $pad_inst -localPt $lup_box]
                createRouteBlk -layer $lup_layer -name "dense_lup_tap_region_${num_dense_tap_regions}" -box $lup_box
                incr $num_dense_tap_regions
            }
        }
    }

} {# No Comment}  
bbset pnr.pg.ExecuteFinalPSDLPostProcessCallback {
    pgutils::cip_merge_stripes -user_class_source macro_grid -user_class_dest switch_grid -layer_name M13 -expandBy 4.0 -user_class_merge m13_merge_grid
    pgutils::cip_merge_stripes -user_class_source macro_grid -user_class_dest macro_grid -layer_name M13 -expandBy 4.0 -user_class_merge m13_merge_grid
    pgutils::cip_merge_stripes -user_class_source aon_grid -user_class_dest macro_grid -layer_name M13 -expandBy 4.0 -user_class_merge m13_merge_grid

	deselectAll
	editSelect -subclass m13_merge_grid
	set m13_merge_grid_shapes [dbGet selected]
	deselectAll

	set m13_merge_grid_shapes_expanded [dbShape [dbGet ${m13_merge_grid_shapes}.box] SIZEY 0.1]
	if {[llength $m13_merge_grid_shapes_expanded] > 0} {
		set m13_for_via [dbQuery -areas $m13_merge_grid_shapes_expanded -layer M13 -objType sWire]
		set m14_for_via [dbQuery -areas $m13_merge_grid_shapes_expanded -layer M14 -objType sWire]

		deselectAll
		select_obj $m13_for_via
		select_obj $m14_for_via

		setViaGenMode -reset
		set VIA13_master VIA1314_1cut
		setViaGenMode -viarule_preference "$VIA13_master" -allow_wire_shape_change false -optimize_cross_via false
		editPowerVia -between_selected_wires 1 -add_vias 1 -uda m13_merge_grid
		deselectAll
	}
} {# No Comment}  
bbset pnr.innovus.FloorplanGuardRingPostProcessCallback {

    deselectAll
    set pd [upfutils::get_default_power_domain]
    set net_name [pgutils::unalias_net_name -net AVSS -pd $pd]
    editSelect -subclass *guard_ring
    editChangeNet -to $net_name

    set core_box [dbget top.fplan.CoreBox]
    lassign {*}$core_box cllx clly urx ury

    set modify_core_box "[expr $cllx + 0.25] $clly $urx $ury"

    set macro_box [dbget -e [dbget top.insts.cell.subClass block -p2].box]

    set box [dbShape $core_box ANDNOT $modify_core_box ANDNOT $macro_box]

    set vss_inst [lindex [dbget -p2 [dbQuery -layers M12 -areas $box -objType sWire].net.name $net_name] 2]

    if {$vss_inst != ""} {
        select_obj $vss_inst
        editResize -direction x -offset -0.55 -side low
    } else {
        set modify_core_box "$cllx $clly [expr $urx - 0.25] $ury"
        set box [dbShape $core_box ANDNOT $modify_core_box]
        set vss_inst [lindex [dbget -p2 [dbQuery -layers M12 -areas $box -objType sWire].net.name $net_name] 2]
        if {$vss_inst != ""} {
            select_obj $vss_inst
            editResize -direction x -offset 0.55 -side high
        } else {
	    puts "Try to expand other layer"
        }
    }

    deselectAll

} {# No Comment}  
bbset pnr.innovus.PowerDomainBoundaryPreProcessCallback {
    if {${::pnr.floorplan.RedefineVoltageArea} == 1} {
        set all_pd ""
        set all_boxes ""
        foreach {pd boxes} ${::pnr.floorplan.VoltageAreas} {
            lappend all_pd $pd
            lappend all_boxes $boxes
        }

        set modified_VoltageAreas {}

        set index 0

        foreach boxes $all_boxes {
            set modified_box $boxes
            foreach box $boxes {
                lassign $box bllx blly burx bury
                set except_box [dbShape $all_boxes ANDNOT $boxes]
                set left_extend_box "[expr $bllx - 1.008] $blly $burx $bury"
                set overlap_box [dbShape $left_extend_box AND $except_box]
                if {$overlap_box != ""} {
                    set modified_box [dbShape $modified_box ANDNOT $box]
                    lappend modified_box "[expr $bllx + 0.504] $blly $burx $bury"
	            set box "[expr $bllx + 0.504] $blly $burx $bury"
	            lassign $box bllx blly burx bury
                }
	        set right_extend_box "$bllx $blly [expr $burx + 1.008] $bury"
                set overlap_box [dbShape $right_extend_box AND $except_box]
                if {$overlap_box != ""} {
                    set modified_box [dbShape $modified_box ANDNOT $box]
                    lappend modified_box "$bllx $blly [expr $burx - 0.504] $bury"
	            set box "$bllx $blly [expr $burx - 0.504] $bury"
	            lassign $box bllx blly burx bury
                }
	        set top_extend_box "$bllx $blly $burx [expr $bury + 1.008]"
                set overlap_box [dbShape $top_extend_box AND $except_box]
                if {$overlap_box != ""} {
                    set modified_box [dbShape $modified_box ANDNOT $box]
                    lappend modified_box "$bllx $blly $burx [expr $bury - 0.504]"
	            set box "$bllx $blly $burx [expr $bury - 0.504]"
	            lassign $box bllx blly burx bury
                }
                set bottom_extend_box "$bllx [expr $blly - 1.008] $burx $bury"
                set overlap_box [dbShape $bottom_extend_box AND $except_box]
                if {$overlap_box != ""} {
                    set modified_box [dbShape $modified_box ANDNOT $box]
                    lappend modified_box "$bllx [expr $blly + 0.504] $burx $bury"
	            set box "$bllx [expr $blly + 0.504] $burx $bury"
	            lassign $box bllx blly burx bury
                }

            }
            set boxes [dbShape $modified_box SIZE 1.008 SIZE -1.008]

            lappend modified_VoltageAreas [lindex $all_pd $index]
            lappend modified_VoltageAreas $boxes

            set index [expr $index + 1]
            puts $modified_VoltageAreas
            puts $index

        }
        set pnr.floorplan.VoltageAreas $modified_VoltageAreas
    }
} {# No Comment}  
bbset pnr.floorplan.CustomMacroGridOverrides {
                                      {CELL ABKRTAP2
                                      REGION {
                                      {0 58.596 173.472 71.0025} {
                                      REGION_CELL_PG_PINS { VSS VDDA VDD}
                                      REGION_OVERRIDES {
                                      VDD {
                                      M10 {WIDTH 0.456 PITCH 56 PATTERN {0 28}}
                                      }
                                      
                                      VDDA {
                                      M10 {WIDTH 0.456 PITCH 56 PATTERN 14}
                                      
                                      
                                      }
                                      VSS {
                                      M10 {WIDTH 0.456 PITCH 56 PATTERN 42}
                                      
                                      }
                                      
                                      }
                                      }
                                      }
                                      CELL_PG_PINS { VSS VDD VDDA}
                                      OVERRIDES {
                                      VDD {
                                      
                                      M11 {WIDTH 0.3 PITCH 36 PATTERN 0}
                                      M12 {WIDTH 0.38 PITCH 24 PATTERN 0}
                                      M13 {WIDTH 0.38 PITCH 24 PATTERN 0}
                                      
                                      }
                                      VDDA {
                                      M10 {WIDTH 0.38 PITCH 24 PATTERN 0}
                                      M11 {WIDTH 0.3 PITCH 36 PATTERN 12}
                                      M12 {WIDTH 0.38 PITCH 24 PATTERN 8}
                                      M13 {WIDTH 0.38 PITCH 24 PATTERN 8}
                                      }
                                      VSS {
                                      M10 {WIDTH 0.38 PITCH 24 PATTERN 12}
                                      M11 {WIDTH 0.3 PITCH 36 PATTERN 24}
                                      M12 {WIDTH 0.38 PITCH 24 PATTERN 16}
                                      M13 {WIDTH 0.38 PITCH 24 PATTERN 16}
                                      }
                                      }
                                      }
                                      
                                      {CELL ABKRTAP3
                                      REGION {
                                      {0 58.596 72.0 71.0025} {
                                      REGION_CELL_PG_PINS { VSS VDDA VDD}
                                      REGION_OVERRIDES {
                                      VDD {
                                      M10 {WIDTH 0.456 PITCH 56 PATTERN {0 28}}
                                      }
                                      
                                      VDDA {
                                      M10 {WIDTH 0.456 PITCH 56 PATTERN 14}
                                      
                                      
                                      }
                                      VSS {
                                      M10 {WIDTH 0.456 PITCH 56 PATTERN 42}
                                      
                                      }
                                      
                                      }
                                      }
                                      }
                                      CELL_PG_PINS { VSS VDD VDDA}
                                      OVERRIDES {
                                      VDD {
                                      
                                      M11 {WIDTH 0.3 PITCH 36 PATTERN 0}
                                      M12 {WIDTH 0.38 PITCH 24 PATTERN 0}
                                      M13 {WIDTH 0.38 PITCH 24 PATTERN 0}
                                      
                                      }
                                      VDDA {
                                      M10 {WIDTH 0.38 PITCH 24 PATTERN 0}
                                      M11 {WIDTH 0.3 PITCH 36 PATTERN 12}
                                      M12 {WIDTH 0.38 PITCH 24 PATTERN 8}
                                      M13 {WIDTH 0.38 PITCH 24 PATTERN 8}
                                      }
                                      VSS {
                                      M10 {WIDTH 0.38 PITCH 24 PATTERN 12}
                                      M11 {WIDTH 0.3 PITCH 36 PATTERN 24}
                                      M12 {WIDTH 0.38 PITCH 24 PATTERN 16}
                                      M13 {WIDTH 0.38 PITCH 24 PATTERN 16}
                                      }
                                      }
                                      }
                                      
                                      {CELL ESD_B2B_1_M6
                                      CELL_PG_PINS { VSSESD2 VSSESD1 }
                                      OVERRIDES {
                                      VSSESD2 {
                                      M7 {WIDTH 0.48 PITCH 24 PATTERN 0}
                                      M8 {WIDTH 0.48 PITCH 24 PATTERN 0}
                                      M9 {WIDTH 0.48 PITCH 24 PATTERN 0}
                                      M10 {WIDTH 0.48 PITCH 24 PATTERN 0}
                                      M11 {WIDTH 0.48 PITCH 24 PATTERN 0}
                                      M12 {WIDTH 0.44 PITCH 16 PATTERN 0}
                                      M13 {WIDTH 0.44 PITCH 18 PATTERN 0}
                                      
                                      
                                      }
                                      VSSESD1 {
                                      M7 {WIDTH 0.48 PITCH 24 PATTERN 12}
                                      M8 {WIDTH 0.48 PITCH 24 PATTERN 12}
                                      M9 {WIDTH 0.48 PITCH 24 PATTERN 12}
                                      M10 {WIDTH 0.48 PITCH 24 PATTERN 12}
                                      M11 {WIDTH 0.48 PITCH 24 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 16 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 18 PATTERN 9}
                                      
                                      
                                      }
                                      
                                      }
                                      
                                      }
                                      
                                      {CELL prtn_lvts
                                      CELL_PG_PINS { VSS VDD_LVTS VDD }
                                      OVERRIDES {
                                      VDD {
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 9}
                                      
                                      
                                      }
                                      VDD_LVTS {
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 24}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 27}
                                      }
                                      VSS {
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN {0 16} }
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN {0 18} }
                                      }
                                      }
                                      
                                      }
                                      {CELL TEF02P256X32HD18_PHRM
                                      CELL_PG_PINS { VSS VQPS VDD }
                                      OVERRIDES {
                                      VDD {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 9}
                                      
                                      
                                      }
                                      VQPS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 24}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 27}
                                      }
                                      VSS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN {0 16} }
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN {0 18} }
                                      }
                                      }
                                      
                                      }
                                      {CELL  TEF02P64X32HD18_PHRM
                                      CELL_PG_PINS { VSS VQPS VDD }
                                      OVERRIDES {
                                      VDD {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 9}
                                      
                                      
                                      }
                                      VQPS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 24}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 27}
                                      }
                                      VSS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN {0 16} }
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN {0 18} }
                                      }
                                      }
                                      
                                      }
                                      {CELL TEF02P128X32HD18_PHRM
                                      CELL_PG_PINS { VSS VQPS VDD }
                                      OVERRIDES {
                                      VDD {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 9}
                                      
                                      
                                      }
                                      VQPS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 24}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 27}
                                      }
                                      VSS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN {0 16} }
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN {0 18} }
                                      }
                                      }
                                      
                                      }
                                      {CELL TEF02P32X32HD18_PHRM
                                      CELL_PG_PINS { VSS VQPS VDD }
                                      OVERRIDES {
                                      VDD {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 9}
                                      
                                      
                                      }
                                      VQPS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 24}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 27}
                                      }
                                      VSS {
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN {0 16} }
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN {0 18} }
                                      }
                                      }
                                      
                                      }
                                      {CELL PLLTS2NSPFRACQ2
                                      CELL_PG_PINS { VSS VDDREF VDDPOST VDDHV }
                                      OVERRIDES {
                                      VSS {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 9}
                                      }
                                      VDDREF {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 24}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 16}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 18}
                                      }
                                      VDDPOST {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 24 }
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 27 }
                                      }
                                      VDDHV {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN  48}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN  32}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN  36 }
                                      }
                                      }
                                      
                                      }
                                      {CELL PLLTS2NSPFRACQ
                                      CELL_PG_PINS { VSS VDDREF VDDPOST VDDHV }
                                      OVERRIDES {
                                      VSS {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 9}
                                      }
                                      VDDREF {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 24}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 16}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 18}
                                      }
                                      VDDPOST {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 24 }
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 27 }
                                      }
                                      VDDHV {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN  48}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN  32}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN  36 }
                                      }
                                      }
                                      
                                      }
                                      {CELL PLLTS2NSPFRACQ3
                                      CELL_PG_PINS { VSS VDDREF VDDPOST VDDHV }
                                      OVERRIDES {
                                      VSS {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 9}
                                      }
                                      VDDREF {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 24}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 16}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 18}
                                      }
                                      VDDPOST {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN 24 }
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN 27 }
                                      }
                                      VDDHV {
                                      M11 {WIDTH 0.48 PITCH 60 PATTERN  48}
                                      M12 {WIDTH 0.44 PITCH 40 PATTERN  32}
                                      M13 {WIDTH 0.44 PITCH 45 PATTERN  36 }
                                      }
                                      }
                                      
                                      }
                                      {CELL amux_top
                                      CELL_PG_PINS { vss vdd_core vdd_io vddpst04 vddpst08  }
                                      OVERRIDES {
                                      vss {
                                      M9 {WIDTH 0.48 PITCH 96 PATTERN {0 48}}
                                      M10 {WIDTH 0.48 PITCH 96 PATTERN {0 48}}
                                      M11 {WIDTH 0.48 PITCH 96 PATTERN {0 48}}
                                      M12 {WIDTH 0.44 PITCH 72 PATTERN {8 40}}
                                      M13 {WIDTH 0.44 PITCH 81 PATTERN {9 45}}
                                      }
                                      vdd_core {
                                      M9 {WIDTH 0.48 PITCH 96 PATTERN {12 60}}
                                      M10 {WIDTH 0.48 PITCH 96 PATTERN {12 60}}
                                      M11 {WIDTH 0.48 PITCH 96 PATTERN {12 60}}
                                      M12 {WIDTH 0.44 PITCH 72 PATTERN {16 48}}
                                      M13 {WIDTH 0.44 PITCH 81 PATTERN {18 54}}
                                      }
                                      vdd_io {
                                      M9 {WIDTH 0.48 PITCH 96 PATTERN {24 72}}
                                      M10 {WIDTH 0.48 PITCH 96 PATTERN {24 72}}
                                      M11 {WIDTH 0.48 PITCH 96 PATTERN {24 72}}
                                      M12 {WIDTH 0.44 PITCH 72 PATTERN {24 56} }
                                      M13 {WIDTH 0.44 PITCH 81 PATTERN {27 63}}
                                      }
                                      vddpst04 {
                                      M9 {WIDTH 0.48 PITCH 96 PATTERN 36}
                                      M10 {WIDTH 0.48 PITCH 96 PATTERN 36}
                                      M11 {WIDTH 0.48 PITCH 96 PATTERN  36}
                                      M12 {WIDTH 0.44 PITCH 72 PATTERN  32}
                                      M13 {WIDTH 0.44 PITCH 81 PATTERN  36 }
                                      }
                                      vddpst08 {
                                      M9 {WIDTH 0.48 PITCH 96 PATTERN 84}
                                      M10 {WIDTH 0.48 PITCH 96 PATTERN 84}
                                      M11 {WIDTH 0.48 PITCH 96 PATTERN  84}
                                      M12 {WIDTH 0.44 PITCH 72 PATTERN  64}
                                      M13 {WIDTH 0.44 PITCH 81 PATTERN  72 }
                                      }
                                      }
                                      
                                      }
                                      
                                      {CELL tcxo_clock_buffer_top
                                      CELL_PG_PINS { vss vdd_core vss vdd_io }
                                      OVERRIDES {
                                      vss {
                                      M9 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN {0 24}}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN {0 16} }
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN {0 18} }
                                      }
                                      vdd_core {
                                      M9 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 12}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 8}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 9}
                                      
                                      
                                      }
                                      vdd_io {
                                      M9 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M10 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M11 {WIDTH 0.48 PITCH 48 PATTERN 36}
                                      M12 {WIDTH 0.44 PITCH 32 PATTERN 24}
                                      M13 {WIDTH 0.44 PITCH 36 PATTERN 27}
                                      }
                                      
                                      }
                                      
                                      }
                                      
                                      
                                      
                                      } {# No Comment}  
bbset pnr.floorplan.SVDDSwitchedDomain {}                                                               {# No Comment}  
bbset pnr.floorplan.AvoidPinPromotionCells {}                                                               {# No Comment}  
bbset pnr.innovus.FloorplanTapCellsPostProcessCallback {
    if { ${::pnr.floorplan.EnableDenseTapRegions} } {
        catch {deleteRouteBlk -name dense_lup_tap_region_*}
    }

    set fid_insts [dbGet top.insts.cell.name ${::pnr.floorplan.FiducialCell} -e]
    if { $fid_insts != "" } {
        deselectAll
        selectInstByCellName ${::pnr.floorplan.FiducialCell}
        dbSet selected.pStatus fixed
        deselectAll
    }
    
} {# No Comment}  
bbset pnr.innovus.FloorplanSetupPostProcessCallback {
    dbDeleteTrialRoute
}                                       {# No Comment}  
bbset pnr.innovus.FloorplanSecondaryPowerGridPostProcessCallback {

    if { ${::pnr.floorplan.ExtendPGStripesTillDieBoundary} } {

        foreach pgnet [pgutils::get_power_nets] {
            pgutils::extend_stripes -layer M15 -spacing 2 -net_name $pgnet
            pgutils::extend_stripes -layer M14 -spacing 2 -net_name $pgnet
        }

    }
    pgutils::create_pins
} {# No Comment}  
bbset pnr.innovus.ChipFinishStapleViasPreCallback {
    if { ${::pnr.chipfinish.DeleteVia0OBSecofiller} } {
        set eco_fills_v0_obs [dbget -u -p top.insts.cell.name "GFILL*|GDCAP*" -regex]
        if {$eco_fills_v0_obs != "0x0"} {
            foreach v0_obs_del $eco_fills_v0_obs {
                delete_cell_obs -cells $v0_obs_del -layers VIA0
            }
        }
    }
} {# No Comment}  
bbset pnr.floorplan.FixedTCustomGridMacro {*PCLAMP*}                                                       {list: of custom ip cells whose custom PG need to be cover type }
bbset pnr.floorplan.MacroPGBoxOverrides {}                                                               {dict: <pg_net> list box1 box2 <pg_net2> list box3 box4 define like this to create specific voltage supply only over probided boxes in Macro }
bbset pnr.floorplan.CustomMacroInclude {}                                                               {list: of custom ip cell name to include for custom PG creation}
bbset pnr.floorplan.CustomMacroExclude {}                                                               {list: of custom ip cell name to exclude for custom PG craetion}
bbset pnr.floorplan.AbutPowerSwitchBotOffsetOverrides {}                                                               {dict: Bottom Offset override for 2nd row of abutted power switches}
bbset pnr.floorplan.M1AlignAbutPowerSwitch {1}                                                              {bool: align M1 switch pillar of abut power switch}
bbset pnr.floorplan.CriticalBoundarySwitchCell {HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT}                        {# No Comment}  
bbset pnr.floorplan.FiducialBoundaryDistance {-5}                                                             {Distance b/w Fiducial and Boundary}
bbset pnr.floorplan.FiducialExtraBoundaryDistance {-5}                                                             {Extra Fiducial Distance b/w fiducial and Boundary}
bbset pnr.floorplan.FiducialFillwallDistance {4}                                                              {Distance b/w Fiducial and Fillwall}
bbset pnr.floorplan.FiducialExtraFillwallDistance {3}                                                              {Extra Fillwall distance b/w Fiducial and Fillwall}
bbset pnr.floorplan.FiducialMoveY    {-0.26}                                                          {Fiducial movement post placing b/w switches}
bbset pnr.floorplan.FiducialMoveX    {0}                                                              {Fiducial movement post placing b/w switches}
bbset pnr.floorplan.FiducialMaxChannelWidth {15}                                                             {Fiducial channel max width}
bbset pnr.floorplan.FiducialMaxChannelHeight {15}                                                             {Fiducial channel max height}
bbset pnr.floorplan.FiducialCoverageSizeX {27.5}                                                           {Fiducial Coverage on X-direction}
bbset pnr.floorplan.FiducialCoverageSizeY {27.5}                                                           {Fiducial Coverage on Y-direction}
bbset pnr.floorplan.FiducialSite     {coreW48H130}                                                    {Fiducial site name}
bbset pnr.floorplan.FiducialBoundaryDistanceX {-3}                                                             {The area around boundary cells in X that fiducial should not be placed in}
bbset pnr.floorplan.FiducialBoundaryDistanceY {0}                                                              {The are around boundary cells in Y that fiducial should not be placed in}
bbset pnr.floorplan.EnableFiducialPostPSW {0}                                                              {Insert Fiducial Post PSW Insertion}
bbset pnr.floorplan.FiducialSpec     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pnr_scripts/procs.fiducial.tcl} {# No Comment}  
bbset pnr.floorplan.MacroChainTieCell {}                                                               {str: Insert Tie cell if the MacroROPInPort is missing}
bbset pnr.floorplan.MemoryPGRecipe   {default}                                                        {str: Can be default, recipe1, recipe2 or recipe3}
bbset pnr.floorplan.MemoryPGExtraM7M9Overrides {}                                                               {dict: Keys Can be MVDD or AVDD. In value specify list of instances. Applicable for Recipe1,2,3}
bbset pnr.floorplan.AONPGM2Continuous {1}                                                              {bool: Switch to choose whether M2 in AON PG should be continuous stripe or a staple}
bbset pnr.floorplan.PGDrcCleanUpProcs {1}                                                              {# No Comment}  
bbset pnr.floorplan.MemoryRecipe1FPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_recipe1_var.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryRecipe1FPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_recipe1_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryRecipe2FPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_recipe2_var.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryRecipe2FPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_recipe2_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryRecipe3FPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_recipe3_var.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryRecipe3FPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_recipe3_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_2xM5_1xp76Pillar_3xM11M12_var_default.tcl} {# No Comment}  
bbset pnr.floorplan.MemoryFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/macro_fpg_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.SRMemoryFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/single_macro_fpg_2xM5_1xp76Pillar_3xM11M12_var_default.tcl} {# No Comment}  
bbset pnr.floorplan.SRMemoryFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/single_macro_fpg_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.DefaultFlowFPG   {1}                                                              {bool: Disbale to run the external flash PG file}
bbset pnr.floorplan.FPGFilePath      {}                                                               {str: Provide external flash PG file path}
bbset pnr.floorplan.M0StripesFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/m0_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.SwitchPillarFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/switch_pillar_fpg_abut_var.tcl} {# No Comment}  
bbset pnr.floorplan.SwitchPillarFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/switch_pillar_fpg_abut_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.SwitchedDomainFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/switched_domain_fpg_abut_var.tcl} {# No Comment}  
bbset pnr.floorplan.SwitchedDomainFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/switched_domain_fpg_abut_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.SwitchedDomainSVDDFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/switched_domain_fpg_abut_create_svdd_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.SwitchedDomainSVDDFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/switched_domain_fpg_abut_svdd_var.tcl} {# No Comment}  
bbset pnr.floorplan.AonDomainFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/AON_H130_M1_16_P76_24_var.tcl} {# No Comment}  
bbset pnr.floorplan.AonDomainFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/aon_domain_pg_p76_align_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.AonDomainVCFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/aon_vc_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.MinVChannelFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/min_vertical_channel_var.tcl} {# No Comment}  
bbset pnr.floorplan.MinVChannelFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/min_vertical_channel_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.MinM1AlignPSVChannelWidth {3.408}                                                          {# No Comment}  
bbset pnr.floorplan.EnableCustomMacroPG {true}                                                           {# No Comment}  
bbset pnr.floorplan.CustomMacroFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/custom_macro_pg_var.tcl} {# No Comment}  
bbset pnr.floorplan.CustomMacroFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/custom_macro_pg_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.VerticalChannelFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/vertical_channel_var.tcl} {# No Comment}  
bbset pnr.floorplan.VerticalChannelFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/vertical_channel_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.ValidCoreSwitchPitchCombination {12.288 {2 3 4 5} 15.36 {2 3 4 5 6}}                             {# No Comment}  
bbset pnr.floorplan.CustomMacroGridTCL {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/custom_macro_pg_grid_override.tcl} {# No Comment}  
bbset pnr.floorplan.SpecialMacroFPGScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/special_macros_pg.psdl} {# No Comment}  
bbset pnr.floorplan.SpecialMacroList {"boxcar_cs_top" "ABKXTLP2" "ABKBCKP2" "amux_top"}               {# No Comment}  
bbset pnr.floorplan.ReducedSwitchPG  {1}                                                              {# No Comment}  
bbset pnr.floorplan.ReducedSwitchPillarPG {1}                                                              {# No Comment}  
bbset pnr.floorplan.M1OverEndCapFPGVarScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/m1_over_endcaps_var.tcl} {# No Comment}  
bbset pnr.floorplan.M1OverEndCapFPGPSDLScript {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/flash_pg/h130/m1_over_endcaps_create_psdl.tcl} {# No Comment}  
bbset pnr.floorplan.HammerEndLogicAndCell {PTAN2HDCWGOLD1BWP130HPNPN3P48CPDLVTLL}                          {AND cell for hammer end logic}
bbset pnr.floorplan.HammerEndLogicOrCell {PTOR2HDCWGOLD1BWP130HPNPN3P48CPDLVTLL}                          { OR cell for hammer end logic}
bbset pnr.floorplan.RowEdgeRblkgs    {0}                                                              {# No Comment}  
bbset pnr.floorplan.SswrpGuardRingBottomLayer {M2}                                                             {# No Comment}  
bbset pnr.floorplan.SswrpGuardRingTopLayer {M13}                                                            {# No Comment}  
bbset pnr.floorplan.SswrpGuardRingSpacing {M2 4 M3 4 M4 4 M5 4 M6 8 M7 8 M8 8 M9 8 M10 8 M11 8 M12 6 M13 6} {distance from sswrp in pitch units {metal1 pitch1 metal2 pitch2}}
bbset pnr.floorplan.SswrpGuardRingCells {}                                                               {# No Comment}  
bbset pnr.floorplan.RedefineVoltageArea {0}                                                              {Enable: To define the proper space in between the power domain}
bbset pnr.innovus.SetupReadDEFPreProcessCallback {
        setDesignMode -reset
        setFPlanMode -reset
        setDesignMode -flowEffort standard -process 2 -node N2
        ##AK_N2 setFPlanMode -defaultRowPatternSite coreW48M143H286 -firstRowSiteIndex 0 -lastRowSiteIndex 0
        setFPlanMode -rowSiteHeight even
        ##AK_N2 setFPlanMode -rowHeightMultiple 2
        ##AK_N2 setFPlanMode -rowHeightIncrementCornerToCorner 3
        ##AK_N2 setFPlanMode -rowHeightIncrementIncornerToCorner 0
        ##AK_N2 setFPlanMode -rowHeightIncrementIncornerToIncorner 5
        setFPlanMode -initAllCompatibleCoreSiteRows true
        ##AK_N2 #setPreference ConstraintUserYGrid 0.572
        ##AK_N2 #setPreference ConstraintUserXGrid 0.048
        ##AK_N2 setFPlanMode -user_define_grid {0.0 0.0 0.048 0.572}
        ##AK_N2 setFPlanMode -snapDieGrid userDefine
        ##AK_N2 setFPlanMode -snapCoreGrid userDefine
        setFPlanMode -enableRectilinear true
        ##AK_N2 setFPlanMode -snapConstraint userDefine
    } {# No Comment}  
bbset pnr.innovus.SetupSettingsPostProcessCallback {

    setDesignMode -process 2 -node N2
    setNanoRouteMode -dbProcessNode N2

    if {${::Track} == "h130"} {
        change_IB_cell_site_name -original {ibcoreW48H130} -NF {hncoreW48H130} -PF {hpcoreW48H130} -NNF {icoreW48H130} -PPF {icoreExtW48H130} -new {coreW48H130} -vertical
    } else {
        change_IB_cell_site_name -original {ibcoreW48H156} -NF {hncoreW48H156} -PF {hpcoreW48H156} -NNF {icoreW48H156} -PPF {icoreExtW48H156} -new {coreW48H156} -vertical
    }

} {# No Comment}  
bbset pnr.innovus.PowerDomainBoundaryPreCallback {
        ##AK_N2 setPreference ConstraintUserXGrid 0.048
        ##AK_N2 setPreference ConstraintUserYGrid 0.572
        ##AK_N2 setFPlanMode  -snap_all_corners_to_grid true
    } {# No Comment}  
bbset pnr.innovus.FloorplanFiducialCellPreProcessCallback {
        if {[dbGet -e head.libCells.name ${::pnr.floorplan.FiducialCell}] == ""} {
            loadLefFile /google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/$DkVersion/lef/ip_fiducial_h156/fiducial_h156.lef
            loadLefFile /google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/$DkVersion/lef/ip_fiducial_h130/fiducial_h130.lef
           }
    } {# No Comment}  
bbset pnr.innovus.FloorplanFinishPostProcessCallback {
        source ${::PROCESS_DIR}/pnr/pg/h130/drc_cleanup_pg.tcl
        ##AK_N2 fix_m2_area_violations
    } {# No Comment}  
bbset pnr.innovus.FloorplanPowerGridPreCallback {::common::save_design -name "BeforePowerGrid"}                  {# No Comment}  
bbset pnr.floorplan.CoreSwitchAlignPreProcessCallback {
       set flag "0"
       if { [lindex ${::pnr.floorplan.ValidCoreSwitchPitchCombination} 0] == ${::pnr.floorplan.CoreSwitchXPitch} } {
           set value [lindex ${::pnr.floorplan.ValidCoreSwitchPitchCombination} 1]
           foreach v $value {
               if { $v == ${::pnr.floorplan.CoreRegionSwitchYPitch} } {
                   set flag "1"
               }
           }

           if {$flag == 0} {
               sif::mfatal "Invalid switch combination CoreSwitchXPitch - ${::pnr.floorplan.CoreSwitchXPitch} , CoreRegionSwitchYPitch - ${::pnr.floorplan.CoreRegionSwitchYPitch}"
           }
       } elseif { [lindex ${::pnr.floorplan.ValidCoreSwitchPitchCombination} 2] == ${::pnr.floorplan.CoreSwitchXPitch} } {
           set value [lindex ${::pnr.floorplan.ValidCoreSwitchPitchCombination} 3]
           foreach v $value {
               if { $v == ${::pnr.floorplan.CoreRegionSwitchYPitch} } {
                   set flag "1"
               }
           }

           if { $flag == 0 } {
               sif::mfatal "Invalid switch combination CoreSwitchXPitch - ${::pnr.floorplan.CoreSwitchXPitch} , CoreRegionSwitchYPitch - ${::pnr.floorplan.CoreRegionSwitchYPitch}"
           }
       } else {
           sif::mfatal "Invalid switch combination CoreSwitchXPitch - ${::pnr.floorplan.CoreSwitchXPitch}"
       }

    } {# No Comment}  
bbset pnr.clock.MSCTSHTreeRoutingRules {CLOCK_1W_2S_htree}                                              {# No Comment}  
bbset pnr.SwapCellPatterns           {}                                                               {# No Comment}  
bbset pnr.voltus.PGSupplyNet         {VDD_}                                                           {# No Comment}  
bbset pnr.voltus.PGVoltage           {0.825}                                                          {# No Comment}  
bbset pnr.voltus.ExtractorTechFile   {[bbquery get file  -db pdk -filter "file_type=~'parasitics' &&  tool=~'qrc' && corner=~'rcworst_CCworst_T'"]} {# No Comment}  
bbset pnr.voltus.LayerMap            {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/voltus/n3e.layermap} {# No Comment}  
bbset pnr.voltus.PGLibModeSettings   {
                                      {celltype techonly}  {extraction_tech_file [bbget .pnr.voltus.ExtractorTechFile]}  {default_power_voltage [bbget .pnr.voltus.PGVoltage]} {default_area_cap 0}  {lef_layermap [bbget .pnr.voltus.LayerMap]}  {powergate_parameters {{[bbget .pnr.floorplan.CoreSwitchCell] TVDD VDD 21.6 1 1}}} } {# No Comment}  
bbset pnr.voltus.PGNetsSettings      {
                                      [bbget .pnr.voltus.PGSupplyNet] {-force -voltage [bbget .pnr.voltus.PGVoltage] -threshold 0.05}
                                      VSS {-force -voltage 0 -threshold 0.05}
                                      } {# No Comment}  
bbset pnr.voltus.PowerPADsSettings   {
                                      [bbget .pnr.voltus.PGSupplyNet] {-auto_voltage_source_creation true}
                                      VSS {-auto_voltage_source_creation true}
                                      } {# No Comment}  
bbset pnr.voltus.RailAnalysisDomains {
                                      CORE { -pwrnets [bbget .pnr.voltus.PGSupplyNet] -gndnets VSS }
                                      } {# No Comment}  
bbset pnr.voltus.RailAnalysisModeSettings {
                                      {enable_manufacturing_effects true} {extractor_include [bbget .info.PROCESS_DIR]/pnr/voltus/zc.inc}  {method static} {temperature 125} {accuracy hd} {enable_xp true} 
                                      {extraction_tech_file [bbget .pnr.voltus.ExtractorTechFile]}
                                      {ignore_shorts true} {report_shorts true} {enable_rlrp_analysis true} {enable_reff_analysis true} {force_extraction true}
                                      } {# No Comment}  
bbset pnr.ForceCellSwap              {}                                                               {# No Comment}  
bbset sif.innovus.OpenDesignPostProcessCallback {
    foreach s [dbget head.libCells.site.name *H390 -u] {
        get_db base_cells -if {.site.name == $s} -foreach {set_db $obj(.) .site [regsub 390 $s 130]}
    }
} {# No Comment}  
bbset sif.innovus.export.OpenDesignPostProcessCallback {
    foreach s [dbget head.libCells.site.name *H390 -u] {
        get_db base_cells -if {.site.name == $s} -foreach {set_db $obj(.) .site [regsub 390 $s 130]}
    }
} {# No Comment}  
bbset pnr.saveNetlistOptions         {}                                                               {# No Comment}  
bbset pnr.StreamOutOptions           {-units 2000}                                                    {# No Comment}  
bbset pnr.fc.writeVerilogOptions     {}                                                               {# No Comment}  
bbset pnr.flat_pg.fc.writeVerilogOptions {-rename_cell "[bbget pnr.CELL_NAME_MAP_FILE ]"}                 {# No Comment}  
bbset pnr.pg_final.fc.writeVerilogOptions {-rename_cell "[bbget pnr.CELL_NAME_MAP_FILE ]"}                 {# No Comment}  
bbset pnr.lvs.fc.writeVerilogOptions {-rename_cell "[bbget pnr.CELL_NAME_MAP_FILE ]"}                 {# No Comment}  
bbset pnr.innovus.ChipFinishFillerPostProcessCallback {

        if {[dbget top.statusDetailRouted]} {
            if { ${::pnr.chipfinish.FillerDRCCheckArea} != "" } {
                verify_drc -limit 0 -area ${::pnr.chipfinish.FillerDRCCheckArea}
            } else {
                verify_drc -limit 0
            }
            setDesignMode -merge_trim_shapes {{layers CM0 gap 0.004 max_merge_num 3 masks {1 2}}}
            ecoRoute -fix_filler_drc_with_patch_only -passive_fill
            if { ${::pnr.chipfinish.FillerDRCCheckArea} != "" } {
                verify_drc -limit 0 -area ${::pnr.chipfinish.FillerDRCCheckArea}
            } else {
                verify_drc -limit 0
            }
            set_verify_drc_mode -check_implant false
            if { ${::pnr.chipfinish.FillerDRCCheckArea} != "" } {
                verify_drc -limit 0 -area ${::pnr.chipfinish.FillerDRCCheckArea} -enable_post_passive_fill_check
            } else {
                verify_drc -limit 0 -enable_post_passive_fill_check
            }
            create_virtual_shape_on_pg_wires -layers {{BCM0V, M0}} -name BCM0V_Marker

        } else {
            if {${::pnr.chipfinish.EnableUnroutedPassiveFill}} {
                # For ESA case, all the cell need to be placed to avoid routing Error
                set unplaced_insts [dbGet -u -e -p top.insts.pStatus unplaced]
                set unplaced_insts_nets [dbGet -u -e -p [dbGet -u -e -p $unplaced_insts.instTerms.net.isPwrOrGnd 0].skipRouting 0]
                if {$unplaced_insts != ""} {
                  dbSet ${unplaced_insts}.pStatus placed
                }
                if {$unplaced_insts_nets != ""} {
                  dbSet ${unplaced_insts_nets}.skipRouting 1
                }
                verify_drc -limit 0 -layer_range {M0 M1}
                setDesignMode -merge_trim_shapes {{layers CM0 gap 0.004 max_merge_num 3 masks {1 2}}}
                ecoRoute -fix_filler_drc_with_patch_only -passive_fill
                create_virtual_shape_on_pg_wires -layers {{BCM0V, M0}} -name BCM0V_Marker
                # set the unplaced cell back to be unplaced
                if {$unplaced_insts != ""} {
                  dbSet ${unplaced_insts}.pStatus unplaced
                }
                if {$unplaced_insts_nets != ""} {
                  dbSet ${unplaced_insts_nets}.skipRouting 0
                }
            }
        }
    } {# No Comment}  
bbset pnr.innovus.ChipFinishStapleViasPreProcessCallback {
        if { [llength [dbGet -e head.vias.name V*_STAPLE_VIA]] == 0 } {
            add_via_definition -cut_layer VIA0 -top_layer M1 -bottom_layer M0  -bottom_rects {-0.02 -0.01 0.02 0.01} -top_rects {-0.014 -0.0295 0.014 0.0295}   -cut_rects {-0.009 -0.009 0.009 0.009}  -name V1_STAPLE_VIA
            add_via_definition -cut_layer VIA1 -top_layer M2 -bottom_layer M1  -bottom_rects {-0.014 -0.0295 0.014 0.0295} -top_rects {-0.027 -0.006 0.027 0.006}  -cut_rects {-0.006 -0.006 0.006 0.006} -name V2_STAPLE_VIA
        }
    } {# No Comment}  
bbset pnr.fc.ChipFinishStapleViasPreProcessCallback {
        if {${::pnr.chipfinish.EnableStapleVias}} {
            if {![sizeof_collection [get_via_defs V1_STAPLE_VIA]]} {
          create_via_def V1_STAPLE_VIA -cut_layer VIA0  -cut_size { 0.018 0.018 } -source_type single_cut_fixed -upper_enclosure { 0.005 0.0205 } -lower_enclosure { 0.011 0.001} 
            }
            if {![sizeof_collection [get_via_defs V2_STAPLE_VIA]]} {
         create_via_def V2_STAPLE_VIA -cut_layer VIA1  -cut_size { 0.012 0.012 } -source_type single_cut_fixed -upper_enclosure { 0.021 0.00 } -lower_enclosure { 0.008 0.0235 }
            }
            # To remove VIA0 OBS from GFILL & GDCAP cells before staple via insertion
            proc lremove {list value} {
                set idx [lsearch -exact $list $value]
                if {$idx >= 0} {
                    set list [lreplace $list $idx $idx]
                }
                return $list
            }
            if {![file exists temp_ndms]} { file mkdir temp_ndms }
            set gfill_ndms [get_attribute [get_libs -of_objects [get_lib_cells */GFILL*]] source_file_name]
            set gdcap_ndms [get_attribute [get_libs -of_objects [get_lib_cells */GDCAP*]] source_file_name]
            set all_ndms [lsort -unique [concat $gfill_ndms $gdcap_ndms]]
            set i 0
            foreach ndm $all_ndms {
                incr i
                set fp [open run_lm_commands_${i}.tcl w]
                set fname [lindex [split $ndm "/"] end]
                puts $fp "set_host_options -max_cores 32"
                puts $fp "create_workspace -flow edit $ndm"
                set blocks [get_lib_cells {*/GFILL* */GDCAP*}]
                foreach block [lindex [collection_to_list $blocks] 0] {
                    puts $fp "if {\[sizeof_collection \[get_lib_cells -quiet [lindex $block end]\]\]} {"
                        set name [join [split [lindex $block 1] "/"] :].frame
                        puts $name
                        puts $fp "current_block $name"
                        puts $fp "remove_routing_blockages \[get_routing_blockages -filter \"layer_name==VIA0\"\]"
                    puts $fp "}"
                }
                puts $fp "check_workspace"
                puts $fp "commit_workspace -force -output ./temp_ndms/${fname}"
                puts $fp "exit"
                close $fp
                sh lm_shell -output_log_file lm_${i}.log -file run_lm_commands_${i}.tcl -batch
            }
            set new_ref_libs [glob file temp_ndms/*.ndm]
            report_ref_libs > ref_libs.rpt
            set fp [open ref_libs.rpt r]
            set fp_data [read $fp]
            close $fp
            set all_ref_libs ""
            foreach line [split $fp_data "\n"] {
                if {[regexp "^\\*\\+" $line]} {
                    set all_ref_libs [concat $all_ref_libs [lindex $line end]]
                }
            }
            set non_gfill_ref_libs $all_ref_libs
            foreach ndm $all_ndms {
                 set non_gfill_ref_libs [lremove $non_gfill_ref_libs $ndm]
            }
            set_ref_libs -clear
            set all_new_ref_libs [concat $new_ref_libs $non_gfill_ref_libs]
            set cmd "set_ref_libs -ref_libs {[lsort -unique $all_new_ref_libs]}"
            eval $cmd
            link_block
        }
    } {# No Comment}  
bbset Track                          {h130}                                                           {track attribute defined in DK}
bbset syn.synth.ClockGateCellList    {CKLNQZPDD3BWP130HPNPN3P48CPDULVT CKLNQZPDD4BWP130HPNPN3P48CPDULVT CKLNQZPDD5BWP130HPNPN3P48CPDULVT CKLNQZPDD6BWP130HPNPN3P48CPDULVT  CKLNQZPDD8BWP130HPNPN3P48CPDULVT CKLNQZPDD10BWP130HPNPN3P48CPDULVT} {# No Comment}  
bbset pnr.RowHeightMultiple          {1}                                                              {# No Comment}  
bbset pnr.CPPValue                   {0.048}                                                          {Value of 1 CPP}
bbset pnr.CellVthType                {{SVT$} {\[^UE\]LVT$} {.*\[^UE\]LVTLL$} {.*ULVT$} {.*ULVTLL$} {.*ELVT$}} { use for metric capture of Vt cell distribution}
bbset pnr.CellRegExp                 {.*D(\[0-9\]*)(P\[0-9\]*)+BWP.*}                                 {use for cell type and strength metric capture in Phystats category}
bbset pnr.EnableCNODLeakageReduction {0}                                                              {# No Comment}  
bbset pnr.check.PinConstraints       {M* {min_width 0.038 min_length 0.22 min_pitch 2 min_tbpitch 1}} {# No Comment}  
bbset pnr.chipfinish.DeleteVia0OBSecofiller {1}                                                              {# No Comment}  
bbset pnr.chipfinish.DECAPFillerCells {DCAP64XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP64XPRBWP130HPNPN3P48CPDLVTLL DCAP32XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP32XPRBWP130HPNPN3P48CPDLVTLL DCAP16XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP16XPRBWP130HPNPN3P48CPDLVTLL DCAP8XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP8XPRBWP130HPNPN3P48CPDLVTLL DCAP4XPRM0BBWP130HPNPN3P48CPDLVTLL DCAP4XPRBWP130HPNPN3P48CPDLVTLL} {# No Comment}  
bbset pnr.chipfinish.DECAPECOFillerCells {GDCAP7DHXPRBWP130HPNPN3P48CPDLVTLL GDCAP6SHXPRBWP130HPNPN3P48CPDLVTLL GDCAP6DHXPRBWP130HPNPN3P48CPDLVTLL GDCAP5DHXPRBWP130HPNPN3P48CPDLVTLL GDCAP4DHXPRBWP130HPNPN3P48CPDLVTLL GDCAP3SHXPRBWP130HPNPN3P48CPDLVTLL GDCAP3DHXPRBWP130HPNPN3P48CPDLVTLL GDCAP2SHXPRBWP130HPNPN3P48CPDLVTLL GDCAP2DHXPRBWP130HPNPN3P48CPDLVTLL GDCAP1SHXPRBWP130HPNPN3P48CPDLVTLL GDCAP1DHXPRBWP130HPNPN3P48CPDLVTLL} {# No Comment}  
bbset pnr.chipfinish.nofill_pattern_halfheight {FILL*WALL* FILL*NOB* FILL*BK* FILL*PAD* FILL*M1R* DCAP*TAP* FILL*M0F* FILL*BWP*PNNP* FILL*BWP*NPPN* FILL1BWP*PPNN* FILL2BWP*PPNN* FILL3BWP*PPNN* FILL4BWP*PPNN* } {# No Comment}  
bbset pnr.chipfinish.extension_fill_pattern {FILL**PPNN* FILL*NPPN* FILL*PNNP* }                             {# No Comment}  
bbset pnr.chipfinish.extension_nofill_pattern { FILL*WALL* FILL*NOB* FILL*BK* DCAP*TAP* FILL*PAD* FILL*M1R* FILL*NBWP* FILL*PBWP* FILL*M0F* } {# No Comment}  
bbset pnr.chipfinish.metal_filler_lib_cell {FILL64M1R*PNPN* FILL32M1R*PNPN* FILL16M1R*PNPN* FILL12M1R*PNPN* FILL8M1R*PNPN* FILL5M1R*PNPN* FILL4M1R*PNPN* FILL3M1R*PNPN* FILL2M1R*PNPN* FILL1DODCM2*PNPN* FILL64M0F*PNPN* FILL32M0F*PNPN* FILL16M0F*PNPN* FILL12M0F*PNPN* FILL8M0F*PNPN* FILL5M0F*PNPN* FILL4M0F*PNPN* FILL3M0F*PNPN* FILL2M0F*PNPN*} {# No Comment}  
bbset pnr.chipfinish.normal_filler_lib_cells {FILL64BWP*PNPN* FILL32BWP*PNPN* FILL16BWP*PNPN* FILL12BWP*PNPN* FILL8BWP*PNPN* FILL5BWP*PNPN* FILL4BWP*PNPN* FILL3BWP*PNPN* FILL2DODBWP*PNPN* FILL1DODBWP*PNPN*} {# No Comment}  
bbset pnr.chipfinish.FILL1_2cm0_lib_cells {FILL1DODCM2*M1R*}                                               {# No Comment}  
bbset pnr.chipfinish.FILL1_1cm0_lib_cells {FILL1DODCM1*M1R*}                                               {# No Comment}  
bbset pnr.chipfinish.ECOFillerDensity {0.25}                                                           {# No Comment}  
bbset pnr.socclocks.ClockNetNdr      {CLOCK_2W_1S}                                                    {# No Comment}  
bbset pnr.socclocks.ClockNetRepeater {DCCKBDHD20BWP130HPNPN3P48CPDULVT}                               {# No Comment}  
bbset pnr.socclocks.ClockNetRepeaterDistance {80}                                                             {# No Comment}  
bbset pnr.socclocks_dataprep.PartitionIdentifier {sswrp|gspan|LVL|gpio}                                           {regexp to identify partition lef}
bbset pnr.tcic.TCICRoot              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/innovus/tcic} {# No Comment}  
bbset pnr.tcic.Enable                {1}                                                              {# No Comment}  
bbset pnr.tcic.FullChipMode          {0}                                                              {#}             
bbset pnr.tcic.BoundaryControlledBlockMode {0}                                                              {# No Comment}  
bbset pnr.tcic.DesignCellType        {H210P51}                                                        {#{Supported}   
bbset pnr.tcic.MaxDTCDLayer          {13}                                                             {# No Comment}  
bbset pnr.tcic.Rules                 {}                                                               {#}             
bbset pnr.tcic.FCTCICRoot            {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/tcic} {TCIC directory for FC}
bbset pnr.tcic.CustomIPVariableFiles {}                                                               {#}             
bbset pnr.tcic.MacroUsage.Tsmc_sram  {TS1* ts1* TS6* ts6*}                                            {# No Comment}  
bbset pnr.tcic.MacroUsage.Tsmc_rom   {TS3* ts3*}                                                      {# No Comment}  
bbset pnr.tcic.MacroUsage.Tsmc_rom_ha {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Aprb_h143p48 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Aprb_h169p48 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Aprb_h169p54 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Aprb_nobc  {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Macro_beol_only {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Macro_wpo  {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Macro_nonlg3 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Macro_nonlg3_wpo {dwc_sensors_dts2rs_ndnw dwc_sensors_dts2_ndnw}                  {# No Comment}  
bbset pnr.tcic.MacroUsage.EsdC1      {PCLAMPC_V PCLAMPC_H PCLAMPC_RBD_H_C210928 PCLAMPC_RBD_V_C210928} {# No Comment}  
bbset pnr.tcic.MacroUsage.EsdC2      {PCLAMP_RBD_H_C210928 PCLAMP_RBD_V_C210928}                      {# No Comment}  
bbset pnr.tcic.MacroUsage.Efuse      {TEF03FE256X32HD18_PHRMS tef03fe256x32hd18_phrm}                 {# No Comment}  
bbset pnr.tcic.MacroUsage.Dtcd       {N3E_DTCD_ALL_M9_220327 N3E_DTCD_ALL_M10_220327 N3E_DTCD_ALL_M11_220327 N3E_DTCD_ALL_M12_220327 N3E_DTCD_ALL_M13_220327 N3E_DTCD_ALL_M14_220327 N3E_DTCD_ALL_M15_220327 N3E_DTCD_ALL_M16_220327 N3E_DTCD_ALL_M17_220327 N3E_DTCD_ALL_M18_220327} {# No Comment}  
bbset pnr.tcic.MacroUsage.Icovl      {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Icovl2     {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.Gpio       {LUPOD_V_C220928 PENDCAPOD_V_C220928 PVDD1ODCDGM_V_C220928 PVDD18ODCDGM_V_C220928 PDDWUWSWODCDGS_V_C220928 PVDD18ODPOCM_V_C220928 PRCUTOD_V_C220928 LUP_V_C220928 PENDCAP_V_C220928 PVDD1CDGM_V_C220928 PVDD2CDGM_V_C220928 PRWDWUWSWEWCDGH_V_C220928 PVDD2POCM_V_C220928 LUPOD_H_C220928 PENDCAPOD_H_C220928 PVDD18ODCDGM_H_C220928 PVDD1ODCDGM_H_C220928 PDDWUWSWODCDGS_H_C220928 PVDD18ODPOCM_H_C220928 LUP_H_C220928 PENDCAP_H_C220928 PVDD1CDGM_H_C220928 PVDD2CDGM_H_C220928 PRWDWUWSWEWCDGH_H_C220928 PVDD2POCM_H_C220928 PCORNEROD_V_C220928 PDDWUWSWEWCDGS_V_C220928 PDDWUWSWEWCDGS_H_C220928 PDB2ANA_V_C220928 PRWDWUWSWODCDGH_V_C220928 PRCUT_V_C220928 PRWDWUWSWEWCDGH2_V_C220928 PCORNER_V_C220928} {# No Comment}  
bbset pnr.tcic.MacroUsage.CustomizeIP1 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.CustomizeIP2 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.CustomizeIP3 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.CustomizeIP4 {}                                                               {# No Comment}  
bbset pnr.tcic.MacroUsage.CustomizeIP5 {}                                                               {# No Comment}  
bbset pnr.tcic.FixFloorplan          {false}                                                          {#}             
bbset pnr.tcic.FCFixFloorplan        {0}                                                              {Switch to enable/disable tcic auto-fix at floorplan}
bbset pnr.placeopt.GSPANBufferCellForInput {BUFFD4BWP130HPNPN3P48CPDLVT}                                    {Library buffer cell to be used as anchor buffer for input side}
bbset pnr.placeopt.GSPANBufferCellForOutput {BUFFD8BWP130HPNPN3P48CPDLVT}                                    {Library buffer cell to be used as anchor buffer for output side}
bbset pnr.placeopt.GSPANClkCell      {CKBD24BWP130HNPPN3P48CPDULVT}                                   {Library buffer cell to be used as anchor buffer for output side}
bbset libgen.sta.PvtFileTypes        {ccs_db {process}
                                      dist_pocvm {process}
                                      mbecpo_tcl {process}} {# file_types need to append PVT informations in pattern}
bbset libgen.emir.PvtFileTypes       {ccs_lib {process temperature}
                                      apl_current {process temperature}
                                      apl_cap {process temperature}
                                      apl_pwcap {process temperature}
                                      macro_apl {process temperature}
                                      switch_apl {process temperature}
                                      avm {process temperature}} {# No Comment}  
bbset libgen.esd.PvtFileTypes        {ccs_lib {process temperature}
                                      switch_apl {process temperature}} {# No Comment}  
bbset libgen.LibraryPriority.pnr.LibComplementsSingleLib {True}                                                           {# Force lib Complements only return one libs after priority filtering}
bbset libgen.LibraryPriority.syn.LibComplementsSingleLib {True}                                                           {# Force lib Complements only return one libs after priority filtering}
bbset libgen.EnableClosestVoltageByProcess {False}                                                          {# consider process to select closet voltage}
bbset libgen.sta.EnableClosestVoltageByProcess {True}                                                           {# consider process to select closet voltage}
bbset libgen.LibraryPriority.pnr.LibFilters {.*}                                                             {# Library Name should go through priority filtering}
bbset libgen.LibraryPriority.pnr.PriorityList {
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} {is_em false} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {is_em false} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {is_em false} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {is_em false} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {is_em false} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} {is_lvf true} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}}}
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest}}
                                      {{process exact} {main_voltage exact} {sec_voltage exact} {temperature exact} {category macros} }
                                      {{process exact} {main_voltage exact} {sec_voltage exact} {temperature closest} {category macros} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {mode closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {mode closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature exact} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} }
                                      {{process exact} {main_voltage exact} {sec_voltage {exact ''}} {temperature closest} }
                                      {{process exact} {main_voltage exact} {temperature exact} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {temperature exact} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {temperature closest} {rc_corner {exact ''}} }
                                      {{process exact} {main_voltage exact} {temperature closest} {rc_corner closest} }
                                      {{process exact} {main_voltage exact} {temperature exact} }
                                      {{process exact} {main_voltage exact} {temperature exact} }
                                      {{process exact} {main_voltage exact} {temperature closest} }
                                      {{process exact} {main_voltage exact} {temperature closest} }
                                      {{process exact} {main_voltage closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{process exact} {main_voltage closest} {is_lvf true} }
                                      {{process exact} {main_voltage closest} {mode exact}}
                                      {{process exact} {main_voltage closest} {mode closest}}
                                      {{process exact} {main_voltage closest}}
                                      {{main_voltage closest}}
                                      } {# No Comment}  
bbset libgen.LibraryPriority.sta.LibFilters {.*}                                                             {# Library Name should go through priority filtering}
bbset libgen.LibraryPriority.sta.PriorityList {
                                      {{category stdlib} {temperature closest} {rc_corner {exact ''}} {is_lvf true} {extra_hold_margin yes} {is_em false}}
                                      {{category stdlib} {temperature closest} {rc_corner {exact ''}} {is_lvf true} {extra_hold_margin yes} }
                                      {{category stdlib} {temperature closest} {rc_corner closest} {is_lvf true} {extra_hold_margin yes} {is_em false}}
                                      {{category stdlib} {temperature closest} {rc_corner closest} {is_lvf true} {extra_hold_margin yes} }
                                      {{category stdlib} {temperature closest} {rc_corner {exact ''}} {is_lvf true} {is_em false} }
                                      {{category stdlib} {temperature closest} {rc_corner {exact ''}} {is_lvf true} }
                                      {{category stdlib} {temperature closest} {rc_corner closest} {is_lvf true} {is_em false}}
                                      {{category stdlib} {temperature closest} {rc_corner closest} {is_lvf true} }
                                      {{category stdlib} {temperature closest} {rc_corner {exact ''}}}
                                      {{category stdlib} {temperature closest} {rc_corner closest}}
                                      {{category stdlib} {temperature closest} {process ffgnp} {rc_corner cbest_ccbest_t} {is_lvf true} {is_em false} }
                                      {{category stdlib} {temperature closest} {process ffgnp} {rc_corner cbest_ccbest_t} {is_lvf true} }
                                      {{category stdlib} {temperature closest} {process ffgnp} {rc_corner cbest_ccbest_t} {is_em false} }
                                      {{category stdlib} {temperature closest} {process ffgnp} {rc_corner cbest_ccbest_t} }
                                      {{category stdlib} {temperature closest} {is_lvf true} {is_em false} }
                                      {{category stdlib} {temperature closest} {is_lvf true} }
                                      {{main_voltage exact} {temperature closest} {mode exact} {rc_corner {exact ''}} }
                                      {{main_voltage exact} {temperature closest} {mode exact} {rc_corner closest} }
                                      {{main_voltage exact} {temperature closest} {mode closest} {rc_corner {exact ''}} }
                                      {{main_voltage exact} {temperature closest} {mode closest} {rc_corner closest} }
                                      {{main_voltage exact} {temperature closest} {mode closest}}
                                      {{main_voltage closest} {temperature closest} {mode exact} {rc_corner {exact ''}} }
                                      {{main_voltage closest} {temperature closest} {mode exact} {rc_corner closest} }
                                      {{main_voltage closest} {temperature closest} {mode closest} {rc_corner {exact ''}} }
                                      {{main_voltage closest} {temperature closest} {mode closest} {rc_corner closest} }
                                      {{main_voltage closest} {temperature closest} {mode closest}}
                                      {{temperature closest} {mode exact} {rc_corner {exact ''}} }
                                      {{temperature closest} {mode exact} {rc_corner closest} }
                                      {{temperature closest} {mode closest} {rc_corner {exact ''}} }
                                      {{temperature closest} {mode closest} {rc_corner closest} }
                                      {{temperature closest} {mode closest}}
                                      {{mode exact} {rc_corner {exact ''}} }
                                      {{mode exact} {rc_corner closest} }
                                      {{mode closest} {rc_corner {exact ''}} }
                                      {{mode closest} {rc_corner closest} }
                                      } {# No Comment}  
bbset libgen.syn.ctl                 {file_type=='ctl' && category=='macros'}                         {# lib files bbquery filtering pattern}
bbset libgen.syn.lef                 {file_type=~'lef|par_lef' && track=~'([bbget .Track]|^$)'}       {# lib files bbquery filtering pattern}
bbset libgen.syn.ccs_lib             {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.socv                {file_type=='socv' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.vlg                 {file_type=='vlg' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.syn.vlg_t               {file_type=='vlg_t' && track =~'([bbget .Track]|^$)'}            {# lib files bbquery filtering pattern}
bbset libgen.syn.mdt                 {file_type=='mdt' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.syn.fs_lib              {file_type=='fs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.vlg_pg              {file_type=='vlg_pg' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# No Comment}  
bbset libgen.syn.ndm                 {file_type=='ndm' && track=~'([bbget .Track]|^$)'}               {# lib files bbquery filtering pattern}
bbset libgen.syn.ccs_db              {file_type=='ccs_db' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.pocvm               {file_type=='pocvm' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.mbecpo_sdc          {file_type=='mbecpo_sdc' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.mbecpo_tcl          {file_type=='mbecpo_tcl' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.syn.LibExtensionPriority {}                                                               {# No Comment}  
bbset libgen.pnr.ndm                 {file_type=='ndm' && track=~'([bbget .Track]|^$)'}               {# lib files bbquery filtering pattern}
bbset libgen.pnr.ccs_db              {file_type=='ccs_db' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pnr.pocvm               {file_type=='pocvm' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pnr.lef                 {file_type=~'lef|par_lef' && track=~'([bbget .Track]|^$)'}       {# lib files bbquery filtering pattern}
bbset libgen.pnr.ccs_lib             {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pnr.icd_sdc             {file_type=='icd_sdc' && vender == 'cdns' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# No Comment}  
bbset libgen.pnr.socv                {file_type=='socv' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pnr.vlg                 {file_type=='vlg' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.pnr.mbecpo_sdc          {file_type=='mbecpo_sdc' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pnr.mbecpo_tcl          {file_type=='mbecpo_tcl' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.emir.lef                {file_type=~'lef|par_lef' && track=~'([bbget .Track]|^$)'}       {# lib files bbquery filtering pattern}
bbset libgen.emir.ccs_lib            {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.emir.apl_current        {file_type=='apl' && apl_model=='spiprof' && track=~'([bbget .Track]|^$)' && category!='macros'} {# No Comment}  
bbset libgen.emir.apl_cap            {file_type=='apl' && apl_model=='cdev'    && track=~'([bbget .Track]|^$)' && category!='macros'} {# No Comment}  
bbset libgen.emir.apl_pwcap          {file_type=='apl' && apl_model=='pwcdev'  && track=~'([bbget .Track]|^$)' && category!='macros'} {# No Comment}  
bbset libgen.emir.macro_apl          {file_type=='apl' && apl_model!='out' && track=~'([bbget .Track]|^$)' && category=='macros'} {# lib files bbquery filtering pattern}
bbset libgen.emir.switch_apl         {file_type=='apl' && apl_model=='out' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.emir.avm                {file_type=='avm' && track=~'([bbget .Track]|^$)'}               {# lib files bbquery filtering pattern}
bbset libgen.emir.rh                 {file_type=='rh' && track=~'([bbget .Track]|^$)'}                {# lib files bbquery filtering pattern}
bbset libgen.esd.lef                 {file_type=~'lef|par_lef' && track=~'([bbget .Track]|^$)'}       {# No Comment}  
bbset libgen.esd.ccs_lib             {file_type=='ccs_lib' && library_name=~'_12' && is_pnr!='true'}  {# lib files bbquery filtering pattern}
bbset libgen.esd.rh                  {file_type=='rh' && library_name=~'^tph'}                        {# No Comment}  
bbset libgen.esd.rh_esd              {file_type=='rh_esd'}                                            {# No Comment}  
bbset libgen.esd.switch_apl          {file_type=='apl' && apl_model=='out'}                           {# No Comment}  
bbset libgen.lec.ccs_lib             {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.scf.ccs_lib             {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.vclp.ccs_db             {file_type=='ccs_db' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pdp.gds                 {file_type=='gds'}                                               {# lib files bbquery filtering pattern}
bbset libgen.pdp.oas                 {file_type=='oas'}                                               {# lib files bbquery filtering pattern}
bbset libgen.pdp.cdl                 {file_type=='cdl' && is_defect!='true'}                          {# lib files bbquery filtering pattern}
bbset libgen.pex.lef                 {file_type=~'lef' && is_defect=='false'}                         {# lib files bbquery filtering pattern}
bbset libgen.pex.gds                 {file_type=='gds' && is_defect=='false'}                         {# lib files bbquery filtering pattern}
bbset libgen.pex.oas                 {file_type=='oas' && is_defect=='false' && library_name=~'.*GCUSTOM.*'} {# lib files bbquery filtering pattern}
bbset libgen.pex.def                 {file_type=='def' && is_defect=='false' && library_name=~'.*GCUSTOM.*'} {# lib files bbquery filtering pattern}
bbset libgen.sta.ccs_db              {file_type=='ccs_db' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.sta.wire_pocvm          {file_type=='pocvm' && library_name=='wire'}                     {# wire pocvm, not scenario specific}
bbset libgen.sta.dist_pocvm          {file_type=='pocvm' && track=~'([bbget .Track]|^$)'}             {# cell_pocvm_files}
bbset libgen.sta.mbecpo_tcl          {file_type=='mbecpo_tcl' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.power.leakinfo          {file_type=='leakinfo' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.power.edgeinfo          {file_type=='edgeinfo' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.power.leakage_config    {file_type=='leakage_config' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.pceco.lef               {file_type=~'lef|par_lef' && track=~'([bbget .Track]|^$)'}       {# lib files bbquery filtering pattern}
bbset libgen.fe.nldm_db              {file_type=='nldm_db' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {FE libgen nldm db}
bbset libgen.LibraryPriority.syn.LibComplements {_pmc_|_lvlc_|_basec_|_base_|_pm_|_mb_|_base2_|l3p48cpd_goog|gsl_clk_div|fll_top|IP93X12C|prtn_pu_143_top|prtn_pu_169_top|prtn_stb_top|tcxo_clock_buffer_top|12gpio|12od18|dwc_sensors_dts2rs_ndnw|ts1n02pmblvtb4096x32m8twzhodxcp|ts6n02psvtb64x132m1bzhocp|ts6n02psvta512x128m2sbzhocp|ts6n02psvta144x128m2sbzhocp|ts6n02psvta200x128m2sbzhocp|ts1n02pmbsvta4096x16m4qbzhocp|ts1n02psbsvta512x118m2bzhocp|ts6n02psvtb512x128m2bzhocp|ts6n02psvtb256x132m1bzhocp|ts6n02psvtb64x180m1bzhocp|ts3n02psvta16384x16m16bzo_hsios_mphy_rom|ts3n02psvta4096x16m16bzo_hsios_mphy_rom|dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns|ts6n02psvtb256x264m1bzhocp|ts6n02psvtb64x264m1bzhocp|ts1n02pmbsvta16384x16m16qbzhocp|ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom|ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom|12gpio|fiducial|ts6n02psvta256x256m1sbzhocp|ts6n02psvta32x256m1sbzhocp|ts6n02psvta80x256m1sbzhocp|ts6n02psvtb256x256m1bzhocp|ts6n02psvtb32x264m1bzhocp} {# No Comment}  
bbset libgen.LibraryPriority.pnr.LibComplements {_pmc_|_lvlc_|_basec_|_base_|_pm_|_mb_|_base2_|l3p48cpd_goog|gsl_clk_div|fll_top|IP93X12C|prtn_pu_143_top|prtn_pu_169_top|prtn_stb_top|tcxo_clock_buffer_top|12gpio|12od18|dwc_sensors_dts2rs_ndnw|ts1n02pmblvtb4096x32m8twzhodxcp|ts6n02psvtb64x132m1bzhocp|ts6n02psvta512x128m2sbzhocp|ts6n02psvta144x128m2sbzhocp|ts6n02psvta200x128m2sbzhocp|ts1n02pmbsvta4096x16m4qbzhocp|ts1n02psbsvta512x118m2bzhocp|ts6n02psvtb512x128m2bzhocp|ts6n02psvtb256x132m1bzhocp|ts6n02psvtb64x180m1bzhocp|ts3n02psvta16384x16m16bzo_hsios_mphy_rom|ts3n02psvta4096x16m16bzo_hsios_mphy_rom|dwc_mipi_mphy_type1_g6_pma_2tx_2rx_ns|ts6n02psvtb256x264m1bzhocp|ts6n02psvtb64x264m1bzhocp|ts1n02pmbsvta16384x16m16qbzhocp|ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom|ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom|12gpio|fiducial|ts6n02psvta256x256m1sbzhocp|ts6n02psvta32x256m1sbzhocp|ts6n02psvta80x256m1sbzhocp|ts6n02psvtb256x256m1bzhocp|ts6n02psvtb32x264m1bzhocp} {# No Comment}  
bbset libgen.LibraryPriority.sta.LibComplements {dwc_sensors_dts2rs_ndnw}                                        {# No Comment}  
bbset libgen.LibraryPriority.pceco.LibComplements {_pmc_|_lvlc_|_basec_|_base_|_pm_|_mb_|_base2_|l3p48cpd_goog|gsl_clk_div|fll_top|IP93X12C|prtn_pu_143_top|prtn_pu_169_top|prtn_stb_top|tcxo_clock_buffer_top|12gpio|12od18|dwc_sensors_dts2rs_ndnw} {# No Comment}  
bbset mmmc.central_sdc               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/chip/lajolla/config/central_sdc/hsio/ufs_top/dispatch.sdc} {# central sdc} 
bbset mmmc.mode.StaUpf               {[bbfiles -bundles chipfinish -filetype upf -hierarchy]}         {# default Sta UPF came from chipfinish}
bbset mmmc.mode.modes                {func_NM shift_NM capture_NM}                                    {# all modes that will be created. This variable structure need follow BBMmmc.py structure}
bbset mmmc.mode.func.StaSdc          {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/inputs/ufs_top.sdc} {# sdc file used in sta mode}
bbset mmmc.mode.shift.StaSdc         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/inputs/ufs_top.sdc} {# sdc file used in sta mode}
bbset mmmc.mode.func_IR.StaSdc       {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.shift_IR.StaSdc      {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_IR50.StaSdc    {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_IR33.StaSdc    {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.func_R2R.StaSdc      {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_SMVA.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case0.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case1.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case2.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case3.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case4.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case5.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.func_R2R_case6.StaSdc {[bbget mmmc.mode.func.StaSdc]}                                  {# No Comment}  
bbset mmmc.mode.shift_R2R.StaSdc     {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_SMVA.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case0.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case1.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case2.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case3.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case4.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case5.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.mode.shift_R2R_case6.StaSdc {[bbget mmmc.mode.shift.StaSdc]}                                 {# No Comment}  
bbset mmmc.vdomain.R2RMistrackDeltaVRatio {0}                                                              {Default value for R2R Mistrack delta V ratio}
bbset mmmc.vdomain.vdomains          {AVDD075_UFS0_EMBD_VP AVDD075_UFS0_EMBD_VPDIG AVDD12_UFS0_EMBD VDD_HSIOS VDD_STBY_S} {# collection of voltage rails that share the same voltage value}
bbset mmmc.vdomain.gdomains          {GND}                                                            {# collection of ground rails that share the same voltage value}
bbset mmmc.vdomain.GND.rail          {VSS}                                                            {# Grouping ground rail patterns to search the actual rail}
bbset mmmc.scenarios.lowest_voltage  {0p4750}                                                         {# This is used to denote the lowest voltage the specific IP is designed for and is used to enable flows to incorporate additional hold margin in those scenarios.  Note that lowest_voltage does not impact what scenarios are created }
bbset scf.jitter.corners             {NM UD SUD UUD OD SOD USOD}                                      {corner names}  
bbset scf.jitter.corners_index_lower_latency {1 2 3 4 5 6 7}                                                  {corner dict index for lower latencies}
bbset scf.jitter.corners_index_higher_latency {1 4 7 10 13 16 19}                                              {corner dict index for higher latencies}
bbset scf.jitter.cell_vt_type_track  {lvt_h210 ulvtll_h210 ulvt_h210 ulvt_h280}                       {cell vt type per track tag type}
bbset scf.jitter.cell_vt_type_track_index {2 4 6 8}                                                        {cell vt per track dict index}
bbset scf.scenarios.Scenarios        {func.ssgnp-NM-0-cworst_ccworst_t}                               {# SCF scenarios}
bbset scf.check_constraints.Scenarios {func.ssgnp-NM-125-rcworst_ccworst_t func.ssgnp-UD-125-cworst_ccworst_t  func.ssgnp-SUD-125-cworst_ccworst_t func.ssgnp-UUD-125-cworst_ccworst_t} {# SCF scenarios for constraints custom check}
bbset syn.MemStatsList               {memory_name words bits mux bank  bitwrite centre_decoder power_gating dual_rail bist_enabled timing_mode read_write zero_halo bit_strapping mg} {# No Comment}  
bbset syn.MemStatsExp                {.*p(\[0-9\]+)x(\[0-9\]+)m(\[0-9\]+)b(\[0-9\])w(\[0-9\])c(\[0-9\])p(\[0-9\])d(\[0-9\])l?\[0-9\]?s?(\[0-9\])?r?\[0-9\]?(rm\[0-9\])rw(\[0-9\]+).*zh(\[0-9\])h\[0-9\](ms\[0-9\])(mg\[0-9\])} {# No Comment}  
bbset syn.QRCTechMapFile             {[bbquery get file -db pdk -filter "file_type=~'qrctechmap' && tool=~'innovus' && stack=~'[bbget .Stack]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {qrc tech map file path for extraction}
bbset syn.genus.SynthSetupPostCallback {

    set_db design_process_node 2
    set_db design_tech_node N2
    set_db number_of_routing_layers 14

} { synth setup call back}
bbset pnr.genus.IspatialSetupPostCallback {

    set_db design_process_node 2
    set_db design_tech_node N2
    set_db number_of_routing_layers 14

} { ispatial setup callback}
bbset syn.genus.SynthSetupPostProcessCallback {

    if {[get_db modules *rop_demux*]  != ""} {

        set_db [get_db modules *rop_demux*] .ungroup_ok false
        get_db [get_db modules *rop_demux*] .ungroup_ok -u

        set top_pins [ get_db hpins * -if { .hinst.base_name=~*rop_demux* } ]
        set_db $top_pins .preserve true
    }
} {# No Comment}  
bbset syn.fc.SynthSetupPostProcessCallback {

    if {[get_cells -hier -filter "ref_name =~*rop_demux*" -quiet]  != ""} {

        set top_insts [ get_cells -hier -filter "ref_name =~*rop_demux*" -quiet]

        set_ungroup [get_object_name $top_insts] false

        set_boundary_optimization [get_object_name $top_insts] none

    }
} {# No Comment}  
bbset mmmc.mode.func.pnrSdcs         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func.synSdcs         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset mmmc.mode.func_uud.pnrSdcs     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func_uud.synSdcs     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset mmmc.mode.func_ud.pnrSdcs      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func_ud.synSdcs      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset mmmc.mode.func_sud.pnrSdcs     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func_sud.synSdcs     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset mmmc.mode.func_od.pnrSdcs      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func_od.synSdcs      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset mmmc.mode.func_nm.pnrSdcs      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func_nm.synSdcs      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset mmmc.mode.func_sod.pnrSdcs     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in pnr mode}
bbset mmmc.mode.func_sod.synSdcs     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/fe_release/ufs_top/sdc/ufs_top.mission.tcl} {# sdc file used in syn mode}
bbset pnr.ClkPGStrengthenScript      {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/pg/strengthen_m1_m3_pg_over_htree.tcl} {# No Comment}  
bbset pnr.CELL_NAME_MAP_FILE         {[bbquery get file -filter "file_type=='cell_color_mapping'"]}   {# No Comment}  
bbset pnr.MinRoutingLayerFC          {M0}                                                             {# No Comment}  
bbset pnr.ViaPillarAssociationFile   {}                                                               {No Comment}    
bbset pnr.gspanroute.ClockNdr        {{GSPAN_CLK_1W_2S {M6:M11 0.114}}}                               {Clock NDR name}
bbset pnr.gspanroute.ClkNetPatternInclude {"soc*retimer:clk"}                                              {Pattern to include clock nets cell:pin set}
bbset pnr.gspanroute.ClkNetPatternExclude {"soc*retimer:clkreq"}                                           {Pattern to exclude clock nets cell:pin set}
bbset pnr.socclocks.ViaPillarFile    {}                                                               {clock via pillar file}
bbset pnr.socclocks.RefClkCellPattern {CK*THZPDGOLD*ULVT}                                              {# No Comment}  
bbset pnr.socclocks.RefClkCellPrefix {socclocks_REFCLK_REPX_}                                         {# No Comment}  
bbset pnr.socclocks.AddRepeaterByRuleTcl {}                                                               {# No Comment}  
bbset pnr.IOBufferDontUseCellType    {SVT ELVT}                                                       {Dont use cell type for IO buffers}
bbset pnr.CellDriveConvention        {D(\[0-9\]+)}                                                    {Cell drive convention pattern}
bbset pnr.check.MaxFanout            {32}                                                             {-comment}      
bbset pnr.report.IOpatterns.IO       {
                                      all_io_insts {PDB* PDC* PDD* PEN* PFILL* PRCUT* PRWD* PVD* PCORNER*}
                                      } {# No Comment}  
bbset sif.innovus.ApplyCommonSettingsPostProcessCallback {

    # Set node to 2nm and process to TSMC N2
    sif::minfo "Setting process to 2 and node to N2"
    setDesignMode -process 2 -node N2

    setAnalysisMode -analysisType onChipVariation



    #=======================================================================
    # placement settings
    #=======================================================================
    setNanoRouteMode -dbProcessNode N2

    setVar mustjoinallports_is_one_pin 1
    setGenerateViaMode -auto true
    setDelayCalMode  -ewm_type simulation  -equivalent_waveform_model  propagation
} {# No Comment}  
bbset sif.innovus.OpenDesignPreProcessCallback {

    if {${::Track} == "h130"} {
        change_IB_cell_site_name -original {ibcoreW48H130} -NF {hncoreW48H130} -PF {hpcoreW48H130} -NNF {icoreW48H130} -PPF {icoreExtW48H130} -new {coreW48H130} -vertical
    } else {
        change_IB_cell_site_name -original {ibcoreW48H156} -NF {hncoreW48H156} -PF {hpcoreW48H156} -NNF {icoreW48H156} -PPF {icoreExtW48H156} -new {coreW48H156} -vertical
    }
} {# No Comment}  
bbset pnr.floorplan.ToolVersion      {tools/cadence/innovus/23.15-e011_1}                             {# No Comment}  
bbset pnr.routeopt.SetExtractionOptions.RealMetalfillExtraction {floating}                                                       {# No Comment}  
bbset pnr.routeopt.SetExtractionOptions.ReferenceDirection {vertical}                                                       {# No Comment}  
bbset pnr.routeopt.SetExtractionOptions.EarlyCcapThreshold {0.0005}                                                         {# No Comment}  
bbset pnr.routeopt.SetExtractionOptions.LateCcapThreshold {0.0005}                                                         {# No Comment}  
bbset pnr.routeopt.SetExtractionOptions.EarlyCcapRatio {0.03}                                                           {# No Comment}  
bbset pnr.routeopt.SetExtractionOptions.LateCcapRatio {0.03}                                                           {# No Comment}  
bbset pnr.MeshSPGR.CellsPinList      {}                                                               {# No Comment}  
bbset pnr.MeshSPGR.PinLayer          {M2 M1}                                                          {# No Comment}  
bbset pnr.MeshSPGR.TargetLayer       {M1 {M6 M7} M2 {M6 M7}}                                          {# No Comment}  
bbset sif.innovus.SecondaryPGRoutingPostProcessCallback {
    if { ${::STAGE} in {"placeopt" "clock" "clockopt" "route" "routeoptdesign" "applyeco"} } {
        if { ([common::get_stage_var $::STAGE EnableMeshSPGR] != "") && ( [common::get_stage_var $::STAGE EnableMeshSPGR] ) } {

            # PERFORM MESH SPG on NWELL PIN of RSF*GOOG* : NWELL PIN
            if { [llength [dbget top.insts.cell.name  RSDF*GOOG* -u -e]] > 0 } {
                set flow_cp_val ${::pnr.MeshSPGR.CellsPinList}
                set flow_pgpin_val ${::pnr.MeshSPGR.PGPinNames}
                set ::pnr.MeshSPGR.CellsPinList "RSDF*GOOG*:VNWELL"
                set ::pnr.MeshSPGR.PGPinNames "VNWELL"
                spgutils::perform_mesh_spgr -eco true -rpt_tag "goog_mesh_spg"
                set ::pnr.MeshSPGR.CellsPinList $flow_cp_val
                set ::pnr.MeshSPGR.PGPinNames   $flow_pgpin_val
            }

            # PERFORM MESH SPG on MEMORY_SUPPLY_NET over M14, M15 target layer
            set all_nets [spgutils::get_aon_nets]
            set memory_supply_nets [lsearch -all -inline $all_nets "*_M"]
            if { [llength $memory_supply_nets] > 0 } {
                set pnr.MeshSPGR.TargetLayer            {M1 {M14 M15} M2 {M14 M15} }
                set pnr.MeshSPGR.PinConfigFile {M1 "[bbget .info.PROCESS_DIR]/pnr/innovus/m1_mesh_spg_M14_extension.config" M2 "[bbget .info.PROCESS_DIR]/pnr/innovus/m2_mesh_spg_M14_extension.config"}
                set ::pnr.MeshSPGR.TargetPGModeSettings {pins_group_distance auto share_resource true max_extension_distance 300.0}
                set ::pnr.SPGNets $memory_supply_nets
                spgutils::perform_mesh_spgr -eco true -rpt_tag "memory_mesh_spg"
                set ::pnr.SPGNets $all_nets
            }

        }
    }
} {# No Comment}  
bbset pnr.innovus.PlaceOptSetupPreProcessCallback {
    set fid_insts [dbGet top.insts.cell.name ${::pnr.floorplan.FiducialCell} -e]
    if { $fid_insts != "" } {
        deselectAll
        selectInstByCellName ${::pnr.floorplan.FiducialCell}
        dbSet selected.pStatus fixed
        deselectAll
    }
} {# No Comment}  
bbset sif.innovus.export.ReportMetricsPostProcessCallback {
 catch {sh {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/innovus/external_scripts/Export_QoR.sh}}
} {# No Comment}  
bbset sta.emt.default.runs           {
                                      *.ffgnp-NM-125-cworst_ccworst
                                      } {# No Comment}  
bbset sta.emt.cpu.runs               {
                                      *.ffgnp-NM-125-cworst_ccworst
                                      *.ffgnp-USOD-125-cworst_ccworst
                                      } {# No Comment}  
bbset sta.config.setup_pocv.load_default_pocvm.enable {true}                                                           {# file default pocvm}
bbset sta.config.setup_pocv.load_default_pocvm.file {[bbget info.PROCESS_DIR]/sta/gchips/tdi/laj_ver_0p9_2/dist_der/default.pocvm} {# file default pocvm}
bbset sta.config.derate.VtMismatch.svt.Penalty {
                                      {tt    1p0000 0.05}
                                      {ffgnp 1p1550 0.05}
                                      {ssgnp 0p9450 0.05}
                                      {tt    0p9450 0.05}
                                      {ffgnp 1p0450 0.05}
                                      {ssgnp 0p8550 0.05}
                                      {ffgnp 0p9350 0.05}
                                      {ssgnp 0p7650 0.05}
                                      {tt    0p7000 0.05}
                                      {tt    0p6450 0.05}
                                      {tt    0p6250 0.05}
                                      {ssgnp 0p6750 0.06}
                                      {sfg 0p6750 0.06}
                                      {fsg 0p6750 0.06}
                                      {ffgnp 0p8250 0.06}
                                      {ssgnp 0p5850 0.07}
                                      {tt    0p5600 0.05}
                                      {ssgnp 0p5200 0.085}
                                      {tt    0p5150 0.05}
                                      {sfg 0p5200 0.085}
                                      {fsg 0p5200 0.085}
                                      {ssgnp 0p4750 0.15}
                                      {sfg   0p4750 0.15}
                                      {fsg   0p4750 0.15}
                                      {tt 0p4950 0.15}
                                      {ssgnp 0p4500 0.99}
                                      {sfg   0p4500 0.99}
                                      {fsg   0p4500 0.99}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.VtMismatch.lvtll.Penalty {
                                      {tt    1p0000 0.03}
                                      {ffgnp 1p1550 0.03}
                                      {ssgnp 0p9450 0.03}
                                      {tt    0p9450 0.03}
                                      {ffgnp 1p0450 0.04}
                                      {ssgnp 0p8550 0.04}
                                      {ffgnp 0p9350 0.04}
                                      {ssgnp 0p7650 0.04}
                                      {tt    0p7000 0.04}
                                      {ssgnp 0p6750 0.04}
                                      {sfg 0p6750 0.04}
                                      {fsg 0p6750 0.04}
                                      {ffgnp 0p8250 0.04}
                                      {ssgnp 0p5850 0.05}
                                      {ssgnp 0p5200 0.05}
                                      {sfg 0p5200 0.05}
                                      {fsg 0p5200 0.05}
                                      {ssgnp 0p4750 0.05}
                                      {sfg 0p4750 0.05}
                                      {fsg 0p4750 0.05}
                                      {ssgnp 0p4500 0.06}
                                      {sfg   0p4500 0.06}
                                      {fsg   0p4500 0.06}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.VtMismatch.lvt.Penalty {
                                      {tt    1p0000 0.02}
                                      {ffgnp 1p1550 0.02}
                                      {ssgnp 0p9450 0.02}
                                      {tt    0p945 0.02}
                                      {ffgnp 1p0450 0.03}
                                      {ssgnp 0p8550 0.03}
                                      {ffgnp 0p9350 0.03}
                                      {ssgnp 0p7650 0.03}
                                      {tt    0p7000 0.03}
                                      {ssgnp 0p6750 0.03}
                                      {sfg 0p6750 0.03}
                                      {fsg 0p6750 0.03}
                                      {ffgnp 0p8250 0.03}
                                      {ssgnp 0p5850 0.05}
                                      {ssgnp 0p5200 0.05}
                                      {sfg 0p5200 0.05}
                                      {fsg 0p5200 0.05}
                                      {ssgnp 0p4750 0.05}
                                      {sfg 0p4750 0.05}
                                      {fsg 0p4750 0.05}
                                      {ssgnp 0p4500 0.06}
                                      {sfg   0p4500 0.06}
                                      {fsg   0p4500 0.06}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.VtMismatch.ulvtll.Penalty {
                                      {tt    1p0000 0.02}
                                      {ffgnp 1p1550 0.02}
                                      {ssgnp 0p9450 0.02}
                                      {tt    0p945 0.02}
                                      {ffgnp 1p0450 0.03}
                                      {ssgnp 0p8550 0.03}
                                      {ffgnp 0p9350 0.03}
                                      {ssgnp 0p7650 0.03}
                                      {tt    0p7000 0.03}
                                      {ssgnp 0p6750 0.03}
                                      {sfg 0p6750 0.03}
                                      {fsg 0p6750 0.03}
                                      {ffgnp 0p8250 0.03}
                                      {ssgnp 0p5850 0.05}
                                      {ssgnp 0p5200 0.05}
                                      {sfg 0p5200 0.05}
                                      {fsg 0p5200 0.05}
                                      {ssgnp 0p4750 0.05}
                                      {sfg 0p4750 0.05}
                                      {fsg 0p4750 0.05}
                                      {ssgnp 0p4500 0.06}
                                      {sfg   0p4500 0.06}
                                      {fsg   0p4500 0.06}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.VtMismatch.ulvt.Penalty {
                                      {tt    1p0000 0.02}
                                      {ffgnp 1p1550 0.02}
                                      {ssgnp 0p9450 0.02}
                                      {tt    0p945 0.02}
                                      {ffgnp 1p0450 0.03}
                                      {ssgnp 0p8550 0.03}
                                      {ffgnp 0p9350 0.03}
                                      {ssgnp 0p7650 0.03}
                                      {tt    0p7000 0.03}
                                      {ssgnp 0p6750 0.03}
                                      {sfg 0p6750 0.03}
                                      {fsg 0p6750 0.03}
                                      {ffgnp 0p8250 0.03}
                                      {ssgnp 0p5850 0.05}
                                      {ssgnp 0p5200 0.05}
                                      {sfg 0p5200 0.05}
                                      {fsg 0p5200 0.05}
                                      {ssgnp 0p4750 0.05}
                                      {sfg 0p4750 0.05}
                                      {fsg 0p4750 0.05}
                                      {ssgnp 0p4500 0.06}
                                      {sfg   0p4500 0.06}
                                      {fsg   0p4500 0.06}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.VtMismatch.elvt.Penalty {
                                      {tt    1p0000 0.02}
                                      {ffgnp 1p1550 0.02}
                                      {ssgnp 0p9450 0.02}
                                      {tt    0p9450 0.02}
                                      {ffgnp 1p0450 0.03}
                                      {ssgnp 0p8550 0.03}
                                      {ffgnp 0p9350 0.03}
                                      {ssgnp 0p7650 0.03}
                                      {tt    0p7000 0.03}
                                      {ssgnp 0p6750 0.03}
                                      {sfg 0p6750 0.03}
                                      {fsg 0p6750 0.03}
                                      {ffgnp 0p8250 0.03}
                                      {ssgnp 0p5850 0.05}
                                      {sfg   0p5850 0.05}
                                      {fsg   0p5850 0.05}
                                      {ssgnp 0p5200 0.05}
                                      {sfg   0p5200 0.05}
                                      {fsg   0p5200 0.05}
                                      {ssgnp 0p4750 0.05}
                                      {sfg   0p4750 0.05}
                                      {fsg   0p4750 0.05}
                                      {ssgnp 0p4500 0.06}
                                      {sfg   0p4500 0.06}
                                      {fsg   0p4500 0.06}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.AddlVtMismatch.svt.Penalty {
                                      {tt    1p0000 0.05}
                                      {ffgnp 1p1550 0.05}
                                      {ssgnp 0p9450 0.05}
                                      {tt    0p945 0.05}
                                      {tt    0p8000 0.05}
                                      {ffgnp 1p0450 0.05}
                                      {ssgnp 0p8550 0.05}
                                      {ffgnp 0p9350 0.05}
                                      {ssgnp 0p7650 0.05}
                                      {tt    0p7000 0.05}
                                      {ssgnp 0p6750 0.06}
                                      {sfg 0p6750 0.06}
                                      {fsg 0p6750 0.06}
                                      {tt    0p6750 0.06}
                                      {ffgnp 0p8250 0.06}
                                      {ssgnp 0p5850 0.07}
                                      {ssgnp 0p5400 0.085}
                                      {sfg 0p5400 0.085}
                                      {fsg 0p5400 0.085}
                                      {ssgnp 0p4950 0.15}
                                      {sfg 0p4950 0.15}
                                      {fsg 0p4950 0.15}
                                      {ssgnp 0p5150 0.15}
                                      {sfg 0p5150 0.15}
                                      {fsg 0p5150 0.15}
                                      {ssgnp 0p4750 0.15}
                                      {sfg 0p4750 0.15}
                                      {fsg 0p4750 0.15}
                                      {tt  0p6450 0.06}
                                      {tt  0p5150 0.085}
                                      {tt  0p5600 0.07}
                                      {tt  0p4950 0.15 }
                                      {tt  0p4900 0.15 }
                                      {tt  0p6250 0.06}
                                      {ssgnp 0p4500 0.99}
                                      {sfg   0p4500 0.99}
                                      {fsg   0p4500 0.99}
                                      } {# additional incremental derate on non-dominate SVT cells http://b/261828385}
bbset sta.config.derate.R2RVtMismatch.svt.Penalty {[bbget .sta.config.derate.AddlVtMismatch.svt.Penalty]}          {#}             
bbset sta.config.interface_margin.DominateVtCrossing.default.HoldMargin {
                                      {*ssgnp-USOD* 0.050}
                                      {*tt-USOD*    0.050}
                                      {*ffgnp-USOD* 0.050}
                                      {*ssgnp-SOD*  0.060}
                                      {*tt-SOD*     0.060}
                                      {*ffgnp-SOD*  0.060}
                                      {*ssgnp-OD*   0.075}
                                      {*tt-OD*      0.075}
                                      {*ffgnp-OD*   0.075}
                                      {*ssgnp-NM*   0.100}
                                      {*tt-NM*      0.100}
                                      {*sfg-NM*   0.100}
                                      {*fsg-NM*   0.100}
                                      {*ffgnp-NM*   0.100}
                                      {*ssgnp-UD*   0.125}
                                      {*tt-UD*      0.125}
                                      {*ffgnp-UD*   0.125}
                                      {*ssgnp-SUD*  0.150}
                                      {*tt-SUD*     0.150}
                                      {*sfg-SUD*  0.150}
                                      {*fsg-SUD*  0.150}
                                      {*ffgnp-SUD*  0.150}
                                      {*ssgnp-UUD*  0.200}
                                      {*tt-UUD*     0.200}
                                      {*sfg-UUD*  0.200}
                                      {*fsg-UUD*  0.200}
                                      {*ffgnp-UUD*  0.200}
                                      } {# 2023-07-19 https://docs.google.com/document/d/1u3fBtHEEahyp25IpLxVfljb1pv4aJF50Hy31NhmPAg4/edit?resourcekey=0-7HUv5tol0SXzdmHZ_bmavw}
bbset sta.config.custom_macro_margin.HoldUncertaintyRatio {2}                                                              {# Add extra hold uncertainty on custom macros's clock pin, multiply hold_uncertainty_ratio with original hold uncertainty}
bbset sta.config.custom_macro_margin.EarlyDerate {-0.05}                                                          {# Add extra derate on early path}
bbset sta.config.mtbf_checker.dataPinPattern {*D*}                                                            {#synchronizer data pin name pattern}
bbset sta.config.mtbf_checker.synchronizerPattern {SDFSYNC*}                                                       {#Sync ref name pattern}
bbset sta.config.mtbf_checker.cellParsePattern {SDFSYNC(\\d)\\w+}                                               {#sync ref name regex}
bbset sta.config.mtbf_checker.bannedPattern {SDFSYNC1*}                                                      {#banned ref name pattern}
bbset sta.config.illegal_cell_margins.types {SeqSvtCells ClockD2LessCells AllFractionalSVTCells AllElvtCells AllSvtLowDriveCells AllSKLowDriveCells AllLvtllLowDriveCells AllFractionalLvtUlvtllUlvtCells ClockIllegalCells HighDriveHighCurrentCells AllD0P5LVTLLCells AllD0P6LVTLLCells AllD0P7LVTLLCells AllD0P8LVTLLCells } {# No Comment}  
bbset sta.config.illegal_cell_margins.yaml {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/sta/gchips/tdi/laj_ver_0p9_2/dontuse/dontuselists/illegal_cell_margins.yaml} {# No Comment}  
bbset sta.DerateLibNameMappingLibs   {(file_type=='ccs_db' && category=='stdlib' && track=~'([bbget .Track]|^$)') || (file_type=='lef' && category=='macros')} {# lib files bbquery filtering pattern for generating library name to vt_derate_lookup key mapping dict}
bbset sta.signoff.default.runs       {
                                      *-NM-*-0-*_t
                                      *-NM-*-125-*_t
                                      *-NM_LV*-0-*_t
                                      *-NM_LV*-125-*_t
                                      *-UD*-0-*_t
                                      *-UD*-125-*_t
                                      *-SUD*-0-*_t
                                      *-SUD*-125-*_t
                                      *-UUD*-0-*_t
                                      *-UUD*-125-*_t
                                      *-NM-*-0-*cworst
                                      *-NM-*-m25-*cworst
                                      *-NM-*-125-*cworst
                                      *-UD*-0-*cworst
                                      *-UD*-125-*cworst
                                      *-SUD*-0-*cworst
                                      *-SUD*-125-*cworst
                                      *-UUD*-0-*cworst
                                      *-UUD*-125-*cworst
                                      *ffgnp*NM*
                                      } {# No Comment}  
bbset sta.signoff.cpu_addtional.runs {
                                      *-XOD*
                                      *-USOD*
                                      *-SOD*
                                      *-OD*
                                      } {# No Comment}  
bbset sta.signoff.OD_UUD_addtional.runs {
                                      *-OD*
                                      } {# No Comment}  
bbset sta.signoff.NM_ONLY.runs       {
                                      *-NM-*
                                      *-NM_LV-*
                                      } {# No Comment}  
bbset sta.signoff.NM_M25_SETUP.runs  {
                                      *-NM-*m25*_t
                                      *-NM_LV*m25*_t
                                      } {# No Comment}  
bbset sta.signoff.UD_M25_SETUP_HOLD.runs {
                                      *-UD*m25*
                                      } {# No Comment}  
bbset sta.signoff.SUD_M25_SETUP_HOLD.runs {
                                      *-SUD*m25*
                                      } {# No Comment}  
bbset sta.signoff.cpu.runs           {[bbget .sta.signoff.default.runs] [bbget .sta.signoff.cpu_addtional.runs]} {# No Comment}  
bbset sta.signoff.aoss.runs          {[bbget .sta.signoff.default.runs] [bbget .sta.signoff.OD_UUD_addtional.runs] [bbget .sta.signoff.UD_M25_SETUP_HOLD.runs] [bbget .sta.signoff.SUD_M25_SETUP_HOLD.runs]} {# No Comment}  
bbset sta.signoff.OD_UUD.runs        {[bbget .sta.signoff.default.runs] [bbget .sta.signoff.OD_UUD_addtional.runs]} {# No Comment}  
bbset sta.rail2rail.runs             {[bbget .sta.rail2rail.default.runs]}                            {# No Comment}  
bbset sta.rail2rail.default.runs     {
                                      [bbget sta.rail2rail.nm.runs]
                                      [bbget sta.rail2rail.uud.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.cpu.runs         {
                                      [bbget sta.rail2rail.usod.runs]
                                      [bbget sta.rail2rail.uud.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.hdn.runs         {
                                      [bbget sta.rail2rail.sod.runs]
                                      [bbget sta.rail2rail.uud.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.nmo.runs         {
                                      [bbget sta.rail2rail.nm.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.gmc.runs         {
                                      [bbget sta.rail2rail.od.runs]
                                      [bbget sta.rail2rail.sud.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.mem.runs         {
                                      [bbget sta.rail2rail.od.runs]
                                      [bbget sta.rail2rail.uud.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.aoss.runs        {
                                      [bbget sta.rail2rail.od.runs]
                                      [bbget sta.rail2rail.uud.runs]
                                      [bbget sta.rail2rail.uud_aoc.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.nm.runs          {
                                      *R2R*.ssgnp-NM-m25-cworst_ccworst
                                      *R2R*.ssgnp-NM-125-rcworst_ccworst
                                      *R2R*.ffgnp-NM-125-rcworst_ccworst
                                      *R2R*.ffgnp-NM-m25-cbest_ccbest
                                      *R2R*.ffgnp-NM-m25-cworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.sud.runs         {
                                      *R2R*.ssgnp-SUD-0-cworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.uud.runs         {
                                      *R2R*.ssgnp-UUD-0-cworst_ccworst
                                      *R2R*.ssgnp-UUD-125-rcworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.uud_aoc.runs     {
                                      *R2R*.ssgnp-UUD-m25-cworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.usod.runs        {
                                      *R2R*.ssgnp-USOD-0-cworst_ccworst
                                      *R2R*.ssgnp-USOD-125-rcworst_ccworst
                                      *R2R*.ffgnp-USOD-125-rcworst_ccworst
                                      *R2R*.ffgnp-USOD-0-cbest_ccbest
                                      *R2R*.ffgnp-USOD-0-cworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.sod.runs         {
                                      *R2R*.ssgnp-SOD-0-cworst_ccworst
                                      *R2R*.ssgnp-SOD-125-rcworst_ccworst
                                      *R2R*.ffgnp-SOD-125-rcworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.od.runs          {
                                      *R2R*.ssgnp-OD-0-cworst_ccworst
                                      *R2R*.ssgnp-OD-125-rcworst_ccworst
                                      *R2R*.ffgnp-OD-125-rcworst_ccworst
                                      *R2R*.ffgnp-OD-0-cbest_ccbest
                                      *R2R*.ffgnp-OD-0-cworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.setup_t.runs     {
                                      *R2R*.ssgnp-USOD-125-cworst_ccworst_t
                                      *R2R*.ssgnp-SOD-125-cworst_ccworst_t
                                      *R2R*.ssgnp-OD-0-cworst_ccworst_t
                                      *R2R*.ssgnp-NM-0-cworst_ccworst_t
                                      *R2R*.ssgnp-UD-0-cworst_ccworst_t
                                      *R2R*.ssgnp-SUD-0-cworst_ccworst_t
                                      *R2R*.ssgnp-UUD-0-cworst_ccworst_t
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.default.runs {
                                      [bbget .sta.rail2rail.exclude.nm.runs]
                                      [bbget .sta.rail2rail.exclude.ud.runs]
                                      [bbget .sta.rail2rail.exclude.sud.runs]
                                      [bbget .sta.rail2rail.exclude.uud.runs]
                                      [bbget .sta.rail2rail.exclude.usod2od.runs]
                                      [bbget .sta.rail2rail.exclude.common.runs]
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.common.runs {
                                      *R2R*sfg*
                                      *R2R*fsg*
                                      *R2R*tt*
                                      *R2R*typical*
                                      *R2R*_t
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.nm.runs  {
                                      *R2R*.ffgnp-NM-125-cbest_ccbest
                                      *R2R*.ffgnp-NM-125-cworst_ccworst
                                      *R2R*.ffgnp-NM-125-rcbest_ccbest
                                      *R2R*.ffgnp-NM-m25-rcbest_ccbest
                                      *R2R*.ffgnp-NM-m25-rcworst_ccworst
                                      *R2R*.ssgnp-NM-0-cworst_ccworst
                                      *R2R*.ssgnp-NM-0-rcworst_ccworst
                                      *R2R*.ssgnp-NM-0-rcworst_ccworst_t
                                      *R2R*.ssgnp-NM-125-cworst_ccworst
                                      *R2R*.ssgnp-NM-125-cworst_ccworst_t
                                      *R2R*.ssgnp-NM-m25-rcworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.ud.runs  {
                                      *R2R*.ssgnp-UD-*
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.udm25c.runs {
                                      *R2R*.ssgnp-UD-m25-*
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.sud.runs {
                                      *R2R*.ssgnp-SUD-125-rcworst_ccworst
                                      *R2R*.ssgnp-SUD-125-rcworst_ccworst_t
                                      *R2R*.ssgnp-SUD-m25-cworst_ccworst
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.uud.runs {
                                      *R2R*.ssgnp-UUD-0-rcworst_ccworst
                                      *R2R*.ssgnp-UUD-125-cworst_ccworst
                                      *R2R*.ssgnp-UUD-125-rcworst_ccworst_t
                                      } {# No Comment}  
bbset sta.rail2rail.exclude.usod2od.runs {
                                      *R2R*.ffgnp-OD-0-rcbest_ccbest
                                      *R2R*.ffgnp-OD-0-rcworst_ccworst
                                      *R2R*.ffgnp-OD-125-cbest_ccbest
                                      *R2R*.ffgnp-OD-125-rcbest_ccbest
                                      *R2R*.ffgnp-SOD-125-cbest_ccbest
                                      *R2R*.ffgnp-SOD-125-cworst_ccworst
                                      *R2R*.ffgnp-SOD-125-rcbest_ccbest
                                      *R2R*.ffgnp-USOD-0-rcbest_ccbest
                                      *R2R*.ffgnp-USOD-0-rcworst_ccworst
                                      *R2R*.ffgnp-USOD-125-cbest_ccbest
                                      *R2R*.ffgnp-USOD-125-cworst_ccworst
                                      *R2R*.ffgnp-USOD-125-rcbest_ccbest
                                      *R2R*.ssgnp-OD-0-rcworst_ccworst
                                      *R2R*.ssgnp-OD-0-rcworst_ccworst_t
                                      *R2R*.ssgnp-OD-125-cworst_ccworst
                                      *R2R*.ssgnp-OD-125-cworst_ccworst_t
                                      *R2R*.ssgnp-OD-125-rcworst_ccworst_t
                                      *R2R*.ssgnp-SOD-0-cworst_ccworst_t
                                      *R2R*.ssgnp-SOD-0-rcworst_ccworst
                                      *R2R*.ssgnp-SOD-125-cworst_ccworst
                                      *R2R*.ssgnp-SOD-125-rcworst_ccworst_t
                                      *R2R*.ssgnp-USOD-0-cworst_ccworst_t
                                      *R2R*.ssgnp-USOD-0-rcworst_ccworst
                                      *R2R*.ssgnp-USOD-125-cworst_ccworst
                                      *R2R*.ssgnp-USOD-125-rcworst_ccworst_t
                                      } {# No Comment}  
bbset sta.yuhina.runs                {
                                      *.ffgnp-USOD-0-cbest_ccbest
                                      *.ffgnp-USOD-0-rcbest_ccbest
                                      *.ssgnp-USOD-125-cworst_ccworst
                                      *.ffgnp-USOD-125-cbest_ccbest
                                      *.ffgnp-USOD-125-rcbest_ccbest
                                      *.ffgnp-USOD-0-cworst_ccworst
                                      *.ffgnp-USOD-0-rcworst_ccworst
                                      *.ffgnp-USOD-125-cworst_ccworst
                                      *.ffgnp-USOD-125-rcworst_ccworst
                                      *.ssgnp-USOD-125-cworst_ccworst_t
                                      *.ssgnp-USOD-125-rcworst_ccworst_t
                                      *.ssgnp-USOD_SSCN-125-typical
                                      *.tt-USOD_TTRCW-125-rcworst_CCworst_t
                                      *.tt-USOD_TTCN-125-typical
                                      *.tt-XOD-125-typical
                                      *.ssgnp-OD-0-cworst_ccworst
                                      *.ssgnp-OD-125-rcworst_ccworst
                                      *.ssgnp-OD-0-rcworst_ccworst
                                      *.ssgnp-OD-125-cworst_ccworst
                                      *.ffgnp-OD-0-cbest_ccbest
                                      *.ffgnp-OD-0-rcbest_ccbest
                                      *.ffgnp-OD-125-cbest_ccbest
                                      *.ffgnp-OD-125-rcbest_ccbest
                                      *.ffgnp-OD-0-cworst_ccworst
                                      *.ffgnp-OD-0-rcworst_ccworst
                                      *.ffgnp-OD-125-cworst_ccworst
                                      *.ffgnp-OD-125-rcworst_ccworst
                                      *.ssgnp-OD-0-cworst_ccworst_t
                                      *.ssgnp-OD-125-rcworst_ccworst_t
                                      *.ssgnp-NM--25-cworst_ccworst
                                      *.ssgnp-NM--25-rcworst_ccworst
                                      *.ffgnp-NM--25-cbest_ccbest
                                      *.ffgnp-NM--25-rcbest_ccbest
                                      *.ssgnp-NM-125-cworst_ccworst
                                      *.ssgnp-NM-125-rcworst_ccworst
                                      *.ffgnp-NM-125-cbest_ccbest
                                      *.ffgnp-NM-125-rcbest_ccbest
                                      *.ffgnp-NM--25-cworst_ccworst
                                      *.ffgnp-NM--25-rcworst_ccworst
                                      *.ffgnp-NM-125-cworst_ccworst
                                      *.ffgnp-NM-125-rcworst_ccworst
                                      *.ssgnp-NM-0-cworst_ccworst_t
                                      *.ssgnp-NM-125-rcworst_ccworst_t
                                      *.ssgnp-UD-0-cworst_ccworst_t
                                      *.ssgnp-SUD-0-cworst_ccworst_t
                                      *.ssgnp-UUD-0-cworst_ccworst
                                      *.ssgnp-UUD-0-rcworst_ccworst
                                      *.ssgnp-UUD-0-cworst_ccworst_t
                                      *.ssgnp-UUD-125-cworst_ccworst
                                      *.ssgnp-UUD-125-rcworst_ccworst
                                      } {# No Comment}  
bbset sta.config.addl_settings.app_vars {{si_enable_multi_input_switching_timing_window_filter false}}   {# No Comment}  
bbset tdi_sta_spec_version           {laj_ver_0p9_2}                                                  {# No Comment}  
bbset libgen.sta.FileDictKeys        {library_name
                                      pwr_opt_name
                                      main_voltage} {# No Comment}  
bbset libgen.sta.dslg.FileDictKeys   {library_name
                                      pwr_opt_name} {# No Comment}  
bbset libgen.sta.MacroUseWireRCCorner {True}                                                           {# No Comment}  
bbset sta.config.pre_gba_hook.prtn_reset_derate.enable {True}                                                           {# No Comment}  
bbset sta.config.pre_gba_hook.prtn_reset_derate.script {[bbget .info.PD_TOOLS_DIR]/sif/tcl/common/PROTEUS_DIR/be_collaterals/BE/PT_PRTN_HT_DERATE_REMOVAL.tcl} {# No Comment}  
bbset sta.config.post_gba_hook.prtn_dont_touch.enable {True}                                                           {# No Comment}  
bbset sta.config.post_gba_hook.prtn_dont_touch.script {[bbget .info.PD_TOOLS_DIR]/sif/tcl/common/procs.proteus.tcl}    {# No Comment}  
bbset emir.func.ffgnp-NM-125-cworst_ccworst.SpefInputs {}                                                               {# design SPEFs for certain scenario}
bbset emir.func.ffgnp-NM-125-cworst_ccworst.TwfFile {}                                                               {# design TWFs for certain scenario}
bbset emir.func.ffgnp-NM-125-cworst_ccworst.SdcFile {}                                                               {# design SDC, for certain scenario}
bbset emir.func.ffgnp-NM-125-cworst_ccworst.ClockPeriod {}                                                               {# clock period for certain scenario}
bbset emir.func.ffgnp-NM-125-cworst_ccworst.SkipTwf {False}                                                          {# skip TWF for certain scenario, default False, True|False}
bbset emir.func.ffgnp-NM-125-cworst_ccworst.SkipSdc {False}                                                          {# skip sdc parsing}
bbset emir.SeqOutPinToggleRate       {0.12}                                                           {# No Comment}  
bbset emir.ClockToggleRate           {2.0}                                                            {# No Comment}  
bbset emir.IcgOutPinToggleRate       {2.0}                                                            {# No Comment}  
bbset emir.CombPinToggleRate         {0.12}                                                           {# No Comment}  
bbset emir.MacroOutPinToggleRate     {0.12}                                                           {# No Comment}  
bbset emir.PrimeInputToggleRate      {0.12}                                                           {# No Comment}  
bbset emir.tech_query.TechLefQuery   {file_type=='techlef' && track=~'[bbget .Track]' && stack=='[bbget .Stack]' && rdl=='[bbget .TechRdlType]' && is_shdmim=='[bbget .TechIsShdmim]' && pitch=='[bbget .Pitch]'} {# the first return techlef will be used}
bbset emir.tech_query.RhTechFileQuery {tool=='redhawk' && file_type=='rulefile' && corner=='rcworst_CCworst_T' && stack=='[bbget .Stack]'} {# No Comment}  
bbset emir.tech_query.rcbest_ccbest.RhTechFileQuery {tool=='redhawk' && file_type=='rulefile' && corner=='rcbest_CCbest' && stack=='[bbget .Stack]'} {# No Comment}  
bbset emir.tech_query.RhEmTechFileQuery {}                                                               {# not reqruie for TSMC process}
bbset emir.ZeroCoverageConfigCallback {
zero_coverage_config = {
  'cell_type': {
    'Combinational':  {'toggle_rate': 1.0},
    'Macro':          {'toggle_rate': 1.0},
    'SecondaryPG':    {'toggle_rate': 1.0},
    'Sequential':     {'toggle_rate': 1.0},
    'SequentialBank': {'toggle_rate': 1.0},
    'Clock':          {'toggle_rate': 2.0},
    'Memory':         {'toggle_rate': 1.0},
    'ICG':            {'toggle_rate': 2.0},
  }
}
  } {# No Comment}  
bbset emir.tech_query.cworst_ccworst.RhTechFileQuery {tool=='redhawk' && file_type=='rulefile' && corner=='rcworst_CCworst_T' && stack=='[bbget .Stack]'} {# No Comment}  
bbset emir.tech_query.cworst_ccworst.sem.RhTechFileQuery {tool=='redhawk' && file_type=='rulefile' && corner=='cworst_CCworst' && stack=='[bbget .Stack]'} {# No Comment}  
bbset emir.CreateNoPropScenarioViewObjectSettingsCallback {
object_settings = {
  'design_values': {
    'clock_pin_toggle_rate': 2.0,
    'combinational_pin_toggle_rate': 0.12,
    'sequential_output_pin_toggle_rate': 0.12,
    'mbff_bits_switching_ratio': 1.0,
  },
  'cell_values': [
    {
      'pattern': CMRegex('^TS1N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_HIGH', 'TSMC_READ_HIGH', 'TSMC_WRITE_HIGH', 'TSMC_WRITE_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^ts1n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_HIGH', 'TSMC_READ_HIGH', 'TSMC_WRITE_HIGH', 'TSMC_WRITE_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^TS3N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_HIGH', 'TSMC_READ_HIGH', 'TSMC_READ_HIGH', 'TSMC_READ_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^ts3n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_HIGH', 'TSMC_READ_HIGH', 'TSMC_READ_HIGH', 'TSMC_READ_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^TS6N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_HIGH', 'TSMC_WRITE_HIGH', 'TSMC_READ_PLUS_WRITE_HIGH', 'TSMC_READ_PLUS_WRITE_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^ts6n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_HIGH', 'TSMC_WRITE_HIGH', 'TSMC_READ_PLUS_WRITE_HIGH', 'TSMC_READ_PLUS_WRITE_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^TSGN02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['2READ1WRITE', '2READ1WRITE', '2READ', '2READ'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^tsgn02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['2READ1WRITE', '2READ1WRITE', '2READ', '2READ'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^TSG1N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['1WRITE', '1WRITE', '1READ', '1READ'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^tsg1n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['1WRITE', '1WRITE', '1READ', '1READ'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^TSG6N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['1READ1WRITE', '1READ1WRITE', '1WRITE', '1WRITE'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^tsg6n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['1READ1WRITE', '1READ1WRITE', '1WRITE', '1WRITE'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^PDD.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['input', 'output'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^PRW.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['input', 'output'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^TS10N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_PLUS_READ_HIGH', 'TSMC_B_READ_HIGH', 'TSMC_READ_PLUS_READ_HIGH', 'TSMC_B_READ_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^ts10n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_READ_PLUS_READ_HIGH', 'TSMC_B_READ_HIGH', 'TSMC_READ_PLUS_READ_HIGH', 'TSMC_B_READ_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^PLL.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['P1', 'P1', 'P2', 'P2'],
        'mode_sequence_repeats': True,
      },
    },
  ]
}
  } {# No Comment}  
bbset emir.CreateScenarioViewObjectSettingsCallback {
object_settings = {
  'cell_values': [
    {
      'pattern': CMRegex('^TS1N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_HIGH': 0.06,
          'TSMC_WRITE_HIGH': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^ts1n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_HIGH': 0.06,
          'TSMC_WRITE_HIGH': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^TS3N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_HIGH': 0.12,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^ts3n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_HIGH': 0.12,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^TS6N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_HIGH': 0.03,
          'TSMC_WRITE_HIGH': 0.03,
          'TSMC_READ_PLUS_WRITE_HIGH': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^ts6n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_HIGH': 0.03,
          'TSMC_WRITE_HIGH': 0.03,
          'TSMC_READ_PLUS_WRITE_HIGH': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^TSGN02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          '2READ1WRITE': 0.06,
          '2READ': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^tsgn02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          '2READ1WRITE': 0.06,
          '2READ': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^TSG1N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          '1WRITE': 0.06,
          '1READ': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^tsg1n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          '1WRITE': 0.06,
          '1READ': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^TSG6N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          '1READ1WRITE': 0.06,
          '1WRITE': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^tsg6n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          '1READ1WRITE': 0.06,
          '1WRITE': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^PDD.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'input': 0.06,
          'output': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^PRW.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'input': 0.06,
          'output': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^TS10N02P.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_PLUS_READ_HIGH': 0.06,
          'TSMC_B_READ_HIGH': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^ts10n02p.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'TSMC_READ_PLUS_READ_HIGH': 0.06,
          'TSMC_B_READ_HIGH': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^PLL.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'P1': 0.06,
          'P2': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
  ]
}
  } {# No Comment}  
bbset emir.EmirScanScenarioObjectSettingsCallback {
scan_scenario_object_settings = {
  'cell_values': [
    {
      'pattern': CMRegex('^(TS1N02P.*|ts1n02p.*|TS3N02P.*|ts3n02p.*|TS6N02P.*|ts6n02p.*)'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['TSMC_DFT_SCANSHIFT_HIGH'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^(TSG.*|tsg.*)'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_sequence': ['SHIFT_1100'],
        'mode_sequence_repeats': True,
      },
    },
    {
      'pattern': CMRegex('^PDD.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'input': 0.06,
          'output': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
    {
      'pattern': CMRegex('^PRW.*'),
      'demand_current_restart': True,
      'mode_control': {
        'mode_probabilities': {
          'input': 0.06,
          'output': 0.06,
          '_leakage_only_mode_': 0.88,
        },
      },
    },
  ]
}
  } {# No Comment}  
bbset emir.SignoffSpecs.StaticIr     {
                                      {{ffgnp 0p6050 125 cworst_ccworst} {0.015125}}
                                      {{ffgnp 0p6600 125 cworst_ccworst} {0.016500}}
                                      {{ffgnp 0p7150 125 cworst_ccworst} {0.017875}}
                                      {{ffgnp 0p8250 125 cworst_ccworst} {0.020625}}
                                      {{ffgnp 0p9350 125 cworst_ccworst} {0.023375}}
                                      {{ffgnp 1p0450 125 cworst_ccworst} {0.026125}}
                                      {{ffgnp 1p1550 125 cworst_ccworst} {0.028875}}
                                      } {# No Comment}  
bbset emir.SignoffSpecs.DynamicIr    {
                                      {{ffgnp 0p6050 125 cworst_ccworst} {WO_PKG {0.072600 {CLOCK 0.048400} {MEMORY 0.036300} {SEQUENTIAL 0.048400}}} {WI_PKG {0.072600 {CLOCK 0.048400} {MEMORY 0.036300} {SEQUENTIAL 0.048400}}}}
                                      {{ffgnp 0p6600 125 cworst_ccworst} {WO_PKG {0.079200 {CLOCK 0.052800} {MEMORY 0.039600} {SEQUENTIAL 0.052800}}} {WI_PKG {0.079200 {CLOCK 0.052800} {MEMORY 0.039600} {SEQUENTIAL 0.052800}}}}
                                      {{ffgnp 0p7150 125 cworst_ccworst} {WO_PKG {0.085800 {CLOCK 0.057200} {MEMORY 0.042900} {SEQUENTIAL 0.057200}}} {WI_PKG {0.085800 {CLOCK 0.057200} {MEMORY 0.042900} {SEQUENTIAL 0.057200}}}}
                                      {{ffgnp 0p8250 125 cworst_ccworst} {WO_PKG {0.099000 {CLOCK 0.066000} {MEMORY 0.049500} {SEQUENTIAL 0.066000}}} {WI_PKG {0.099000 {CLOCK 0.066000} {MEMORY 0.049500} {SEQUENTIAL 0.066000}}}}
                                      {{ffgnp 0p9350 125 cworst_ccworst} {WO_PKG {0.112200 {CLOCK 0.074800} {MEMORY 0.056100} {SEQUENTIAL 0.074800}}} {WI_PKG {0.112200 {CLOCK 0.074800} {MEMORY 0.056100} {SEQUENTIAL 0.074800}}}}
                                      {{ffgnp 1p0450 125 cworst_ccworst} {WO_PKG {0.125400 {CLOCK 0.083600} {MEMORY 0.062700} {SEQUENTIAL 0.083600}}} {WI_PKG {0.125400 {CLOCK 0.083600} {MEMORY 0.062700} {SEQUENTIAL 0.083600}}}}
                                      {{ffgnp 1p1550 125 cworst_ccworst} {WO_PKG {0.138600 {CLOCK 0.092400} {MEMORY 0.069300} {SEQUENTIAL 0.092400}}} {WI_PKG {0.138600 {CLOCK 0.092400} {MEMORY 0.069300} {SEQUENTIAL 0.092400}}}}
                                      } {# No Comment}  
bbset emir.SignoffSpecs.EmirChecks   {
                                      {TOOL_VERSION 2024_R1.4}
                                      {MAX_RESISTANCE 1000 1600}
                                      {MAX_EFFECTIVE_RESISTANCE 120 500}
                                      {MAX_BUMP_CURRENT 0.864}
                                      } {# No Comment}  
bbset emir.tech_query.RhEmRatingFactorFileQuery {}                                                               {# No Comment}  
bbset emir.static_ir_vectorless_flatTR.SeqOutPinToggleRate {0.1}                                                            {# No Comment}  
bbset emir.static_ir_vectorless_flatTR.ClockToggleRate {1.4}                                                            {# No Comment}  
bbset emir.static_ir_vectorless_flatTR.IcgOutPinToggleRate {1.4}                                                            {# No Comment}  
bbset emir.static_ir_vectorless_flatTR.CombPinToggleRate {0.1}                                                            {# No Comment}  
bbset emir.static_ir_vectorless_flatTR.MacroOutPinToggleRate {0.1}                                                            {# No Comment}  
bbset emir.static_ir_vectorless_flatTR.PrimeInputToggleRate {0.1}                                                            {# No Comment}  
bbset esd.MacroLibraryFileInclude    {}                                                               {# esd's lib prep includes every hard ip by default}
bbset pdp.dummyfill.fill_exclude_file {FEOL_BEOL_EXCLUDE_ADDITION.rul}                                 {CIA audit setting}
bbset pdp.ipmerge.feolfill_exc_regex {DEXCL$}                                                         {# No Comment}  
bbset pdp.ipmerge.beolfill_exc_regex {DEXCL_M\\d?}                                                    {# No Comment}  
bbset pdp.ipmerge.viafill_exc_regex  {DEXCL_V\\d?}                                                    {# No Comment}  
bbset pdp.dummyfill.mfill_regex      {M(\\d+)_DUMMY$}                                                 {# No Comment}  
bbset pdp.config.CIA.v2spi.NetlistInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.v2spi.NetlistInfo.FunctionMap {
                                      {PDV_5_1 ToolVersion}
                                      {PDV_5_4 ConnectionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.v2spi.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.v2spi.BoBVarCheck.FunctionMap {
                                      {PDV_5_2 INPUT_VERILOG}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.v2spi.BBFileCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.v2spi.BBFileCheck.FunctionMap {PDV_1_9 CHIPFINISH_VERILOG
                                      PDV_1_4 FlattenOptCheck
                                      PDV_5_6 V2SPI_NODK_NETLIST
                                      PDV_5_7 V2SPI_NETLIST} {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.ipmerge.DkVersion.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.ipmerge.DkVersion.FunctionMap {
                                      {PDV_2_2 DkVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.ipmerge.IpMergeCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.ipmerge.IpMergeCheck.FunctionMap {
                                      {PDV_1_1 TECH_LEF}
                                      {PDV_1_5 PG_PIN_LIST}
                                      {PDV_2_1 ToolVersion}
                                      {PDV_2_5 LocalLayoutCheck}
                                      {PDV_2_8 Text2LayoutCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.ipmerge.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.ipmerge.BoBVarCheck.FunctionMap {
                                      {PDV_2_3 MDK_VERSION}
                                      {PDV_2_4 INPUT_GDS}
                                      {PDV_2_6 SubBlockVersion}
                                      {PDV_2_8_1 UPF_VOLTEXT}
                                      {PDV_2_9 StrictCheck}
                                      {PDV_99_6 AllSubBlockVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.ipmerge.BBFileCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.ipmerge.BBFileCheck.FunctionMap {PDV_1_8 CHIPFINISH_LAYOUT
                                      PDV_2_11 IPMERGE_NODK_OUTPUT
                                      PDV_2_12 IPMERGE_OUTPUT} {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.ipmerge.ReportInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.ipmerge.ReportInfo.FunctionMap {
                                      {PDV_1_3 WATER_MARK}
                                      {PDV_2_7 EmptyLibCheck}
                                      {PDV_3_9 FEOL_EXCLUDE}
                                      {PDV_3_10 BEOL_EXCLUDE}
                                      {PDV_3_11 VIA_EXCLUDE}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.ipmerge.LogInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.ipmerge.LogInfo.FunctionMap {
                                      {PDV_99_2 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.dummyfill.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.dummyfill.ControlInfo.FunctionMap {
                                      {PDV_3_2 PDKVersionCheck}
                                      {PDV_3_3 PDKVersionCapture}
                                      {PDV_3_14 DMY_EXCLUDE_ADDITION}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.dummyfill.DummyFillInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.dummyfill.DummyFillInfo.FunctionMap {
                                      {PDV_3_1 ToolVersion}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.dummyfill.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.dummyfill.BoBVarCheck.FunctionMap {
                                      {PDV_3_4 INPUT_GDS}
                                      {PDV_3_6 REUSE_DUMMYFILL}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.dummyfill.BBFileCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.dummyfill.BBFileCheck.FunctionMap {PDV_3_16 DUMMYFILL_NODK_OUTPUT
                                      PDV_3_17 DUMMYFILL_OUTPUT} {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.dummyfill.ReportInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.dummyfill.ReportInfo.FunctionMap {
                                      {PDV_3_13 MAX_MFILL}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.dummyfill.LogInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.dummyfill.LogInfo.FunctionMap {
                                      {PDV_99_3 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.designin.BBFileCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.designin.BBFileCheck.FunctionMap {PDV_1_10 CHIPFINISH_HCELL
                                      PDV_4_1 CHIPFINISH_PATH
                                      PDV_4_3 DESIGNIN_HCELL} {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.postfix.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.postfix.BoBVarCheck.FunctionMap {
                                      {PDV_7_1 INPUT_GDS}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.postfix.BBFileCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.postfix.BBFileCheck.FunctionMap {PDV_7_3 POSTFIX_LAYOUT
                                      PDV_7_4 POSTFIX_NETLIST
                                      PDV_7_5 POSTFIX_HCELL} {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.postfix.LogInfo.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.postfix.LogInfo.FunctionMap {
                                      {PDV_99_4 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.bumpoverlay.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.bumpoverlay.BoBVarCheck.FunctionMap {
                                      {PDV_6_1 INPUT_GDS}
                                      {PDV_6_2 BumpInputCheck}
                                      {PDV_6_3 BUMP_DEF}
                                      {PDV_6_4 BUMP_LEF}
                                      {PDV_6_5 CELL_GDS}
                                      {PDV_6_6 BUMP_MAPFILE}
                                      {PDV_6_7 BUMP_TECHLEF}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.bumpoverlay.BBFileCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.bumpoverlay.BBFileCheck.FunctionMap {PDV_6_9 BUMPOVERLAY_MERGE_OUTPUT}                               {define 1:1 mapping for check_id and function}
bbset pdp.config.CIA.lefvsgds.LefVsGdsCheck.Enable {True}                                                           {# No Comment}  
bbset pdp.config.CIA.lefvsgds.LefVsGdsCheck.FunctionMap {
                                      {PDV_1_2 MISMATCH_CHECK}
                                      } {define 1:1 mapping for check_id and function}
bbset pdp.runpdp.job_order           {bumpoverlay pdpqa ipmerge postfix designin v2spi dummyfill}     {# No Comment}  
bbset pdp.runpdp.jobs                {pdpqa ipmerge designin v2spi dummyfill}                         {The order is meaningful}
bbset pdp.iprelease_path             {[bbget .wrap.IpReleasesPath]/[bbget hierarchy.[bbget .info.BLOCK].IpReleasesParent]/[bbget .info.BLOCK]} {# No Comment}  
bbset pdp.cds_layer_map              {[bbget .info.PROCESS_DIR]/pdv/calibre/calibredrv/cds_layer.map} {# No Comment}  
bbset pdp.audit_pdkpor_file          {[get_latest_pattern_file [bbget .wrap.IpReleasesPath]/cad_pd_waihona/collateral/lajolla/pdv/PDKPOR*/*.csv]} {# No Comment}  
bbset pdp.dummyfill.calibre_version  {2024.3_42.27}                                                   {# No Comment}  
bbset pdp.dummyfill.merge            {true}                                                           {# No Comment}  
bbset pdp.dummyfill.feol             {true}                                                           {# No Comment}  
bbset pdp.dummyfill.beol             {true}                                                           {# No Comment}  
bbset pdp.dummyfill.hier             {true}                                                           {# No Comment}  
bbset pdp.dummyfill.hyper            {true}                                                           {# No Comment}  
bbset pdp.dummyfill.turbo            {8}                                                              {# No Comment}  
bbset pdp.dummyfill.hooks            { [bbget .info.PROCESS_DIR]/pdv/calibre/dummyfill/FEOL_BEOL_EXCLUDE_ADDITION.rul} {# No Comment}  
bbset pdp.dummyfill.nodk             {1}                                                              {# No Comment}  
bbset pdp.dummyfill.cores            {8}                                                              {# No Comment}  
bbset pdp.dummyfill.beol_Resources   {[bbget pdp.dummyfill.Resources]}                                {# No Comment}  
bbset pdp.dummyfill.beol_remote_host_memory {[bbget pdp.dummyfill.remote_host_memory]}                       {# No Comment}  
bbset pdp.dummyfill.beol_remote_host_resources {[bbget pdp.dummyfill.remote_host_resources]}                    {# No Comment}  
bbset pdp.dummyfill.beol_remote_host_cores {[bbget pdp.dummyfill.remote_host_cores]}                        {# No Comment}  
bbset pdp.dummyfill.beol_remote_hosts {[bbget pdp.dummyfill.remote_hosts]}                             {# No Comment}  
bbset pdp.dummyfill.beol_cores       {[bbget pdp.dummyfill.cores]}                                    {# No Comment}  
bbset pdp.dummyfill.beol_memory      {[bbget pdp.dummyfill.memory]}                                   {# No Comment}  
bbset pdp.dummyfill.feol_Resources   {[bbget pdp.dummyfill.Resources]}                                {# No Comment}  
bbset pdp.dummyfill.feol_remote_host_memory {[bbget pdp.dummyfill.remote_host_memory]}                       {# No Comment}  
bbset pdp.dummyfill.feol_remote_host_resources {[bbget pdp.dummyfill.remote_host_resources]}                    {# No Comment}  
bbset pdp.dummyfill.feol_remote_host_cores {[bbget pdp.dummyfill.remote_host_cores]}                        {# No Comment}  
bbset pdp.dummyfill.feol_remote_hosts {[bbget pdp.dummyfill.remote_hosts]}                             {# No Comment}  
bbset pdp.dummyfill.feol_cores       {[bbget pdp.dummyfill.cores]}                                    {# No Comment}  
bbset pdp.dummyfill.feol_memory      {[bbget pdp.dummyfill.memory]}                                   {# No Comment}  
bbset pdp.ipmerge.missing_lib_exempt {{_VIA\\d+$} {_DUMMYFILL_TOP_\\d+$} {(VIA\\d+_)}}                {default regex to match cells to exempt from missing libs check}
bbset pdp.ipmerge.nodk               {1}                                                              {# No Comment}  
bbset pdp.ipmerge.premerge_check     {0}                                                              {turn off regex-based missing cells check}
bbset pdp.ipmerge.fdc_cells          {[bbget info.PROCESS_DIR]/pdv/calibre/pdpqa/fiducial_cell_density/fiducial_h130.oas [bbget info.PROCESS_DIR]/pdv/calibre/pdpqa/fiducial_cell_density/fiducial_h156.oas} {# No Comment}  
bbset pdp.ipmerge.waiverlib_regex    {{ip_aging_sensor_top} {^TS\\\\S+N02P\\\\S*LVT\\\\S*} {^TS\\\\S+N02P\\\\S*ULVT\\\\S*} {^TS\\\\S+N02P\\\\S*SVT\\\\S*} {ip_tphn02p_075od12gpio_\\\\S+} {ip_PLLTS2\\\\S+} {ip_tpmn02p_esd} {ip_tpmn02p_lup}} {# No Comment}  
bbset pdp.ipmerge.fdc_subblocks      {[bbfiles -hierarchy -level 1 -subblocks all -filetype fdclayout -bundles ipmerge]} {subblocks fdc layout database}
bbset pdp.ipmerge.upf_voltext        {[bbfiles -bundles designin -filetype voltage_text_layer]}       {# No Comment}  
bbset pdp.ipmerge.merge_voltext2layout {1}                                                              {# No Comment}  
bbset pdp.ipmerge.merge_text2layout  {1}                                                              {# No Comment}  
bbset pdp.v2spi.nodk                 {1}                                                              {# No Comment}  
bbset pdp.bumpoverlay.rdlgds         {file_type=='gds' && library_name=='before_shrink_Cu_bump_3'}    {# No Comment}  
bbset pdp.bumpoverlay.techlef        {file_type=~'techlef' && tool=~'innovus' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'} {# No Comment}  
bbset pdp.bumpoverlay.bumplef        {file_type=='lef' && library_name=='bump_cell_fc_n2p'}           {# No Comment}  
bbset pdp.bumpoverlay.mapfile        { [bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/bumpoverlay/tech_fdi.map} {# No Comment}  
bbset pdp.bumpoverlay.cellgds        {[bbquery get file -db dk -filter "file_type=~'oas' && library_name=~ 'bump_cell_fc_n2p'"]} {# No Comment}  
bbset pdp.bumpoverlay.cellgds_format {OASIS}                                                          {# No Comment}  
bbset pdp.bumpoverlay.deffile        {[get_latest_pattern_file [bbget pdp.iprelease_path]/*/bumprdl/*bumpdef_only.def]} {# No Comment}  
bbset pdp.lefvsgds.lef_file          {[bbfiles -bundles chipfinish -filetype lef -purpose lefvsgds]}  {# No Comment}  
bbset pdp.lefvsgds.def_file          {[bbfiles -bundles chipfinish -filetype def -purpose lefvsgds]}  {# No Comment}  
bbset pdp.lefvsgds.layout            {[bbfiles -filetype layout -bundles chipfinish]}                 {# No Comment}  
bbset pdp.lefvsgds.tlef              {[bbquery get file -db pdk -filter "file_type=~'techlef' && tool=~'innovus' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {# No Comment}  
bbset pdp.lefvsgds.mapfile           {[bbget .info.PROCESS_DIR]/pdv/calibre/lefvsgds/tech_fdi.map}    {# No Comment}  
bbset pdp.lefvsgds.selected_layer    {[bbget .info.PROCESS_DIR]/pdv/calibre/lefvsgds/include.layer}   {# No Comment}  
bbset pdp.lefvsgds.hier              {true}                                                           {# No Comment}  
bbset pdp.lefvsgds.hyper             {true}                                                           {# No Comment}  
bbset pdp.lefvsgds.compare_subblock  {1}                                                              {# No Comment}  
bbset pdp.lefvsgds.subblocks         {[bbget hierarchy.[bbget .info.BLOCK].subblocks]}                {# No Comment}  
bbset pdp.lefvsgds.subblock_lefs     {[bbfiles -hierarchy -level 1 -subblocks all -bundles chipfinish -filetype lef -purpose lefvsgds]} {# No Comment}  
bbset pdp.lefvsgds.subblock_defs     {[bbfiles -hierarchy -level 1 -subblocks all -bundles chipfinish -filetype def -purpose lefvsgds]} {# No Comment}  
bbset pdp.lefvsgds.subblock_layouts  {[bbfiles -hierarchy -level 1 -subblocks all -bundles chipfinish -filetype layout]} {# No Comment}  
bbset pdp.lefvsgds.use_pnr           {true}                                                           {# No Comment}  
bbset pdp.lefvsgds.use_pnr_def       {true}                                                           {# No Comment}  
bbset pdp.pdpqa.enable               {outside_boundary dummy_exclude fiducial_cell_density lefvsgds_check} {# No Comment}  
bbset pdp.pdpqa.psub2_bbox           {}                                                               {# No Comment}  
bbset pdp.pdpqa.psub2_check.layout   {[bbfiles -filetype layout -bundles dummyfill]}                  {# No Comment}  
bbset pdp.pdpqa.psub2_check.psub2_bbox {[bbget pdp.pdpqa.psub2_bbox]}                                   {# No Comment}  
bbset pdp.pdpqa.psub2_check.rulefile {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/psub2_check/psub2_check.rules} {# No Comment}  
bbset pdp.pdpqa.psub2_check.hyper    {true}                                                           {# No Comment}  
bbset pdp.pdpqa.psub2_check.hier     {true}                                                           {# No Comment}  
bbset pdp.pdpqa.psub2_check.calibre_version {[bbget pdv.drc.calibre_version]}                                {# No Comment}  
bbset pdp.pdpqa.outside_boundary.layout {[bbfiles -filetype layout -bundles dummyfill]}                  {# No Comment}  
bbset pdp.pdpqa.outside_boundary.designtype {[bbget pdv.drc.designtype]}                                     {# No Comment}  
bbset pdp.pdpqa.outside_boundary.rulefile {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/outside_boundary/rulefile} {# No Comment}  
bbset pdp.pdpqa.outside_boundary.selectfile {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/outside_boundary/select} {# No Comment}  
bbset pdp.pdpqa.outside_boundary.hyper {true}                                                           {# No Comment}  
bbset pdp.pdpqa.outside_boundary.hier {true}                                                           {# No Comment}  
bbset pdp.pdpqa.outside_boundary.calibre_version {[bbget pdv.drc.calibre_version]}                                {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.layout {[bbfiles -filetype layout -bundles dummyfill]}                  {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.designtype {[bbget pdv.drc.designtype]}                                     {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.rulefile {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/dummy_exclude/rulefile} {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.selectfile {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/dummy_exclude/select} {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.hyper  {true}                                                           {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.hier   {true}                                                           {# No Comment}  
bbset pdp.pdpqa.dummy_exclude.calibre_version {[bbget pdv.drc.calibre_version]}                                {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.layout {[bbfiles -filetype fdclayout -bundles ipmerge]}                 {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.variable {FiducialCellGrow_P0 FiducialCellGrow_P1 CoreShrink_P0 CoreShrink_P1 StdCellLayer} {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.StdCellLayer {FB_9 FB_6}                                                      {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.CoreShrink_P0 {0}                                                              {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.CoreShrink_P1 {0}                                                              {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.FiducialCellGrow_P0 {27.5}                                                           {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.FiducialCellGrow_P1 {25}                                                             {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.hyper {true}                                                           {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.hier {true}                                                           {# No Comment}  
bbset pdp.pdpqa.fiducial_cell_density.calibre_version {[bbget pdv.drc.calibre_version]}                                {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.layout {[bbfiles -filetype layout -bundles dummyfill]}                  {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.lef   {[bbfiles -bundles chipfinish -filetype lef -purpose lefvsgds]}  {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.flow_var_file {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/lefvsgds/lef_vs_gds_flow_vars.tcl} {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.flow_text_file {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/lefvsgds/lef_vs_gds_text.tcl} {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.innovus_module {[bbget pnr.floorplan.ToolVersion]}                              {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.calibre_version {[bbget pdv.drc.calibre_version]}                                {# No Comment}  
bbset pdp.pdpqa.lefvsgds_check.tlef  {[bbquery get file -db pdk -filter "file_type=~'techlef' && tool=~'innovus' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.lef   {[bbfiles -bundles chipfinish -filetype lef -purpose lefvsgds]}  {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.reflef {[bbfiles -bundles chipfinish -filetype lef -purpose lefvsgds]}  {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.flow_var_file {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/lefvslef/lef_vs_lef_vars.tcl} {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.flow_tcl_file {[bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/pdv/calibre/pdpqa/lefvslef/lef_vs_lef.tcl} {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.innovus_module {[bbget pnr.floorplan.ToolVersion]}                              {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.calibre_version {[bbget pdv.drc.calibre_version]}                                {# No Comment}  
bbset pdp.pdpqa.lefvslef_check.tlef  {[bbquery get file -db pdk -filter "file_type=~'techlef' && tool=~'innovus' && track=~'[bbget .Track]' && stack=~'[bbget .Stack]' && pitch =='[bbget .Pitch]'&& rdl=='[bbget .TechRdlType]' && is_shdmim =~'[bbget .TechIsShdmim]'"]} {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.layout {[bbfiles -filetype layout -bundles bumpoverlay -category bumpmerge]} {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.calibre_version {[bbget pdv.lvs_recon.calibre_version]}                          {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.turbo {1}                                                              {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.hyper {true}                                                           {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.hier  {true}                                                           {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.si    {all}                                                            {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.softchk {true}                                                           {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.svrf_patterns {[bbget pdv.lvs_recon.svrf_patterns]}                            {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.svrf_keys {[bbget pdv.lvs_recon.svrf_keys]}                                {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.svrf_vars {[bbget pdv.lvs.svrf_vars]}                                      {# No Comment}  
bbset pdp.pdpqa.perc_lvs_recon.bumprdl_edtext {[get_latest_pattern_file [bbget pdp.iprelease_path]/*/bumprdl/*edtext.txt]} {# No Comment}  
bbset pdp.designin.voltage_text_layer {[bbfiles -filetype voltage_text_layer -bundles chipfinish]}     {voltage text layer represented file}
bbset pdp.postfix.ignore             {chrtmom_2t crtmom_2t crtmom_mx_4t crtmom_wo crtmom_wo_lct crtmom_wo_mx csfmom_2t efuse_m0 efuse_m1 efuse_mx mimcap_shp2 moscap_lct moscap_lct_nw ndio_hia_mac ndio_hia_ntn_mac ndio_mac ndio_ntn_mac nmoscap npode_elvt_mac npode_hselvt_mac npode_hslvt_mac npode_hsulvtll_mac npode_hsulvt_mac npode_lvtll_mac npode_lvt_mac npode_svt_mac npode_ulvtll_mac npode_ulvt_mac pdio_hia_mac pdio_mac ppode_elvt_mac ppode_hselvt_mac ppode_hslvt_mac ppode_hsulvtll_mac ppode_hsulvt_mac ppode_lvtll_mac ppode_lvt_mac ppode_svt_mac ppode_ulvtll_mac ppode_ulvt_mac rhim rmsp vtag vtagdelta vtagmax vtagmin vtagsync } {# No Comment}  
bbset vclp.scenarios.Scenarios       {
                                      func.ssgnp-NM-0-cworst_ccworst_t
                                      } { # define scenarios that been created base on bbmmmc.py structure }
bbset pex.TargetExtractRcCorners     { {0 cworst_ccworst} {0 cworst_ccworst_t} {0 cbest_ccbest} {0 rcbest_ccbest} {0 rcworst_ccworst} {0 rcworst_ccworst_t} {125 cbest_ccbest} {125 cworst_ccworst} {125 cworst_ccworst_t} {125 rcbest_ccbest} {125 rcworst_ccworst} {125 rcworst_ccworst_t} {85 cworst_ccworst_t} {m25 cbest_ccbest} {m25 cworst_ccworst} {m25 rcbest_ccbest} {m25 rcworst_ccworst} {0 typical} {125 typical}} {# No Comment}  
bbset pex.RcCornerNameMapping        { {cworst_ccworst_t cworst_CCworst_T}
                                      {rcworst_ccworst_t rcworst_CCworst_T}
                                      {cworst_ccworst cworst_CCworst}
                                      {rcworst_ccworst rcworst_CCworst}
                                      {cbest_ccbest cbest_CCbest}
                                      {rcbest_ccbest rcbest_CCbest}
                                      {typical typical}} {# No Comment}  
bbset pdv.ant.parallel_jobs          {}                                                               {# No Comment}  
bbset pdv.drc.parallel_jobs          {beol feol density voltage}                                      {# No Comment}  
bbset pdv.drc.parallel.beol          {
                                      bbset enable BACK_END G0_RULE_CHECK SHP2MIM
                                      bbset disable FRONT_END VOLTAGE_RULE_CHECK ESD_LUP_RULE_CHECK DFM COD_RULE_CHECK DENSITY_RULE_CHECK_ONLY
                                      bbset switch_type {SwitchRun}
                                      bbset is_parallelrun true
                                      } {# No Comment}  
bbset pdv.drc.parallel.feol          {
                                      bbset enable FRONT_END COD_RULE_CHECK
                                      bbset disable BACK_END G0_RULE_CHECK VOLTAGE_RULE_CHECK ESD_LUP_RULE_CHECK DFM DENSITY_RULE_CHECK_ONLY SHP2MIM
                                      bbset switch_type {SwitchRun}
                                      bbset is_parallelrun true
                                      } {# No Comment}  
bbset pdv.drc.parallel.esdlup        {
                                      bbset enable ESD_LUP_RULE_CHECK_ONLY
                                      bbset switch_type {SwitchRun}
                                      bbset is_parallelrun true
                                      } {# No Comment}  
bbset pdv.drc.parallel.density       {
                                      bbset enable DENSITY_RULE_CHECK_ONLY
                                      bbset switch_type {SwitchRun}
                                      bbset is_parallelrun true
                                      } {# No Comment}  
bbset pdv.drc.parallel.voltage       {
                                      bbset enable VOLTAGE_RULE_CHECK_ONLY
                                      bbset switch_type {SwitchRun}
                                      bbset is_parallelrun true
                                      } {# No Comment}  
bbset pdv.drc.parallel.voltage_debug {
                                      bbset enable DEBUG_VOLTAGE_RULE DEBUG_VOLTAGE_RULE_WITH_METAL_CONNECTION DEBUG_VOLTAGE_RULE_OUTPUT_ALL_VOLTAGE_TEXT VOLTAGE_RULE_CHECK VOLTAGE_RULE_CHECK_ONLY
                                      bbset svrf_keys {TEXT PRINT MAXIMUM 1000 OVERFLOW "text_all_report.txt" ALL OVERFLOW "text_top_report.txt" PRIMARY_ONLY}
                                      bbset switch_type {SwitchRun}
                                      bbset is_parallelrun true
                                      } {# No Comment}  
bbset pdv.config.CIA.drc.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc.ControlInfo.FunctionMap {
                                      {PDV_8_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.drc.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc.MetricInfo.FunctionMap {
                                      {PDV_8_1 ToolVersion}
                                      {PDV_8_20 MetalDrcCheck}
                                      {PDV_8_19 BaseDrcCheck}
                                      {PDV_8_12 CommonReportPath}
                                      {PDV_8_14 DensityCheck}
                                      {PDV_8_15 LupDrcCheck}
                                      {PDV_8_16 LupDrcCheck}
                                      {PDV_8_17 TcdDrcCheck}
                                      {PDV_8_18 HvDrcCheck}
                                      {PDV_8_21 ErrorMsgCheck}
                                      {PDV_8_22 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.drc.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc.PdkVarCheck.FunctionMap {
                                      {PDV_8_8 IP_TIGHTEN_DENSITY}
                                      {PDV_8_9 VDD_TEXT}
                                      {PDV_8_10 VSS_TEXT}
                                      {PDV_8_11 PAD_TEXT}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.drc.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc.BoBVarCheck.FunctionMap {
                                      {PDV_8_3 INPUT_GDS}
                                      {PDV_8_5 VOLTAGE_INFO}
                                      {PDV_8_6 HookFileCheck}
                                      {PDV_8_7 BlockBoxCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.drc_dfm.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc_dfm.ControlInfo.FunctionMap {
                                      {PDV_16_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.drc_dfm.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc_dfm.MetricInfo.FunctionMap {
                                      {PDV_16_1 ToolVersion}
                                      {PDV_16_7 CommonReportPath}
                                      {PDV_16_9 DrcAllCheck}
                                      {PDV_16_10 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.drc_dfm.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.drc_dfm.BoBVarCheck.FunctionMap {
                                      {PDV_16_3 INPUT_GDS}
                                      {PDV_16_5 HookFileCheck}
                                      {PDV_16_6 BlockBoxCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc.ControlInfo.FunctionMap {
                                      {PDV_9_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc.MetricInfo.FunctionMap {
                                      {PDV_9_1 ToolVersion}
                                      {PDV_9_13 ErcReportPath}
                                      {PDV_9_14 SoftConnCheck}
                                      {PDV_9_16 ErcCheck}
                                      {PDV_9_17 OpenShortCheck}
                                      {PDV_9_18 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc.PdkVarCheck.FunctionMap {
                                      {PDV_9_11 POWER_NAME}
                                      {PDV_9_12 GROUND_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc.BoBVarCheck.FunctionMap {
                                      {PDV_9_3 INPUT_GDS}
                                      {PDV_9_5 HookFileCheck}
                                      {PDV_9_6 BlockBoxCheck}
                                      {PDV_9_8 EDTEXT}
                                      {PDV_9_9 VIRTUAL_CONNECTS}
                                      {PDV_9_10 PSUB2_INFO}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc_waiver.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc_waiver.ControlInfo.FunctionMap {
                                      {PDV_9_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc_waiver.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc_waiver.MetricInfo.FunctionMap {
                                      {PDV_9_1 ToolVersion}
                                      {PDV_9_13 ErcReportPath}
                                      {PDV_9_14 SoftConnCheck}
                                      {PDV_9_16 ErcCheck}
                                      {PDV_9_17 OpenShortCheck}
                                      {PDV_9_18 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc_waiver.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc_waiver.PdkVarCheck.FunctionMap {
                                      {PDV_9_11 POWER_NAME}
                                      {PDV_9_12 GROUND_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.erc_waiver.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.erc_waiver.BoBVarCheck.FunctionMap {
                                      {PDV_9_3 INPUT_GDS}
                                      {PDV_9_5 HookFileCheck}
                                      {PDV_9_6 BlockBoxCheck}
                                      {PDV_9_8 EDTEXT}
                                      {PDV_9_9 VIRTUAL_CONNECTS}
                                      {PDV_9_10 PSUB2_INFO}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.ant.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.ant.ControlInfo.FunctionMap {
                                      {PDV_10_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.ant.MetricInfo.FunctionMap {
                                      {PDV_10_1 ToolVersion}
                                      {PDV_10_5 CommonReportPath}
                                      {PDV_10_7 AntennaCheck}
                                      {PDV_10_8 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.ant.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.ant.BoBVarCheck.FunctionMap {
                                      {PDV_10_3 INPUT_GDS}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.sram_check.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.sram_check.ControlInfo.FunctionMap {
                                      {PDV_11_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.sram_check.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.sram_check.MetricInfo.FunctionMap {
                                      {PDV_11_1 ToolVersion}
                                      {PDV_11_5 CommonReportPath}
                                      {PDV_11_7 SramCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.sram_check.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.sram_check.BoBVarCheck.FunctionMap {
                                      {PDV_11_3 INPUT_GDS}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo.ControlInfo.FunctionMap {
                                      {PDV_12_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo.MetricInfo.FunctionMap {
                                      {PDV_12_1 ToolVersion}
                                      {PDV_12_11 CommonReportPath}
                                      {PDV_12_13 PercCheck}
                                      {PDV_12_14 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo.PdkVarCheck.FunctionMap {
                                      {PDV_12_10 GLOBAL_ESD_BUS}
                                      {PDV_12_7 POWER_NAME}
                                      {PDV_12_8 GROUND_NAME}
                                      {PDV_12_9 SIGNAL_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo.BoBVarCheck.FunctionMap {
                                      {PDV_12_5 HookFileCheck}
                                      {PDV_12_5_1 VOLTAGE_INFO}
                                      {PDV_12_6 BlockBoxCheck}
                                      {PDV_12_3 INPUT_NETLIST}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo_waiver.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo_waiver.ControlInfo.FunctionMap {
                                      {PDV_12_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo_waiver.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo_waiver.MetricInfo.FunctionMap {
                                      {PDV_12_1 ToolVersion}
                                      {PDV_12_11 CommonReportPath}
                                      {PDV_12_13 PercCheck}
                                      {PDV_12_14 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo_waiver.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo_waiver.PdkVarCheck.FunctionMap {
                                      {PDV_12_10 GLOBAL_ESD_BUS}
                                      {PDV_12_7 POWER_NAME}
                                      {PDV_12_8 GROUND_NAME}
                                      {PDV_12_9 SIGNAL_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_topo_waiver.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_topo_waiver.BoBVarCheck.FunctionMap {
                                      {PDV_12_5 HookFileCheck}
                                      {PDV_12_6 BlockBoxCheck}
                                      {PDV_12_3 INPUT_NETLIST}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_ldl.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_ldl.ControlInfo.FunctionMap {
                                      {PDV_13_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_ldl.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_ldl.MetricInfo.FunctionMap {
                                      {PDV_13_1 ToolVersion}
                                      {PDV_13_14 CommonReportPath}
                                      {PDV_13_16 PercCheck}
                                      {PDV_13_17 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_ldl.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_ldl.PdkVarCheck.FunctionMap {
                                      {PDV_13_13 GLOBAL_ESD_BUS}
                                      {PDV_13_10 POWER_NAME}
                                      {PDV_13_11 GROUND_NAME}
                                      {PDV_13_12 SIGNAL_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_ldl.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_ldl.BoBVarCheck.FunctionMap {
                                      {PDV_13_3 PercInputCheck}
                                      {PDV_13_4 INPUT_GDS}
                                      {PDV_13_6 HookFileCheck}
                                      {PDV_13_6_1 VOLTAGE_INFO}
                                      {PDV_13_7 EDTEXT}
                                      {PDV_13_8 BlockBoxCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_ldl.SVRFCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_ldl.SVRFCheck.FunctionMap {
                                      {PDV_13_9 VIRTUAL_CONNECT_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cd.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cd.ControlInfo.FunctionMap {
                                      {PDV_14_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cd.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cd.MetricInfo.FunctionMap {
                                      {PDV_14_1 ToolVersion}
                                      {PDV_14_16 CommonReportPath}
                                      {PDV_14_18 PercCheck}
                                      {PDV_14_19 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cd.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cd.PdkVarCheck.FunctionMap {
                                      {PDV_14_15 GLOBAL_ESD_BUS}
                                      {PDV_14_12 POWER_NAME}
                                      {PDV_14_13 GROUND_NAME}
                                      {PDV_14_14 SIGNAL_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cd.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cd.BoBVarCheck.FunctionMap {
                                      {PDV_14_3 PercInputCheck}
                                      {PDV_14_4 INPUT_GDS}
                                      {PDV_14_6 LDL_MARKER_PATH}
                                      {PDV_14_6_1 VOLTAGE_INFO}
                                      {PDV_14_7 HookFileCheck}
                                      {PDV_14_8 EDTEXT}
                                      {PDV_14_9 REDUCE_LAYERS}
                                      {PDV_14_10 BlockBoxCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cd.SVRFCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cd.SVRFCheck.FunctionMap {
                                      {PDV_14_11 VIRTUAL_CONNECT_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_p2p.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_p2p.ControlInfo.FunctionMap {
                                      {PDV_15_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_p2p.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_p2p.MetricInfo.FunctionMap {
                                      {PDV_15_1 ToolVersion}
                                      {PDV_15_16 CommonReportPath}
                                      {PDV_15_18 PercCheck}
                                      {PDV_15_19 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_p2p.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_p2p.PdkVarCheck.FunctionMap {
                                      {PDV_15_12 POWER_NAME}
                                      {PDV_15_13 GROUND_NAME}
                                      {PDV_15_14 SIGNAL_NAME}
                                      {PDV_15_15 GLOBAL_ESD_BUS}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_p2p.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_p2p.BoBVarCheck.FunctionMap {
                                      {PDV_15_3 PercInputCheck}
                                      {PDV_15_4 INPUT_GDS}
                                      {PDV_15_6 LDL_MARKER_PATH}
                                      {PDV_15_7 HookFileCheck}
                                      {PDV_15_7_1 VOLTAGE_INFO}
                                      {PDV_15_8 EDTEXT}
                                      {PDV_15_9 REDUCE_LAYERS}
                                      {PDV_15_10 BlockBoxCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_p2p.SVRFCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_p2p.SVRFCheck.FunctionMap {
                                      {PDV_15_11 VIRTUAL_CONNECT_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.lvs.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.lvs.ControlInfo.FunctionMap {
                                      {PDV_17_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.lvs.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.lvs.MetricInfo.FunctionMap {
                                      {PDV_17_1 ToolVersion}
                                      {PDV_17_9 LvsReportPath}
                                      {PDV_17_11 LvsCheck}
                                      {PDV_17_12 OpenShortCheck}
                                      {PDV_17_13 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.lvs.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.lvs.BoBVarCheck.FunctionMap {
                                      {PDV_17_3 INPUT_NETLIST}
                                      {PDV_17_4 LVS_HCELLS}
                                      {PDV_17_7 VIRTUAL_CONNECTS}
                                      {PDV_17_8 HookFileCheck}
                                      {PDV_17_9 BlockBoxCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.lvs.WrapAudit.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.lvs.WrapAudit.FunctionMap {
                                      {PDV_99_5 PgOpenShortCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cnod.ControlInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cnod.ControlInfo.FunctionMap {
                                      {PDV_18_2 PDKVersionCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cnod.MetricInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cnod.MetricInfo.FunctionMap {
                                      {PDV_18_1 ToolVersion}
                                      {PDV_18_15 CommonReportPath}
                                      {PDV_18_17 PercCheck}
                                      {PDV_18_18 ErrorMsgCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cnod.PdkVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cnod.PdkVarCheck.FunctionMap {
                                      {PDV_18_10 POWER_NAME}
                                      {PDV_18_11 GROUND_NAME}
                                      {PDV_18_12 SIGNAL_NAME}
                                      {PDV_18_13 DESIGN_POWER_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cnod.BoBVarCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cnod.BoBVarCheck.FunctionMap {
                                      {PDV_18_3 INPUT_GDS}
                                      {PDV_18_5 HookFileCheck}
                                      {PDV_18_6 VVDD_INFO}
                                      {PDV_18_7 BlockBoxCheck}
                                      {PDV_18_9 MATRIX_ENABLE}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.perc_cnod.SVRFCheck.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.perc_cnod.SVRFCheck.FunctionMap {
                                      {PDV_18_8 VIRTUAL_CONNECT_NAME}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.config.CIA.xor.ReportInfo.Enable {True}                                                           {# No Comment}  
bbset pdv.config.CIA.xor.ReportInfo.FunctionMap {
                                      {PDV_99_1 BTOCheck}
                                      } {define 1:1 mapping for check_id and function}
bbset pdv.runpdv.jobs                {drc ant erc_waiver erc lvs sram_check xor}                      {# No Comment}  
bbset pdv.erc.calibre_version        {2024.2_38.26}                                                   {# No Comment}  
bbset pdv.erc.turbo                  {8}                                                              {# No Comment}  
bbset pdv.erc.hyper                  {true}                                                           {# No Comment}  
bbset pdv.erc.hier                   {true}                                                           {# No Comment}  
bbset pdv.erc.svrf_patterns          {VIRTUAL CONNECT COLON|NO,ERC SUMMARY REPORT|\"calibre_erc.sum\" REPLACE HIER,LVS ISOLATE SHORTS|YES BY LAYER BY CELL} {# No Comment}  
bbset pdv.erc.svrf_keys              {ERC MAXIMUM RESULTS ALL,ERC CELL NAME YES CELL SPACE XFORM,VIRTUAL CONNECT REPORT YES} {# No Comment}  
bbset pdv.erc.env_settings           {CALIBRE_LVS_SI_OPT|0}                                           {# No Comment}  
bbset pdv.erc_waiver.calibre_version {2024.2_38.26}                                                   {# No Comment}  
bbset pdv.erc_waiver.turbo           {8}                                                              {# No Comment}  
bbset pdv.erc_waiver.hyper           {true}                                                           {# No Comment}  
bbset pdv.erc_waiver.hier            {true}                                                           {# No Comment}  
bbset pdv.erc_waiver.svrf_patterns   {VIRTUAL CONNECT COLON|NO,ERC SUMMARY REPORT|\"calibre_erc.sum\" REPLACE HIER,LVS ISOLATE SHORTS|YES BY LAYER BY CELL} {# No Comment}  
bbset pdv.erc_waiver.svrf_keys       {ERC MAXIMUM RESULTS ALL,ERC CELL NAME YES CELL SPACE XFORM,VIRTUAL CONNECT REPORT YES} {# No Comment}  
bbset pdv.erc_waiver.waiver_setup_stdcell {[bbget .info.PROCESS_DIR]/pdv/calibre/waiver_files/erc/waiver_setup_stdcell} {# No Comment}  
bbset pdv.erc_waiver.waiver_setup_ip {[bbget .info.PROCESS_DIR]/pdv/calibre/waiver_files/erc/waiver_setup_ip} {# No Comment}  
bbset pdv.erc_waiver.env_settings    {CALIBRE_LVS_SI_OPT|0}                                           {# No Comment}  
bbset pdv.lvs.calibre_version        {2024.2_38.26}                                                   {# No Comment}  
bbset pdv.lvs.turbo                  {8}                                                              {# No Comment}  
bbset pdv.lvs.hyper                  {true}                                                           {# No Comment}  
bbset pdv.lvs.hier                   {true}                                                           {# No Comment}  
bbset pdv.lvs.svrf_patterns          {VIRTUAL CONNECT COLON|NO,ERC SUMMARY REPORT|\"calibre_erc.sum\" REPLACE HIER,LVS ISOLATE SHORTS|YES BY LAYER BY CELL} {# No Comment}  
bbset pdv.lvs.svrf_keys              {ERC CELL NAME YES CELL SPACE XFORM,LVS EXECUTE ERC NO,VIRTUAL CONNECT REPORT YES} {# No Comment}  
bbset pdv.lvs.env_settings           {CALIBRE_LVS_SI_OPT|0}                                           {# No Comment}  
bbset pdv.drc.calibre_version        {2024.3_42.27}                                                   {# No Comment}  
bbset pdv.drc.turbo                  {8}                                                              {# No Comment}  
bbset pdv.drc.hyper                  {true}                                                           {# No Comment}  
bbset pdv.drc.hier                   {true}                                                           {# No Comment}  
bbset pdv.drc.results_file           {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.drc.summary_file           {DRC.rep}                                                        {# No Comment}  
bbset pdv.drc.metal_select_source    {[bbget .info.PROCESS_DIR]/pdv/calibre/drc/metal_select}         {# No Comment}  
bbset pdv.drc.packagetype            {flipchip}                                                       {# No Comment}  
bbset pdv.drc.svrf_vars              {PAD_TEXT|\"ufs0_mphy__ref_pad_clk_m\" \"ufs0_mphy__ref_pad_clk_p\" \"ufs0_mphy__resref\" \"ufs0_mphy__rxdm_0\" \"ufs0_mphy__rxdm_1\" \"ufs0_mphy__rxdp_0\" \"ufs0_mphy__rxdp_1" \"ufs0_mphy__txdm_0\" \"ufs0_mphy__txdm_1\" \"ufs0_mphy__txdp_0\" \"ufs0_mphy__txdp_1\", VSS_TEXT|'AVSS_UFS0_EMBD' 'VSS',VDD_TEXT| 'AVDD075_UFS0_EMBD_VP' 'AVDD075_UFS0_EMBD_VPDIG' 'AVDD12_UFS0_EMBD' 'VDD_HSIOS' 'VDD_STBY_S'} {# No Comment}  
bbset pdv.drc_dfm.calibre_version    {2024.3_42.27}                                                   {# No Comment}  
bbset pdv.drc_dfm.turbo              {1}                                                              {# No Comment}  
bbset pdv.drc_dfm.hyper              {true}                                                           {# No Comment}  
bbset pdv.drc_dfm.hier               {true}                                                           {# No Comment}  
bbset pdv.drc_dfm.results_file       {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.drc_dfm.summary_file       {DRC.rep}                                                        {# No Comment}  
bbset pdv.drc_dfm.switch_type        {SwitchRun}                                                      {For dashboard generation purpose}
bbset pdv.drc_dfm.svrf_vars          {[bbget .pdv.drc.svrf_vars]}                                     {# No Comment}  
bbset pdv.drc_dfm.svrf_patterns      {[bbget .pdv.drc.svrf_patterns],DFM DEFAULTS RDB MAXIMUM | ALL}  {# No Comment}  
bbset pdv.drc_dfm.packagetype        {flipchip}                                                       {# No Comment}  
bbset pdv.ant.calibre_version        {2024.3_42.27}                                                   {# No Comment}  
bbset pdv.ant.turbo                  {4}                                                              {# No Comment}  
bbset pdv.ant.hyper                  {true}                                                           {# No Comment}  
bbset pdv.ant.hier                   {true}                                                           {# No Comment}  
bbset pdv.ant.results_file           {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.ant.summary_file           {DRC.rep}                                                        {# No Comment}  
bbset pdv.ant.ant_debug_layermap     {[bbget info.PROCESS_DIR]/pdv/calibre/ant_debug/all_layer_map}   {# No Comment}  
bbset pdv.ant.ant_debug_setup        {[bbget info.PROCESS_DIR]/pdv/calibre/ant_debug/setup}           {# No Comment}  
bbset pdv.ant.ant_debug_calibre_version {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.ant_debug.calibre_version  {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.ant_debug.turbo            {1}                                                              {# No Comment}  
bbset pdv.ant_debug.hyper            {true}                                                           {# No Comment}  
bbset pdv.ant_debug.hier             {true}                                                           {# No Comment}  
bbset pdv.ant_debug.layermap         {[bbget info.PROCESS_DIR]/pdv/calibre/ant_debug/all_layer_map}   {# No Comment}  
bbset pdv.ant_debug.setup            {[bbget info.PROCESS_DIR]/pdv/calibre/ant_debug/setup}           {# No Comment}  
bbset pdv.info_bump.calibre_version  {2022.2_24.16}                                                   {# No Comment}  
bbset pdv.info_bump.turbo            {1}                                                              {# No Comment}  
bbset pdv.info_bump.hyper            {true}                                                           {# No Comment}  
bbset pdv.info_bump.hier             {true}                                                           {# No Comment}  
bbset pdv.info_bump.results_file     {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.info_bump.summary_file     {DRC.rep}                                                        {# No Comment}  
bbset pdv.info_pkg.calibre_version   {2020.4_23.14_1}                                                 {# No Comment}  
bbset pdv.info_pkg.turbo             {1}                                                              {# No Comment}  
bbset pdv.info_pkg.hyper             {true}                                                           {# No Comment}  
bbset pdv.info_pkg.hier              {true}                                                           {# No Comment}  
bbset pdv.info_pkg.results_file      {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.info_pkg.summary_file      {DRC.rep}                                                        {# No Comment}  
bbset pdv.perc_topo.calibre_version  {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.perc_topo.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_topo.turbo            {1}                                                              {# No Comment}  
bbset pdv.perc_topo.hyper            {true}                                                           {# No Comment}  
bbset pdv.perc_topo.hier             {true}                                                           {# No Comment}  
bbset pdv.perc_topo.svrf_comments    {VIRTUAL CONNECT NAME "?"}                                       {# No Comment}  
bbset pdv.perc_topo.perc_html        {1}                                                              {# No Comment}  
bbset pdv.perc_topo.html_calibre_version {2024.2_18.9}                                                    {# No Comment}  
bbset pdv.perc_topo.svdbpath         {[bbfiles -bundles perc_topo -filetype svdb]}                    {# No Comment}  
bbset pdv.perc_topo.report_ini       {[bbget .info.PROCESS_DIR]/pdv/calibre/html/perc_topo.report.ini} {# No Comment}  
bbset pdv.perc_topo_waiver.calibre_version {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.perc_topo_waiver.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_topo_waiver.turbo     {1}                                                              {# No Comment}  
bbset pdv.perc_topo_waiver.hyper     {true}                                                           {# No Comment}  
bbset pdv.perc_topo_waiver.hier      {true}                                                           {# No Comment}  
bbset pdv.perc_topo_waiver.svrf_comments {VIRTUAL CONNECT NAME "?"}                                       {# No Comment}  
bbset pdv.perc_topo_waiver.perc_html {1}                                                              {# No Comment}  
bbset pdv.perc_topo_waiver.html_calibre_version {2024.2_18.9}                                                    {# No Comment}  
bbset pdv.perc_topo_waiver.svdbpath  {[bbfiles -bundles perc_topo -filetype svdb]}                    {# No Comment}  
bbset pdv.perc_topo_waiver.report_ini {[bbget .info.PROCESS_DIR]/pdv/calibre/html/perc_topo.report.ini} {# No Comment}  
bbset pdv.perc_ldl.calibre_version   {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.perc_ldl.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_ldl.turbo             {1}                                                              {# No Comment}  
bbset pdv.perc_ldl.hyper             {true}                                                           {# No Comment}  
bbset pdv.perc_ldl.hier              {true}                                                           {# No Comment}  
bbset pdv.perc_ldl.ys_hyper          {true}                                                           {# No Comment}  
bbset pdv.perc_ldl.svrf_patterns     {VIRTUAL CONNECT COLON|NO,VIRTUAL CONNECT NAME|"NONE"}           {# No Comment}  
bbset pdv.perc_ldl.layout            {[perc_custom_filechain -filetype layout]}                       {# No Comment}  
bbset pdv.perc_ldl.ldl_marker_name   {outs/TSMC.ESD.MARK.oas}                                         {# No Comment}  
bbset pdv.perc_ldl.perc_html         {1}                                                              {# No Comment}  
bbset pdv.perc_ldl.html_calibre_version {2024.2_18.9}                                                    {# No Comment}  
bbset pdv.perc_ldl.dfmdbpath         {[bbfiles -bundles perc_ldl -filetype dfmdb]}                    {# No Comment}  
bbset pdv.perc_ldl.svdbpath          {[bbfiles -bundles perc_ldl -filetype svdb]}                     {# No Comment}  
bbset pdv.perc_ldl.report_ini        {[bbget .info.PROCESS_DIR]/pdv/calibre/html/perc_ldl.report.ini} {# No Comment}  
bbset pdv.perc_cd.calibre_version    {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.perc_cd.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_cd.turbo              {1}                                                              {# No Comment}  
bbset pdv.perc_cd.hyper              {true}                                                           {# No Comment}  
bbset pdv.perc_cd.hier               {true}                                                           {# No Comment}  
bbset pdv.perc_cd.ys_hyper           {true}                                                           {# No Comment}  
bbset pdv.perc_cd.layout             {[perc_custom_filechain -filetype layout]}                       {# No Comment}  
bbset pdv.perc_cd.svrf_patterns      {VIRTUAL CONNECT COLON|NO,VIRTUAL CONNECT NAME|"NONE"}           {# No Comment}  
bbset pdv.perc_cd.reduce_layers      {sRDL M15 M14 M13 M12 M11 M10 M9 M8 M7 M6 M5}                    {# No Comment}  
bbset pdv.perc_cd.perc_html          {1}                                                              {# No Comment}  
bbset pdv.perc_cd.rdbpath            {[bbfiles -bundles perc_cd -filetype calibrerdb]}                {# No Comment}  
bbset pdv.perc_cd.layerprops         {[bbget .info.PROCESS_DIR]/pdv/calibre/calibredrv/layerprops}    {# No Comment}  
bbset pdv.perc_cd.report_ini         {[bbget .info.PROCESS_DIR]/pdv/calibre/html/perc_cd.report.ini}  {# No Comment}  
bbset pdv.perc_cd.env_settings       {PEX_RES_IGNORE_ZERO_TABLES|1,CALIBRE_ENABLE_N2_CALS|1,CALIBRE_ENABLE_COMBINE_EXPERIMENT_CONTROL|AUTO,CALIBRE_PERC_LDL_EXPORT_PINPAIR_LIMIT|630545} {#requested by b/393257867}
bbset pdv.perc_p2p.calibre_version   {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.perc_p2p.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_p2p.turbo             {1}                                                              {# No Comment}  
bbset pdv.perc_p2p.hyper             {true}                                                           {# No Comment}  
bbset pdv.perc_p2p.hier              {true}                                                           {# No Comment}  
bbset pdv.perc_p2p.ys_hyper          {true}                                                           {# No Comment}  
bbset pdv.perc_p2p.layout            {[perc_custom_filechain -filetype layout]}                       {# No Comment}  
bbset pdv.perc_p2p.svrf_patterns     {VIRTUAL CONNECT COLON|NO,VIRTUAL CONNECT NAME|"NONE"}           {# No Comment}  
bbset pdv.perc_p2p.reduce_layers     {sRDL M15 M14 M13 M12 M11 M10 M9 M8 M7 M6 M5}                    {# No Comment}  
bbset pdv.perc_p2p.perc_html         {1}                                                              {# No Comment}  
bbset pdv.perc_p2p.rdbpath           {[bbfiles -bundles perc_p2p -filetype esdrdb]}                   {# No Comment}  
bbset pdv.perc_p2p.layerprops        {[bbget .info.PROCESS_DIR]/pdv/calibre/calibredrv/layerprops}    {# No Comment}  
bbset pdv.perc_p2p.report_ini        {[bbget .info.PROCESS_DIR]/pdv/calibre/html/perc_p2p.report.ini} {# No Comment}  
bbset pdv.perc_p2p.disable           {IN_DIE_MODE CHECK_FULL_PATH_P2P CHECK_FULL_PATH_CD}             {# No Comment}  
bbset pdv.perc_p2p.enable            {COMMON_GROUND SET_PWR_CLAMP_RON CHECK_PICK_UP_P2P}              {# No Comment}  
bbset pdv.perc_p2p.env_settings      {PEX_RES_IGNORE_ZERO_TABLES|1,CALIBRE_ENABLE_N2_CALS|1,CALIBRE_PERC_LDL_DISABLE_R0_FULL_PATH|8172024,CALIBRE_PERC_LDL_EXPORT_PINPAIR_LIMIT|630545,CALIBRE_ENABLE_COMBINE_EXPERIMENT_CONTROL|AUTO} {#requested by b/393257867}
bbset pdv.perc_p2p_restart.turbo     {1}                                                              {# No Comment}  
bbset pdv.perc_p2p_restart.ys_hyper  {true}                                                           {# No Comment}  
bbset pdv.perc_p2p_restart.calibre_version {[bbget .pdv.perc_p2p.calibre_version]}                          {# No Comment}  
bbset pdv.perc_cnod.calibre_version  {2024.4_12.9}                                                    {# No Comment}  
bbset pdv.perc_cnod.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_cnod.turbo            {1}                                                              {# No Comment}  
bbset pdv.perc_cnod.hyper            {true}                                                           {# No Comment}  
bbset pdv.perc_cnod.hier             {true}                                                           {# No Comment}  
bbset pdv.perc_cnod.svrf_patterns    {VIRTUAL CONNECT COLON|NO,VIRTUAL CONNECT NAME|"NONE"}           {# No Comment}  
bbset pdv.perc_cnod.svrf_comments    {VIRTUAL CONNECT NAME "?"}                                       {# No Comment}  
bbset pdv.perc_cnod.perc_rules       {[bbget .info.PROCESS_DIR]/pdv/calibre/perc_cnod/matrix_generation/perc.rules} {# No Comment}  
bbset pdv.perc_cnod_checker.calibre_version {[bbget .pdv.perc_cnod.calibre_version]}                         {# No Comment}  
bbset pdv.perc_cnod_checker.calibre_lm_bulk_disable {1}                                                              {# No Comment}  
bbset pdv.perc_cnod_checker.turbo    {1}                                                              {# No Comment}  
bbset pdv.perc_cnod_checker.hyper    {true}                                                           {# No Comment}  
bbset pdv.perc_cnod_checker.hier     {true}                                                           {# No Comment}  
bbset pdv.perc_cnod_checker.box      {[bbget .pdv.perc_cnod.box]}                                     {# No Comment}  
bbset pdv.flipchip_bump.calibre_version {2022.2_24.16}                                                   {# No Comment}  
bbset pdv.flipchip_bump.turbo        {1}                                                              {# No Comment}  
bbset pdv.flipchip_bump.hyper        {true}                                                           {# No Comment}  
bbset pdv.flipchip_bump.hier         {true}                                                           {# No Comment}  
bbset pdv.flipchip_bump.results_file {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.flipchip_bump.summary_file {DRC.rep}                                                        {# No Comment}  
bbset pdv.sram_check.calibre_version {2024.3_42.27}                                                   {# No Comment}  
bbset pdv.sram_check.turbo           {4}                                                              {# No Comment}  
bbset pdv.sram_check.hyper           {true}                                                           {# No Comment}  
bbset pdv.sram_check.hier            {true}                                                           {# No Comment}  
bbset pdv.sram_check.results_file    {DRC.err}                                                        {# No Comment}  
bbset pdv.sram_check.summary_file    {DRC.sum}                                                        {# No Comment}  
bbset pdv.drc_recon.calibre_version  {2024.3_42.27}                                                   {# No Comment}  
bbset pdv.drc_recon.turbo            {1}                                                              {# No Comment}  
bbset pdv.drc_recon.hyper            {true}                                                           {# No Comment}  
bbset pdv.drc_recon.hier             {true}                                                           {# No Comment}  
bbset pdv.drc_recon.recon            { }                                                              {# No Comment}  
bbset pdv.drc_recon.results_file     {DRC_RES.db}                                                     {# No Comment}  
bbset pdv.drc_recon.summary_file     {DRC.rep}                                                        {# No Comment}  
bbset pdv.lvs_recon.calibre_version  {2024.2_38.26}                                                   {# No Comment}  
bbset pdv.lvs_recon.turbo            {1}                                                              {# No Comment}  
bbset pdv.lvs_recon.hyper            {true}                                                           {# No Comment}  
bbset pdv.lvs_recon.hier             {true}                                                           {# No Comment}  
bbset pdv.lvs_recon.si               {all}                                                            {# No Comment}  
bbset pdv.lvs_recon.softchk          {true}                                                           {# No Comment}  
bbset pdv.lvs_recon.svrf_patterns    {VIRTUAL CONNECT COLON|NO,ERC SUMMARY REPORT|\"calibre_erc.sum\" REPLACE HIER,LVS ISOLATE SHORTS|YES BY LAYER BY CELL} {# No Comment}  
bbset pdv.lvs_recon.svrf_keys        {ERC CELL NAME YES CELL SPACE XFORM,VIRTUAL CONNECT REPORT YES}  {# No Comment}  
bbset pdv.lvs_recon.env_settings     {CALIBRE_LVS_SI_OPT|0}                                           {# No Comment}  
bbset pdv.xor.simplied_report        {1}                                                              {# No Comment}  
bbset pdv.xor.feol                   {1}                                                              {# No Comment}  
bbset pdv.xor.beol                   {1}                                                              {# No Comment}  
bbset pdv.checklist.chip             {[bbget .info.CHIP]}                                             {# No Comment}  
bbset pdv.checklist.iprelease_tag    {[bbget .info.BOB_RUN_DIR]}                                      {# No Comment}  
bbset pdv.checklist.phase            {FP}                                                             {Specify project phase(FP|PRO|MTO|BTO) status.}
bbset eco.PhysicalIgnoreCells        {FILL* DCAP* GFILL* GDCAP*}                                      {Physical cells to be ignored list}
bbset eco.ForceKeepPhysicalCells     {TAPCELL*}                                                       {Always treat the listed cells as physical}
bbset eco.TimingScenarios            {
                                      func.ssgnp-NM-125-rcworst_ccworst_t
                                      func.ffgnp-NM-125-cworst_ccworst
                                      func.ffgnp-NM-m25-rcbest_ccbest
                                      } {Default scenarios for ECO flows}
bbset eco.SiteNameMapping            {
                                      {unitW48H130 coreW48H130}
                                      {unitW48H130 coreExtW48H130}
                                      {unitW48H130 bcoreW48H130}
                                      {unitW48H130 bcoreExtW48H130}
                                      {iunitW48H130 icoreW48H130}
                                      {iunitW48H130 icoreExtW48H130}
                                      {hunitW48H130 hpcoreW48H130}
                                      {hunitW48H130 hncoreW48H130}
                                      {ibunitW48H130 ibcoreW48H130}
                                      {unitW48H156 coreW48H156}
                                      {unitW48H156 coreExtW48H156}
                                      {unitW48H156 bcoreW48H156}
                                      {unitW48H156 bcoreExtW48H156}
                                      {iunitW48H156 icoreW48H156}
                                      {iunitW48H156 icoreExtW48H156}
                                      {hunitW48H156 hpcoreW48H156}
                                      {hunitW48H156 hncoreW48H156}
                                      {ibunitW48H156 ibcoreW48H156}
                                      } {Default Site-name mapping. Used for FC/icc2 blocks}
bbset eco.LeakagePowerScenario       {}                                                               {Default Leakage power scenario for ECO flows}
bbset eco.DynamicPowerScenario       {}                                                               {Default Dynamic power scenario for ECO flows}
bbset eco.LEAKAGE_FIX_ALLOWED_CELL_CLASSES {
                                      FractionalLVTLLCells
                                      } {Default allowed use list for leakage eco}
bbset eco.Buffers                    {
                                      BUFFD2BWP130HPNPN3P48CPDLVT BUFFD2BWP130HPNPN3P48CPDLVTLL
                                      BUFFD3BWP130HPNPN3P48CPDLVTLL BUFFD4BWP130HPNPN3P48CPDLVT
                                      } {Timing and Limit fixing buffers}
bbset eco.Inverters                  {}                                                               {Timing and Limit fixing inverters}
bbset eco.DelayBuffers               {
                                      DELAD1BWP130HPNPN3P48CPDLVT DELCD1BWP130HPNPN3P48CPDLVT
                                      DELED1BWP130HPNPN3P48CPDLVT DELGD1BWP130HPNPN3P48CPDLVT BUFFD2BWP130HPNPN3P48CPDLVT
                                      BUFFD2BWP130HPNPN3P48CPDLVTLL BUFFD3BWP130HPNPN3P48CPDLVTLL BUFFD4BWP130HPNPN3P48CPDLVT
                                      } {Hold fixing buffers and delay cells}
bbset eco.AonBuffers                 {}                                                               {AON buffers to use for slack and DRV fixing for metal-eco. The n3e library does NOT have any}
bbset eco.ClockBuffers               {}                                                               {Clock timing fix buffers}
bbset eco.ClockInverters             {}                                                               {Clock timing fix buffers}
bbset eco.MetalEcoBuffers            {
                                      GBUFFD16BWP143M169H3P48CPDELVT  GBUFFD16BWP143M169H3P48CPDLVT  GBUFFD16BWP143M169H3P48CPDLVTLL
                                      GBUFFD16BWP143M169H3P48CPDSVT   GBUFFD16BWP143M169H3P48CPDULVT GBUFFD16BWP143M169H3P48CPDULVTLL
                                      GBUFFD8BWP143M169H3P48CPDELVT   GBUFFD8BWP143M169H3P48CPDLVT   GBUFFD8BWP143M169H3P48CPDLVTLL
                                      GBUFFD8BWP143M169H3P48CPDSVT    GBUFFD8BWP143M169H3P48CPDULVT  GBUFFD8BWP143M169H3P48CPDULVTLL
                                      GBUFFD4BWP143M169H3P48CPDELVT   GBUFFD4BWP143M169H3P48CPDLVT   GBUFFD4BWP143M169H3P48CPDLVTLL
                                      GBUFFD4BWP143M169H3P48CPDSVT    GBUFFD4BWP143M169H3P48CPDULVT  GBUFFD4BWP143M169H3P48CPDULVTLL
                                      GBUFFD3BWP143M169H3P48CPDELVT   GBUFFD3BWP143M169H3P48CPDLVT   GBUFFD3BWP143M169H3P48CPDLVTLL
                                      GBUFFD3BWP143M169H3P48CPDSVT    GBUFFD3BWP143M169H3P48CPDULVT  GBUFFD3BWP143M169H3P48CPDULVTLL
                                      GBUFFD2BWP143M169H3P48CPDELVT   GBUFFD2BWP143M169H3P48CPDLVT   GBUFFD2BWP143M169H3P48CPDLVTLL
                                      GBUFFD2BWP143M169H3P48CPDSVT    GBUFFD2BWP143M169H3P48CPDULVT  GBUFFD2BWP143M169H3P48CPDULVTLL
                                      GBUFFD1BWP143M169H3P48CPDELVT   GBUFFD1BWP143M169H3P48CPDLVT   GBUFFD1BWP143M169H3P48CPDLVTLL
                                      GBUFFD1BWP143M169H3P48CPDSVT    GBUFFD1BWP143M169H3P48CPDULVT  GBUFFD1BWP143M169H3P48CPDULVTLL
                                      } {Metal ECO timing and limit fixing buffers}
bbset eco.MetalEcoInverters          {
                                      GINVD16BWP143M169H3P48CPDELVT   GINVD16BWP143M169H3P48CPDLVT   GINVD16BWP143M169H3P48CPDLVTLL
                                      GINVD16BWP143M169H3P48CPDSVT    GINVD16BWP143M169H3P48CPDULVT  GINVD16BWP143M169H3P48CPDULVTLL
                                      GINVD8BWP143M169H3P48CPDELVT    GINVD8BWP143M169H3P48CPDLVT    GINVD8BWP143M169H3P48CPDLVTLL
                                      GINVD8BWP143M169H3P48CPDSVT     GINVD8BWP143M169H3P48CPDULVT   GINVD8BWP143M169H3P48CPDULVTLL
                                      GINVD4BWP143M169H3P48CPDELVT    GINVD4BWP143M169H3P48CPDLVT    GINVD4BWP143M169H3P48CPDLVTLL
                                      GINVD4BWP143M169H3P48CPDSVT     GINVD4BWP143M169H3P48CPDULVT   GINVD4BWP143M169H3P48CPDULVTLL
                                      GINVD3BWP143M169H3P48CPDELVT    GINVD3BWP143M169H3P48CPDLVT    GINVD3BWP143M169H3P48CPDLVTLL
                                      GINVD3BWP143M169H3P48CPDSVT     GINVD3BWP143M169H3P48CPDULVT   GINVD3BWP143M169H3P48CPDULVTLL
                                      GINVD2BWP143M169H3P48CPDELVT    GINVD2BWP143M169H3P48CPDLVT    GINVD2BWP143M169H3P48CPDLVTLL
                                      GINVD2BWP143M169H3P48CPDSVT     GINVD2BWP143M169H3P48CPDULVT   GINVD2BWP143M169H3P48CPDULVTLL
                                      GINVD1BWP143M169H3P48CPDELVT    GINVD1BWP143M169H3P48CPDLVT    GINVD1BWP143M169H3P48CPDLVTLL
                                      GINVD1BWP143M169H3P48CPDSVT     GINVD1BWP143M169H3P48CPDULVT   GINVD1BWP143M169H3P48CPDULVTLL
                                      } {Metal ECO timing and limit fixing inverters}
bbset eco.MetalEcoDelayBuffers       {
                                      GBUFFD4BWP143M169H3P48CPDELVT   GBUFFD4BWP143M169H3P48CPDLVT   GBUFFD4BWP143M169H3P48CPDLVTLL
                                      GBUFFD4BWP143M169H3P48CPDSVT    GBUFFD4BWP143M169H3P48CPDULVT  GBUFFD4BWP143M169H3P48CPDULVTLL
                                      GBUFFD3BWP143M169H3P48CPDELVT   GBUFFD3BWP143M169H3P48CPDLVT   GBUFFD3BWP143M169H3P48CPDLVTLL
                                      GBUFFD3BWP143M169H3P48CPDSVT    GBUFFD3BWP143M169H3P48CPDULVT  GBUFFD3BWP143M169H3P48CPDULVTLL
                                      GBUFFD2BWP143M169H3P48CPDELVT   GBUFFD2BWP143M169H3P48CPDLVT   GBUFFD2BWP143M169H3P48CPDLVTLL
                                      GBUFFD2BWP143M169H3P48CPDSVT    GBUFFD2BWP143M169H3P48CPDULVT  GBUFFD2BWP143M169H3P48CPDULVTLL
                                      GBUFFD1BWP143M169H3P48CPDELVT   GBUFFD1BWP143M169H3P48CPDLVT   GBUFFD1BWP143M169H3P48CPDLVTLL
                                      GBUFFD1BWP143M169H3P48CPDSVT    GBUFFD1BWP143M169H3P48CPDULVT  GBUFFD1BWP143M169H3P48CPDULVTLL
                                      GDELBD1BWP143M169H3P48CPDELVT   GDELBD1BWP143M169H3P48CPDLVT   GDELBD1BWP143M169H3P48CPDLVTLL
                                      GDELBD1BWP143M169H3P48CPDSVT    GDELBD1BWP143M169H3P48CPDULVT  GDELBD1BWP143M169H3P48CPDULVTLL
                                      GDELED1BWP143M169H3P48CPDELVT   GDELED1BWP143M169H3P48CPDLVT   GDELED1BWP143M169H3P48CPDLVTLL
                                      GDELED1BWP143M169H3P48CPDSVT    GDELED1BWP143M169H3P48CPDULVT  GDELED1BWP143M169H3P48CPDULVTLL
                                      } {Metal ECO Hold fixing buffers and delay cells}
bbset eco.MetalEcoAonBuffers         {}                                                               {AON buffers to use for slack and DRV fixing for metal-eco. The n3e library does NOT have any}
bbset eco.MetalEcoClockBuffers       {}                                                               {Metal ECO Clock net fixing buffers}
bbset eco.MetalEcoClockInverters     {}                                                               {Metal ECO Clock net fixing buffers}
bbset eco.MetalEcoProgrammableCells  {
                                      GAN2D1BWP143M169H3P48CPDELVT GAN2D1BWP143M169H3P48CPDLVT GAN2D1BWP143M169H3P48CPDLVTLL
                                      GAN2D1BWP143M169H3P48CPDSVT GAN2D1BWP143M169H3P48CPDULVT GAN2D1BWP143M169H3P48CPDULVTLL
                                      GAN2D2BWP143M169H3P48CPDELVT GAN2D2BWP143M169H3P48CPDLVT GAN2D2BWP143M169H3P48CPDLVTLL
                                      GAN2D2BWP143M169H3P48CPDSVT GAN2D2BWP143M169H3P48CPDULVT GAN2D2BWP143M169H3P48CPDULVTLL
                                      GAN2D4BWP143M169H3P48CPDELVT GAN2D4BWP143M169H3P48CPDLVT GAN2D4BWP143M169H3P48CPDLVTLL
                                      GAN2D4BWP143M169H3P48CPDSVT GAN2D4BWP143M169H3P48CPDULVT GAN2D4BWP143M169H3P48CPDULVTLL
                                      GAN3D1BWP143M169H3P48CPDELVT GAN3D1BWP143M169H3P48CPDLVT GAN3D1BWP143M169H3P48CPDLVTLL
                                      GAN3D1BWP143M169H3P48CPDSVT GAN3D1BWP143M169H3P48CPDULVT GAN3D1BWP143M169H3P48CPDULVTLL
                                      GAN4D1BWP143M169H3P48CPDELVT GAN4D1BWP143M169H3P48CPDLVT GAN4D1BWP143M169H3P48CPDLVTLL
                                      GAN4D1BWP143M169H3P48CPDSVT GAN4D1BWP143M169H3P48CPDULVT GAN4D1BWP143M169H3P48CPDULVTLL
                                      GAO21D1BWP143M169H3P48CPDELVT GAO21D1BWP143M169H3P48CPDLVT GAO21D1BWP143M169H3P48CPDLVTLL
                                      GAO21D1BWP143M169H3P48CPDSVT GAO21D1BWP143M169H3P48CPDULVT GAO21D1BWP143M169H3P48CPDULVTLL
                                      GAO22D1BWP143M169H3P48CPDELVT GAO22D1BWP143M169H3P48CPDLVT GAO22D1BWP143M169H3P48CPDLVTLL
                                      GAO22D1BWP143M169H3P48CPDSVT GAO22D1BWP143M169H3P48CPDULVT GAO22D1BWP143M169H3P48CPDULVTLL
                                      GAOI21D1BWP143M169H3P48CPDELVT GAOI21D1BWP143M169H3P48CPDLVT GAOI21D1BWP143M169H3P48CPDLVTLL
                                      GAOI21D1BWP143M169H3P48CPDSVT GAOI21D1BWP143M169H3P48CPDULVT GAOI21D1BWP143M169H3P48CPDULVTLL
                                      GAOI21D2BWP143M169H3P48CPDELVT GAOI21D2BWP143M169H3P48CPDLVT GAOI21D2BWP143M169H3P48CPDLVTLL
                                      GAOI21D2BWP143M169H3P48CPDSVT GAOI21D2BWP143M169H3P48CPDULVT GAOI21D2BWP143M169H3P48CPDULVTLL
                                      GAOI22D1BWP143M169H3P48CPDELVT GAOI22D1BWP143M169H3P48CPDLVT GAOI22D1BWP143M169H3P48CPDLVTLL
                                      GAOI22D1BWP143M169H3P48CPDSVT GAOI22D1BWP143M169H3P48CPDULVT GAOI22D1BWP143M169H3P48CPDULVTLL
                                      GAOI22D2BWP143M169H3P48CPDELVT GAOI22D2BWP143M169H3P48CPDLVT GAOI22D2BWP143M169H3P48CPDLVTLL
                                      GAOI22D2BWP143M169H3P48CPDSVT GAOI22D2BWP143M169H3P48CPDULVT GAOI22D2BWP143M169H3P48CPDULVTLL
                                      GBUFFD16BWP143M169H3P48CPDELVT GBUFFD16BWP143M169H3P48CPDLVT GBUFFD16BWP143M169H3P48CPDLVTLL
                                      GBUFFD16BWP143M169H3P48CPDSVT GBUFFD16BWP143M169H3P48CPDULVT GBUFFD16BWP143M169H3P48CPDULVTLL
                                      GBUFFD1BWP143M169H3P48CPDELVT GBUFFD1BWP143M169H3P48CPDLVT GBUFFD1BWP143M169H3P48CPDLVTLL
                                      GBUFFD1BWP143M169H3P48CPDSVT GBUFFD1BWP143M169H3P48CPDULVT GBUFFD1BWP143M169H3P48CPDULVTLL
                                      GBUFFD2BWP143M169H3P48CPDELVT GBUFFD2BWP143M169H3P48CPDLVT GBUFFD2BWP143M169H3P48CPDLVTLL
                                      GBUFFD2BWP143M169H3P48CPDSVT GBUFFD2BWP143M169H3P48CPDULVT GBUFFD2BWP143M169H3P48CPDULVTLL
                                      GBUFFD3BWP143M169H3P48CPDELVT GBUFFD3BWP143M169H3P48CPDLVT GBUFFD3BWP143M169H3P48CPDLVTLL
                                      GBUFFD3BWP143M169H3P48CPDSVT GBUFFD3BWP143M169H3P48CPDULVT GBUFFD3BWP143M169H3P48CPDULVTLL
                                      GBUFFD4BWP143M169H3P48CPDELVT GBUFFD4BWP143M169H3P48CPDLVT GBUFFD4BWP143M169H3P48CPDLVTLL
                                      GBUFFD4BWP143M169H3P48CPDSVT GBUFFD4BWP143M169H3P48CPDULVT GBUFFD4BWP143M169H3P48CPDULVTLL
                                      GBUFFD8BWP143M169H3P48CPDELVT GBUFFD8BWP143M169H3P48CPDLVT GBUFFD8BWP143M169H3P48CPDLVTLL
                                      GBUFFD8BWP143M169H3P48CPDSVT GBUFFD8BWP143M169H3P48CPDULVT GBUFFD8BWP143M169H3P48CPDULVTLL
                                      GCKLNQD2BWP143M169H3P48CPDELVT GCKLNQD2BWP143M169H3P48CPDLVT GCKLNQD2BWP143M169H3P48CPDLVTLL
                                      GCKLNQD2BWP143M169H3P48CPDSVT GCKLNQD2BWP143M169H3P48CPDULVT GCKLNQD2BWP143M169H3P48CPDULVTLL
                                      GCKLNQD6BWP143M169H3P48CPDELVT GCKLNQD6BWP143M169H3P48CPDLVT GCKLNQD6BWP143M169H3P48CPDLVTLL
                                      GCKLNQD6BWP143M169H3P48CPDSVT GCKLNQD6BWP143M169H3P48CPDULVT GCKLNQD6BWP143M169H3P48CPDULVTLL
                                      GDCAP10XPRBWP143M169H3P48CPDELVT GDCAP10XPRBWP143M169H3P48CPDLVT GDCAP10XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP10XPRBWP143M169H3P48CPDSVT GDCAP10XPRBWP143M169H3P48CPDULVT GDCAP10XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP1XPRBWP143M169H3P48CPDELVT GDCAP1XPRBWP143M169H3P48CPDLVT GDCAP1XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP1XPRBWP143M169H3P48CPDSVT GDCAP1XPRBWP143M169H3P48CPDULVT GDCAP1XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP2XPRBWP143M169H3P48CPDELVT GDCAP2XPRBWP143M169H3P48CPDLVT GDCAP2XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP2XPRBWP143M169H3P48CPDSVT GDCAP2XPRBWP143M169H3P48CPDULVT GDCAP2XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP3XPRBWP143M169H3P48CPDELVT GDCAP3XPRBWP143M169H3P48CPDLVT GDCAP3XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP3XPRBWP143M169H3P48CPDSVT GDCAP3XPRBWP143M169H3P48CPDULVT GDCAP3XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP4XPRBWP143M169H3P48CPDELVT GDCAP4XPRBWP143M169H3P48CPDLVT GDCAP4XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP4XPRBWP143M169H3P48CPDSVT GDCAP4XPRBWP143M169H3P48CPDULVT GDCAP4XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP5XPRBWP143M169H3P48CPDELVT GDCAP5XPRBWP143M169H3P48CPDLVT GDCAP5XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP5XPRBWP143M169H3P48CPDSVT GDCAP5XPRBWP143M169H3P48CPDULVT GDCAP5XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP6XPRBWP143M169H3P48CPDELVT GDCAP6XPRBWP143M169H3P48CPDLVT GDCAP6XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP6XPRBWP143M169H3P48CPDSVT GDCAP6XPRBWP143M169H3P48CPDULVT GDCAP6XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP7XPRBWP143M169H3P48CPDELVT GDCAP7XPRBWP143M169H3P48CPDLVT GDCAP7XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP7XPRBWP143M169H3P48CPDSVT GDCAP7XPRBWP143M169H3P48CPDULVT GDCAP7XPRBWP143M169H3P48CPDULVTLL
                                      GDCAP8XPRBWP143M169H3P48CPDELVT GDCAP8XPRBWP143M169H3P48CPDLVT GDCAP8XPRBWP143M169H3P48CPDLVTLL
                                      GDCAP8XPRBWP143M169H3P48CPDSVT GDCAP8XPRBWP143M169H3P48CPDULVT GDCAP8XPRBWP143M169H3P48CPDULVTLL
                                      GDELBD1BWP143M169H3P48CPDELVT GDELBD1BWP143M169H3P48CPDLVT GDELBD1BWP143M169H3P48CPDLVTLL
                                      GDELBD1BWP143M169H3P48CPDSVT GDELBD1BWP143M169H3P48CPDULVT GDELBD1BWP143M169H3P48CPDULVTLL
                                      GDELED1BWP143M169H3P48CPDELVT GDELED1BWP143M169H3P48CPDLVT GDELED1BWP143M169H3P48CPDLVTLL
                                      GDELED1BWP143M169H3P48CPDSVT GDELED1BWP143M169H3P48CPDULVT GDELED1BWP143M169H3P48CPDULVTLL
                                      GFILL10BWP143M169H3P48CPDELVT GFILL10BWP143M169H3P48CPDLVT GFILL10BWP143M169H3P48CPDLVTLL
                                      GFILL10BWP143M169H3P48CPDSVT GFILL10BWP143M169H3P48CPDULVT GFILL10BWP143M169H3P48CPDULVTLL
                                      GFILL1BWP143M169H3P48CPDELVT GFILL1BWP143M169H3P48CPDLVT GFILL1BWP143M169H3P48CPDLVTLL
                                      GFILL1BWP143M169H3P48CPDSVT GFILL1BWP143M169H3P48CPDULVT GFILL1BWP143M169H3P48CPDULVTLL
                                      GFILL2BWP143M169H3P48CPDELVT GFILL2BWP143M169H3P48CPDLVT GFILL2BWP143M169H3P48CPDLVTLL
                                      GFILL2BWP143M169H3P48CPDSVT GFILL2BWP143M169H3P48CPDULVT GFILL2BWP143M169H3P48CPDULVTLL
                                      GFILL3BWP143M169H3P48CPDELVT GFILL3BWP143M169H3P48CPDLVT GFILL3BWP143M169H3P48CPDLVTLL
                                      GFILL3BWP143M169H3P48CPDSVT GFILL3BWP143M169H3P48CPDULVT GFILL3BWP143M169H3P48CPDULVTLL
                                      GFILL4BWP143M169H3P48CPDELVT GFILL4BWP143M169H3P48CPDLVT GFILL4BWP143M169H3P48CPDLVTLL
                                      GFILL4BWP143M169H3P48CPDSVT GFILL4BWP143M169H3P48CPDULVT GFILL4BWP143M169H3P48CPDULVTLL
                                      GFILL5BWP143M169H3P48CPDELVT GFILL5BWP143M169H3P48CPDLVT GFILL5BWP143M169H3P48CPDLVTLL
                                      GFILL5BWP143M169H3P48CPDSVT GFILL5BWP143M169H3P48CPDULVT GFILL5BWP143M169H3P48CPDULVTLL
                                      GFILL6BWP143M169H3P48CPDELVT GFILL6BWP143M169H3P48CPDLVT GFILL6BWP143M169H3P48CPDLVTLL
                                      GFILL6BWP143M169H3P48CPDSVT GFILL6BWP143M169H3P48CPDULVT GFILL6BWP143M169H3P48CPDULVTLL
                                      GFILL7BWP143M169H3P48CPDELVT GFILL7BWP143M169H3P48CPDLVT GFILL7BWP143M169H3P48CPDLVTLL
                                      GFILL7BWP143M169H3P48CPDSVT GFILL7BWP143M169H3P48CPDULVT GFILL7BWP143M169H3P48CPDULVTLL
                                      GFILL8BWP143M169H3P48CPDELVT GFILL8BWP143M169H3P48CPDLVT GFILL8BWP143M169H3P48CPDLVTLL
                                      GFILL8BWP143M169H3P48CPDSVT GFILL8BWP143M169H3P48CPDULVT GFILL8BWP143M169H3P48CPDULVTLL
                                      GINVD16BWP143M169H3P48CPDELVT GINVD16BWP143M169H3P48CPDLVT GINVD16BWP143M169H3P48CPDLVTLL
                                      GINVD16BWP143M169H3P48CPDSVT GINVD16BWP143M169H3P48CPDULVT GINVD16BWP143M169H3P48CPDULVTLL
                                      GINVD1BWP143M169H3P48CPDELVT GINVD1BWP143M169H3P48CPDLVT GINVD1BWP143M169H3P48CPDLVTLL
                                      GINVD1BWP143M169H3P48CPDSVT GINVD1BWP143M169H3P48CPDULVT GINVD1BWP143M169H3P48CPDULVTLL
                                      GINVD2BWP143M169H3P48CPDELVT GINVD2BWP143M169H3P48CPDLVT GINVD2BWP143M169H3P48CPDLVTLL
                                      GINVD2BWP143M169H3P48CPDSVT GINVD2BWP143M169H3P48CPDULVT GINVD2BWP143M169H3P48CPDULVTLL
                                      GINVD3BWP143M169H3P48CPDELVT GINVD3BWP143M169H3P48CPDLVT GINVD3BWP143M169H3P48CPDLVTLL
                                      GINVD3BWP143M169H3P48CPDSVT GINVD3BWP143M169H3P48CPDULVT GINVD3BWP143M169H3P48CPDULVTLL
                                      GINVD4BWP143M169H3P48CPDELVT GINVD4BWP143M169H3P48CPDLVT GINVD4BWP143M169H3P48CPDLVTLL
                                      GINVD4BWP143M169H3P48CPDSVT GINVD4BWP143M169H3P48CPDULVT GINVD4BWP143M169H3P48CPDULVTLL
                                      GINVD8BWP143M169H3P48CPDELVT GINVD8BWP143M169H3P48CPDLVT GINVD8BWP143M169H3P48CPDLVTLL
                                      GINVD8BWP143M169H3P48CPDSVT GINVD8BWP143M169H3P48CPDULVT GINVD8BWP143M169H3P48CPDULVTLL
                                      GLHQD2BWP143M169H3P48CPDELVT GLHQD2BWP143M169H3P48CPDLVT GLHQD2BWP143M169H3P48CPDLVTLL
                                      GLHQD2BWP143M169H3P48CPDSVT GLHQD2BWP143M169H3P48CPDULVT GLHQD2BWP143M169H3P48CPDULVTLL
                                      GLNQD2BWP143M169H3P48CPDELVT GLNQD2BWP143M169H3P48CPDLVT GLNQD2BWP143M169H3P48CPDLVTLL
                                      GLNQD2BWP143M169H3P48CPDSVT GLNQD2BWP143M169H3P48CPDULVT GLNQD2BWP143M169H3P48CPDULVTLL
                                      GMUX2D1BWP143M169H3P48CPDELVT GMUX2D1BWP143M169H3P48CPDLVT GMUX2D1BWP143M169H3P48CPDLVTLL
                                      GMUX2D1BWP143M169H3P48CPDSVT GMUX2D1BWP143M169H3P48CPDULVT GMUX2D1BWP143M169H3P48CPDULVTLL
                                      GMUX2D2BWP143M169H3P48CPDELVT GMUX2D2BWP143M169H3P48CPDLVT GMUX2D2BWP143M169H3P48CPDLVTLL
                                      GMUX2D2BWP143M169H3P48CPDSVT GMUX2D2BWP143M169H3P48CPDULVT GMUX2D2BWP143M169H3P48CPDULVTLL
                                      GMUX2ND1BWP143M169H3P48CPDELVT GMUX2ND1BWP143M169H3P48CPDLVT GMUX2ND1BWP143M169H3P48CPDLVTLL
                                      GMUX2ND1BWP143M169H3P48CPDSVT GMUX2ND1BWP143M169H3P48CPDULVT GMUX2ND1BWP143M169H3P48CPDULVTLL
                                      GMUX2ND2BWP143M169H3P48CPDELVT GMUX2ND2BWP143M169H3P48CPDLVT GMUX2ND2BWP143M169H3P48CPDLVTLL
                                      GMUX2ND2BWP143M169H3P48CPDSVT GMUX2ND2BWP143M169H3P48CPDULVT GMUX2ND2BWP143M169H3P48CPDULVTLL
                                      GND2D1BWP143M169H3P48CPDELVT GND2D1BWP143M169H3P48CPDLVT GND2D1BWP143M169H3P48CPDLVTLL
                                      GND2D1BWP143M169H3P48CPDSVT GND2D1BWP143M169H3P48CPDULVT GND2D1BWP143M169H3P48CPDULVTLL
                                      GND2D2BWP143M169H3P48CPDELVT GND2D2BWP143M169H3P48CPDLVT GND2D2BWP143M169H3P48CPDLVTLL
                                      GND2D2BWP143M169H3P48CPDSVT GND2D2BWP143M169H3P48CPDULVT GND2D2BWP143M169H3P48CPDULVTLL
                                      GND2D4BWP143M169H3P48CPDELVT GND2D4BWP143M169H3P48CPDLVT GND2D4BWP143M169H3P48CPDLVTLL
                                      GND2D4BWP143M169H3P48CPDSVT GND2D4BWP143M169H3P48CPDULVT GND2D4BWP143M169H3P48CPDULVTLL
                                      GND3D1BWP143M169H3P48CPDELVT GND3D1BWP143M169H3P48CPDLVT GND3D1BWP143M169H3P48CPDLVTLL
                                      GND3D1BWP143M169H3P48CPDSVT GND3D1BWP143M169H3P48CPDULVT GND3D1BWP143M169H3P48CPDULVTLL
                                      GND3D2BWP143M169H3P48CPDELVT GND3D2BWP143M169H3P48CPDLVT GND3D2BWP143M169H3P48CPDLVTLL
                                      GND3D2BWP143M169H3P48CPDSVT GND3D2BWP143M169H3P48CPDULVT GND3D2BWP143M169H3P48CPDULVTLL
                                      GNR2D1BWP143M169H3P48CPDELVT GNR2D1BWP143M169H3P48CPDLVT GNR2D1BWP143M169H3P48CPDLVTLL
                                      GNR2D1BWP143M169H3P48CPDSVT GNR2D1BWP143M169H3P48CPDULVT GNR2D1BWP143M169H3P48CPDULVTLL
                                      GNR2D2BWP143M169H3P48CPDELVT GNR2D2BWP143M169H3P48CPDLVT GNR2D2BWP143M169H3P48CPDLVTLL
                                      GNR2D2BWP143M169H3P48CPDSVT GNR2D2BWP143M169H3P48CPDULVT GNR2D2BWP143M169H3P48CPDULVTLL
                                      GNR2D4BWP143M169H3P48CPDELVT GNR2D4BWP143M169H3P48CPDLVT GNR2D4BWP143M169H3P48CPDLVTLL
                                      GNR2D4BWP143M169H3P48CPDSVT GNR2D4BWP143M169H3P48CPDULVT GNR2D4BWP143M169H3P48CPDULVTLL
                                      GNR3D1BWP143M169H3P48CPDELVT GNR3D1BWP143M169H3P48CPDLVT GNR3D1BWP143M169H3P48CPDLVTLL
                                      GNR3D1BWP143M169H3P48CPDSVT GNR3D1BWP143M169H3P48CPDULVT GNR3D1BWP143M169H3P48CPDULVTLL
                                      GNR3D2BWP143M169H3P48CPDELVT GNR3D2BWP143M169H3P48CPDLVT GNR3D2BWP143M169H3P48CPDLVTLL
                                      GNR3D2BWP143M169H3P48CPDSVT GNR3D2BWP143M169H3P48CPDULVT GNR3D2BWP143M169H3P48CPDULVTLL
                                      GOA21D2BWP143M169H3P48CPDELVT GOA21D2BWP143M169H3P48CPDLVT GOA21D2BWP143M169H3P48CPDLVTLL
                                      GOA21D2BWP143M169H3P48CPDSVT GOA21D2BWP143M169H3P48CPDULVT GOA21D2BWP143M169H3P48CPDULVTLL
                                      GOA22D2BWP143M169H3P48CPDELVT GOA22D2BWP143M169H3P48CPDLVT GOA22D2BWP143M169H3P48CPDLVTLL
                                      GOA22D2BWP143M169H3P48CPDSVT GOA22D2BWP143M169H3P48CPDULVT GOA22D2BWP143M169H3P48CPDULVTLL
                                      GOAI21D1BWP143M169H3P48CPDELVT GOAI21D1BWP143M169H3P48CPDLVT GOAI21D1BWP143M169H3P48CPDLVTLL
                                      GOAI21D1BWP143M169H3P48CPDSVT GOAI21D1BWP143M169H3P48CPDULVT GOAI21D1BWP143M169H3P48CPDULVTLL
                                      GOAI21D2BWP143M169H3P48CPDELVT GOAI21D2BWP143M169H3P48CPDLVT GOAI21D2BWP143M169H3P48CPDLVTLL
                                      GOAI21D2BWP143M169H3P48CPDSVT GOAI21D2BWP143M169H3P48CPDULVT GOAI21D2BWP143M169H3P48CPDULVTLL
                                      GOR2D1BWP143M169H3P48CPDELVT GOR2D1BWP143M169H3P48CPDLVT GOR2D1BWP143M169H3P48CPDLVTLL
                                      GOR2D1BWP143M169H3P48CPDSVT GOR2D1BWP143M169H3P48CPDULVT GOR2D1BWP143M169H3P48CPDULVTLL
                                      GOR2D2BWP143M169H3P48CPDELVT GOR2D2BWP143M169H3P48CPDLVT GOR2D2BWP143M169H3P48CPDLVTLL
                                      GOR2D2BWP143M169H3P48CPDSVT GOR2D2BWP143M169H3P48CPDULVT GOR2D2BWP143M169H3P48CPDULVTLL
                                      GOR2D4BWP143M169H3P48CPDELVT GOR2D4BWP143M169H3P48CPDLVT GOR2D4BWP143M169H3P48CPDLVTLL
                                      GOR2D4BWP143M169H3P48CPDSVT GOR2D4BWP143M169H3P48CPDULVT GOR2D4BWP143M169H3P48CPDULVTLL
                                      GOR3D2BWP143M169H3P48CPDELVT GOR3D2BWP143M169H3P48CPDLVT GOR3D2BWP143M169H3P48CPDLVTLL
                                      GOR3D2BWP143M169H3P48CPDSVT GOR3D2BWP143M169H3P48CPDULVT GOR3D2BWP143M169H3P48CPDULVTLL
                                      GOR4D2BWP143M169H3P48CPDELVT GOR4D2BWP143M169H3P48CPDLVT GOR4D2BWP143M169H3P48CPDLVTLL
                                      GOR4D2BWP143M169H3P48CPDSVT GOR4D2BWP143M169H3P48CPDULVT GOR4D2BWP143M169H3P48CPDULVTLL
                                      GTIEHXPBWP143M169H3P48CPDELVT GTIEHXPBWP143M169H3P48CPDLVT GTIEHXPBWP143M169H3P48CPDLVTLL
                                      GTIEHXPBWP143M169H3P48CPDSVT GTIEHXPBWP143M169H3P48CPDULVT GTIEHXPBWP143M169H3P48CPDULVTLL
                                      GTIELXNBWP143M169H3P48CPDELVT GTIELXNBWP143M169H3P48CPDLVT GTIELXNBWP143M169H3P48CPDLVTLL
                                      GTIELXNBWP143M169H3P48CPDSVT GTIELXNBWP143M169H3P48CPDULVT GTIELXNBWP143M169H3P48CPDULVTLL
                                      GXNR2D1BWP143M169H3P48CPDELVT GXNR2D1BWP143M169H3P48CPDLVT GXNR2D1BWP143M169H3P48CPDLVTLL
                                      GXNR2D1BWP143M169H3P48CPDSVT GXNR2D1BWP143M169H3P48CPDULVT GXNR2D1BWP143M169H3P48CPDULVTLL
                                      GXNR2D2BWP143M169H3P48CPDELVT GXNR2D2BWP143M169H3P48CPDLVT GXNR2D2BWP143M169H3P48CPDLVTLL
                                      GXNR2D2BWP143M169H3P48CPDSVT GXNR2D2BWP143M169H3P48CPDULVT GXNR2D2BWP143M169H3P48CPDULVTLL
                                      GXOR2D1BWP143M169H3P48CPDELVT GXOR2D1BWP143M169H3P48CPDLVT GXOR2D1BWP143M169H3P48CPDLVTLL
                                      GXOR2D1BWP143M169H3P48CPDSVT GXOR2D1BWP143M169H3P48CPDULVT GXOR2D1BWP143M169H3P48CPDULVTLL
                                      GXOR2D2BWP143M169H3P48CPDELVT GXOR2D2BWP143M169H3P48CPDLVT GXOR2D2BWP143M169H3P48CPDLVTLL
                                      GXOR2D2BWP143M169H3P48CPDSVT GXOR2D2BWP143M169H3P48CPDULVT GXOR2D2BWP143M169H3P48CPDULVTLL
                                      GDCAP1XPRBWP143M117H3P48CPDELVT GDCAP1XPRBWP143M117H3P48CPDLVT GDCAP1XPRBWP143M117H3P48CPDLVTLL
                                      GDCAP1XPRBWP143M117H3P48CPDSVT GDCAP1XPRBWP143M117H3P48CPDULVT GDCAP1XPRBWP143M117H3P48CPDULVTLL
                                      GDCAP2DHOPT3FXPRBWP143M286H3P48CPDELVT GDCAP2DHOPT3FXPRBWP143M286H3P48CPDLVT GDCAP2DHOPT3FXPRBWP143M286H3P48CPDLVTLL
                                      GDCAP2DHOPT3FXPRBWP143M286H3P48CPDSVT GDCAP2DHOPT3FXPRBWP143M286H3P48CPDULVT GDCAP2DHOPT3FXPRBWP143M286H3P48CPDULVTLL
                                      GDCAP2OPT3FXPRBWP143M286H3P48CPDELVT GDCAP2OPT3FXPRBWP143M286H3P48CPDLVT GDCAP2OPT3FXPRBWP143M286H3P48CPDLVTLL
                                      GDCAP2OPT3FXPRBWP143M286H3P48CPDSVT GDCAP2OPT3FXPRBWP143M286H3P48CPDULVT GDCAP2OPT3FXPRBWP143M286H3P48CPDULVTLL
                                      GDCAP3DHOPT3FXPRBWP143M286H3P48CPDELVT GDCAP3DHOPT3FXPRBWP143M286H3P48CPDLVT GDCAP3DHOPT3FXPRBWP143M286H3P48CPDLVTLL
                                      GDCAP3DHOPT3FXPRBWP143M286H3P48CPDSVT GDCAP3DHOPT3FXPRBWP143M286H3P48CPDULVT GDCAP3DHOPT3FXPRBWP143M286H3P48CPDULVTLL
                                      GDCAP3OPT3FXPRBWP143M286H3P48CPDELVT GDCAP3OPT3FXPRBWP143M286H3P48CPDLVT GDCAP3OPT3FXPRBWP143M286H3P48CPDLVTLL
                                      GDCAP3OPT3FXPRBWP143M286H3P48CPDSVT GDCAP3OPT3FXPRBWP143M286H3P48CPDULVT GDCAP3OPT3FXPRBWP143M286H3P48CPDULVTLL
                                      GDCAP4OPT3FXPRBWP143M286H3P48CPDELVT GDCAP4OPT3FXPRBWP143M286H3P48CPDLVT GDCAP4OPT3FXPRBWP143M286H3P48CPDLVTLL
                                      GDCAP4OPT3FXPRBWP143M286H3P48CPDSVT GDCAP4OPT3FXPRBWP143M286H3P48CPDULVT GDCAP4OPT3FXPRBWP143M286H3P48CPDULVTLL
                                      GDFQSXGD1BWP143M286H3P48CPDELVT GDFQSXGD1BWP143M286H3P48CPDLVT GDFQSXGD1BWP143M286H3P48CPDLVTLL
                                      GDFQSXGD1BWP143M286H3P48CPDSVT GDFQSXGD1BWP143M286H3P48CPDULVT GDFQSXGD1BWP143M286H3P48CPDULVTLL
                                      GDFQSXGD2BWP143M286H3P48CPDELVT GDFQSXGD2BWP143M286H3P48CPDLVT GDFQSXGD2BWP143M286H3P48CPDLVTLL
                                      GDFQSXGD2BWP143M286H3P48CPDSVT GDFQSXGD2BWP143M286H3P48CPDULVT GDFQSXGD2BWP143M286H3P48CPDULVTLL
                                      GDFRPQSXGD1BWP143M286H3P48CPDELVT GDFRPQSXGD1BWP143M286H3P48CPDLVT GDFRPQSXGD1BWP143M286H3P48CPDLVTLL
                                      GDFRPQSXGD1BWP143M286H3P48CPDSVT GDFRPQSXGD1BWP143M286H3P48CPDULVT GDFRPQSXGD1BWP143M286H3P48CPDULVTLL
                                      GDFRPQSXGD2BWP143M286H3P48CPDELVT GDFRPQSXGD2BWP143M286H3P48CPDLVT GDFRPQSXGD2BWP143M286H3P48CPDLVTLL
                                      GDFRPQSXGD2BWP143M286H3P48CPDSVT GDFRPQSXGD2BWP143M286H3P48CPDULVT GDFRPQSXGD2BWP143M286H3P48CPDULVTLL
                                      GDFSNQSXGD1BWP143M286H3P48CPDELVT GDFSNQSXGD1BWP143M286H3P48CPDLVT GDFSNQSXGD1BWP143M286H3P48CPDLVTLL
                                      GDFSNQSXGD1BWP143M286H3P48CPDSVT GDFSNQSXGD1BWP143M286H3P48CPDULVT GDFSNQSXGD1BWP143M286H3P48CPDULVTLL
                                      GDFSNQSXGD2BWP143M286H3P48CPDELVT GDFSNQSXGD2BWP143M286H3P48CPDLVT GDFSNQSXGD2BWP143M286H3P48CPDLVTLL
                                      GDFSNQSXGD2BWP143M286H3P48CPDSVT GDFSNQSXGD2BWP143M286H3P48CPDULVT GDFSNQSXGD2BWP143M286H3P48CPDULVTLL
                                      GFILL1BWP143M117H3P48CPDELVT GFILL1BWP143M117H3P48CPDLVT GFILL1BWP143M117H3P48CPDLVTLL
                                      GFILL1BWP143M117H3P48CPDSVT GFILL1BWP143M117H3P48CPDULVT GFILL1BWP143M117H3P48CPDULVTLL
                                      GFILL2BWP143M286H3P48CPDELVT GFILL2BWP143M286H3P48CPDLVT GFILL2BWP143M286H3P48CPDLVTLL
                                      GFILL2BWP143M286H3P48CPDSVT GFILL2BWP143M286H3P48CPDULVT GFILL2BWP143M286H3P48CPDULVTLL
                                      GFILL2DHBWP143M286H3P48CPDELVT GFILL2DHBWP143M286H3P48CPDLVT GFILL2DHBWP143M286H3P48CPDLVTLL
                                      GFILL2DHBWP143M286H3P48CPDSVT GFILL2DHBWP143M286H3P48CPDULVT GFILL2DHBWP143M286H3P48CPDULVTLL
                                      GFILL3BWP143M286H3P48CPDELVT GFILL3BWP143M286H3P48CPDLVT GFILL3BWP143M286H3P48CPDLVTLL
                                      GFILL3BWP143M286H3P48CPDSVT GFILL3BWP143M286H3P48CPDULVT GFILL3BWP143M286H3P48CPDULVTLL
                                      GFILL3DHBWP143M286H3P48CPDELVT GFILL3DHBWP143M286H3P48CPDLVT GFILL3DHBWP143M286H3P48CPDLVTLL
                                      GFILL3DHBWP143M286H3P48CPDSVT GFILL3DHBWP143M286H3P48CPDULVT GFILL3DHBWP143M286H3P48CPDULVTLL
                                      GFILL4BWP143M286H3P48CPDELVT GFILL4BWP143M286H3P48CPDLVT GFILL4BWP143M286H3P48CPDLVTLL
                                      GFILL4BWP143M286H3P48CPDSVT GFILL4BWP143M286H3P48CPDULVT GFILL4BWP143M286H3P48CPDULVTLL
                                      GND4D2BWP143M286H3P48CPDLVT GND4D2BWP143M286H3P48CPDLVTLL
                                      GND4D2BWP143M286H3P48CPDSVT GND4D2BWP143M286H3P48CPDULVT GND4D2BWP143M286H3P48CPDULVTLL
                                      GNR4D2BWP143M286H3P48CPDELVT GNR4D2BWP143M286H3P48CPDLVT GNR4D2BWP143M286H3P48CPDLVTLL
                                      GNR4D2BWP143M286H3P48CPDSVT GNR4D2BWP143M286H3P48CPDULVT GNR4D2BWP143M286H3P48CPDULVTLL
                                      GSDFQSXGD1BWP143M286H3P48CPDELVT GSDFQSXGD1BWP143M286H3P48CPDLVT GSDFQSXGD1BWP143M286H3P48CPDLVTLL
                                      GSDFQSXGD1BWP143M286H3P48CPDSVT GSDFQSXGD1BWP143M286H3P48CPDULVT GSDFQSXGD1BWP143M286H3P48CPDULVTLL
                                      GSDFRPQSXGD1BWP143M286H3P48CPDELVT GSDFRPQSXGD1BWP143M286H3P48CPDLVT GSDFRPQSXGD1BWP143M286H3P48CPDLVTLL
                                      GSDFRPQSXGD1BWP143M286H3P48CPDSVT GSDFRPQSXGD1BWP143M286H3P48CPDULVT GSDFRPQSXGD1BWP143M286H3P48CPDULVTLL
                                      GSDFRPQSXGD2BWP143M286H3P48CPDELVT GSDFRPQSXGD2BWP143M286H3P48CPDLVT GSDFRPQSXGD2BWP143M286H3P48CPDLVTLL
                                      GSDFRPQSXGD2BWP143M286H3P48CPDSVT GSDFRPQSXGD2BWP143M286H3P48CPDULVT GSDFRPQSXGD2BWP143M286H3P48CPDULVTLL
                                      GSDFSNQSXGD1BWP143M286H3P48CPDELVT GSDFSNQSXGD1BWP143M286H3P48CPDLVT GSDFSNQSXGD1BWP143M286H3P48CPDLVTLL
                                      GSDFSNQSXGD1BWP143M286H3P48CPDSVT GSDFSNQSXGD1BWP143M286H3P48CPDULVT GSDFSNQSXGD1BWP143M286H3P48CPDULVTLL
                                      GSDFSNQSXGD2BWP143M286H3P48CPDELVT GSDFSNQSXGD2BWP143M286H3P48CPDLVT GSDFSNQSXGD2BWP143M286H3P48CPDLVTLL
                                      GSDFSNQSXGD2BWP143M286H3P48CPDSVT GSDFSNQSXGD2BWP143M286H3P48CPDULVT GSDFSNQSXGD2BWP143M286H3P48CPDULVTLL
                                      } {Metal ECO Programmable functional cells. Only applicable for PTECO.}
bbset pteco.ICC_ADVANCED_TECH_FILE   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/eco/pteco/n3e_143m.pteco_adv_tech_rules.gz} {Advanced Technology Rules for 143m Track Designs}
bbset pteco.CELL_EDGE_SPACING_RULES  {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/eco/pteco/n3e_143m.PTECO_CELL_EDGE_SPACING_RULES.tcl} {PTECO Cell-Edge Spacing Rules for h210 Track Designs}
bbset pteco.SCENARIOS                {[bbget "eco.TimingScenarios"]}                                  {Timing Scenarios for DMSA PTECO}
bbset pteco.LEAKAGE_POWER_SCENARIO   {[bbget "eco.LeakagePowerScenario"]}                             {Leakage power scenario for powermode-based optimization}
bbset pteco.DYNAMIC_POWER_SCENARIO   {[bbget "eco.DynamicPowerScenario"]}                             {Dynamic power scenario for powermode-based optimization}
bbset pteco.HOLD_FIX_BUFFERS         {[bbget "eco.DelayBuffers"]}                                     {DMSA/PTECO hold fix delay buffers}
bbset pteco.SETUP_FIX_BUFFERS        {[bbget "eco.Buffers"]}                                          {DMSA/PTECO setup fix buffers}
bbset pteco.SETUP_FIX_INVERTERS      {[bbget "eco.Inverters"]}                                        {PTECO timing fix inverters}
bbset pteco.MTT_FIX_BUFFERS          {[bbget "eco.Buffers"]}                                          {DMSA/PTECO max-tran fix buffers}
bbset pteco.DELTA_DELAY_FIX_BUFFERS  {[bbget "eco.Buffers"]}                                          {DMSA/PTECO delta-delayfix buffers}
bbset pteco.NOISE_FIX_BUFFERS        {[bbget "eco.Buffers"]}                                          {DMSA/PTECO noise fix buffers}
bbset pteco.CLOCK_DRV_INVERTER_LIST  {[bbget "eco.ClockInverters"]}                                   {Tweaker clock net DRV fix inverters. Same list is used for PTECO clock optimisation}
bbset pteco.METAL_HOLD_FIX_BUFFERS   {[bbget "eco.MetalEcoDelayBuffers"]}                             {Buffers to use for metal-only hold fixing}
bbset pteco.METAL_SETUP_FIX_BUFFERS  {[bbget "eco.MetalEcoBuffers"]}                                  {Buffers to use for metal-only setup fixing}
bbset pteco.METAL_MTT_FIX_BUFFERS    {[bbget "eco.MetalEcoBuffers"]}                                  {Buffers to use for metal-only max-tran fixing}
bbset pteco.METAL_ECO_PROGRAMABLE_CELLS {[bbget "eco.MetalEcoProgrammableCells"]}                        {Metal-ECO programmable cells}
bbset pteco.VT_CELL_NAMING           {SVT LVTLL LVT ULVTLL ULVT ELVT}                                 {Buckets for Vt reporting}
bbset pteco.DontUseCellListFiles     {}                                                               {User files containing libcells (one in each line) to be marked as dont use}
bbset tweaker.config.lowv_pocv.LowVoltagePvtAndCellVts { {"*_lvtll" {*ssgnp-UUD*}} {"*_svt" {*ssgnp-UUD* *ssgnp-SUD*}} } {# No Comment}  
bbset tweaker.VT_CELL_NAMING         { *SVT* *LVTLL* *LVT* *ULVTLL* *ULVT* *ELVT* }                   {Buckets for Vt reporting}
bbset tweaker.SETUP_RECOVERY_EXCLUDE_CELLS {*ELVT* *ULVT*}                                                  {Exclude high-leakage cells during setup-reccovery after aggressive leakage fixing}
bbset tweaker.COMBO_CELL_LIST        {}                                                               {Combo cells (buffers and delay cells) to use for DRV as well as HOLD fixing. Empty by default}
bbset tweaker.ANTENNA_CELL_LIST      { ANTENNA* }                                                     {Antenna cells list}
bbset tweaker.PHYSICAL_CELL_LIST     { DCAP* TIEH* TIEL* }                                            {Physical cells list}
bbset tweaker.PHYSICAL_CELL_IGNORE_LIST {[bbget "eco.PhysicalIgnoreCells"]}                              {Physical cells to be ignored list}
bbset tweaker.PHYSICAL_CELL_IGNORE_EXCEPTION_LIST { }                                                              {Physical cell instances from DEF which are NOT to be ignored}
bbset tweaker.AON_BUFFER_LIST        {[bbget "eco.AonBuffers"]}                                       {AON buffers to use for slack and DRV fixing.}
bbset tweaker.VALID_FUNCTIONAL_MAPPING_TYPES {area setup hold max_tran max_cap max_fanout si_glitch}          {List of ECO types where functional mapping during sizing can be enabled}
bbset tweaker.ENABLE_FUNCTIONAL_MAPPING {}                                                               {List of ECO types where functional mapping during sizing is enabled. AVAIL: area, dynamic, leakage, max_tran, max_cap, max_fanout, si_glitch, setup, hold. WARNING: Functional Mapping helps on fixing rate but has significant runtime impact. Funcional mapping for leakage/dynamic power is strongly discouraged. Disable all fuctional mapping be setting this var to an empty list.}
bbset tweaker.REPEATER_LIST          {[bbget "eco.Buffers"]}                                          {Tweaker timing fix repeaters}
bbset tweaker.INVERTER_LIST          {[bbget "eco.Inverters"]}                                        {Tweaker timing fix inverters}
bbset tweaker.DELAY_BUFF_LIST        {[bbget "eco.DelayBuffers"]}                                     {Tweaker buffer list for hold fix}
bbset tweaker.DRV_REPEATER_LIST      {[bbget "eco.Buffers"]}                                          {Tweaker repeaters for DRV/transition fixing}
bbset tweaker.DRV_INVERTER_LIST      {[bbget "eco.Inverters"]}                                        {Tweaker data net DRV fix inverters}
bbset tweaker.CLOCK_DRV_REPEATER_LIST {[bbget "eco.ClockBuffers"]}                                     {Buffers to be used for clock net DRV fixingin Tweaker}
bbset tweaker.CLOCK_DRV_INVERTER_LIST {[bbget "eco.ClockInverters"]}                                   {Tweaker clock net DRV fix inverters}
bbset tweaker.DUMMY_LIST             {
                                      BUFFD1BWP143M169H3P48CPDSVT    BUFFD1BWP143M169H3P48CPDLVTLL  BUFFD1BWP143M169H3P48CPDLVT
                                      BUFFD1BWP143M169H3P48CPDULVTLL BUFFD1BWP143M169H3P48CPDULVT   BUFFD1BWP143M169H3P48CPDELVT
                                      BUFFD2BWP143M169H3P48CPDSVT    BUFFD2BWP143M169H3P48CPDLVTLL  BUFFD2BWP143M169H3P48CPDLVT
                                      BUFFD2BWP143M169H3P48CPDULVTLL BUFFD2BWP143M169H3P48CPDULVT   BUFFD2BWP143M169H3P48CPDELVT
                                      } {Tweaker dummyload buffers}
bbset tweaker.FORCE_KEEP_PHYSICAL_CELLS {[bbget "eco.ForceKeepPhysicalCells"]}                           {Always treat the listed cells as physical}
bbset tweaker.DEFRAG_CELL            { BUFFD8BWP143M169H3P48CPDLVT }                                  {Tweaker Reference cell size to use for space defragmentation}
bbset tweaker.FAST2SLOW_SAME_ROW     {@ELVT@ @ULVT@ @ULVTLL@ @LVT@ @LVTLL@ @SVT@}                     {# No Comment}  
bbset tweaker.FAST2SLOW_HYBRID_ROW   {@ELVT@ @ULVT@ @ULVTLL@ @LVT@ @LVTLL@ @SVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @117H@SVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @117H@LVTLL@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @117H@LVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @117H@ULVTLL@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @117H@ULVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @117H@ELVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @169H@SVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @169H@LVTLL@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @169H@LVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @169H@ULVTLL@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @169H@ULVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @169H@ELVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @117H@SVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @117H@LVTLL@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @117H@LVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @117H@ULVTLL@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @117H@ULVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @117H@ELVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @286H@SVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @286H@LVTLL@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @286H@LVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @286H@ULVTLL@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @286H@ULVT@ :  @117H@ELVT@ @117H@ULVT@ @117H@ULVTLL@ @117H@LVT@ @117H@LVTLL@ @117H@SVT@ @286H@ELVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @286H@SVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @286H@LVTLL@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @286H@LVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @286H@ULVTLL@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @286H@ULVT@ :  @169H@ELVT@ @169H@ULVT@ @169H@ULVTLL@ @169H@LVT@ @169H@LVTLL@ @169H@SVT@ @286H@ELVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @169H@SVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @169H@LVTLL@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @169H@LVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @169H@ULVTLL@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @169H@ULVT@ :  @286H@ELVT@ @286H@ULVT@ @286H@ULVTLL@ @286H@LVT@ @286H@LVTLL@ @286H@SVT@ @169H@ELVT@ } {Enhanced fast-to-slow vt-swap mapping rules for n3e}
bbset tweaker.SLOW2FAST_SAME_ROW     {@SVT@ @LVTLL@ @LVT@ @ULVTLL@ @ULVT@ @ELVT@}                     {# No Comment}  
bbset tweaker.SLOW2FAST_HYBRID_ROW   {@SVT@ @LVTLL@ @LVT@ @ULVTLL@ @ULVT@ @ELVT@ :  @117H@SVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @117H@LVTLL@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @117H@LVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @117H@ULVTLL@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @117H@ULVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @117H@ELVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @169H@SVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @169H@LVTLL@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @169H@LVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @169H@ULVTLL@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @169H@ULVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @169H@ELVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @117H@SVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @117H@LVTLL@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @117H@LVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @117H@ULVTLL@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @117H@ULVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @117H@ELVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @286H@SVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @286H@LVTLL@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @286H@LVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @286H@ULVTLL@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @286H@ULVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @286H@ELVT@ @117H@SVT@ @117H@LVTLL@ @117H@LVT@ @117H@ULVTLL@ @117H@ULVT@ @117H@ELVT@ :  @286H@SVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @286H@LVTLL@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @286H@LVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @286H@ULVTLL@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @286H@ULVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @286H@ELVT@ @169H@SVT@ @169H@LVTLL@ @169H@LVT@ @169H@ULVTLL@ @169H@ULVT@ @169H@ELVT@ :  @169H@SVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @169H@LVTLL@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @169H@LVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @169H@ULVTLL@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @169H@ULVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@ :  @169H@ELVT@ @286H@SVT@ @286H@LVTLL@ @286H@LVT@ @286H@ULVTLL@ @286H@ULVT@ @286H@ELVT@} {Enhanced slow-to-fast vt-swap mapping rules for n3e}
bbset tweaker.SIZING_MAPPING_RULE_SAME_ROW {@D\[0-9\]+@  @D\[0-9\]+@}                                       {SIZING same-row mapping rule}
bbset tweaker.SIZING_MAPPING_RULE_HYBRID_ROW {@D\[0-9\]+@  @D\[0-9\]+@ :  @D\[0-9\]+@117H@  @D\[0-9\]+@169H@ : @D\[0-9\]+@169H@  @D\[0-9\]+@117H@ :  @D\[0-9\]+@117H@  @D\[0-9\]+@286H@ : @D\[0-9\]+@286H@  @D\[0-9\]+@117H@ :  @D\[0-9\]+@169H@  @D\[0-9\]+@286H@ : @D\[0-9\]+@286H@  @D\[0-9\]+@169H@} {SIZING hybrid-row mapping rule}
bbset tweaker.SIZING_MAPPING_RULE_LEAKGAE_KEEP_DRIVING {@D@LVT@ @LLKGD@LVT@ @GOOGD@LVT@ : @D@SVT@ @LLKGD@SVT@ @GOOGD@SVT@} {SIZING rule for GOOG and LLK cell and keep driving strength}
bbset tweaker.SIZING_MAPPING_RULE_LEAKAGE_CHANGE_DRIVING {@@D\[0-9\]+@ @LLKG@D\[0-9\]+@ @GOOG@D\[0-9\]+@}                 {SIZING rule for GOOG and LLK cell but may change driving strength}
bbset tweaker.DontUseCellListFiles   {}                                                               {User files containing libcells (one in each line) to be marked as dont use}
bbset tweaker.MECO_SPARE_CELLS       { *SPARE_FP_* }                                                  {Existing spare cells which can be used for metal-only-eco}
bbset tweaker.MECO_TIE_CELLS         { GTIE* }                                                        {Tie-low/high cells for metal-only eco}
bbset tweaker.MECO_REPEATER_LIST     {[bbget "eco.MetalEcoBuffers"]}                                  {Buffers to use for metal-only setup/hold fixing}
bbset tweaker.MECO_INVERTER_LIST     {[bbget "eco.MetalEcoInverters"]}                                {Inverters for metal-only setup/hold fixing}
bbset tweaker.MECO_DRV_REPEATER_LIST {[bbget "eco.MetalEcoBuffers"]}                                  {Buffers to use for metal-only DRV fixing}
bbset tweaker.MECO_DRV_INVERTER_LIST {[bbget "eco.MetalEcoInverters"]}                                {Inverters to use for metal-only DRV fixing}
bbset tweaker.MECO_DELAY_BUFF_LIST   {[bbget "eco.MetalEcoDelayBuffers"]}                             {Hold fix buffers/delay cells for Tweaker metal-eco fixing}
bbset tweaker.MECO_AON_BUFFER_LIST   {[bbget "eco.MetalEcoAonBuffers"]}                               {AON buffers to use for slack and DRV fixing during metal-eco. Must be user-specified}
bbset tweaker.MECO_CLOCK_DRV_REPEATER_LIST {[bbget "eco.MetalEcoClockBuffers"]}                             {Buffers for clock net DRV fixing in Tweaker during metal-eco}
bbset tweaker.MECO_CLOCK_DRV_INVERTER_LIST {[bbget "eco.MetalEcoClockInverters"]}                           {Inverters for clock net DRV fixing in Tweaker during metal-eco}
bbset tweaker.MECO_GA_MAPPING_RULE_BODY_CELLS {  GDCAP*143M169H*DSVT    GFILL*143M169H*DSVT :  GDCAP*143M169H*DLVT    GFILL*143M169H*DLVT :  GDCAP*143M169H*DLVTLL  GFILL*143M169H*DLVTLL :  GDCAP*143M169H*DULVT   GFILL*143M169H*DULVT :  GDCAP*143M169H*DULVTLL GFILL*143M169H*DULVTLL :  GDCAP*143M169H*DELVT   GFILL*143M169H*DELVT :  GDCAP*143M117H*DSVT    GFILL*143M117H*DSVT :  GDCAP*143M117H*DLVT    GFILL*143M117H*DLVT :  GDCAP*143M117H*DLVTLL  GFILL*143M117H*DLVTLL :  GDCAP*143M117H*DULVT   GFILL*143M117H*DULVT :  GDCAP*143M117H*DULVTLL GFILL*143M117H*DULVTLL :  GDCAP*143M117H*DELVT   GFILL*143M117H*DELVT  } {Gate-array body cells to use during metal-eco}
bbset tweaker.MECO_GA_MAPPING_RULE_FUNC_CELLS {  G*143M169H*DSVT    :  G*143M169H*DLVT    :  G*143M169H*DLVTLL  :  G*143M169H*DULVT   :  G*143M169H*DULVTLL :  G*143M169H*DELVT   :  G*143M117H*DSVT    :  G*143M117H*DLVT    :  G*143M117H*DLVTLL  :  G*143M117H*DULVT   :  G*143M117H*DULVTLL :  G*143M117H*DELVT    } {Functional ECO cells (buf/inv) to use during metal-eco}
bbset tweaker.MECO_GA_REFILL_GUIDE   {}                                                               {When empty, Tweaker will use all available gate-array-body cells to do re-fill}
bbset syn.synthdft.LVXBufPattern     {BUFFD6BWP130HPNPN3P48CPDLVTLL}                                  {synthdft LVX buffer patterns}
bbset syn.synthdft.LVX169BufPattern  {BUFFD6BWP*HPNPN3P48CPDLVTLL}                                    {# No Comment}  
bbset syn.synthdft.MuxIn0            {I0}                                                             {ECO Mux Input port when select 0}
bbset syn.synthdft.MuxIn1            {I1}                                                             {ECO Mux Input port when select 1}
bbset syn.synthdft.MuxOut            {Z}                                                              {ECO Mux Output port}
bbset syn.synthdft.MuxSel            {S}                                                              {ECO Mux Select port}
bbset syn.synthdft.BufInvIn          {I}                                                              {ECO Buffer/Inverter Input}
bbset syn.synthdft.BufOut            {Z}                                                              {ECO Buffer Output}
bbset syn.synthdft.InvOut            {ZN}                                                             {ECO Inverter Output}
bbset syn.synthdft.AndOrIn0          {A1}                                                             {And/Or A input pin}
bbset syn.synthdft.AndOrIn1          {A2}                                                             {And/Or B input pin}
bbset syn.synthdft.AndOrOut          {Z}                                                              {And/Or Output pin}
bbset syn.synthdft.IcgEN             {E}                                                              {ICG enable pin}
bbset syn.synthdft.IcgCK             {CP}                                                             {ICG clock pin} 
bbset syn.synthdft.IcgSE             {TE}                                                             {ICG test-enable pin}
bbset syn.synthdft.IcgQ              {Q}                                                              {ICG output pin}
bbset syn.synthdft.SeqD              {D}                                                              {ECO Sequential cell Data input pin}
bbset syn.synthdft.SeqQ              {Q}                                                              {ECO Sequential cell Data output pin }
bbset syn.synthdft.SeqCK             {CP}                                                             {ECO Sequential cell clock input pin}
bbset syn.synthdft.SeqR              {RD}                                                             {ECO  Sequential cell reset input pin}
bbset syn.synthdft.SeqSI             {SI}                                                             {ECO  Sequential cell scan input pin }
bbset syn.synthdft.SeqSE             {SE}                                                             {ECO Sequential cell scan enable port }
bbset syn.synthdft.LatchIn           {D}                                                              {Latch input pin}
bbset syn.synthdft.LatchOut          {Q}                                                              {Latch output pin}
bbset syn.synthdft.LatchEN           {EN}                                                             {Latch enable pin}
bbset syn.synthdft.OCCSE             {scan_en}                                                        {OCC scan enable pin}
bbset syn.synthdft.MiniOCCSE         {ltest_scan_en}                                                  {Mini OCC scan enable pin}
bbset syn.synthdft.ScanSegSynthPreserved { *SYNC2* 2 *SYNC3* 3 *SYNC4* 4 }                                { Preserved segment at synth should be defined as abstract segments. Add list of library instances and its size. Ex. HDBLVT06_SYNC3RBMSFQ_CAQY2_1 HDBLVT06_SYNC2RBMSFQ_CAQY2_1 HDBLVT06_SYNC3MSFQ_CAQ_1}
bbset syn.synthdft.CodecSoPin        {a}                                                              {get the compactor side hookup pin}
bbset syn.synthdft.CodecSiPin        {y}                                                              {get the decompressor side hookup pin}
bbset libgen.mbist.vlg               {file_type=='vlg' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.mbist.mdt               {file_type=='mdt' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.mbist.memlib            {file_type=='memlib'}                                            {# lib files bbquery filtering pattern}
bbset libgen.feDFT.ccs_lib           {file_type=='ccs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.feDFT.sglib             {file_type=='sglib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.feDFT.nldm_lib          {file_type=='nldm_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.feDFT.ccs_db            {file_type=='ccs_db' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.feDFT.ctl               {file_type=='ctl' && category=='macros'}                         {# lib files bbquery filtering pattern}
bbset libgen.feDFT.tcd               {file_type=='tcd' && category=='macros'}                         {# lib files bbquery filtering pattern}
bbset libgen.feDFT.vlg               {file_type=='vlg' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.feDFT.mdt               {file_type=='mdt' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.feDFT.memlib            {file_type=='memlib'}                                            {# lib files bbquery filtering pattern}
bbset libgen.feDFT.fs_lib            {file_type=='fs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset libgen.atpg.vlg_t              {file_type=='vlg_t' && track =~'([bbget .Track]|^$)'}            {# lib files bbquery filtering pattern}
bbset libgen.atpg.mdt                {file_type=='mdt' && track =~'([bbget .Track]|^$)'}              {# lib files bbquery filtering pattern}
bbset libgen.atpg.fs_lib             {file_type=='fs_lib' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# lib files bbquery filtering pattern}
bbset feDFT.scenarios.Scenarios      { func.ssgnp-NM-0-cworst_ccworst_t }                             {# sgdft and testmax flow uses this Scenario }
bbset dft.feDFT.libgen.libScenario   { func.ssgnp-NM-0-cworst_ccworst_t }                             { sgdft and testmax flow uses this Scenario }
bbset dftSim.scenarios.Scenarios     { func.ssgnp-NM-0-cworst_ccworst_t }                             {str:CADONLY: dft simulation scenario  }
bbset dft.dftSim.libgen.libScenario  { func.ssgnp-NM-0-cworst_ccworst_t }                             {str:CADONLY: dft simulation scenario }
bbset feDFT.StdLibraryFileInclude    {.*_base_lvt.*|.*_base_svt.*|.*_base_ulvt.*|.*_pm_lvt.*|.*_pm_svt.*|.*_pm_ulvt.*} {# use to include Std libraries match this regep}
bbset feDFT.StdLibraryFileExclude    {.*_lvtll.*}                                                     {# use to exclude Std libraries match this regep}
bbset feDFT.MacroLibraryFileInclude  {}                                                               {# use to include Macro libraries match this regep}
bbset feDFT.MacroLibraryFileExclude  {ssgnp_ccwt0p675v125c|dwc_c20pcie4_pma_x2|dwc_mipi_mphy_type1_pma} {# No Comment}  
bbset atpg.scenarios.Scenarios       { func.ssgnp-NM-0-cworst_ccworst_t }                             {# sgdft and testmax flow uses this Scenario }
bbset atpg.StdLibraryFileInclude     {}                                                               {# use to include Std libraries match this regep}
bbset atpg.StdLibraryFileExclude     {}                                                               {# use to exclude Std libraries match this regep}
bbset atpg.MacroLibraryFileInclude   {}                                                               {# use to include Macro libraries match this regep}
bbset atpg.MacroLibraryFileExclude   {}                                                               {# No Comment}  
bbset DkVendor                       {tsmc}                                                           {DK vendor}     
bbset MdkVendor                      {tsmc}                                                           {MDK vendor}    
bbset PdkVendor                      {tsmc}                                                           {PDK vendor}    
bbset DkProcessInEnclave             {n2p}                                                            {DK Process}    
bbset PdkProcessInEnclave            {n2p}                                                            {PDK Process}   
bbset Modules.Tech.dk                {tech/tsmc/n2p/[bbget .DkVendor]/dk/[bbget .DkVersion]}          {full dk module name to moudle load on bbenv}
bbset Modules.Tech.mdk               {tech/tsmc/n2p/[bbget .MdkVendor]/mdk/[bbget .MdkVersion]}       {full mdk module name to moudle load on bbenv}
bbset Modules.Tech.pdk               {tech/tsmc/n2p/[bbget .PdkVendor]/pdk/[bbget .PdkVersion]}       {full pdk moudle name to module load on bbenv}
bbset info.ip_releases_path          {/usr/local/google/gchips/access-group/[bbget .info.CHIP]}       {# define the ip release path for wrap_receive in STA flow}
bbset fe.StdLibraryFileInclude       {.*_base_lvt.*|.*_base_svt.*|.*_base_ulvt.*|.*_basec_lvt.*|.*_basec_svt.*|.*_basec_ulvt.*|.*_pm_lvt.*|.*_pm_svt.*|.*_pm_ulvt.*|.*_pmc_lvt.*} {# use to include Std libraries match this regep}
bbset fe.StdLibraryFileExclude       {.*_lvtll.*|.*_ulvtll.*}                                         {# use to exclude Std libraries match this regep}
bbset fe.MacroLibraryFileInclude     {}                                                               {# use to include Macro libraries match this regep}
bbset fe.MacroLibraryFileExclude     {.*}                                                             {# use to exclude Macro libraries match this regep}
bbset syn.drv.ClockConstraintDenominatorOverrides {{* 6} {*NM* 9} {*UD* 9} {*SUD* 9} {*UUD* 9}}                    {# No Comment}  
bbset syn.drv.ClockConstraintMaxValues {{* 10000000000} {*NM* 0.250} {*UD* 0.275} {*SUD* 0.300} {*UUD* 0.335}} {# No Comment}  
bbset syn.drv.DataConstraintDenominatorOverrides {{* 3} {*NM* 5} {*UD* 4} {*SUD* 3} {*UUD* 3}}                    {# No Comment}  
bbset Modules.Base.pdEnv             {tools/gchips-pd/pd-env/1.2}                                     {# No Comment}  
bbset Modules.Base.pdTclEnv          {tools/gchips-pd/pd-tcl-env/0.5}                                 {# No Comment}  
bbset Modules.Base.metricUpload      {tools/gchips-metrics/metric_upload}                             {# No Comment}  
bbset Modules.Base.licServer.mentor  {licenses/mentor}                                                {# No Comment}  
bbset Modules.Base.licServer.synopsys {licenses/synopsys}                                              {# No Comment}  
bbset Modules.Base.licServer.cadence {licenses/cadence}                                               {# No Comment}  
bbset Modules.Base.licServer.ansys   {licenses/ansys}                                                 {# No Comment}  
bbset Modules.Base.licServer.ausdia  {licenses/timevision}                                            {# No Comment}  
bbset Modules.Tool.calibre           {tools/mentor/calibre/latest}                                    {# No Comment}  
bbset Modules.Tool.conformal         {tools/cadence/conformal/lec.24.20-p100}                         {# No Comment}  
bbset Modules.Tool.fc                {tools/synopsys/fc/V-2023.12-SP5-5-T-20250325}                   {# No Comment}  
bbset Modules.Tool.icv               {tools/synopsys/icvalidator/U-2022.12-SP2}                       {# No Comment}  
bbset Modules.Tool.formality         {tools/synopsys/formality/T-2022.03-SP5}                         {# No Comment}  
bbset Modules.Tool.lc                {tools/synopsys/lc/R-2020.09-SP1}                                {# No Comment}  
bbset Modules.Tool.primepower        {tools/synopsys/primetime/V-2023.12-SP5-2-T-20250321}            {# No Comment}  
bbset Modules.Tool.primetime         {tools/synopsys/primetime/V-2023.12-SP5-2-T-20250321}            {# No Comment}  
bbset Modules.Tool.pfsc              {tools/ansys/pfsc/2025_R1.0}                                     {# No Comment}  
bbset Modules.Tool.rhsc              {tools/ansys/rhsc/2025_R1.1}                                     {# No Comment}  
bbset Modules.Tool.redhawk           {tools/ansys/Redhawk/2023R1.3}                                   {# No Comment}  
bbset Modules.Tool.starrc            {tools/synopsys/starrc/2023.12-SP5-1-VAL-20241224}               {# No Comment}  
bbset Modules.Tool.genus             {tools/cadence/genus/23.13-s073_1}                               {# No Comment}  
bbset Modules.Tool.innovus           {tools/cadence/innovus/23.14-y076_1}                             {# No Comment}  
bbset Modules.Tool.tempus            {tools/cadence/tempus/23.13-e064_1}                              {# No Comment}  
bbset Modules.Tool.pegasus           {tools/cadence/pegasus/23.22.005-e524}                           {# No Comment}  
bbset Modules.Tool.joules            {tools/cadence/joules/23.12-e078_1}                              {# No Comment}  
bbset Modules.Tool.qrc               {tools/cadence/qrc/21.22.008-s153}                               {# No Comment}  
bbset Modules.Tool.timevision        {tools/ausdia/timevision/2023.Sep-SP14}                          {# No Comment}  
bbset Modules.Tool.vclp              {tools/synopsys/vc_static/V-2023.12-SP2-5}                       {# No Comment}  
bbset Modules.Tool.powerscript       {tools/gchips-power-meth/power_scripts}                          {# No Comment}  
bbset Modules.Tool.scalepower        {tools/gchips-power-meth/scale_power_[bbget .info.CHIP]}         {# No Comment}  
bbset Modules.Tool.xcelium           {tools/cadence/xcelium/25.03_e451}                               {# No Comment}  
bbset Modules.Tool.tweaker           {tools/synopsys/tweaker/U-2022.12-SP5-VAL-20240527}              {# No Comment}  
bbset Modules.Tool.proteanTecs       {tools/proteanTecs/proteanTecs/2409.2.3}                         {# No Comment}  
bbset Modules.Tool.rtla              {tools/synopsys/rtla/V-2023.12-SP5-3}                            {# No Comment}  
bbset Modules.Tool.hspice            {tools/synopsys/hspice/Q-2020.03-SP2-1}                          {# No Comment}  
bbset Modules.Tool.oa                {tools/third_party/oa/oa/oa22.60p063}                            {# No Comment}  
bbset Modules.Tool.oaScript          {tools/third_party/oaScript/oaScript-v4.1}                       {# No Comment}  
bbset Modules.Tool.cerebrus          {tools/cadence/cerebrus/21.11-s002}                              {# No Comment}  
bbset Modules.Tool.timeEx            {tools/cadence/timeEx}                                           {# No Comment}  
bbset Modules.Tool.gnuplot           {tools/third_party/gnuplot}                                      {# No Comment}  
bbset Modules.Tool.upf_gen           {tools/gchips-lp/upf_gen}                                        {# No Comment}  
bbset Modules.Tool.wrap_cfg          {tools/gchips-pd/wrap-cfg/lajolla}                               {# No Comment}  
bbset Modules.Tool.verdi             {tools/synopsys/verdi}                                           {# No Comment}  
bbset Modules.Tool.tessent           {tools/mentor/tessent/2025.1-snapshot_2025.01.14_04.00_1ZV}      {# No Comment}  
bbset Modules.PowerTools.verdi       {tools/synopsys/verdi}                                           {# No Comment}  
bbset Modules.PowerTools.cta         {tools/gchips-power-meth/CTA_scripts}                            {# No Comment}  
bbset Modules.StaTools.meth          {tools/gchips-sta-meth/sta-dashboard}                            {# No Comment}  
bbset Modules.StaTools.dashboard     {tools/gchips-dashboard/sta-dashboard}                           {# No Comment}  
bbset Modules.StaTools.SoCReport     {tools/soc_sta/soc_sta_scripts}                                  {# No Comment}  
bbset Modules.Twkrprep.primetime     {[bbget .Modules.Tool.primetime]}                                {# No Comment}  
bbset Modules.Pceco.primeclosure     {tools/synopsys/primeclosure/V-2023.12-SP5-2-T-20250331}         {# No Comment}  
bbset Modules.InfraTools.metrics     {tools/gchips-metrics/metric_upload}                             {# No Comment}  
bbset Modules.GlsTool.rpg            {cad/rpg}                                                        {# No Comment}  
bbset Modules.ThirdParty.perl        {tools/third_party/perl/5.16.3}                                  {# No Comment}  
bbset Modules.Group.dft_scan         {Tool.genus Tool.dft_tools}                                      {# No Comment}  
bbset Modules.Group.sta              {Tool.primetime Tool.proteanTecs Tool.lc StaTools.meth StaTools.dashboard InfraTools.metrics DftEdaTool.fedft_tools ThirdParty.perl StaTools.SoCReport} {# No Comment}  
bbset Modules.Group.emir             {Tool.rhsc}                                                      {# No Comment}  
bbset Modules.Group.esd              {Tool.pfsc Tool.redhawk}                                         {# No Comment}  
bbset Modules.Group.power            {Tool.lc Tool.primepower Tool.scalepower Tool.powerscript PowerTools.verdi PowerTools.cta} {# No Comment}  
bbset Modules.Group.vectorcheck      {Tool.primetime Tool.lc Tool.primepower Tool.verdi}              {# No Comment}  
bbset Modules.Group.gls              {GlsTool.rpg}                                                    {# No Comment}  
bbset Modules.Group.pex              {Tool.starrc}                                                    {# No Comment}  
bbset Modules.Group.pceco            {Pceco.primeclosure}                                             {# No Comment}  
bbset Modules.Group.sif_libgen       {Tool.fc Tool.lc}                                                {# No Comment}  
bbset power.metrics.WrapTags         {[bbget .BundleTag -quiet]}                                      {# No Comment}  
bbset power.metrics.Spin             {A0}                                                             {# No Comment}  
bbset power.metrics.RunName          {POWER-TEST}                                                     {# No Comment}  
bbset pnr.innovus.PlaceOptSetupPostCallback {
        set modules [common::get_modules_list *occ*buffer* ]
        foreach module_name $modules {
            dbSet [dbGetHInstByName $module_name ].dontTouchHports false
        }
    } {# No Comment}  
bbset info.CHIP_SHORT                {laj}                                                            {# No Comment}  
bbset info.CHIP_SPIN                 {a0}                                                             {# No Comment}  
bbset Modules.Tool.dft_tools         {tools/google/dft-tools-laj}                                     {# No Comment}  
bbset Modules.DftEdaTool.fedft_tools {tools/google/dft-tools-laj}                                     {# No Comment}  
bbset Modules.DftEdaTool.bedft_tools {tools/google/dft-tools-laj}                                     {# No Comment}  
bbset Modules.DftEdaTool.vtran       {tools/synopsys/vtran/2019.12-SP1-p1}                            {# No Comment}  
bbset Modules.DftEdaTool.tessent     {tools/mentor/tessent/2025.1-snapshot_2025.01.14_04.00_1ZV}      {# No Comment}  
bbset Modules.DftEdaTool.tessent_fedft {tools/mentor/tessent/2025.1-snapshot_2025.01.14_04.00_1ZV}      {# No Comment}  
bbset Modules.DftEdaTool.tessent_bedft {tools/mentor/tessent/2025.1-snapshot_2025.01.14_04.00_1ZV}      {# No Comment}  
bbset Modules.DftEdaTool.tessent_tbgen {tools/mentor/tessent/2025.2-snapshot_2025.04.08_03.00_83E}      {# No Comment}  
bbset Modules.DftEdaTool.tessent_sbl {tools/mentor/tessent/2025.2-snapshot_2025.04.08_03.00_83E}      {# No Comment}  
bbset Modules.DftEdaTool.tetramax    {tools/synopsys/tetramax/2021.06-SP2}                            {# No Comment}  
bbset Modules.DftEdaTool.testmax     {tools/synopsys/testmax/R-2020.09-SP1}                           {# No Comment}  
bbset Modules.DftEdaTool.spyglass    {tools/synopsys/spyglass/V-2023.12-SP2-3}                        {# No Comment}  
bbset Modules.DftEdaTool.verdi       {tools/synopsys/verdi/V-2023.12-SP2-2}                           {# No Comment}  
bbset Modules.DftEdaTool.vcs         {tools/synopsys/vcs/V-2023.12-SP2-2}                             {# No Comment}  
bbset Modules.DftEdaTool.xcelium     {tools/cadence/xcelium/25.03_e451}                               {# No Comment}  
bbset Modules.DftEdaTool.xcelium_pa  {tools/cadence/xcelium/25.03_e451}                               {# No Comment}  
bbset Modules.DftEdaTool.synplify    {tools/synopsys/synplify/P-2019.09-SP1}                          {# No Comment}  
bbset Modules.DftEdaTool.vivado      {tools/xilinx/vivado/2018.3-p2}                                  {# No Comment}  
bbset Modules.DftEdaTool.cloud_sql_proxy {tools/google/cloud_sql_proxy/1.14-p1}                           {# No Comment}  
bbset Modules.DftEdaTool.rpg         {tools/cad/rpg/1.02.04}                                          {# No Comment}  
bbset Modules.DftEdaTool.dft_rel_rpg {tools/cad/rpg/1.02.04}                                          {# No Comment}  
bbset Modules.DftEdaTool.vclp        {tools/synopsys/vc_static/T-2022.06-SP2-6-4957540-T-20230920}    {# No Comment}  
bbset wrap.IpReleasesPath            {/google/gchips/ipreleases}                                      {# Root directory of archive path}
bbset hierarchy.IpReleasesParent     {lajolla}                                                        {# Directory containing ip-releases for a particular IP or DH}
bbset scf.compile.SSWRPList          {sswrp_apc sswrp_aurora sswrp_cpuacc sswrp_eh sswrp_fabhbw sswrp_gmc sswrp_gpcm_top sswrp_lsioe  sswrp_lsion sswrp_memss sswrp_tpu sswrp_codec_3p sswrp_dpu sswrp_fabmed sswrp_fabrt sswrp_fabsyss  sswrp_g2d sswrp_gpdma sswrp_gpu sswrp_gcv sswrp_hsio_s sswrp_inf_tcu sswrp_ispbe sswrp_ispfe sswrp_lsios  sswrp_aoc sswrp_bmsm sswrp_cpm sswrp_dta sswrp_fabstby sswrp_gpca sswrp_gsa sswrp_hsio_n} {sswrp list}    
bbset scf.compile.ReleaseArea        {/google/gchips/ipreleases/malibu}                               {Release Area}  
bbset scf.auto_generate.PowerPin     {VDD_AMB { sswrp_apc sswrp_aurora sswrp_cpuacc sswrp_eh  sswrp_fabhbw sswrp_gmc sswrp_gpcm_top sswrp_lsioe sswrp_lsion sswrp_memss sswrp_memss_top sswrp_tpu} VDD_INFRA { sswrp_codec_3p sswrp_dpu sswrp_fabmed sswrp_fabrt sswrp_fabsyss sswrp_g2d  sswrp_gpdma sswrp_gpu sswrp_gcv sswrp_hsio_s sswrp_inf_tcu sswrp_ispbe sswrp_ispfe sswrp_lsios} VDD_STBY { sswrp_aoc sswrp_bmsm sswrp_cpm sswrp_dta sswrp_fabstby  sswrp_gpca sswrp_gsa sswrp_hsio_n}} {sswrp power pin}
bbset pnr.macro_ai_assistant.Upload_alias {laj-ipreleases:}                                                {# No Comment}  
bbset hierarchy.sswrp_hsio_s.subblocks {ufs_top}                                                        {# No Comment}  
bbset hierarchy.soc.subblocks        {
                                      wrp_vdd_amb
                                      wrp_vdd_infra
                                      wrp_vdd_aossod
                                      } {# No Comment}  
bbset hierarchy.wrp_vdd_amb.subblocks {
                                      sswrp_cpu
                                      sswrp_cpuacc
                                      sswrp_gmc
                                      sswrp_gpcm_amb
                                      sswrp_mau
                                      sswrp_memss_top
                                      sswrp_pim
                                      sswrp_tpu
                                      } {# No Comment}  
bbset hierarchy.wrp_vdd_infra.subblocks {
                                      sswrp_codec_3p
                                      sswrp_dpu
                                      sswrp_fabhbw
                                      sswrp_fabmed
                                      sswrp_gcv
                                      sswrp_gpu
                                      sswrp_hsio_s
                                      sswrp_ispbe
                                      sswrp_ispfe
                                      sswrp_lsioe
                                      sswrp_lsios
                                      } {# No Comment}  
bbset hierarchy.wrp_vdd_aossod.subblocks {
                                      sswrp_aoss
                                      sswrp_gdmc
                                      sswrp_fabstby
                                      sswrp_hsio_n
                                      sswrp_pcie
                                      sswrp_sec
                                      } {# No Comment}  
bbset hierarchy.sswrp_aoss.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.sswrp_aoss.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_aoss.Bucket    {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aonss_sram.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aonss_sram.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aonss_sram.Bucket    {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.slc_top.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.slc_top.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.slc_top.Bucket       {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_a32.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aoss_a32.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_a32.Bucket      {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_hf5.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aoss_hf5.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_hf5.Bucket      {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_e24.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aoss_e24.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_e24.Bucket      {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aonss_top.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aonss_top.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aonss_top.Bucket     {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.ambss_top.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.ambss_top.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.ambss_top.Bucket     {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.gsm_top.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.gsm_top.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.gsm_top.Bucket       {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_tpu.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aoss_tpu.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_tpu.Bucket      {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_tile.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.aoss_tile.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.aoss_tile.Bucket     {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_aoss_aon.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.sswrp_aoss_aon.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_aoss_aon.Bucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_aoss_pg.IpReleasesParent {lajolla_aoss}                                                   {# No Comment}  
bbset hierarchy.sswrp_aoss_pg.SoftLinkBucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_aoss_pg.Bucket {laj-aoss-ipreleases}                                            {# No Comment}  
bbset hierarchy.rapid.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapid.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapid.Bucket         {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapid_h169.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapid_h169.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapid_h169.Bucket    {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidfc.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapidfc.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidfc.Bucket       {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidfc_h169.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapidfc_h169.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidfc_h169.Bucket  {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidhp.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapidhp.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidhp.Bucket       {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidsw.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapidsw.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidsw.Bucket       {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidsw_h169.IpReleasesParent {cad_pd_waihona}                                                 {# No Comment}  
bbset hierarchy.rapidsw_h169.SoftLinkBucket {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.rapidsw_h169.Bucket  {cad-pd-waihona-ipreleases}                                      {# No Comment}  
bbset hierarchy.sswrp_aurora.IpReleasesParent {lajolla_aurora}                                                 {# No Comment}  
bbset hierarchy.sswrp_aurora.SoftLinkBucket {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.sswrp_aurora.Bucket  {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.aurora_core.IpReleasesParent {lajolla_aurora}                                                 {# No Comment}  
bbset hierarchy.aurora_core.SoftLinkBucket {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.aurora_core.Bucket   {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.Xm_VQ8_EA_P25_11_22VectorPipe.IpReleasesParent {lajolla_aurora}                                                 {# No Comment}  
bbset hierarchy.Xm_VQ8_EA_P25_11_22VectorPipe.SoftLinkBucket {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.Xm_VQ8_EA_P25_11_22VectorPipe.Bucket {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.aurora_uncore_mcu.IpReleasesParent {lajolla_aurora}                                                 {# No Comment}  
bbset hierarchy.aurora_uncore_mcu.SoftLinkBucket {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.aurora_uncore_mcu.Bucket {laj-aurora-ipreleases}                                          {# No Comment}  
bbset hierarchy.sswrp_codec_3p.IpReleasesParent {lajolla_codec}                                                  {# No Comment}  
bbset hierarchy.sswrp_codec_3p.SoftLinkBucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_codec_3p.Bucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.wave6_rdo_top.IpReleasesParent {lajolla_codec}                                                  {# No Comment}  
bbset hierarchy.wave6_rdo_top.SoftLinkBucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.wave6_rdo_top.Bucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.wave6_vce_com_top.IpReleasesParent {lajolla_codec}                                                  {# No Comment}  
bbset hierarchy.wave6_vce_com_top.SoftLinkBucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.wave6_vce_com_top.Bucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.wave6_vce_enc_dec_top.IpReleasesParent {lajolla_codec}                                                  {# No Comment}  
bbset hierarchy.wave6_vce_enc_dec_top.SoftLinkBucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.wave6_vce_enc_dec_top.Bucket {laj-codec-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_cpuacc.IpReleasesParent {lajolla_infra}                                                  {# No Comment}  
bbset hierarchy.sswrp_cpuacc.SoftLinkBucket {laj-infra-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_cpuacc.Bucket  {laj-infra-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_cpu.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.sswrp_cpu.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_cpu.Bucket     {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dsu_wrapper.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.dsu_wrapper.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dsu_wrapper.Bucket   {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.little_core_hm.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.little_core_hm.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.little_core_hm.Bucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.mid_core_hm.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.mid_core_hm.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.mid_core_hm.Bucket   {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.cme_core_hm.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.cme_core_hm.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.cme_core_hm.Bucket   {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.big_core_hm.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.big_core_hm.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.big_core_hm.Bucket   {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.big_core_main_frontend_wrapper.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.big_core_main_frontend_wrapper.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.big_core_main_frontend_wrapper.Bucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.big_core_vec_wrapper.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.big_core_vec_wrapper.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.big_core_vec_wrapper.Bucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.lpcm_cpu_little_core_wrapper.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.lpcm_cpu_little_core_wrapper.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.lpcm_cpu_little_core_wrapper.Bucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.lpcm_cpu_mid_core_wrapper.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.lpcm_cpu_mid_core_wrapper.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.lpcm_cpu_mid_core_wrapper.Bucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.lpcm_cpu_big_core_wrapper.IpReleasesParent {lajolla_cpu}                                                    {# No Comment}  
bbset hierarchy.lpcm_cpu_big_core_wrapper.SoftLinkBucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.lpcm_cpu_big_core_wrapper.Bucket {laj-cpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_dpu.IpReleasesParent {lajolla_dpu}                                                    {# No Comment}  
bbset hierarchy.sswrp_dpu.SoftLinkBucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_dpu.Bucket     {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dpu_be_pd_wrap.IpReleasesParent {lajolla_dpu}                                                    {# No Comment}  
bbset hierarchy.dpu_be_pd_wrap.SoftLinkBucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dpu_be_pd_wrap.Bucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dpu_fe_pd_wrap.IpReleasesParent {lajolla_dpu}                                                    {# No Comment}  
bbset hierarchy.dpu_fe_pd_wrap.SoftLinkBucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dpu_fe_pd_wrap.Bucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dpu_dsi_pd_wrap.IpReleasesParent {lajolla_dpu}                                                    {# No Comment}  
bbset hierarchy.dpu_dsi_pd_wrap.SoftLinkBucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dpu_dsi_pd_wrap.Bucket {laj-dpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_eh.IpReleasesParent {lajolla_infra}                                                  {# No Comment}  
bbset hierarchy.sswrp_eh.SoftLinkBucket {laj-infra-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_eh.Bucket      {laj-infra-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_fabmed.IpReleasesParent {lajolla_fabrics}                                                {# No Comment}  
bbset hierarchy.sswrp_fabmed.SoftLinkBucket {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_fabmed.Bucket  {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_fabhbw.IpReleasesParent {lajolla_fabrics}                                                {# No Comment}  
bbset hierarchy.sswrp_fabhbw.SoftLinkBucket {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_fabhbw.Bucket  {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_fabstby.IpReleasesParent {lajolla_fabrics}                                                {# No Comment}  
bbset hierarchy.sswrp_fabstby.SoftLinkBucket {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_fabstby.Bucket {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_gdmc.IpReleasesParent {lajolla_infra}                                                  {# No Comment}  
bbset hierarchy.sswrp_gdmc.SoftLinkBucket {laj-infra-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_gdmc.Bucket    {laj-infra-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_gmc.IpReleasesParent {lajolla_gmc}                                                    {# No Comment}  
bbset hierarchy.sswrp_gmc.SoftLinkBucket {laj-gmc-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gmc.Bucket     {laj-gmc-ipreleases}                                             {# No Comment}  
bbset hierarchy.gmc_lane.IpReleasesParent {lajolla_gmc}                                                    {# No Comment}  
bbset hierarchy.gmc_lane.SoftLinkBucket {laj-gmc-ipreleases}                                             {# No Comment}  
bbset hierarchy.gmc_lane.Bucket      {laj-gmc-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gpcm_amb.IpReleasesParent {lajolla_fabrics}                                                {# No Comment}  
bbset hierarchy.sswrp_gpcm_amb.SoftLinkBucket {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_gpcm_amb.Bucket {laj-fabrics-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_gpu.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.sswrp_gpu.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gpu.Bucket     {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gpu_aux.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.sswrp_gpu_aux.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gpu_aux.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.ip_gpu_top.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.ip_gpu_top.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.ip_gpu_top.Bucket    {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_shader_tile_wrap.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.magni_shader_tile_wrap.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_shader_tile_wrap.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_geometry_wrap.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.magni_geometry_wrap.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_geometry_wrap.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_ee_top_wrap.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.magni_ee_top_wrap.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_ee_top_wrap.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_rtu_top_wrap.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.magni_rtu_top_wrap.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_rtu_top_wrap.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_tex_top_wrap.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.magni_tex_top_wrap.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_tex_top_wrap.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_ne_wrapper_wrap.IpReleasesParent {lajolla_gpu}                                                    {# No Comment}  
bbset hierarchy.magni_ne_wrapper_wrap.SoftLinkBucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.magni_ne_wrapper_wrap.Bucket {laj-gpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_hsio_n.IpReleasesParent {lajolla_hsio}                                                   {# No Comment}  
bbset hierarchy.sswrp_hsio_n.SoftLinkBucket {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_hsio_n.Bucket  {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_hsio_s.IpReleasesParent {lajolla_hsio}                                                   {# No Comment}  
bbset hierarchy.sswrp_hsio_s.SoftLinkBucket {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_hsio_s.Bucket  {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.ufs_top.IpReleasesParent {lajolla_hsio}                                                   {# No Comment}  
bbset hierarchy.ufs_top.SoftLinkBucket {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.ufs_top.Bucket       {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_pcie.IpReleasesParent {lajolla_hsio}                                                   {# No Comment}  
bbset hierarchy.sswrp_pcie.SoftLinkBucket {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_pcie.Bucket    {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.dpa.IpReleasesParent {lajolla_hsio}                                                   {# No Comment}  
bbset hierarchy.dpa.SoftLinkBucket   {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.dpa.Bucket           {laj-hsio-ipreleases}                                            {# No Comment}  
bbset hierarchy.sswrp_ispfe.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.sswrp_ispfe.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispfe.Bucket   {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispfe_aux.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.sswrp_ispfe_aux.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispfe_aux.Bucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispfe_misc.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.sswrp_ispfe_misc.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispfe_misc.Bucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.fe_core.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.fe_core.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.fe_core.Bucket       {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.iris_top.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.iris_top.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.iris_top.Bucket      {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.csi1_pd_wrap.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.csi1_pd_wrap.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.csi1_pd_wrap.Bucket  {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.csi2_pd_wrap.IpReleasesParent {lajolla_ispfe}                                                  {# No Comment}  
bbset hierarchy.csi2_pd_wrap.SoftLinkBucket {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.csi2_pd_wrap.Bucket  {laj-ispfe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispbe.IpReleasesParent {lajolla_ispbe}                                                  {# No Comment}  
bbset hierarchy.sswrp_ispbe.SoftLinkBucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispbe.Bucket   {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispbe_aux_pd_wrap.IpReleasesParent {lajolla_ispbe}                                                  {# No Comment}  
bbset hierarchy.sswrp_ispbe_aux_pd_wrap.SoftLinkBucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_ispbe_aux_pd_wrap.Bucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.btr0_pd_wrap.IpReleasesParent {lajolla_ispbe}                                                  {# No Comment}  
bbset hierarchy.btr0_pd_wrap.SoftLinkBucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.btr0_pd_wrap.Bucket  {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.btr1_pd_wrap.IpReleasesParent {lajolla_ispbe}                                                  {# No Comment}  
bbset hierarchy.btr1_pd_wrap.SoftLinkBucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.btr1_pd_wrap.Bucket  {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.btr2_pd_wrap.IpReleasesParent {lajolla_ispbe}                                                  {# No Comment}  
bbset hierarchy.btr2_pd_wrap.SoftLinkBucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.btr2_pd_wrap.Bucket  {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.orp_pd_wrap.IpReleasesParent {lajolla_ispbe}                                                  {# No Comment}  
bbset hierarchy.orp_pd_wrap.SoftLinkBucket {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.orp_pd_wrap.Bucket   {laj-ispbe-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_gcv.IpReleasesParent {lajolla_gcv}                                                    {# No Comment}  
bbset hierarchy.sswrp_gcv.SoftLinkBucket {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gcv.Bucket     {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gcv_aux_pd_wrap.IpReleasesParent {lajolla_gcv}                                                    {# No Comment}  
bbset hierarchy.sswrp_gcv_aux_pd_wrap.SoftLinkBucket {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_gcv_aux_pd_wrap.Bucket {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.gsw_pd_wrap.IpReleasesParent {lajolla_gcv}                                                    {# No Comment}  
bbset hierarchy.gsw_pd_wrap.SoftLinkBucket {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.gsw_pd_wrap.Bucket   {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.cre_pd_wrap.IpReleasesParent {lajolla_gcv}                                                    {# No Comment}  
bbset hierarchy.cre_pd_wrap.SoftLinkBucket {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.cre_pd_wrap.Bucket   {laj-gcv-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_lsioe.IpReleasesParent {lajolla_infra1}                                                 {# No Comment}  
bbset hierarchy.sswrp_lsioe.SoftLinkBucket {laj-infra1-ipreleases}                                          {# No Comment}  
bbset hierarchy.sswrp_lsioe.Bucket   {laj-infra1-ipreleases}                                          {# No Comment}  
bbset hierarchy.sswrp_lsios.IpReleasesParent {lajolla_infra1}                                                 {# No Comment}  
bbset hierarchy.sswrp_lsios.SoftLinkBucket {laj-infra1-ipreleases}                                          {# No Comment}  
bbset hierarchy.sswrp_lsios.Bucket   {laj-infra1-ipreleases}                                          {# No Comment}  
bbset hierarchy.sswrp_memss_top.IpReleasesParent {lajolla_memss}                                                  {# No Comment}  
bbset hierarchy.sswrp_memss_top.SoftLinkBucket {laj-memss-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_memss_top.Bucket {laj-memss-ipreleases}                                           {# No Comment}  
bbset hierarchy.FABMEM_ifabric_FABMEM_wrap.IpReleasesParent {lajolla_memss}                                                  {# No Comment}  
bbset hierarchy.FABMEM_ifabric_FABMEM_wrap.SoftLinkBucket {laj-memss-ipreleases}                                           {# No Comment}  
bbset hierarchy.FABMEM_ifabric_FABMEM_wrap.Bucket {laj-memss-ipreleases}                                           {# No Comment}  
bbset hierarchy.sswrp_sec.IpReleasesParent {lajolla_security}                                               {# No Comment}  
bbset hierarchy.sswrp_sec.SoftLinkBucket {laj-security-ipreleases}                                        {# No Comment}  
bbset hierarchy.sswrp_sec.Bucket     {laj-security-ipreleases}                                        {# No Comment}  
bbset hierarchy.sswrp_mau.IpReleasesParent {lajolla_mau}                                                    {# No Comment}  
bbset hierarchy.sswrp_mau.SoftLinkBucket {laj-mau-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_mau.Bucket     {laj-mau-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_pim.IpReleasesParent {lajolla_pim}                                                    {# No Comment}  
bbset hierarchy.sswrp_pim.SoftLinkBucket {laj-pim-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_pim.Bucket     {laj-pim-ipreleases}                                             {# No Comment}  
bbset hierarchy.soc.IpReleasesParent {lajolla_soc}                                                    {# No Comment}  
bbset hierarchy.soc.SoftLinkBucket   {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.soc.Bucket           {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.wrp_vdd_amb.IpReleasesParent {lajolla_soc}                                                    {# No Comment}  
bbset hierarchy.wrp_vdd_amb.SoftLinkBucket {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.wrp_vdd_amb.Bucket   {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.wrp_vdd_infra.IpReleasesParent {lajolla_soc}                                                    {# No Comment}  
bbset hierarchy.wrp_vdd_infra.SoftLinkBucket {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.wrp_vdd_infra.Bucket {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.wrp_vdd_aossod.IpReleasesParent {lajolla_soc}                                                    {# No Comment}  
bbset hierarchy.wrp_vdd_aossod.SoftLinkBucket {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.wrp_vdd_aossod.Bucket {laj-soc-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_tpu.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.sswrp_tpu.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_tpu.Bucket     {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.CustomBlockCore.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.CustomBlockCore.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.CustomBlockCore.Bucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_tpu_aux.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.sswrp_tpu_aux.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.sswrp_tpu_aux.Bucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.ControlCluster.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.ControlCluster.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.ControlCluster.Bucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.TileV.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.TileV.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.TileV.Bucket         {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.Tile.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.Tile.SoftLinkBucket  {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.Tile.Bucket          {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnit.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.LinearUnit.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnit.Bucket    {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnitV.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.LinearUnitV.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnitV.Bucket   {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnitC.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.LinearUnitC.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnitC.Bucket   {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnitD.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.LinearUnitD.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.LinearUnitD.Bucket   {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.X280CpuWrapper.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.X280CpuWrapper.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.X280CpuWrapper.Bucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.Hib.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.Hib.SoftLinkBucket   {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.Hib.Bucket           {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.HibWithoutMMTile.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.HibWithoutMMTile.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.HibWithoutMMTile.Bucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_core.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.dtc_core.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_core.Bucket      {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_slice.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.dtc_slice.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_slice.Bucket     {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_scu.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.dtc_scu.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_scu.Bucket       {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_scu_b.IpReleasesParent {lajolla_tpu}                                                    {# No Comment}  
bbset hierarchy.dtc_scu_b.SoftLinkBucket {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dtc_scu_b.Bucket     {laj-tpu-ipreleases}                                             {# No Comment}  
bbset hierarchy.dft_art.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.dft_art.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.dft_art.Bucket       {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.non_sharedbus_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.non_sharedbus_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.non_sharedbus_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sharedbus_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sharedbus_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sharedbus_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_non_sharedbus_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sswrp_non_sharedbus_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_non_sharedbus_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_sharedbus_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sswrp_sharedbus_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_sharedbus_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_hybrid_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sswrp_hybrid_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_hybrid_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_no_memory_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sswrp_no_memory_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_no_memory_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_complex_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sswrp_complex_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_complex_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.ap_nsb.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.ap_nsb.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.ap_nsb.Bucket        {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.ap_sbc.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.ap_sbc.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.ap_sbc.Bucket        {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_debug.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.sswrp_debug.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.sswrp_debug.Bucket   {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.complex_sharedbus_core.IpReleasesParent {lajolla_dft_art}                                                {# No Comment}  
bbset hierarchy.complex_sharedbus_core.SoftLinkBucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset hierarchy.complex_sharedbus_core.Bucket {laj-dft-art-ipreleases}                                         {# No Comment}  
bbset pdv.metrics.tag                {main}                                                           {# No Comment}  
bbset pdv.metrics.run_name           {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main} {# No Comment}  
bbset pdv.metrics.spin               {A0}                                                             {# No Comment}  
bbset syn.Flow                       {sif}                                                            {# No Comment}  
bbset pnr.Flow                       {sif}                                                            {# No Comment}  
bbset Tool(syn)                      {genus}                                                          {# No Comment}  
bbset Tool(pnr)                      {innovus}                                                        {# No Comment}  
bbset sta.DesignSpec.VtMismatch.ambss_top.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aonss_sram.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aonss_top.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aoss_a32.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aoss_e24.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aoss_hf5.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aoss_tile.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.aoss_tpu.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.gsm_top.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.slc_top.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_aoss.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_aoss_aon.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_aoss_pg.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_codec_3p.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.wave6_rdo_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.wave6_vce_com_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.wave6_vce_enc_dec_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.big_core_hm.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.big_core_main_frontend_wrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.big_core_vec_wrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.cme_core_hm.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dsu_wrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.little_core_hm.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.lpcm_cpu_big_core_wrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.lpcm_cpu_little_core_wrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.lpcm_cpu_mid_core_wrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.mid_core_hm.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_cpu.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dpu_be_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dpu_dsi_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dpu_fe_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_dpu.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_fabhbw.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_fabmed.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_fabstby.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gpcm_amb.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.cre_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.gsw_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gcv.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gcv_aux_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.gmc_lane.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gmc.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.ip_gpu_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.rgx_chest_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.rgx_mercer5.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.rgx_swift5_c2.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.rgx_texas5_c2.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gpu.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gpu_aux.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dpa.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_hsio_n.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_hsio_s.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_pcie.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.ufs_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_cpuacc.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_gdmc.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_lsioe.DominateVt {lvt}                                                            {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_lsios.DominateVt {lvt}                                                            {# No Comment}  
bbset sta.DesignSpec.VtMismatch.btr0_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.btr1_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.btr2_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.orp_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_ispbe.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_ispbe_aux_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.csi1_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.csi2_pd_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.fe_core.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.iris_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_ispfe.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_ispfe_aux.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_ispfe_misc.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_mau.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.FABMEM_ifabric_FABMEM_wrap.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_memss_top.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_sec.DominateVt {ulvtll}                                                         {# No Comment}  
bbset sta.DesignSpec.VtMismatch.ControlCluster.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.CustomBlockCore.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dtc_core.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dtc_scu.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dtc_scu_b.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.dtc_slice.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.Hib.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.HibWithoutMMTile.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.LinearUnit.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.LinearUnitC.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.LinearUnitD.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.LinearUnitV.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_tpu.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.sswrp_tpu_aux.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.Tile.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.TileV.DominateVt {ulvt}                                                           {# No Comment}  
bbset sta.DesignSpec.VtMismatch.X280CpuWrapper.DominateVt {ulvt}                                                           {# No Comment}  
bbset syn.MaxTransitionOverrides     {
                                      {*NM* {data {* 0.30} clock {* 0.15}}}
                                      {*-UD-* {data {* 0.30} clock {* 0.17}}}
                                      {*SUD* {data {* 0.6} clock {* 0.2}}}
                                      {*UUD* {data {* 0.6} clock {* 0.23}}}
                                      } {PARTH : max transition overrides based on libs. eg {{*SUD* {data {*clk* 0.70} clock {*clk* 0.60}}} {*NM* {data {*clk* 0.70} clock {*clk*
                                                                                                    0.60}}}}}
bbset pnr.clock.SwapNonClkCellsToClkCells {1}                                                              {PARTHL : Swap NonCk cells to CK cells}
bbset pnr.clockopt.SwapNonClkCellsToClkCells {1}                                                              {PARTHL : Swap NonCk cells to CK cells}
bbset pnr.SwapNonClkCellsToClkMapFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/nonck_to_ck_pattern.list} {# No Comment}  
bbset sta.config.VtMismatch.DominateVt {ulvt}                                                           {# Need to be part of value in .sta.config.hierarchy_info.RegexpsCellVt}
bbset sif.fc.ApplyCommonSettingsPostCallback { 
    if { $STAGE != "elaborate" && $STAGE != "setup" && $STAGE != "socclocks"} {
      current_scen [current_scenario]
      set curr_scen [get_object_name [current_scenario]]
      foreach scen [get_object_name [get_scenarios]] {
        current_scenario $scen
        if {[regexp  {\-NM\-} $scen]} {set ck_tran 0.09 ;
        } elseif {[regexp  {\-UD\-} $scen]} {set ck_tran 0.12 ;
        } elseif {[regexp  {\-SUD\-} $scen]} {set ck_tran 0.18 ;
        } elseif {[regexp  {\-UUD\-} $scen]} {set ck_tran 0.20 ;
        } else { set ck_tran 0.09 }
        sif::minfo "PARTH : Setting transition of \'[expr $ck_tran * 1000]ps\' on Clock pins of Sequential cells in Scenraio : $scen"
        set_max_transition $ck_tran -scenarios $scen [get_lib_pins -of_objects [get_lib_cells -filter "is_sequential==true"] -filter "is_clock_pin==true"]
      }
      current_scen $curr_scen
    }
  } {# No Comment}  
bbset fc.SwapRTLClkCellsToDominantVT {1}                                                              {# No Comment}  
bbset fc.SwapLowDriveClkCells        {1}                                                              {# No Comment}  
bbset syn.fc.ElaborateReadRTLPostCallback {
  
    # PARTHL --> Setting to avoid boundary optimization and flattening
    set_app_options -name compile.flow.autoungroup -value false
    set_app_options -name compile.flow.boundary_optimization -value false
    # PARTHL --> setting to convernt infer_mux into a mux and preserve
    set_app_options -name hdlin.elaborate.infer_mux_size_only -value  2
    # End
  
  

  # Setting to avoid boundary optimization and flattening
  set_app_options -name compile.flow.autoungroup -value false
  set_app_options -name compile.flow.boundary_optimization -value false
  # setting to convernt infer_mux into a mux and preserve
  set_app_options -name hdlin.elaborate.infer_mux_size_only -value  2
  # End
  #https://buganizer.corp.google.com/issues/412223491
  set_app_options -name time.edge_specific_source_latency -value false

} {# No Comment}  
bbset syn.fc.SynthPreCallback        {
  
    # Reference : https://solvnetplus.synopsys.com/s/article/Preserving-Undriven-Nets-in-Fusion-Compiler
    # Preserve ACK nets from optimization
    set nt_count 0 
    foreach my_pd [upfutils::get_switched_power_domains *] {
      foreach sw_type {ALL PRE} {
        set sw_rule [upfutils::get_power_domain_switch_rule $my_pd $sw_type]
        set nts      [get_nets  [upfutils::get_power_switch_ack_port $sw_rule ] ] 
        
        # add or_ack also to the list. 
        set check_or [get_net  [regsub "and_all_ack" [get_object_name [get_net $nts ] ]  "or_all_ack"]]
        
        if {[sizeof_collection $check_or] > 0 } {append_to_collection nts $check_or}
        foreach_in_collection nt $nts {
          puts "PARTH - Setting Dont_touch on ACK net [get_object_name $nt] "
          set_dont_touch  $nt true
          set cells      [get_cells -of [get_pins -leaf -of $nt]]
          if {[sizeof_collection $cells] > 0} {
            foreach_in_collection cl $cells {
              puts "  PARTHL - Setting size_only on cell [get_object_name $cl]"
              set_size_only $cl true 
            }
          }
        }
      }
    }
  
  } {# No Comment}  
bbset syn.fc.SynthPostCallback       {
  
    # PARTHL --> Special settings.
    # In case floating ACK net is tied , below loop will remove the connection.
    foreach my_pd [upfutils::get_switched_power_domains *] {
      foreach sw_type {ALL PRE} {
        set sw_rule [upfutils::get_power_domain_switch_rule $my_pd $sw_type] 
  
        # Remove dont_touch from ack nets.
  
        set_dont_touch [get_nets  [upfutils::get_power_switch_ack_port $sw_rule ] ] false 
  
        # ACK port is on net, converting that into pin
        set pn [get_pins [get_object_name [get_nets  [upfutils::get_power_switch_ack_port $sw_rule ] ] ]] 
        set nt [get_nets -quiet -of $pn -filter "name=~*Logic0*"]
        
        # Check if Logic0 net exists
        if {[sizeof_collection $nt] == 1} {
          puts "PARTH : Disconnectin Logic0 net from [get_object_name $pn] "
          disconnect_net $nt $pn
        }
  
  
        # Check if or_all_ack exists and needs clean up.
        set check_or [get_pins -quiet [regsub "and_all_ack" [get_object_name $pn] "or_all_ack" ]]
        if {[sizeof_collection $check_or] > 0} {
          set nt [get_nets -quiet -of $pn -filter "name=~*Logic0*"]
          
          # Check if Logic0 net exists
          if {[sizeof_collection $nt] == 1} {
            puts "PARTH : Disconnectin Logic0 net from [get_object_name $pn] "
            disconnect_net $nt $pn
          }
          
        }
      }
    } 
  
    # Settings to preserve extra logic
    set syn.preserve_list.file "${::REPO_TOP}/${::IP_PROJ}/${::BLOCK}/sdc_preserve_refined.list"
    redirect -tee preserve_obj.log {source -e -v [sif::rpath ${::REPO_TOP}/${::IP_PROJ}/common_scripts/preserve_obj.tcl]}
  } {# No Comment}  
bbset syn.synthopt.SwapNonClkCellsToClkCells {1}                                                              {PARTHL : Swap non-clock cell to clock cell}
bbset syn.fc.SynthOptSetupPostCallback {
    puts "PARTHL : Creating IR blocakge."
    source -e -v [sif::rpath ${::REPO_TOP}/${::IP_PROJ}/common_scripts/HSIO_IR_Blockage.tcl] 
  

  set power_switches "${::pnr.floorplan.CoreSwitchCell}  ${::pnr.floorplan.HorizontalChannelSwitchCell} ${::pnr.floorplan.VerticalChannelSwitchCell}"
  foreach power_switch $power_switches  {
    set psw_cell [get_lib_cell -quiet */*${power_switch}*]
    if {[sizeof_collection $psw_cell] == 1 } {
      set inpin  [get_lib_pin -quiet -of $psw_cell -filter "name=~${pnr.floorplan.PowerSwitchCtrlPin}"]
      set outpin [get_lib_pin -quiet -of $psw_cell -filter "name=~${pnr.floorplan.PowerSwitchAckPin}"]
      #DBG#puts "Exists --> $psw_cell"
      if {[sizeof_collection $inpin] == 1 && [sizeof_collection $outpin] == 1} {
      #  set_disable_timing -from ${pnr.floorplan.PowerSwitchCtrlPin}  #	-to ${pnr.floorplan.PowerSwitchAckPin} [get_lib_cell $psw_cell]
        puts "PARTHL : Disabling \'${pnr.floorplan.PowerSwitchCtrlPin}\' to \'${pnr.floorplan.PowerSwitchAckPin}\' arc for lib cell \'[get_object_name $psw_cell]\'"
      }
    }
  }

  if { ${::pnr.floorplan.EnableIRBlockages} } {
    puts "PARTHL : Creating IR blocakge."
	source -e -v /google/gchips/workspace/redondo-asia/tpe/user/parthl/LAJ_A0/M3/hsio_M3_17Mar/repo/hsio/common_scripts/HSIO_IR_Blockage.tcl 
  }

} {# No Comment}  
bbset syn.fc.SynthDFTOptReportPostCallback {
    # PARTHL - Reporting area information
    source -e -v [sif::rpath ${::REPO_TOP}/${::IP_PROJ}/common_scripts/my_area_report.tcl]
    area_report -levels 5 -threshold 5000  -format csv > ./rpts/${::BLOCK}_custom_area.rpt
  } {# No Comment}  
bbset sif.fc.ReportInlineMetricsPostCallback {
    #PARTHL --> Netlist with GPIOs
    write_verilog -compress gzip -exclude {physical_only_cells pg_objects} outs/${BLOCK}.final.dft.v  -force_reference [get_attribute  [get_lib_cell tphn02p_*/* -filter "name=~PRWD* || name=~PDDW* || name=~PDB2ANA*"] name]
    
    set exclude_cells [common::get_cell_list ${::pnr.export.PGNetlistExcludeCells}]
    write_verilog -compress gzip -include {pg_netlist all_physical_cells} outs/${BLOCK}.final.dft.pg.v  -force_no_reference {$exclude_cells} 
  } {# No Comment}  
bbset pnr.fc.ClockBuildClockPreCallback {

	set_app_options -name clock_opt.flow.enable_ccd -value false
	set_app_options -name cts.optimize.enable_improvement_mode -value skew
#	set_attribute   [get_lib_cells */*D0P5*] dont_use true
#	set_attribute   [get_lib_cells */*D1P5*] dont_use true

} {# No Comment}  
bbset fc.WriteChipFinishPkg          {1}                                                              {To enable or disable saving pkg after chipfinish}
bbset sif.fc.QORSummaryPreCallback   {
    if { $STAGE == "chipfinish" } {
      set pnr.fc.EnableQORSummary 0
    } 
  } {# No Comment}  
bbset Modules.Tool.synthdft          { tools/synthdft-lajolla/3.2.0 }                                 {# No Comment}  
bbset syn.common.TestpointDesignAnalysisPreCallback { set_drc_handling ASSERT2 Warning }                             {# No Comment}  
bbset syn.common.TestpointInitializationPreCallback {
exec touch ts3n02psvta16384x16m16bzo_p1_hsios_mphy_rom_modelfile.v
exec touch ts3n02psvta16384x16m16bzo_p2_hsios_mphy_rom_modelfile.v} {# No Comment}  
bbset syn.fc.SynthDftPostDrcPreCallback {source -e -v ${REPO_TOP}/hsio/ufs_top/vars/custom_tpi.tcl}      {# No Comment}  
bbset syn.fc.SynthDftSettingPreCallback { source -e -v ${REPO_TOP}/hsio/ufs_top/vars/lga_proc.tcl }      {# No Comment}  
bbset sif.fc.ApplyCommonSettingsCallback {

    sif::minfo "Applying apply_enhanced_ccsn_awp "
    timing::apply_enhanced_ccsn_awp

    sif::minfo "Applying apply_cpu_settings "
    common::apply_cpu_settings

    sif::minfo "Applying apply_vsdc_settings "
    common::apply_vsdc_settings

    if { ${::STAGE} ni "elaborate setup socclocks"} {
        if {!${::fc.LpcFlow}} {
            sif::minfo "Applying apply_settings "
            common::apply_settings
        } else {
            common::apply_lpc_settings
        }

        # Applying Max Transition for active view for each stage
        sif::minfo "Applying apply_max_transition "
        ::timing::apply_max_transition

        # User max transition overrides
        sif::minfo "Applying apply_user_max_transition"
        ::timing::apply_user_max_transition

        # Apply Clock Hold Uncertainty for active view for each stage
        sif::minfo "Applying apply_hold_uncertainty"
        ::timing::apply_hold_uncertainty

        # User clock uncertainity overrides
        sif::minfo "Applying apply_user_clock_uncertainity"
        ::timing::apply_user_clock_uncertainity

        # Derates enablement
        # Derates to be skipped at chipfinish if staple via is enabled
        if {${::STAGE} ne "chipfinish" || !${::pnr.chipfinish.EnableStapleVias}} {
            sif::minfo "Applying project voltage/temperature/net derates"
            catch {::timing::apply_timing_derate}
    
            sif::minfo "Applying user TCL derates : apply_user_derates"
            ::timing::apply_user_derates
    
            sif::minfo "Reporting timing derates ./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate > "./rpts/$::STAGE.timing.derates.rpt"
            echo "# Incremental derate" >> "./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate -corners [all_corners] -increment -significant_digits 4 >> "./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate -corners [all_corners] -min_period -significant_digits 4 >> "./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate -corners [all_corners] -min_pulse_width -significant_digits 4 >> "./rpts/$::STAGE.timing.derates.rpt"
            # Check timing derate
            sif::minfo "Check timing derates library categories"
            if {[catch {::check::check_derate_lib_category -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            sif::minfo "Check timing derates for std cells"
            if {[catch {::check::check_std_derate_value -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            sif::minfo "Check timing derates for std cells"
            if {[catch {::check::check_mem_derate_value -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            sif::minfo "Check timing derates for wire"
            if {[catch {::check::check_wire_derate_value -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            foreach_in_collection sce [get_scenarios -filter active ] { 
               set scen [get_object_name $sce]
               report_ocvm -scenario $scen -type pocvm -nosplit -lib_cell -list_not_annotated > "./rpts/$::STAGE.${scen}.report_pocvm.lib_cell.not_annotated.rpt"
            }
        }

        # Applying user constraints
        sif::minfo "Applying apply_user_constraints"
        ::timing::apply_user_constraints

        set fc_tbc_var ::$::FLOW.fc.TBCFile
        if { ([info exists $fc_tbc_var]) && ([set $fc_tbc_var] != "") } {
            foreach files [set $fc_tbc_var] {
                source [sif::rpath $files]
            }
        }

        set fc_stage_tbc_var ::$::FLOW.fc.$STAGE.TBCFile
        if { ([info exists $fc_stage_tbc_var]) && ([set $fc_stage_tbc_var] != "") } {
            foreach files [set $fc_stage_tbc_var] {
                source [sif::rpath $files]
            }
        }

        if {!${::fc.LpcFlow}} {
            sif::minfo "Applying settings for VNWELL connections"
            common::vnwell_route_setting
        }

        if {[common::get_stage_var ${::STAGE} ApplyGSPANHierVtSettings] && (${::STAGE} ne "synth")} {
            sif::minfo "Applying hier based VT settings"
            remove_target_library_subset
            common::apply_hier_vt_settings
            report_target_library_subset -all > rpts/target_lib_subset.rpt
        }

    }
    
    if {${::fc.PerfViaLadders} && (${::STAGE} ni {"elaborate" "synth"})} { 
        ::common::performance_via_ladder
    }
} {# No Comment}  
bbset pdv.xor.layout                 {[bbfiles -filetype layout -bundles dummyfill]}                  {# No Comment}  
bbset pdp.dummyfill.memory           {64000}                                                          {# No Comment}  
bbset pdv.drc.remote_hosts           {3}                                                              {# No Comment}  
bbset pdv.drc.remote_host_cores      {32}                                                             {# No Comment}  
bbset pdv.drc.remote_host_memory     {150000}                                                         {# No Comment}  
bbset pdv.drc.remote_host_resources  {PERCENT/60}                                                     {# No Comment}  
bbset pdv.erc_waiver.svrf_vars       {GROUND_NAME|'AVSS_UFS0_EMBD' 'VSS',POWER_NAME|'AVDD075_UFS0_EMBD_VP' 'AVDD075_UFS0_EMBD_VPDIG' 'AVDD12_UFS0_EMBD' 'VDD_HSIOS' 'VDD_STBY_S' 'VVDD_UFS0_HC' 'VVDD_UFS0_PCS' 'VVDD_UFS0_TOP'} {# No Comment}  
bbset pdv.erc_waiver.memory          {40000}                                                          {# No Comment}  
bbset pdv.erc.svrf_vars              {GROUND_NAME|'AVSS_UFS0_EMBD'  'VSS',POWER_NAME| 'AVDD075_UFS0_EMBD_VP' 'AVDD075_UFS0_EMBD_VPDIG' 'AVDD12_UFS0_EMBD' 'VDD_HSIOS' 'VDD_STBY_S' 'VVDD_UFS0_HC' 'VVDD_UFS0_PCS' 'VVDD_UFS0_TOP'} {# No Comment}  
bbset pdv.erc.memory                 {40000}                                                          {# No Comment}  
bbset pdv.lvs.memory                 {64000}                                                          {# No Comment}  
bbset pdv.lvs.svrf_vars              {GROUND_NAME|'AVSS_UFS0_EMBD' 'VSS',POWER_NAME|'AVDD075_UFS0_EMBD_VP' 'AVDD075_UFS0_EMBD_VPDIG' 'AVDD12_UFS0_EMBD' 'VDD_HSIOS' 'VDD_STBY_S'} {# No Comment}  
bbset pdv.drc.memory                 {80000}                                                          {# No Comment}  
bbset pdv.xor.memory                 {80000}                                                          {# No Comment}  
bbset pdv.ant.memory                 {40000}                                                          {# No Comment}  
bbset pdv.xor.remote_hosts           {8}                                                              {# No Comment}  
bbset pdv.xor.remote_host_cores      {8}                                                              {# No Comment}  
bbset pdv.xor.remote_host_memory     {150000}                                                         {# No Comment}  
bbset pdv.xor.remote_host_resources  {PERCENT/60}                                                     {# No Comment}  
bbset FlowEnableApplyeco             {0}                                                              {# enable applyeco stage in main flow}
bbset FlowEnableAudit                {0}                                                              {# enable audit stage in main flow}
bbset FlowEnableBottomup             {0}                                                              {# enable bottomup stage in main flow}
bbset FlowEnableBumpdef              {0}                                                              {# enable bumpdef stage in main flow}
bbset FlowEnableChipfinish           {0}                                                              {# enable chipfinish stage in main flow}
bbset FlowEnableCommon               {0}                                                              {# enable common stage in main flow}
bbset FlowEnableDataprep             {0}                                                              {# enable dataprep stage in main flow}
bbset FlowEnableEarlyrails           {0}                                                              {# enable earlyrails stage in main flow}
bbset FlowEnableEco                  {0}                                                              {# enable eco stage in main flow}
bbset FlowEnableEmir                 {0}                                                              {# enable emir stage in main flow}
bbset FlowEnableEsa                  {0}                                                              {# enable esa stage in main flow}
bbset FlowEnableEsd                  {0}                                                              {# enable esd stage in main flow}
bbset FlowEnableFc_Innovus           {0}                                                              {# enable fc_innovus stage in main flow}
bbset FlowEnableFdv                  {0}                                                              {# enable fdv stage in main flow}
bbset FlowEnableFlowmatic            {0}                                                              {# enable flowmatic stage in main flow}
bbset FlowEnableGls                  {0}                                                              {# enable gls stage in main flow}
bbset FlowEnableJitter               {0}                                                              {# enable jitter stage in main flow}
bbset FlowEnableLec                  {0}                                                              {# enable lec stage in main flow}
bbset FlowEnableLp                   {0}                                                              {# enable lp stage in main flow}
bbset FlowEnableMlsta                {0}                                                              {# enable mlsta stage in main flow}
bbset FlowEnablePceco                {0}                                                              {# enable pceco stage in main flow}
bbset FlowEnablePdp                  {0}                                                              {# enable pdp stage in main flow}
bbset FlowEnablePdv                  {0}                                                              {# enable pdv stage in main flow}
bbset FlowEnablePex                  {0}                                                              {# enable pex stage in main flow}
bbset FlowEnablePnr                  {1}                                                              {# enable pnr stage in main flow}
bbset FlowEnablePower                {0}                                                              {# enable power stage in main flow}
bbset FlowEnablePteco                {0}                                                              {# enable pteco stage in main flow}
bbset FlowEnableRtla                 {0}                                                              {# enable rtla stage in main flow}
bbset FlowEnableRtlpwra              {0}                                                              {# enable rtlpwra stage in main flow}
bbset FlowEnableScf                  {0}                                                              {# enable scf stage in main flow}
bbset FlowEnableSpp                  {0}                                                              {# enable spp stage in main flow}
bbset FlowEnableSta                  {0}                                                              {# enable sta stage in main flow}
bbset FlowEnableSyn                  {1}                                                              {# enable syn stage in main flow}
bbset FlowEnableTcf                  {0}                                                              {# enable tcf stage in main flow}
bbset FlowEnableTimingeco            {0}                                                              {# enable timingECO stage in main flow}
bbset FlowEnableTweaker              {0}                                                              {# enable tweaker stage in main flow}
bbset FlowEnableTwkrprep             {0}                                                              {# enable twkrprep stage in main flow}
bbset FlowEnableTwkrprep_Aggr        {0}                                                              {# enable twkrprep_aggr stage in main flow}
bbset FlowEnableVclp                 {0}                                                              {# enable vclp stage in main flow}
bbset FlowEnableVectorcheck          {0}                                                              {# enable vectorcheck stage in main flow}
bbset FlowEnableWrap                 {0}                                                              {# enable wrap stage in main flow}
bbset pnr.EnableFloorplanInInnovus   {1}                                                              {# No Comment}  
bbset pnr.floorplan.AutoFixFloorplan {1}                                                              {If enabled, it auto fixes die boundary to be finfet grid multiple, Core offset to honor site def while keeping placement of macros as is.}
bbset pnr.floorplan.AutoFixVA        {0}                                                              {If enabled, makes sure created voltage areas are snapped to nearest cell site and specified guardbands in pnr.floorplan.VoltageAreaGuardBand are created}
bbset pnr.floorplan.CoreOffsetOverrides {}                                                               {If user wants to override the core offsets coming from flow. Pls edit this as {L B R T}}
bbset pnr.floorplan.VoltageAreaGuardBand {0.8160 0.8400}                                                  {Edit this to set guardband of your choice. Pattern: {X Y}}
bbset pnr.floorplan.EnableAutoPinPlace {1}                                                              {Variable to auto place, unplaced pins.}
bbset pnr.FinfetWidth                {0.0005}                                                         {Finfet grid width}
bbset pnr.FinfetHeight               {0.028}                                                          {Finfet grid width}
bbset pnr.placeopt.Inputproteustcl   { }                                                              {Deifne proteus run area along with proteus folder path to line it to placeopt area}
bbset syn.elaborate.InlineReports    {}                                                               {# No Comment}  
bbset syn.synth.InlineReports        {}                                                               {# No Comment}  
bbset syn.synthdft.InlineReports     {}                                                               {# No Comment}  
bbset syn.synthdftopt.Reports        {app_options job_info lib_cell_purpose activity clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells nonreset_flops flop_count cell_hierarchy_stats 1design qor 2timing power zcongestion cell_density_gif pin_density_gif check_mv_design b2b_flop design_utilization powervar} {# No Comment}  
bbset syn.synthdftopt.InlineReports  {}                                                               {# No Comment}  
bbset syn.synthopt.Reports           {app_options job_info lib_cell_purpose clock_constraints icg non_clk_cells_on_clk_path dly_cells_on_clk_path low_drive_clk_cells high_drive_clk_cells 1design protean powervar power} {# No Comment}  
bbset syn.synthopt.InlineReports     {}                                                               {# No Comment}  
bbset pnr.signoffopt.InlineReports   {}                                                               {# No Comment}  
bbset pnr.signoffdrc.InlineReports   {}                                                               {# No Comment}  
bbset pnr.setup.InlineChecks         {}                                                               {# No Comment}  
bbset syn.floorplan.Checks           {pre_placement macros_within_die}                                {# No Comment}  
bbset syn.floorplan.InlineChecks     {}                                                               {# No Comment}  
bbset pnr.placeopt.InlineChecks      {gspan_hier_vt protean}                                          {# No Comment}  
bbset pnr.clock.InlineChecks         {gspan_hier_vt protean}                                          {# No Comment}  
bbset pnr.clockopt.InlineChecks      {gspan_hier_vt protean}                                          {# No Comment}  
bbset pnr.route.InlineChecks         {gspan_hier_vt protean}                                          {# No Comment}  
bbset pnr.routeopt.InlineChecks      {gspan_hier_vt protean}                                          {# No Comment}  
bbset pnr.applyeco.InlineChecks      {gspan_hier_vt}                                                  {# No Comment}  
bbset pnr.signoffopt.InlineChecks    {}                                                               {# No Comment}  
bbset pnr.signoffdrc.InlineChecks    {}                                                               {# No Comment}  
bbset syn.elaborate.Checks           {}                                                               {# No Comment}  
bbset syn.elaborate.InlineChecks     {}                                                               {# No Comment}  
bbset syn.synth.Checks               {macros_within_die}                                              {# No Comment}  
bbset syn.synth.InlineChecks         {gspan_hier_vt}                                                  {# No Comment}  
bbset syn.synthopt.Checks            {pre_placement}                                                  {# No Comment}  
bbset syn.synthopt.InlineChecks      {gspan_hier_vt}                                                  {# No Comment}  
bbset syn.synthdft.Checks            {}                                                               {# No Comment}  
bbset syn.synthdft.InlineChecks      {gspan_hier_vt}                                                  {# No Comment}  
bbset syn.synthdftopt.Checks         {pre_placement}                                                  {# No Comment}  
bbset syn.synthdftopt.InlineChecks   {gspan_hier_vt}                                                  {# No Comment}  
bbset pnr.EnableLowPassExclusion     {1}                                                              {Enable this to set dont_use on low pass rate cells (Pass_rate < 0.05%) on the fly}
bbset pnr.pg.TapGridCallback         {}                                                               {To disable tap connectivity for FC}
bbset pnr.pg.TapGridViasCallback     {}                                                               {To disable tap connectivity for FC}
bbset pnr.floorplan.FCEnableCustomTapCellInsertion {0}                                                              {Enable this to allow tap insertion via create_cell_array to make sure taps are aligned with PSW. Expect DRCs}
bbset pnr.floorplan.FCTapPitch       {44.064}                                                         {This variable is for custom tap cell insertion}
bbset pnr.clockopt.FixSequentialCellsFC {0}                                                              {# No Comment}  
bbset pnr.clockopt.FixClockRoutesFC  {1}                                                              {# No Comment}  
bbset pnr.applyeco.FixSequentialCells {1}                                                              {# No Comment}  
bbset pnr.applyeco.FixClockRoutes    {1}                                                              {# No Comment}  
bbset fc.OutputPrecision             {2000}                                                           {Precision control for writing out OASIS in FC}
bbset pnr.fc.FloorplanSetupPreProcessCallback {
        sif::minfo "Initialize_floorplan"
        set_app_options -name finfet.ignore_grid.std_cell -value true
    } {# No Comment}  
bbset sif.fc.ApplyCommonSettingsPostProcessCallback {
        if {${::STAGE} in {"synthdftopt" "placeopt" "clock" "clockopt" "route" "routeopt"}} { 

            ## Configure via-in-pin for SRAM pins
            ## Noted : the settings are not persistent. They are required to be set whenever the design is opened in a different session.
            set m1_macro_pins [get_flat_pins -of_objects [get_flat_cells -filter "design_type==macro" -quiet ] -filter "layer_name==M1" -quiet ]
            set_attribute -objects [get_terminals -of_objects $m1_macro_pins -quiet ] -name port.connect_within_pin -value via_wire
            set_app_options -name route.common.derive_connect_within_pin_via_region -value false ;# tool default false, configure ICC2 to create appropriate via region based on pin width
		
            ## Legalization
            set_app_options -name place.legalize.pin_color_alignment_width_threshold_on_layers -value {{10.0 M0}} ;# foundry library specific
		
            ## For PP.R.10 and CELL.NP.S.10.1.T 2021/01/29
            set_app_options -name place.legalize.enable_absolute_distance_spacing_rule -value true

            ## For antenna diode insertion
            set_app_options -name route.detail.insert_diodes_during_routing -value true
            set ANT_D [get_attribute [get_lib_cells  */ANT*] name]
            set_app_options -name route.detail.diode_libcell_names -value ${ANT_D}
            
            set_app_options -name place.coarse.congestion_expansion_direction -value both
        }

    } {# No Comment}  
bbset pnr.floorplan.FCSecondaryPGRunFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/secondary_pg} {# No Comment}  
bbset pnr.floorplan.FCEnableMemoryChaining {0}                                                              {# No Comment}  
bbset pnr.floorplan.FCEnableNativePowerGrid {1}                                                              {Enable this variable if you do no want sif based pgspec being sourced.}
bbset pnr.floorplan.FCNativePowerGridSpec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/pgspec_native/} {When pnr.floorplan.FCEnableNativePowerGrid is enabled, native FC compile_pg is used to build pg grid}
bbset DkProcessInLegacy              {[bbget .info.PROCESS]}                                          {DK process directory name in legacy GCD}
bbset PdkProcessInLegacy             {[bbget .info.PROCESS]}                                          {PDK process directory name in legacy GCD}
bbset EnableMultiThreading           {1}                                                              {# No Comment}  
bbset ConfigureFrameOption           {0}                                                              {Enables the configure_frame_options -mode block_and_trim}
bbset LibForConfigureFrameOption     {.*}                                                             {Provide the memory names for which ConfigureFrameOption has to be used. Default is for all tha libraries}
bbset fc.CommonSettingsProcsTcl      { [bbget .info.REPO_TOP]/process/[bbget .info.PROCESS]/vars/n2p_fc_procs.tcl } {Path of the tcl script that has all the n2p_fc_procs }
bbset sif.fc.ApplyCommonSettingsPreProcessCallback {

	    source [sif::rpath ${::fc.CommonSettingsProcsTcl} ]
	    # Chipfinish after floorplan stage
	    if {${::STAGE} == "chipfinish" && [regexp "/synth/" ${::pnr.chipfinish.InputDatabase}]} {
		n2p_fc_procs::chipfinish_after_synth
	    }

	    if {${::fc.LpcFlow}} {
		n2p_fc_procs::lpc_flow
	    }

	    if {$::STAGE != "elaborate" && $::STAGE != "setup" && $::STAGE != "socclocks"} {
		n2p_fc_procs::set_2nm_mega_switch
		n2p_fc_procs::handle_lpc_flow_options
		n2p_fc_procs::handle_legalization_settings
		n2p_fc_procs::handle_antenna_diode_insertion
		n2p_fc_procs::handle_m0_routing_settings
		n2p_fc_procs::handle_gds_oasis_settings
	    }

	    if {${::STAGE} == "synthopt" && ${::pnr.EnableFloorplanInInnovus}} {
		n2p_fc_procs::handle_innovus_floorplan_def
		save_block -as post_read_def
		n2p_fc_procs::handle_port_fixing
		n2p_fc_procs::handle_psw_blockages
		n2p_fc_procs::handle_spare_psw_attributes
		n2p_fc_procs::handle_m0_track_attributes
		n2p_fc_procs::handle_custom_macros
		n2p_fc_procs::handle_port_fixing_and_snapping
		n2p_fc_procs::psw_chaning_insertion
		n2p_fc_procs::handle_routing_blockages
		n2p_fc_procs::handle_floorplan_tech_objects
		n2p_fc_procs::handle_m0_track_settings_post_floorplan
		n2p_fc_procs::handle_voltage_areas
		n2p_fc_procs::handle_default_site_def
		n2p_fc_procs::handle_tcic_check
		check_mv_design > rpts/${::BLOCK}.check_power_intent.post_fp.rpt
	    } elseif {!${::pnr.EnableFloorplanInInnovus} && (${::STAGE} in {synthopt synthdftopt placeopt clock clockopt route routeopt})} {
		n2p_fc_procs::handle_remove_tmp_psw_blockages
		n2p_fc_procs::handle_floorplan_tech_objects
		n2p_fc_procs::handle_psw_blockages_if_not_removed
	    }

    } {# No Comment}  
bbset pnr.GenerateNdmPreProcessCallback {
        set ::eff_central_ndms 0
        if {${::fc.EnableCentralNDMs}} {
            set ::eff_central_ndms 1
        }
    
        proc libgen::set_antenna_mgo_attributes {args} {
            if {[sizeof_collection [get_lib_pins -quiet */ANTENNA*MGO*/I]]} {
                set_attribute [get_lib_pins */ANTENNA*MGO*/I] related_power_pin_name VDD
                set_attribute [get_lib_pins */ANTENNA*MGO*/I] related_ground_pin_name VSS
                set_attribute [get_lib_pins */ANTENNA*MGO*/I] related_bias_pin_name {VBB VPP}
            }
        }

        proc libgen::lef_file_read {args} {
            set ndmfile $args
            set ndm_library_name [lindex [split [file tail ${ndmfile}] "."] 0]
            if { ${::ConfigureFrameOption} } {
                if {[regexp ${::LibForConfigureFrameOption} ${ndm_library_name}]} {
                    sif::minfo "Configuring frame options for ${ndmfile}"
                    configure_frame_options -mode block_and_trim
                } else {
                    sif::minfo "No frame configuration for ${ndmfile}"
                    reset_app_options lib.physical_model.block_all
                    reset_app_options lib.physical_model.block_core_margin
                    reset_app_options lib.physical_model.preserve_metal_blockage
                    reset_app_options lib.physical_model.trim_metal_blockage_around_pin
                    reset_app_options lib.physical_model.include_nondefault_via
                    reset_app_options lib.physical_model.enable_via_regions_for_all_design_types
                }
            }
            if {${::Track}=="h156"} {
                 reset_app_options lib.physical_model.block_core_margin
                 sif::minfo "Running: read_lef  $ndmfile -configure_frame_option -convert_sites {{coreW48H156 unitW48H156} {bcoreW48H156 unitW48H156} {bcoreExtW48H156 unitW48H156} {ibcoreW48H156 ibunitW48H156} {hpcoreW48H156 hunitW48H156} {hncoreW48H156 hunitW48H156} {icoreW48H156 iunitW48H156} {icoreExtW48H156 iunitW48H156} {coreW48H468 unitW48H156}} -preserve_lef_cell_site"
                 read_lef  $ndmfile -configure_frame_option -convert_sites {{coreW48H156 unitW48H156} {bcoreW48H156 unitW48H156} {bcoreExtW48H156 unitW48H156} {ibcoreW48H156 ibunitW48H156} {hpcoreW48H156 hunitW48H156} {hncoreW48H156 hunitW48H156} {icoreW48H156 iunitW48H156} {icoreExtW48H156 iunitW48H156} {coreW48H468 unitW48H156}} -preserve_lef_cell_site
            } elseif {${::Track}=="h130"} {
                reset_app_options lib.physical_model.block_core_margin
                sif::minfo "Running: read_lef  $ndmfile -configure_frame_option -convert_sites {{coreW48H130 unitW48H130} {coreW48H390 unitW48H130} {bcoreW48H130 unitW48H130} {bcoreExtW48H130 unitW48H130} {ibcoreW48H130 ibunitW48H130} {hpcoreW48H130 hunitW48H130} {hncoreW48H130 hunitW48H130} {icoreW48H130 iunitW48H130} {icoreExtW48H130 iunitW48H130}} -preserve_lef_cell_site"
                read_lef  $ndmfile -configure_frame_option -convert_sites {{coreW48H130 unitW48H130} {coreW48H390 unitW48H130} {bcoreW48H130 unitW48H130} {bcoreExtW48H130 unitW48H130} {ibcoreW48H130 ibunitW48H130} {hpcoreW48H130 hunitW48H130} {hncoreW48H130 hunitW48H130} {icoreW48H130 iunitW48H130} {icoreExtW48H130 iunitW48H130}} -preserve_lef_cell_site

            }
        }
   
        proc libgen::set_physical_cell_attributes {args} {
            ## FILL
            if { [sizeof_collection [get_lib_cells *FILL*]] > 1 } {
                set_attribute [get_lib_cells *FILL*] design_type filler
            }
            ## DCAP
            if { [sizeof_collection [get_lib_cells *DCAP*]] > 1 } {
                set_attribute [get_lib_cells *DCAP*] design_type filler
            }
            ## ENDCAP
            if { [sizeof_collection [get_lib_cells BOUNDARY*]] > 1 } {
                set_attribute [get_lib_cells BOUNDARY*] design_type end_cap
            }
            ## WELLTAP
            if { [sizeof_collection [get_lib_cells TAP*]] > 1 } {
                set_attribute [get_lib_cells TAP*] design_type well_tap
            }
            ## ANTENNA
            if { [sizeof_collection [get_lib_cells */ANTENNA*]]} {
                set_attribute [get_lib_pins -of [get_lib_cells */ANTENNA*] -filter "direction == in"] is_diode true
            }

        }
    } {# No Comment}  
bbset fc.HpcFlow                     {0}                                                              {# No Comment}  
bbset fc.EarlyGRFlow                 {0}                                                              {# No Comment}  
bbset pnr.fc.floorplan.PowerSwitchSpec {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/psspec.tcl} {# No Comment}  
bbset fc.ReadThirdPartyFPDEF         {0}                                                              {# No Comment}  
bbset fc.ThirdPartyFPDEF             {}                                                               {# No Comment}  
bbset syn.fc.CustomLowPassListFile   {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synthopt/rpts/analyze_lib_cell_placement.cells.list} {# No Comment}  
bbset syn.fc.RegenerateLowPassList   {0}                                                              {# No Comment}  
bbset pnr.fc.FloorplanPowerGridPreProcessCallback {
        proc ::floorplan::read_ot_def {args} {
            set ot_defs $args
            if {${::Track}=="h156"} {
                 # Needed to preserve routing blockages in DPT layers
                 set check_mask_constraints [get_app_option_value -name file.def.check_mask_constraints]
                 set_app_options -name file.def.check_mask_constraints -value none
                 foreach ot_def ${ot_defs} {
                     sif::minfo "Executing read_def ${ot_def} -convert_sites {{core unit} {coreW48H156 unitW48H156} {ibcoreW48H156 ibunitW48H156} {icoreW48H156 iunitW48H156}} -add_def_only_objects all"
                     read_def ${ot_def} -convert_sites {{core unit} {coreW48H156 unitW48H156} {ibcoreW48H156 ibunitW48H156} {icoreW48H156 iunitW48H156}} -add_def_only_objects all
                 }
                 set_app_options -name file.def.check_mask_constraints -value $check_mask_constraints
                 foreach x [get_object_name [get_tracks -filter "layer_name==M0 && direction==horizontal"]] {
                     set_attribute [get_tracks $x] -name end_grid_high_steps -value {0.0240 0.0240}
                     set_attribute [get_tracks $x] -name end_grid_low_offset -value 0.007
                     set_attribute [get_tracks $x] -name end_grid_low_steps -value {0.0240 0.0240}
                     set_attribute [get_tracks $x] -name end_grid_high_offset -value 0.041
                 }
                 source [sif::rpath ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/track_m0_156mH.tcl]
            }
            if {${::Track}=="h130"} {
                # Needed to preserve routing blockages in DPT layers
                set check_mask_constraints [get_app_option_value -name file.def.check_mask_constraints]
                set_app_options -name file.def.check_mask_constraints -value none
                foreach ot_def ${ot_defs} {
                    sif::minfo "Executing read_def ${ot_def} -convert_sites {{core unit} {coreW48H130 unitW48H130} {ibcoreW48H130 ibunitW48H130} {icoreW48H130 iunitW48H130}} -add_def_only_objects all"
                    read_def ${ot_def} -convert_sites {{core unit} {coreW48H130 unitW48H130} {ibcoreW48H130 ibunitW48H130} {icoreW48H130 iunitW48H130}} -add_def_only_objects all
                }
                set_app_options -name file.def.check_mask_constraints -value $check_mask_constraints
                foreach x [get_object_name [get_tracks -filter "layer_name==M0 && direction==horizontal"]] {
                    set_attribute [get_tracks $x] -name end_grid_high_steps -value {0.0240 0.0240}
                    set_attribute [get_tracks $x] -name end_grid_low_offset -value 0.007
                    set_attribute [get_tracks $x] -name end_grid_low_steps -value {0.0240 0.0240}
                    set_attribute [get_tracks $x] -name end_grid_high_offset -value 0.041
                }
                source [sif::rpath ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/track_m0_130mH.tcl]
            }
            # Marking the ports as fixed
            set_fixed_objects [get_ports *] -unfix ; 
            snap_objects [get_ports *] ;
            set_fixed_objects [get_ports *] ;

            if {[file exists ${::fc.VoltageAreasTcl}]} {
                source [sif::rpath ${::fc.VoltageAreasTcl}]
                foreach x [get_object_name [get_voltage_areas *]] {
                    if {[sizeof_collection [get_bounds $x]]} {
                        sif::minfo "Removing bound $x"
                        remove_bounds [get_bounds $x]
                    }
                }
                if {${::pnr.setup.MarkPhysicalPowerDomains}!=""} {
                    set_app_options -name mv.upf.multi_pd_shared_voltage_area_flow -value new
                    set pds [regsub -all "\}" [regsub -all "\{" ${::pnr.setup.MarkPhysicalPowerDomains} ""] ""]
                    set_design_attributes -elements . -attribute {shared_voltage_area {${pds}}}
                    foreach pd $pds {
                        if {[sizeof_collection [get_voltage_area $pd -quiet]]} {
                            set exist $pd
                        }
                    }
                    set_voltage_area $pd -add_power_domains [lremove ${pds} $pd]
                }
            } else {
                remove_voltage_areas -all -verbose
                foreach BOUND [get_object_name [get_bounds PD_*]] {
                    sif::minfo "Bound :: [get_object_name $BOUND]"
                    foreach BOUND_SHAPE [get_object_name [get_bound_shapes -of_objects [get_bounds $BOUND]]] {
                    if { ![regexp INVALID [get_attr [get_bounds -of_objects [get_bound_shapes $BOUND_SHAPE]] bbox ]]  } {
                            set cmd "create_voltage_area -region \{[get_attribute [get_bound_shapes $BOUND_SHAPE] bbox]\} -power_domains $BOUND -merge_regions"
                            eval $cmd
                        } else { 
                            sif::merror "Ignoring Bound for recreation as it is having INVALID bbox $BOUND"
                        }
                    }   
                }
                sif::minfo "Removing bounds PD_*"
                remove_bounds [get_bounds PD_*] 
            }
            if {${::pnr.CheckFCTCIC}} {
                sif::minfo "Begin TCIC check"
                source [sif::rpath ${::pnr.tcic.FCTCICRoot}/run_tcic.tcl]
            }
        }
    } {# No Comment}  
bbset pnr.innovus.SetupDesignPreProcessCallback {
            set init_design_uniquify 1
        }               {# No Comment}  
bbset pnr.fc.LowPassThreshold        {0.02}                                                           {# No Comment}  
bbset fc.VoltageThresholdGroup       {SVT_130 *130*DSVT normal_vt LVT_130 *130*DLVT normal_vt ULVT_130 *130*DULVT low_vt LVTLL_130 *130*DLVTLL normal_vt ULVTLL_130 *130*DULVTLL low_vt ELVT_130 *130*DELVT low_vt SVT_156 *156*DSVT normal_vt LVT_156 *156*DLVT normal_vt ULVT_156 *156*DULVT low_vt LVTLL_156 *156*DLVTLL normal_vt ULVTLL_156 *156*DULVTLL low_vt ELVT_156 *156*DELVT low_vt} {# No Comment}  
bbset pnr.fc.SecondaryPG.Width.Multiplier {1}                                                              {width multiplier for zroute based secpg}
bbset pnr.fc.SecondaryPG.MinLayer    {M5}                                                             {# No Comment}  
bbset pnr.fc.SecondaryPG.MaxLayer    {M6}                                                             {# No Comment}  
bbset pnr.fc.SecondaryPG.SubTrunkLayer {M4}                                                             {# No Comment}  
bbset pnr.fc.placeopt.EnableSecondaryPGRouting {1}                                                              {Enable for sec PG routing after placeopt}
bbset pnr.fc.clockopt.EnableSecondaryPGRouting {1}                                                              {Enable for sec PG routing after placeopt}
bbset pnr.fc.route.EnableSecondaryPGRouting {1}                                                              {Enable for sec PG routing after placeopt}
bbset pnr.fc.routeopt.EnableSecondaryPGRouting {1}                                                              {Enable for sec PG routing after placeopt}
bbset pnr.fc.SRSecondaryPG.Width.Multiplier {1}                                                              {width multiplier for structured router based secpg}
bbset pnr.fc.SRsecpgWidthList        {M6 0.038}                                                       {width list only for structured router secpg}
bbset pnr.fc.EnableSRSecondaryPG.DoubleMainTrunk {false}                                                          {Enable this to create double stripes on the Layer, pnr.fc.SRSecondaryPG.MainTrunkLayer}
bbset pnr.fc.EnableSRSecondaryPG.DoubleSubTrunk {false}                                                          {Enable this to create double stripes on the layer, pnr.fc.SRSecondaryPG.MinLayer}
bbset pnr.fc.EnableEnhancedWirelengthReporting {1}                                                              {Enable this only in T stream FC builds, for better wirelength calculations}
bbset pnr.fc.SRSecondaryPG.InputCells {}                                                               {Add the list of cells where the SR secpg routing to be exclusively performed. Its an override and the secpg routing happens only for these.}
bbset pnr.fc.FixAONCellsPostSecPG    {1}                                                              {To enable fixing AON cells that are secondary PG connected post each optimization stage}
bbset fc.CustomPathGroupFile         {}                                                               {Custom path group tcl file}
bbset syn.elaborate.RecreatePathGroups {true}                                                           {To recreate path groups}
bbset fc.LibgenNdms                  {}                                                               {NDMs to be used which are already generated}
bbset fc.LibgenNdmList               {}                                                               {NDMs to be used which are already generated}
bbset fc.CreateFrameArgs             {-block_all M15}                                                 {# No Comment}  
bbset fc.EnableSDP                   {1}                                                              {# No Comment}  
bbset pnr.fc.EnableAsciiHandoffFlow  {0}                                                              {# No Comment}  
bbset pnr.ascii.placeopt.InputNetlist {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.InputDEFFile {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.InputUPFFile {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.InputMMMCFile {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.PowerGridDef {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.FloorplanTCLFiles {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.FCEnableNativePowerGrid {0}                                                              {# No Comment}  
bbset pnr.ascii.placeopt.InputActivityFile {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.InputSAIFInstanceName {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.InputSAIFScenario {}                                                               {# No Comment}  
bbset pnr.ascii.placeopt.reflibDir   {}                                                               {# No Comment}  
bbset fc.EnableLocalLibGen           {1}                                                              {# No Comment}  
bbset fc.ReportMaxPaths              {10}                                                             {# No Comment}  
bbset fc.ReportNworst                {1}                                                              {# No Comment}  
bbset pnr.routeopt.EnableConvRouteOpt {0}                                                              {# No Comment}  
bbset libgen.syn.full_ndm            {file_type=='full_ndm' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# No Comment}  
bbset libgen.pnr.full_ndm            {file_type=='full_ndm' && is_pnr!='true' && track=~'([bbget .Track]|^$)'} {# No Comment}  
bbset fc.EnableCentralNDMs           {1}                                                              {# No Comment}  
bbset sif.fc.OpenDesignPreProcessCallback {
      set ::eff_central_ndms 0
      if {${::fc.EnableCentralNDMs}} {
          set ::eff_central_ndms 1
      }

        if {${::eff_central_ndms}} {
            set all_scens [lsort -unique [concat ${::syn.scenarios.Scenarios} ${::pnr.scenarios.Scenarios}]]
            set all_crnrs ""
            foreach scen $all_scens {
                set all_crnrs [concat $all_crnrs [lindex [split $scen "."] end]]
            }
            set all_corners [lsort -unique $all_crnrs]
            set process_labels ""
            if {![file exists ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/corner_process.map]} {
                sif::merror "File repo/process/${::PROCESS}/pnr/fc/corner_process.map doesn't exist"
            } else {
                if {![file exists corner_process_map.tcl]} {
                    set fp [open ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/corner_process.map r]
                    set fp_data [read $fp] ; list
                    close $fp
                    set fw [open corner_process_map.tcl w]
                    foreach line [split $fp_data "\n"] {
                        if {$line!=""} {
                            puts $fw "set map([lindex $line 0]) [lindex $line 1]"
                        }
                    }
                    close $fw
                }
                source corner_process_map.tcl
                foreach corner $all_corners {
                    if {[info exists map($corner)]} {
                        set process_labels [concat $process_labels $map($corner)]
                    } else {
                        set process_labels [concat $process_labels $corner]
                    }
                }
            }
            set cmd "set_pvt_configuration -clear_filter all -process_labels {[regsub -all "\}" [regsub -all "\{" [lsort -unique $process_labels] ""] ""]}"
            sif::minfo "Executing command $cmd"
            eval $cmd
        }
        if {${::STAGE} in {"signoffdrc"}} {
          catch {sh bob exec -- runpdv.icv drc ${::BLOCK} ${::BLOCK}.oas -dry_run}
        }
        if {${::fc.LpcFlow}} {
            source -e -v ${::fc.PluginsDir}/pre_open_block.tcl
        }
    } {# No Comment}  
bbset sif.fc.OpenExportDesignPreProcessCallback {
      set ::eff_central_ndms 0
      if {${::fc.EnableCentralNDMs}} {
          set ::eff_central_ndms 1
      }

        if {${::eff_central_ndms}} {
            set all_scens [lsort -unique [concat ${::syn.scenarios.Scenarios} ${::pnr.scenarios.Scenarios}]]
            set all_crnrs ""
            foreach scen $all_scens {
                set all_crnrs [concat $all_crnrs [lindex [split $scen "."] end]]
            }
            set all_corners [lsort -unique $all_crnrs]
            set process_labels ""
            if {![file exists ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/corner_process.map]} {
                sif::merror "File repo/process/${::PROCESS}/pnr/fc/corner_process.map doesn't exist"
            } else {
                if {![file exists corner_process_map.tcl]} {
                    set fp [open ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/corner_process.map r]
                    set fp_data [read $fp] ; list
                    close $fp
                    set fw [open corner_process_map.tcl w]
                    foreach line [split $fp_data "\n"] {
                        if {$line!=""} {
                            puts $fw "set map([lindex $line 0]) [lindex $line 1]"
                        }
                    }
                    close $fw
                }
                source corner_process_map.tcl
                foreach corner $all_corners {
                    if {[info exists map($corner)]} {
                        set process_labels [concat $process_labels $map($corner)]
                    } else {
                        set process_labels [concat $process_labels $corner]
                    }
                }
            }
            set cmd "set_pvt_configuration -clear_filter all -process_labels {[regsub -all "\}" [regsub -all "\{" [lsort -unique $process_labels] ""] ""]}"
            sif::minfo "Executing command $cmd"
            eval $cmd
        }
        if {${::STAGE} in {"signoffdrc"}} {
          catch {sh bob exec -- runpdv.icv drc ${::BLOCK} ${::BLOCK}.oas -dry_run}
        }
        if {${::fc.LpcFlow}} {
            source -e -v ${::fc.PluginsDir}/pre_open_block.tcl
        }
    } {# No Comment}  
bbset sif.fc.QORSummaryPreProcessCallback {
        save_block -as before_QORSummaryCallback
        write_floorplan -objects [get_placement_blockages TMP_SNPS_CSW_blk*] -output tmp_placement_bkg -force
        remove_placement_blockages [get_placement_blockages TMP_SNPS_CSW_blk*]
    } {# No Comment}  
bbset sif.fc.QORSummaryPostProcessCallback {
        source tmp_placement_bkg/fp.tcl
        save_block -as after_QORSummaryCallback
    } {# No Comment}  
bbset pnr.LibgenSetupPreProcessCallback {
        if {${::IterationNumber}==1 || ${::ThreadCount}==1} {
            source ./srcs/dump_modified_files.tcl
            
            # Generating mmmc.tcl with process_label
            if {![file exists corner_process_map.tcl]} {
                set fp [open ${::REPO_TOP}/process/${::PROCESS}/pnr/fc/corner_process.map r]
                set fp_data [read $fp] ; list
                close $fp
                set fw [open corner_process_map.tcl w]
                foreach line [split $fp_data "\n"] {
                    if {$line!=""} {
                        puts $fw "set map([lindex $line 0]) [lindex $line 1]"
                    }
                }
                close $fw
            }
            source corner_process_map.tcl
            set fp [open outs/mmmc.tcl r]
            set fp_data [read $fp] ; list
            close $fp
            set fw [open outs/mmmc.tcl.mod w]
            foreach line [split $fp_data "\n"] {
                if {[regexp "^create_corner" $line]} {
                    puts $fw "$line"
                    set pl [lindex $line 1]
                    if {[info exists map($pl)]} {
                        puts $fw "set_process_label $map($pl) -corner \[get_corners $pl\]"
                    } else {
                        puts $fw "set_process_label $pl -corner \[get_corners $pl\]"
                    }
                } else {
                    puts $fw "$line"
                }
            }
            close $fw
            sh mv outs/mmmc.tcl outs/mmmc.tcl.orig
            sh mv outs/mmmc.tcl.mod outs/mmmc.tcl
            #
        } else {
            sh sleep 60
        }
    set_app_option -name lib.logic_model.align_unspecified_pgpin_direction_with_xtools -value false
    } {# No Comment}  
bbset pnr.fc.EnableSRSecondaryPG.DebugMode {0}                                                              {To enter into debug mode. It is suggested NOT to enable this in the flow. This will retain the shapes with DRC after the SR secpg routing. Use this only for DRC debug purpose. It makes the design dirty.}
bbset pnr.fc.SRSecpgStripeCountList  {}                                                               {# No Comment}  
bbset fc.PerfViaLadders              {0}                                                              {# No Comment}  
bbset fc.SynthDftOpt.EnableCCD       {0}                                                              {# No Comment}  
bbset fc.SynthDftOpt.CCDPrepone      {0.1}                                                            {# No Comment}  
bbset fc.SynthDftOpt.CCDPostpone     {0.1}                                                            {# No Comment}  
bbset fc.PlaceOpt.EnableCCD          {0}                                                              {# No Comment}  
bbset fc.PlaceOpt.CCDPrepone         {0.2}                                                            {# No Comment}  
bbset fc.PlaceOpt.CCDPostpone        {0.1}                                                            {# No Comment}  
bbset fc.ClockOpt.EnableCCD          {0}                                                              {# No Comment}  
bbset fc.ClockOpt.CCDPostpone        {auto}                                                           {# No Comment}  
bbset fc.ClockOpt.CCDPrepone         {auto}                                                           {# No Comment}  
bbset fc.RouteOpt.EnableCCD          {0}                                                              {# No Comment}  
bbset fc.RouteOpt.CCDPostpone        {auto}                                                           {# No Comment}  
bbset fc.RouteOpt.CCDPrepone         {auto}                                                           {# No Comment}  
bbset syn.SwapNonClkCellsToClkCells  {0}                                                              {# No Comment}  
bbset pnr.SwapNonClkCellsToClkCells  {0}                                                              {# No Comment}  
bbset syn.SwapNonClkCellsToClkMapFile {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/nonck_to_ck_pattern.list} {# No Comment}  
bbset syn.fc.SynthSetupPreProcessCallback {
        if {${::fc.SwapRTLClkCellsToDominantVT}} {
            if {[sizeof_collection [get_flat_cells * -quiet -filter is_mapped==true&&is_clock_network_cell==true]]} {
                sif::minfo "Begin to swap RTL instantiated clock cells to dominant VT flavour"
                set dom_vt [regsub " " [regsub "156L3" [regsub "117L3" [regsub "130MH" [string toupper [split ${::syn.derate.vt_mismatch.dominate_vt.Value} "_"]] "130M"] "117H3"] "156H3"] "CPD"]
                set clk_tree_insts [get_flat_cells * -quiet -filter is_mapped==true&&is_clock_network_cell==true]
                append_to_collection clk_tree_insts [get_flat_cells * -quiet -filter "is_integrated_clock_gating_cell"]
                foreach inst [get_object_name $clk_tree_insts] {
                    set ref_name [get_attr [get_cells $inst] ref_name]
                    set pattern1 [lindex [regsub "BWP" $ref_name " "] 0]
                    set pattern2 [lindex [regsub "CPD" [lindex [regsub "BWP" $ref_name " "] 1] " "] 0]
                    set new_cell ${pattern1}BWP${pattern2}CPD${dom_vt}
                    if {[sizeof_collection [get_lib_cells */${new_cell}]]} {
                        sif::minfo "Executing size_cell $inst $new_cell to swap cell to dominant VT"
                        size_cell $inst $new_cell
                    } else {
                        sif::minfo "No lib cell found with name ${new_cell}. Not swapping inst ${inst}."
                    }
                }
            } else {
                puts "No hard instantiated clock cells found in the design"
            }
        }

        # Swap low drive cells on clock path to D4
        if {${::fc.SwapLowDriveClkCells}} {
            set low_drive_clk_cells ""
            set low_drive_refs ""
            set drive ""
            set clk_tree_insts [get_cells [remove_from_collection [get_cells * -hierarchical -filter "is_mapped&&is_clock_network_cell&&ref_name=~*BWP*"] [get_cells * -hierarchical -filter is_sequential]] -quiet]
            append_to_collection clk_tree_insts [get_flat_cells * -quiet -filter "is_integrated_clock_gating_cell"]
            foreach cell [get_object_name $clk_tree_insts] {
                set ref_name [get_attribute [get_cells $cell] ref_name]
                set start_pos [string last "D" [string range $ref_name 0 [expr {[string last "BWP" $ref_name]}]]]
                set end_pos [string first "BWP" $ref_name]
                if {$start_pos == -1 || $end_pos == -1 || $start_pos >= $end_pos} {
                    continue
                } else {
                    set drive [string range $ref_name [expr {$start_pos + 1}] [expr {$end_pos - 1}]]
                }
		#need to check this line 
                if {${drive}<2 || ${drive}=="0P5"} {
                    set low_drive_clk_cells [concat $low_drive_clk_cells $cell]
                    set low_drive_refs [concat $low_drive_refs $ref_name]
                }
            }
            foreach ref_name [lsort -unique $low_drive_refs] {
                set cells [get_object_name [get_cells $low_drive_clk_cells -quiet -filter ref_name==${ref_name}]] ; list
                set start_pos [string last "D" [string range $ref_name 0 [expr {[string last "BWP" $ref_name]}]]]
                set end_pos [string first "BWP" $ref_name]
                if {$start_pos == -1 || $end_pos == -1 || $start_pos >= $end_pos} {
                    continue
                } else {
                    set drive [string range $ref_name [expr {$start_pos + 1}] [expr {$end_pos - 1}]]
                }
                set new_ref_name [regsub "D${drive}BWP" $ref_name "D4BWP"]
                if {[sizeof_collection [get_lib_cells */${new_ref_name}]]} {
                    sif::minfo "Running size_cell \[get_cells {$cells}\] $new_ref_name"
                    set cmd "size_cell \[get_cells {$cells}\] $new_ref_name"
                    eval $cmd
                }
            }
        }

    } {# No Comment}  
bbset syn.fc.ElaborateSetupScenariosPostProcessCallback {
        sif::minfo "Checking if there are clocks in the design before proceeding further"
        if {![sizeof_collection [all_clocks]]} {
            sif::merror "There are no clocks in the design. Verify logs/mmmc.log or check if the SDC path exists."
            exit 0
        }
    } {# No Comment}  
bbset fc.LibGenDebug                 {1}                                                              {# No Comment}  
bbset fc.IncrDetailRoute             {0}                                                              {# No Comment}  
bbset fc.EnableTrialCts              {0}                                                              {# No Comment}  
bbset fc.FixHoldOnIOPaths            {0}                                                              {# No Comment}  
bbset fc.AMISEnable                  {1}                                                              {# No Comment}  
bbset pnr.fc.SRsecpg.NonIncrementalMode {0}                                                              {Enable this for running SR secpg in Non Incremental mode in any stage, by default Non Incremental mode is run only at placeopt}
bbset pnr.fc.EnableNwellroute        {1}                                                              {Enable this for running Nwell routing post ECO through route_eco}
bbset pnr.fc.EnableSROpenPinRouteEco {0}                                                              {Enable to route the remaining unfixed SR secpg open through route_eco. Even if this is enabled, it runs only if the STAGE variable is set to routeopt}
bbset pnr.fc.SRSecondaryPG.HonorDRCNets {}                                                               {To make the SR secpg honor clock nets while routing. By default it ignores signal nets and honors only locked nets and preroute shapes}
bbset pnr.fc.SRSecpg.SubTrunkSpan    {1}                                                              {To change the sub trunks's span}
bbset pnr.fc.SRSecpg.VLTapNo         {1}                                                              {Controls the number of taps of Via Ladder. It can either be 1 or 2 only. }
bbset syn.fc.ElaborateSetupPostProcessCallback {
        set_app_options -name hdlin.naming.upf_compatible -value true
        set_app_options -name hdlin.naming.structs_records -value %s.%s
        set_app_options -name hdlin.naming.vhdl_preserve_case -value true
        set_app_options -name hdlin.naming.hierarchical -value true
    } {# No Comment}  
bbset pnr.fc.EnableOptimizeRouting   {0}                                                              {# No Comment}  
bbset fc.InnovusFPlanPGDEF           {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/floorplan/outs/ufs_top.fp.def.gz} {# No Comment}  
bbset fc.InnovusFPIBDEF              {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/floorplan/outs/ufs_top.ib_rows_only.def.gz} {# No Comment}  
bbset fc.InnovusPSWDEF               {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/floorplan/outs/ufs_top.psw.def.gz} {# No Comment}  
bbset fc.VoltageAreasTcl             {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/floorplan/outs/voltage_areas_for_fc.tcl} {# No Comment}  
bbset fc.IncrDetailRouteOpt          {0}                                                              {# No Comment}  
bbset fc.AMISLibCellsFile            {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/process/n2p/pnr/fc/amis_lib_cells.list} {# No Comment}  
bbset fc.PerfViaLadderMaxLayerList   {"M5 M6 M7"}                                                     {# No Comment}  
bbset fc.UseFSDBHighToggleRate       {0}                                                              {# No Comment}  
bbset fc.AddBufferRespectVoltageArea {1}                                                              {# No Comment}  
bbset fc.ExtraSIPessimism            {0}                                                              {# No Comment}  
bbset fc.EnablePSWBlkgs              {0}                                                              {# No Comment}  
bbset pnr.signoffdrc.ExcludeRulesForMetalOnlyChecks { *.DN.* DM*.* *NW.* *PO.* *OD.* LUP.* *TIGHT* *PRBOUND* *M0.* *VIA0.* *M*.R.* *VIA*.R.* *CM* PP.* NP.* G.* DVIA*.* *Empty*area* *Empty*space*DM* } {# No Comment}  
bbset pnr.signoffdrc.ExcludeRulesForMetalwithFillChecks { *NW.* *PO.* *OD.* LUP.* *TIGHT* *PRBOUND* *M0.* *VIA0.* *M*.R.* *VIA*.R.* *CM* PP.* NP.* G.* } {# No Comment}  
bbset pnr.signoffdrc.CoordinateBasedPGA {}                                                               {Put it in this format {{x1 y1} {x2 y2}}}
bbset pnr.signoffdrc.EnableADRDRCFix {0}                                                              {# No Comment}  
bbset pnr.signoffdrc.ICV_DRC_Runset  {./pdv/drc/srcs/[bbget .info.BLOCK].drc.rules}                   {# No Comment}  
bbset pnr.signoffdrc.StreamFilesPath {[glob -nocomplain /google/gchips/lib/foundry/tsmc/[bbget .info.PROCESS]/tsmc/dk/[bbget .DkVersion]/gds/*/*.gds]} {# No Comment}  
bbset pnr.signoffdrc.RenameCellFilesPath {[glob -nocomplain /google/gchips/lib/foundry/tsmc/[bbget .info.PROCESS]/tsmc/dk/[bbget .DkVersion]/gds/]} {# No Comment}  
bbset pnr.signoffdrc.EnableBaseFill  {0}                                                              {# No Comment}  
bbset fc.PSWConnMode                 {daisy}                                                          {# No Comment}  
bbset pnr.fc.SRSecpg.StrictSubtrunkLength {false}                                                          { }             
bbset fc.GenerateTSMCM0Tracks        {0}                                                              {# No Comment}  
bbset sif.fc.ExecuteStagePreProcessCallback {
        if {[info exists ${::FLOW}.SwapCellPatterns] && [llength ${::FLOW}.SwapCellPatterns]} {
            foreach pattern [set ${::FLOW}.SwapCellPatterns] {
                set from_cell_pattern [lindex $pattern 0]
                set to_cell_pattern [lindex $pattern 1]
                if {[sizeof_collection [get_lib_cells */${from_cell_pattern}* -quiet]]} {
                    foreach lib_cell [get_attribute [get_lib_cells */${from_cell_pattern}* -quiet] name] {
                        set vt [regsub $from_cell_pattern $lib_cell ""]
                        set cells [get_cells * -quiet -hier -filter "ref_name==${lib_cell}"] ; list
                        if {[sizeof_collection $cells]} {
                            sif::minfo "Swapping PDK cells [get_object_name $cells] from ${from_cell_pattern}${vt} to ${to_cell_pattern}${vt}"
                            size_cell [get_cells $cells] -lib_cell [get_lib_cells */${to_cell_pattern}${vt}]
                        }
                    }
                }
            }
        }
        if {[::common::get_stage_var ${::STAGE} SwapNonClkCellsToClkCells] && (${::STAGE} ne "elaborate")} {
            sif::minfo "Begin swapping clk combo cells from non-clk type to clk type"
            set fp [open [::common::get_stage_var ${::STAGE} SwapNonClkCellsToClkMapFile] r]
            set fp_data [read $fp] ; list
            close $fp

            set dom_vt [regsub " " [regsub "156L3" [regsub "117L3" [regsub "130MH" [string toupper [split ${::syn.derate.vt_mismatch.dominate_vt.Value} "_"]] "130M"] "117H3"] "156H3"] "CPD"]
            set fp [open srcs/swap_clk_cells_to_ck_type.tcl w]
            foreach line [split ${fp_data} "\n"] {
                if {${line} ne ""} {
                    set to_pattern [lindex ${line} end]
                    set to_cell "${to_pattern}${dom_vt}"
                    if {[sizeof_collection [get_lib_cells */${to_cell}]]} {
                        sif::minfo "Working on swapping cells to ${to_cell} which are on clock path"
                        foreach from_pattern [lrange ${line} 0 end-1] {
                            set cmd "get_flat_cells -quiet -filter \"is_mapped && lib_cell.is_combinational && is_clock_network_cell && ref_name=~${from_pattern}\""
                            if {[sizeof_collection [eval $cmd]]} {
                                foreach cell [get_object_name [eval $cmd]] {
                                    puts $fp "size_cell $cell $to_cell "
                                }
                            }
                        }
                    } else {
                        sif::merror "Lib-cell ${to_cell} doesn't exist. Please check entry in file [::common::get_stage_var ${::STAGE} SwapNonClkCellsToClkMapFile]"
                    }
                }
            }
            close $fp

            sif::minfo "Sourcing srcs/swap_clk_cells_to_ck_type.tcl"
            source -echo -verbose srcs/swap_clk_cells_to_ck_type.tcl
        }
        # WA till b/324165398 is resolved
        change_selection [get_shapes -filter undefined(owner)&&full_name=~PATH*]
        if {[sizeof_collection [get_selection]]} {
            sif::minfo "Removing shapes having null net"
            remove_shapes [get_selection]
        } else {
            sif::minfo "No shapes with null net found to be deleted"
        }

    } {# No Comment}  
bbset sif.fc.ExecuteStagePostProcessCallback {
	# Making this change to enable chipfinish fc after floorplan innovus 	
        if { [regexp "floorplan"  ${::pnr.chipfinish.Stages}] && ${::pnr.EnableFloorplanInInnovus} && ${::STAGE} == "chipfinish" } {
    		list_licenses > ${::BOB_RUN_DIR}/syn/floorplan-chipfinish/${::STAGE}-export.lic
     	} else {
		list_licenses > ${::BOB_RUN_DIR}/${::FLOW}/${::STAGE}/${::STAGE}-export.lic
	}
            if {${::STAGE} in {"placeopt"}} {
             if { ${::proteus.Enabled} } {
               is {[file isdirectory ../syn/synthdftopt/proteus]} {
                file mkdir -p [pwd]/proteus/tcl
                sh ln -sf ../syn/synthdftopt/proteus/tcl/* placeopt/proteus/tcl/*
               } else {
                puts "Define proteus tcl path with variable pnr.placeopt.Inputproteus path"
                file mkdir -p [pwd]/proteus/tcl
                sh cp -rf  ${::pnr.placeopt.Inputproteustcl}/tcl/* placeopt/proteus/tcl/*
            } 
          }
       }
    } {# No Comment}  
bbset syn.fc.PrefixDesignNameTopModule {1}                                                              {# No Comment}  
bbset syn.elaborate.fc.PrefixDesignNameTopModule {0}                                                              {# No Comment}  
bbset pnr.fc.PrefixDesignNameTopModule {1}                                                              {# No Comment}  
bbset fc.ApplyEcoIncrementalUPF      {}                                                               {# No Comment}  
bbset fc.ForcePSWStrategyAssociation {1}                                                              {# No Comment}  
bbset fc.StapleViaTBC                {}                                                               {# No Comment}  
bbset fc.ForceCellSwap               {}                                                               {# No Comment}  
bbset sif.fc.OpenDesignPostProcessCallback {
        if {${::fc.LpcFlow}} {
            if {${::STAGE} eq "clock"} {
                source -c -v -e ${::fc.PluginsDir}/IrregularGlobalTree0702buildPEFix_PBMacro_oldsetup_manualtaps12_LglFix_AllICGFaninPlacedNearPort_TapAssign.tcl
            }
        }
        if {${::STAGE} ne "elaborate"} {
            sif::minfo "Applying apply_enhanced_ccsn_awp "
            timing::apply_enhanced_ccsn_awp
            link_block
        }
        
	if {${::STAGE}=="applyeco"} {
	    foreach f ${::fc.ForceCellSwap} {
	        if {[file exists $f]} {
	            sif::minfo "Sourcing file $f"
	            source [sif::rpath $f]
                } else {
                    sif::merror "File $f does not exist"
                }
            }
        }
    
 if { ${::STAGE}=="synthopt" } { source -v /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.1/run/FC_f/main/syn/isolation_stratergy.tcl }
} {# No Comment}  
bbset pnr.fc.ChipFinishStapleViasPostProcessCallback {
       if {${::pnr.chipfinish.EnableStapleVias}} {
            set fp [open ref_libs.rpt r]
            set fp_data [read $fp]
            close $fp
            set all_ref_libs ""
            foreach line [split $fp_data "\n"] {
                if {[regexp "^\\*\\+" $line]} {
                    set all_ref_libs [concat $all_ref_libs [lindex $line end]]
                }
            }
            set_ref_libs -clear
            set_ref_libs -ref_libs $all_ref_libs
            link_block
    
            # Derates enablement
            sif::minfo "Applying project voltage/temperature/net derates"
            ::timing::apply_timing_derate
    
            sif::minfo "Applying user TCL derates : apply_user_derates"
            ::timing::apply_user_derates
    
            sif::minfo "Reporting timing derates ./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate > "./rpts/$::STAGE.timing.derates.rpt"
            echo "# Incremental derate" >> "./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate -corners [all_corners] -increment -significant_digits 4 >> "./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate -corners [all_corners] -min_period -significant_digits 4 >> "./rpts/$::STAGE.timing.derates.rpt"
            report_timing_derate -corners [all_corners] -min_pulse_width -significant_digits 4 >> "./rpts/$::STAGE.timing.derates.rpt"
            # Check timing derate
            sif::minfo "Check timing derates library categories"
            if {[catch {::check::check_derate_lib_category -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            sif::minfo "Check timing derates for std cells"
            if {[catch {::check::check_std_derate_value -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            sif::minfo "Check timing derates for std cells"
            if {[catch {::check::check_mem_derate_value -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            sif::minfo "Check timing derates for wire"
            if {[catch {::check::check_wire_derate_value -stage $::STAGE -out_dir "./rpts"} msg]} {
              sif::merror $msg
            }
            foreach_in_collection sce [get_scenarios -filter active ] { 
               set scen [get_object_name $sce]
               report_ocvm -scenario $scen -type pocvm -nosplit -lib_cell -list_not_annotated > "./rpts/$::STAGE.${scen}.report_pocvm.lib_cell.not_annotated.rpt"
            }
        }
    } {# No Comment}  
bbset pnr.fc.SRSecondaryPGHonorDRCNets {}                                                               {# No Comment}  
bbset pnr.fc.SecondaryPGSearchDistance {20}                                                             {# No Comment}  
bbset pnr.fc.SecondaryPGEnableRuntimeImprovement {1}                                                              {# No Comment}  
bbset fc.EnableImprovementMode       {skew}                                                           {Valid values are none, skew, hpc and runtime}
bbset fc.ERIVersion                  {}                                                               {# No Comment}  
bbset fc.EIMVersion                  {}                                                               {# No Comment}  
bbset fc.SQSVersion                  {}                                                               {# No Comment}  
bbset fc.ERIEIMSQSMapFile            {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/repo/cad/pd-tools/sif/tcl/fc/external_scripts/eri_eim_sqs.map} {# No Comment}  
bbset syn.synthdftopt.DCDP           {false}                                                          {# No Comment}  
bbset pnr.placeopt.DCDP              {false}                                                          {# No Comment}  
bbset syn.synthopt.MuxCo             {0}                                                              {# No Comment}  
bbset syn.synthdftopt.MuxCo          {0}                                                              {# No Comment}  
bbset pnr.placeopt.MuxCo             {0}                                                              {# No Comment}  
bbset syn.synthopt.CDREnable         {false}                                                          {# No Comment}  
bbset syn.synthdftopt.CDREnable      {[bbget .syn.synthopt.CDREnable]}                                {# No Comment}  
bbset pnr.placeopt.CDREnable         {[bbget .syn.synthdftopt.CDREnable]}                             {# No Comment}  
bbset syn.synthdftopt.GlobalRouteCongestionEffort {}                                                               {# No Comment}  
bbset pnr.placeopt.HoldAreaBudgeting {enhanced}                                                       {# No Comment}  
bbset syn.synthdftopt.LatencyDrivenPlacement {false}                                                          {# No Comment}  
bbset pnr.placeopt.LatencyDrivenPlacement {[bbget .syn.synthdftopt.LatencyDrivenPlacement]}                {# No Comment}  
bbset syn.RuntimeReductionDir        {v2_runtime}                                                     {# No Comment}  
bbset pnr.RuntimeReductionDir        {v2_runtime}                                                     {# No Comment}  
bbset fc.GlitchPulseR                {70}                                                             {# No Comment}  
bbset fc.EnablePBARouteOpt           {1}                                                              {# No Comment}  
bbset fc.EnableN3PComplements        {1}                                                              {# No Comment}  
bbset fc.ChangeNamesBeforeScenCreation {1}                                                              {# No Comment}  
bbset pnr.fc.EnableNwellPinVL        {0}                                                              {# No Comment}  
bbset pnr.fc.SecondaryPGRouteoptRuntimeFix {0}                                                              {# No Comment}  
bbset fc.EnableMegaSwitch            {1}                                                              {To control enablement of Mega Switch in the flow}
bbset fc.MegaSwitchTbc               {v4_ConvergeFlowEnabler}                                         {Version control for mega switch}
bbset fc.EarlySynthChecksTcl         {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/fc/procs.early_synth_checks.tcl} {# No Comment}  
bbset fc.EnableCustomSecPG           {1}                                                              {To enable custom secondary PG}
bbset fc.CustomPGScript              {[bbget .info.CHIP_DIR]/pnr/fc/run_custom_secpg.fc.tcl}          {# No Comment}  
bbset fc.PromotePinLibCells          {BOUNDARY* HDR*}                                                 {# No Comment}  
bbset pnr.psw.HammerChainOrAckNet    {}                                                               {adding this var for the user to specify or_ack port for and_or_insertion}
bbset pnr.fc.ChipFinishMetalFillPreProcessCallback {
        sif::minfo "Promoting M0 pins to shapes"
        source [sif::rpath ${::CHIP_DIR}/pnr/fc/promote_m0_pin_shapes.tcl]
        promote_pin_shapes ${::fc.PromotePinLibCells}
    
        sif::minfo "Promoting M0 pins to shapes"
        source [sif::rpath ${::CHIP_DIR}/pnr/fc/promote_m0_pin_shapes.tcl]
        promote_pin_shapes ${::fc.PromotePinLibCells}
    } {# No Comment}  
bbset pnr.fc.ChipFinishMetalFillPostProcessCallback {
        set shapes [get_shapes -filter "user_class==promoted" -quiet]
        if {[sizeof_collection ${shapes}]} {
            sif::minfo "Removing promoted shapes"
            remove_shapes -force [get_shapes ${shapes} -quiet]
        }
    
        set shapes [get_shapes -filter "user_class==promoted" -quiet]
        if {[sizeof_collection ${shapes}]} {
            sif::minfo "Removing promoted shapes"
            remove_shapes -force [get_shapes ${shapes} -quiet]
        }
    } {# No Comment}  
bbset fc.MegaSwitchPostTcl           {}                                                               {# No Comment}  
bbset pnr.CellWithKeepouts           {}                                                               {provide list of drive strength and outer KO distance, e.g., {{*D6*ULVT {1.0 0.130 0.048 4}} {*D4*ULVT {4 3 2 1}}}}
bbset pnr.fc.PlaceOptInitialOptoPostProcessCallback {
        if {![string is space ${::pnr.CellWithKeepouts}]} {
            sif::minfo "Applying keepout margins using var pnr.CellWithKeepouts"
            foreach pair ${::pnr.CellWithKeepouts} {
                set cell [lindex ${pair} 0]
                set keepout [lindex ${pair} 1]
                create_keepout_margin -outer ${keepout} [get_cells -hier -f ref_name=~${cell}]
            }
        }
    } {# No Comment}  
bbset pnr.CheckFCTCIC                {1}                                                              {To enable TCIC checker in FC}
bbset pnr.IncrFp                     {0}                                                              {Set 1 to enable incremental floorplan flow from placeopt}
bbset pnr.IncrFpDefFiles             {}                                                               {List of DEF files to read in for Incremental Floorplan flow}
bbset pnr.IncrFpReadDefOptions       {-no_incremental}                                                {Options for read_def command during incremental floorplan flow}
bbset fc.LpcFlow                     {0}                                                              {Set 1 to enable CPU LPC core flow}
bbset fc.ReadDefOptions              { -convert_sites {{core unit} {coreW48H130 unitW48H130} {ibcoreW48H130 ibunitW48H130} {icoreW48H130 iunitW48H130}} -add_def_only_objects all} {# No Comment}  
bbset syn.fc.ElaborateReadFloorplanPostProcessCallback {
        foreach x [get_object_name [get_tracks -filter "layer_name==M0 && direction==horizontal"]] {
            set_attribute [get_tracks $x] -name end_grid_high_steps -value {0.0240 0.0240}
            set_attribute [get_tracks $x] -name end_grid_low_offset -value 0.007
            set_attribute [get_tracks $x] -name end_grid_low_steps -value {0.0240 0.0240}
            set_attribute [get_tracks $x] -name end_grid_high_offset -value 0.041
        }
    } {# No Comment}  
bbset pnr.clockopt.VoltageOptScenarios { {func.ssgnp-NM-0-cworst_ccworst_t -50 0.675 0.645} }           {VOPT scenario specification {{scenario tns max_voltage min_voltage}}}
bbset fc.NWSpacingLibCellPatterns    {LVL* ISO* PT*}                                                  {# No Comment}  
bbset fc.MegaSwitchEnablements       {GoogleLegalizationOptions GoogleCongestionEnable GoogleEWIEnable GoogleDFTEnable GoogleTimingOptimization GoogleAllStageTotalPowerEnable GoogleStageControlledTotalPowerEnable GoogleAllStageRunTimeEnable GoogleStageControlledRunTimeEnable} {To enable control of which MegaSwitch options to run}
bbset fc.EnableParallelExport        {1}                                                              {To enable or disable parallel exports}
bbset fc.ParallelExportOutputs       {script stage_netlist netlist def lef ant_lef spef oasis namemap constraint_script spc_rule scan_def upf} {List of exports where parallel export is to be done}
bbset fc.VoltageOptPathGroup         {REG2REG}                                                        {Path group name to be used for VOPT during report_timing}
bbset fc.HybridRowLibCellPatterns    {*PPNN*}                                                         {Pattern of lib-cells which are dont use}
bbset fc.EnableHybridRowCells        {0}                                                              {To enable the use of fc.HybridRowLibCellPatterns lib-cells in the flow}
bbset fc.ExtraLibMapping             {null}                                                           {To enable map of lef, ccs_lib and ccs_db provided in ExtraLibs}
bbset Release_area                   {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release} {# No Comment}  
bbset SSWRP_HSIO_S_RELEASE_PROJECT_TOP {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release} {# No Comment}  
bbset mmmc.mode.func_NM.synSdcs      {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_sdc/ufs_top.mission.tcl} {# No Comment}  
bbset mmmc.mode.func_NM.pnrSdcs      {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_sdc/ufs_top.mission.tcl} {# No Comment}  
bbset mmmc.mode.shift_NM.synSdcs     {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_sdc/ufs_top.shift.tcl} {# No Comment}  
bbset mmmc.mode.shift_NM.pnrSdcs     {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_sdc/ufs_top.shift.tcl} {# No Comment}  
bbset mmmc.mode.capture_NM.synSdcs   {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_sdc/ufs_top.capture.tcl} {# No Comment}  
bbset mmmc.mode.capture_NM.pnrSdcs   {/google/gchips/ipreleases/lajolla_hsio/ufs_top/LAJ_A0_UFS_TOP_M3_V2_R1_D1_C1_RTLDFT/fe_release/ufs_top/dft_sdc/ufs_top.capture.tcl} {# No Comment}  
bbset mmmc.vdomain.AVDD075_UFS0_EMBD_VP.rail {AVDD075_UFS0_EMBD_VP}                                           {# No Comment}  
bbset mmmc.vdomain.AVDD075_UFS0_EMBD_VPDIG.rail {AVDD075_UFS0_EMBD_VPDIG$|VVDD_AVDD075_UFS0_EMBD_VPDIG_PG$}      {# No Comment}  
bbset mmmc.vdomain.AVDD12_UFS0_EMBD.rail {AVDD12_UFS0_EMBD}                                               {# No Comment}  
bbset mmmc.vdomain.VDD_HSIOS.rail    {VDD_HSIOS$|VVDD_UFS0_HC$|VVDD_UFS0_PCS$|VVDD_UFS0_TOP$}         {# No Comment}  
bbset mmmc.vdomain.VDD_STBY_S.rail   {VDD_STBY_S}                                                     {# No Comment}  
bbset pnr.scenarios.status.Floorplan {
                                      {func_NM.ssgnp-NM-0-cworst_ccworst_t        {setup hold active max_trans max_cap }}
                                      } {# No Comment}  
bbset syn.fc.ElaborateReadRTLPreCallback {
  set_app_options -name hdlin.elaborate.maximum_while_loop_iterations -value 8000
} {# No Comment}  
bbset syn.fc.ElaborateReadRTLPreProcessCallback {

  # Extra check to make sure Timing lib exists
  # 		in all ndms
  source -e -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/Lajolla_ufs/block/ufs_top/common_scripts/check_timing_lib.tcl
} {# No Comment}  
bbset syn.fc.SynthPreProcessCallback {

  # Special setting to apply voltages on supply_net
  
  # Reference : https://solvnetplus.synopsys.com/s/article/Preserving-Undriven-Nets-in-Fusion-Compiler
  # Preserve ACK nets from optimization
  set nt_count 0 
  foreach my_pd [upfutils::get_switched_power_domains *] {
    foreach sw_type {ALL PRE} {
      set sw_rule [upfutils::get_power_domain_switch_rule $my_pd $sw_type]
      set nt      [get_nets  [upfutils::get_power_switch_ack_port $sw_rule ] ] 

        puts "PARTH - Setting Dont_touch on ACK net [get_object_name $nt] "
        set_dont_touch  $nt true
	set cells      [get_cells -of [get_pins -leaf -of $nt]]
        if {[sizeof_collection $cells] > 0} {
          foreach_in_collection cl $cells {
            puts "PARTHL - Setting size_only on cell [get_object_name $cl]"
            set_size_only $cl true
	   }
	}
    }
  }

} {# No Comment}  
bbset syn.fc.SynthOptLogicOptoPreCallback {
source /google/gchips/workspace/redondo-asia/tpe/user/desaiparth/SCRIPTS/iso_magnet_placement.tcl
iso_magnet_placement u_ufs_sd_top/u_ufs_top/u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma


#### terminal creation over phy and gpio's 
#source -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/MBU/SSWRP_HSIO_S/M3/M3V2_repo_3.5/run/PMA_terminal_creation.tcl
#source -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/MBU/SSWRP_HSIO_S/M3/M3V2_repo_3.5/run/GPIO_terminal_creation.tcl
} {# No Comment}  
bbset syn.fc.SynthDFTOptInitialOptoPreCallback {
#	set_dont_touch [get_cells -hierarchical -filter "full_name =~ *customGspanBuffer*"] true
	set_app_options -name compile.flow.enable_ccd -value false
	#set_disable_timing HDR42XSINTCWGOOGD1BWP143M286H3P48CPDSVT -from NSLEEPIN -to NSLEEPOUT
	#source -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/MBU/SSWRP_HSIO_S/M3/M3V2_repo_3.5/run/cong_res_M3V2_repo3.5.tcl 
	source /google/gchips/workspace/redondo-asia/tpe/user/desaiparth/SCRIPTS/iso_magnet_placement.tcl
	iso_magnet_placement u_ufs_sd_top/u_ufs_top/u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma


} {# No Comment}  
bbset pnr.floorplan.RectilinearDesign {1}                                                              {# No Comment}  
bbset pnr.innovus.FloorplanPlaceBlockPinsPostCallback {
	checkPinAssignment
}                                          {# No Comment}  
bbset pnr.fc.PlaceOptInitialOptoPreCallback {
foreach_in_collection pin [get_pins */NSLEEPIN -hierarchical] { 
set_false_path -through $pin                                                    
}
set_disable_timing HDR39XSINTCWD1BWP130HPNPN3P48CPDSVT -from NSLEEPIN -to NSLEEPOUT
} {# No Comment}  
bbset pnr.fc.PlaceOptFinalPlacePreCallback {
	set_app_options -name compile.flow.enable_ccd -value false
}  {# No Comment}  
bbset pnr.fc.PlaceOptFinalOptoPreCallback {
	set_app_options -name compile.flow.enable_ccd -value false	
} {# No Comment}  
bbset pnr.fc.ClockOptFinalOptoPreCallback {
 	set_app_options -name clock_opt.flow.enable_ccd -value false
#	set_attribute   [get_lib_cells */*D0P*] dont_use true
#	set_attribute   [get_lib_cells */*D1P*] dont_use true
} {# No Comment}  
bbset pnr.fc.RouteOptFinalPreCallback {
 	set_app_options -name route_opt.flow.enable_ccd -value false
} {# No Comment}  
bbset pnr.fc.RouteOptInitialPreCallback {
		set_disable_timing HDR39XSINTCWD1BWP130HPNPN3P48CPDSVT -from NSLEEPIN -to NSLEEPOUT
		#source -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/MBU/SSWRP_HSIO_S/M3/M3V2_repo_3.5/run/uncertainity.tcl
#		set_attribute   [get_lib_cells */*D0P*] dont_use true
#		set_attribute   [get_lib_cells */*D1P*] dont_use true
} {# No Comment}  
bbset fc.routeopt.EnableCCD          {0}                                                              {# No Comment}  
bbset syn.synthdftopt.RAM            {340000}                                                         {# No Comment}  
bbset pnr.placeopt.RAM               {340000}                                                         {# No Comment}  
bbset pnr.clock.RAM                  {340000}                                                         {# No Comment}  
bbset pnr.clockopt.RAM               {340000}                                                         {# No Comment}  
bbset pnr.route.RAM                  {340000}                                                         {# No Comment}  
bbset pnr.routeopt.RAM               {350000}                                                         {# No Comment}  
bbset syn.fc.ElaborateSaveNetlistPreCallback {
  #Preserve list of objects for sdc recived from design.
  set syn.preserve_list.file "/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/preserve.list"
  redirect -tee preserve_obj.log {source -e -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/Lajolla_ufs/block/ufs_top/common_scripts/preserve_obj.elab.tcl}
} {# No Comment}  
bbset syn.fc.SynthSetupPostCallback  {
set_app_options -name compile.flow.enable_multibit -value true
set_app_options -name compile.flow.enable_rtl_multibit_banking -value true
set_app_options -name compile.seqmap.prefer_registers_with_multibit_equivalent -value true
 set_attribute [get_lib_cells */SED*] dont_use true
set_attribute [get_lib_cells */ED*] dont_use true
set_attribute [get_lib_cells */DFRPQSXG*] dont_use true
set_app_options  -name compile.seqmap.identify_shift_registers -value false
} {# No Comment}  
bbset pnr.innovus.SetupReadUPFPostCallback {
mark_physical_power_domains -domains {PD_UFS0_PCS PD_UFS0_RMMI} 
} {# No Comment}  
bbset pnr.innovus.FloorplanSetupPreCallback {
	defIn /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/analog_pins.def
	defIn /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/blocks.def
    setFPlanMode -snapBlockGrid finfetManufacturing
	defIn /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/ref_alt_clk_p.def
 	defIn /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/pblock.def
	defIn /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/port_1.def
	createPlaceBlockage -box {0.912 398.268 10.608 1238.198} -name leftofPhy -type hard
	createPlaceBlockage -box {0.912 396.968 859.104 397.488} -name belowPhyfortcic -type hard 
	addInst -cell PCLAMPCCOD_H_C240708 -inst ASK_ESD -loc {631.104 75.868}  -place_status fixed
	globalNetConnect VDD_HSIOS -type pgpin -pin VDDESD -singleInstance ASK_ESD -override -verbose
	globalNetConnect VSS -type pgpin -pin VSSESD -singleInstance ASK_ESD -override -verbose
	source /google/gchips/workspace/redondo-asia/tpe/user/parthl/Scripts/LAJ_HSIO/create_terminal_over_IPs.innovus.tcl
	source create_terminal.inv.tcl
} {# No Comment}  
bbset syn.fc.SynthDFTOptSetupPreCallback {
  source -v -continue_on_error /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/Lajolla_ufs/block/ufs_top/common_scripts/dont_touch_pma_nets.tcl
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/ref_alt_clk_p ] ] 
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_sq_output_ao ] ] 
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_sq_output_ao ] ] 
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/ref_pad_clk_m ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/ref_pad_clk_p ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/resref ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_m ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx0_p ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_m ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/rx1_p ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx0_m ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx0_p ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx1_m ] ]  
  set_ideal_network [get_nets -of [get_pins u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/pma/tx1_p ] ]  
  source -v /google/gchips/workspace/redondo-asia/tpe/user/mirzasadiqbeg/Lajolla_ufs/block/ufs_top/common_scripts/out_anchor_buf.tcl
 
  #to increase the mbit perc at synthdftopt
  set_app_options -name multibit.banking.maximum_allowable_distance  -value 75
  connect_supply_net -ports ASK_ESD/VDDESD VDD_HSIOS 
  
  foreach {a o} {u_ufs_top_ufs_hc_psw_pdom_power_down_and_all_ack u_ufs_top_ufs_hc_psw_pdom_power_down_or_all_ack u_ufs_top_ufs_pcs_psw_pdom_power_down_and_all_ack u_ufs_top_ufs_pcs_psw_pdom_power_down_or_all_ack u_ufs_top_ufs_top_pdom_power_down_and_all_ack u_ufs_top_ufs_top_pdom_power_down_or_all_ack} { 
  	set A_AND AND_cell_${a}
  	set O_OR OR_net_${o}
  	create_net ${O_OR} 
  	create_cell $A_AND BUFFD6BWP130HPNPN3P48CPDLVT
  	connect_net [get_pins ${A_AND}/Z] -net [get_nets ${O_OR}]
  	connect_net [get_pins ${A_AND}/I] -net [get_nets -of_objects [get_ports $a]]
  	connect_net [get_ports $o] -net [get_nets ${O_OR}]
  }
} {# No Comment}  
bbset syn.fc.SynthDFTOptInitialOptoPreProcessCallback {
  set a [current_scenario]
  foreach_in_collection scen [all_scenarios ] {                                                                   
  current_scenario [get_object_name $scen]
  source -v -continue_on_error /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.0/run/addlcons_dft_dft/main/syn/ufs_top_clock_jitter_info_NM.csv.8pct_jitter.tcl
  source -v -continue_on_error /google/gchips/workspace/redondo-asia/tpe/user/apradeep/Projects/lajolla/hsios/work/constraints/ufs_top/M3.m2v1r4d1.addl_cons/Addl_constraints.tcl
  }
  current_scenario $a 
} {# No Comment}  
bbset syn.fc.SynthDFTOptInitialOptoPostCallback {
#For VCLP issue
	foreach_in_collection a [get_pins *OUT_*/TVDD] { if { ! [sizeof_collection [all_connected $a]] } { connect_supply_net -ports $a VDD_HSIOS } }
	connect_pg_net -automatic
	check_mv_design -isolation -repeater  -max_message_count 2000 > cmv_0.rpt
	set_attr [get_cells IN_*GSPAN_IO_BUF_*] dont_touch false
	set_attr [get_cells OUT_*NGSPAN_IO_*] dont_touch false
	fix_mv_design  -buffer
	connect_pg_net -automatic
	check_mv_design -isolation -repeater  -max_message_count 2000 > cmv_1.rpt
	set_power_strategy_attribute  [get_cells u_ufs_ss/u_dwc_ufshc_mipi_mphy/u_dwc_mipi_mphy_type1_g6_phy_2tx_2rx_ns/POST_SYNTHDFT_snps_PD_AVDD075_UFS0_EMBD_VPDIG__iso_synthdft_PD_AVDD075_UFS0_EMBD_VPDIG_snps_outputs2_clamp0_snps_scan_*__UPF_ISO*] iso_synthdft_PD_AVDD075_UFS0_EMBD_VPDIG_snps_outputs2_clamp0
	commit_upf
	set_attr [get_cells IN_*GSPAN_IO_BUF_*] dont_touch true
	set_attr [get_cells OUT_*GSPAN_IO_*] dont_touch true
} {# No Comment}  
bbset scf.scf.DFT_CONSTRAINTS_HOME   {/google/gchips/ipreleases/lajolla_scf/dft_common_constraints/LAJ_A0_M3/LAJ_A0_M3_01_APR_2025_REV1} {# No Comment}  
bbset scf.scf.TECH_HOME              {/google/gchips/ipreleases/lajolla_scf/tech_common_constraints/LAJ_A0_M3/LAJ_A0_M3_16_APR_2025_REV4} {# No Comment}  
bbset pnr.Stage                      {clockopt}                                                       {# customization by ::bob::fdl::create_node -vars for /google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/pnr/clockopt}
