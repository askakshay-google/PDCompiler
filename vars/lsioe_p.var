#########################################
############DONT USE LISTS###############
#########################################
bbconcat pnr.DontUseCells { restrict(UlvtllCells) }
bbconcat pnr.DontUseCells { restrict(SvtCells) }
bbconcat pnr.DontUseCells { restrict(UlvtCells) }
bbconcat pnr.DontUseCells { restrict(AllElvtCells) }
bbconcat pnr.DontUseCells { restrict(NppnCells) }
bbconcat pnr.DontUseCells { restrict(PnnpCells) }
bbconcat pnr.DontUseCells { restrict(PpnnCells) }
bbconcat pnr.DontUseCells { restrict(D14PlusCells) }
bbconcat pnr.DontUseCells { restrict(D16PlusCells) }
bbconcat pnr.DontUseCells { restrict(D18PlusCells) }
bbconcat pnr.DontUseCells { restrict(D20PlusCells) }
bbconcat pnr.DontUseCells { restrict(AllD24PlusCells) }
bbconcat pnr.DontUseCells { restrict(D32PlusCells) }
bbconcat pnr.DontUseCells { restrict(D48PlusCells) }
bbconcat pnr.DontUseCells { restrict(NoMbitEquivalentFlopCells) }
##########################################

#########################################
###### SCENARIOS : ACTIVE ###############
#########################################
#
#
#Shouldn't corners be given by block owners?
bbset pnr.scenarios.Scenarios        {func.tt-NMP-85-cworst_ccworst_t func.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst func.ssgnp-NM-m25-cworst_ccworst func.ssgnp-NM-m25-rcworst_ccworst func.ffgnp-NM-125-rcworst_ccworst func.ffgnp-NM-125-cworst_ccworst func.ffgnp-NM-m25-rcworst_ccworst func.ffgnp-NM-m25-cworst_ccworst shift.ssgnp-NM-0-cworst_ccworst_t shift.ffgnp-NM-125-rcworst_ccworst shift.ssgnp-NM-m25-cworst_ccworst shift.ffgnp-NM-125-cworst_ccworst shift.ffgnp-NM-m25-rcworst_ccworst func.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-SUD-0-cworst_ccworst_t func.ssgnp-UUD-125-cworst_ccworst func.ffgnp-NM-125-cbest_ccbest func.ffgnp-NM-125-rcbest_ccbest func.ssgnp-UUD-0-rcworst_ccworst func.ssgnp-UD-0-cworst_ccworst_t shift.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-UUD-0-rcworst_ccworst func.ssgnp-UUD-0-cworst_ccworst func.ssgnp-UD-125-rcworst_ccworst_t shift.ssgnp-NM-125-cworst_ccworst_t shift.ssgnp-UUD-0-cworst_ccworst}

bbset pnr.scenarios.status.Default {
	{func.tt-NMP-85-cworst_ccworst_t         {leakage dynamic active}}
	{func.ssgnp-NM-0-cworst_ccworst_t        {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UUD-0-cworst_ccworst_t       {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UD-0-cworst_ccworst_t        {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UD-125-rcworst_ccworst_t     {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-NM-0-cworst_ccworst_t       {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-UUD-0-cworst_ccworst_t      {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-NM-125-cworst_ccworst_t     {setup active max_trans max_cap min_cap}}
} 

#########################################


#################
## To disable/enable 0/1 exit on link error
##To take GSPAN & NONGSPAN IO BUF placement & respect voltage areas - the add_buffer happens at syn/synthdftopt##
##By default this below var was 0 and it caused LS_INST_MISSING violations##
bbset fc.AddBufferRespectVoltageArea 1
####When this below var is high then it brings congestion - so made it leakage
#bbset pnr.TotalPowerOptimizationEffort {leakage}  {Effort for FC power optimization (standard|high|ultra|none|leakage)}
bbset pnr.TotalPowerOptimizationEffort {high}

##Enabling as per : https://drive.google.com/file/d/1v7St97cGmaNbCrKoiyEkNmIMeP0BTUd-/view?usp=sharing&resourcekey=0--a-L3p12hOlZWPjy5yz1YA ##
bbset fc.EnableMegaSwitch {1}


####
bbappend sif.fc.ExecuteStagePreCallback {
	###To disable Offset Latency Calculations on clk div clk_incheckpin###
	if { (${::STAGE} in {synthopt synthdft synthdftopt placeopt}) } {
		if { [sizeof_collection [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] ] } {
		set save_mode [get_object_name [current_mode]]  
        	foreach_in_collection e [get_mode] { 
        	    current_mode $e
        	    puts "Setting balance point false for clk_incheckpoint for mode [get_object_name $e]"
        	    set_clock_balance_points -balance_points [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] -consider_for_balancing false 
 
        	 }
    		current_mode $save_mode
		##setting dont ecgl on the clk_in & clk_incheckpins of div50 cells
		set_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency true
		get_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency > li		
		}
	}

	if { $::STAGE == "clock" } {
		if { [sizeof_collection [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] ] } {
		##Resetting dont ecgl on the clk_in & clk_incheckpins of div50 cells post placeopt
		set save_mode [get_object_name [current_mode]]  
        	foreach_in_collection e [get_mode] { 
        		current_mode $e
			set_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency false
			get_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency > li.ck
			puts "Setting balance point true for clk_incheckpoint for mode [get_object_name $e]"
        		set_clock_balance_points -balance_points [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] -consider_for_balancing true 
		}
		current_mode $save_mode
		}
	}
	###For improving the MBIT %###
	#TODO
	if { (${::STAGE} == "placeopt") } {
	    set_app_options -name compile.flow.enable_multibit_debanking -value true ; ### set it to true after initial_opto 
	}
}



##############################################
#############clock cell usage list############
##############################################
bbset pnr.clock.InverterCellList     {CKND3BWP130HPNPN3P48CPDULVTLL CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL CKNDHD6BWP130HPNPN3P48CPDULVTLL  DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {List of inverter cells}
bbset pnr.clock.TopInverterCellList  {CKND3BWP130HPNPN3P48CPDULVTLL CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL CKNDHD6BWP130HPNPN3P48CPDULVTLL  DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {Leaf Specific Inverter Cell List}
bbset pnr.clock.LeafInverterCellList {CKND3BWP130HPNPN3P48CPDULVTLL CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL CKNDHD6BWP130HPNPN3P48CPDULVTLL  DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {Leaf specific inverter cell list}
bbset pnr.clock.BufferCellList       {CKBDHD5BWP130HPNPN3P48CPDULVTLL DCCKBDHD6BWP130HPNPN3P48CPDULVTLL DCCKBDHD8BWP130HPNPN3P48CPDULVTLL  DCCKBDHD10BWP130HPNPN3P48CPDULVTLL DCCKBDHD12BWP130HPNPN3P48CPDULVTLL DCCKBDHD14BWP130HPNPN3P48CPDULVTLL} {List of buffer cells}
bbset pnr.clock.ICGCellList          {CKLNQD3BWP130HPNPN3P48CPDULVTLL CKLNQD4BWP130HPNPN3P48CPDULVTLL CKLNQOPTBBD4BWP130HPNPN3P48CPDULVTLL  CKLNQD5BWP130HPNPN3P48CPDULVTLL CKLNQD6BWP130HPNPN3P48CPDULVTLL CKLNQD8BWP130HPNPN3P48CPDULVTLL  CKLNQOPTBBD8BWP130HPNPN3P48CPDULVTLL CKLNQD10BWP130HPNPN3P48CPDULVTLL CKLNQOPTBBD10BWP130HPNPN3P48CPDULVTLL  CKLNQD12BWP130HPNPN3P48CPDULVTLL CKLNQOPTBBD12BWP130HPNPN3P48CPDULVTLL} {List of clock gating cells}
##############################################


#########################################
###https://buganizer.corp.google.com/issues/394850780#comment7###
####To Improve RTL banking####
#########################################
bbappend sif.fc.ExecuteStagePreCallback {
        if { (${::STAGE} in {synth synthopt synthdftopt}) } {  
		set_app_options -name compile.seqmap.identify_shift_registers -value false
		set_app_options -name compile.flow.enable_incremental_multibit_banking -value true
		set_app_options -name compile.flow.enable_multibit -value true
		set_app_options -name compile.flow.enable_multibit_debanking -value false
		set_app_options -name compile.flow.enable_rtl_multibit_banking -value true
		set_app_options -name compile.flow.enable_rtl_multibit_debanking -value false
		set_app_options -name compile.flow.enable_second_pass_multibit_banking -value true
		set_app_options -name compile.seqmap.prefer_registers_with_multibit_equivalent -value true
	}
}


bbappend sif.fc.ExecuteStagePreCallback {
	###For improving the MBIT %###
	if { (${::STAGE} == "placeopt") } {
	    set_app_options -name multibit.banking.maximum_allowable_distance -value 75 
	}
}
######################################


###To improve clock latency & skew from kishor babu secip###
bbappend pnr.fc.ClockBuildClockPreCallback {
        if { ${::STAGE} == "clock" } {
    		##derive auto exception, CTS-967
    		set_app_options -list {cts.common.auto_exception_disable_self_arc true}
    		set_app_options -name cts.common.auto_exception_disable_parallel_arc -value true
    		reset_app_options cts.common.auto_skew_target_clock_period_percentage
    		set_app_options -name cts.common.enable_auto_skew_target_for_local_skew -value false
    		set_app_options -name cts.optimize.improvement_mode_version -value EIM_20250101
    		set_app_options -list {cts.optimize.enable_improvement_mode skew}
    		set_app_options -name cts.compile.size_pre_existing_cell_to_cts_references -value true
    		set_app_options -name cts.icg.latency_driven_cloning -value true
    		set_app_options -name cts.compile.enable_cell_relocation -value all
    		##for CTS-080 warning
    		set_app_options -name cts.buffering.ignore_dc_generic -value true
    		set all_other_modes [remove_from_collection [get_modes *]  [get_modes func.*cworst_ccworst_t]]
    		set_clock_tree_options -copy_exceptions_across_modes -from_mode func.*cworst_ccworst_t -to_mode [get_object_name $all_other_modes]
    		##set_clock_balance_points -balance_points [get_pins -hier -phys */CHAIN_lockup_latch*/E] -consider_for_balancing false
			
			if { [sizeof_collection [get_pins -hier -phys */clk_incheckpin*]] } {
    		set save_mode [get_object_name [current_mode]]
    		foreach_in_collection e [get_mode] {
    		    current_mode $e
    		    puts "Setting balance point false for clk_incheckpoint1 for mode [get_object_name $e]"
    		    set_disable_timing [get_lib_timing_arcs -from [get_lib_pins -of_objects [get_pins -hier -phys */clk_incheckpin*]] -filter "sense=~*clock_tree*"]
    		}
    		current_mode $save_mode
			}
	}
}
###


bbset pnr.fc.EnableNwellPinVL        {0}                                                              {# No Comment}  
bbset pnr.fc.SecondaryPGRouteoptRuntimeFix {0}                                                              {# No Comment}  
bbset pnr.MBFFExcludeRegsWithExceptions {true}                                                          {To exclude the mbit merging on cells with exceptions}
bbset pnr.placeopt.HoldAreaBudgeting {enhanced}  
bbset pnr.fc.SecondaryPGSearchDistance {20}
#Check bob default
bbset pnr.SwapNonClkCellsToClkCells  {1}                                                              {# No Comment}  
bbset pnr.clockopt.FixSequentialCellsFC {1}                                                              {# No Comment}  
bbset pnr.clockopt.FixClockRoutesFC  {1}                                                              {# No Comment} 



bbset pnr.EnableDataToDataChecks     {true}                                                           {Enable data to data checks for optDesign|timeDesign}
bbset pnr.OverrideNdr                {false}                                                          {In FC overrride NDR}
bbset pnr.HonorDontTouchTieCells     {true}                                                           {Honor don't touch attribute on macros/cell pins when adding tie cells}
bbset pnr.BlockPGPinsToEdgeDistance  {2.0}                                                            {Max distance from block edge to extend PG pins}
bbset pnr.BumpLayer                  {sRDL}                                                           {Bump Layer for the technology}
bbset pnr.BumpPhysicalPinsExtend     {1}                                                              {Length to extend bump on all sides to create physical pins}
bbset pnr.BumpPhysicalPinLayer       {sRDL}                                                           {Layer to create physical pins for bump}
#chECK
bbset pnr.EnableM0Routing            {1}                                                              {Enable M0 routing}
bbset pnr.EnableBumpLayerBlockages   {0}                                                              {Enable the bump layer blockages if bump definitions are missing}
#bbset pnr.EnablePrimePower           {0}                                                              {To enable Indesign Prime Power Flow for Pnr}
bbset pnr.FlowEffort                 {standard}                                                       {set the flow Effort to express|standard|extreme Default:extreme}
#cHECK 
bbset pnr.TargetSkew                 {100}                                                              {Default skew target}
bbset pnr.EnableActivityAwareOptFlow {0}                                                              {Enable Activity aware design optimization}
#Temp
bbset pnr.setup.InputNetlist         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/synth/outs/ufs_top.final.v.gz} {Input synthesized gate netlist}
bbset pnr.setup.InputDEFFile         {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/collaterals_M3/setup.def} {Input DEF from physical synthesis}
bbset pnr.setup.InputUPFFile         {../synth/outs/[bbget .info.BLOCK].final.upf}                    {Design UPF file for P&R}
bbset pnr.setup.InputMMMCFile        {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/invs_libgen/outs/mmmc.tcl} {MMMC output file from libgen}
bbset pnr.setup.InputLEFListFile     {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/LAJ/UFS_3.2/run/FC_f/main/syn/invs_libgen/outs/lef.list} {path to lef.list file}

bbset pnr.placeopt.MBFFMergeTimingEffort {high}                                                           {Set MBF merge effort low/medium/high}
bbset pnr.placeopt.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
#Check
bbset pnr.placeopt.EnableROIBasedMBFF {0}                                                              {Enable ROI multi bit flop banking optimization}
bbset pnr.placeopt.PlaceCoarseAutoDensityControl {enhanced}                                                       {Enable coarse place auto density coontrol. Valid values:0 1 ENHANCED FALSE TRUE}
bbset pnr.placeopt.PlaceGlobalTimingEffort {medium}                                                         {Level of effort for timing driven global place. value=medium|high}
bbset pnr.placeopt.PlaceGlobalPowerDrivenEffort {high}                                                           {Effort mode for place_global_clock_power_driven}
bbset pnr.placeopt.PlaceEcoMaxDistance {0}                                                              {specify max distance (in micron) for refinePlace ECO mode}
bbset pnr.placeopt.PlaceEnablePowerDriven {true}                                                           {Enable Power driven placement. value ={true|false} }
bbset pnr.placeopt.PlacePowerDrivenEffort {high}                                                           {Set Power driven placement effort. value ={standard|high}}
bbset pnr.placeopt.PlaceEnableClockGateAware {false}                                                          {Enable clock gate aware placement. value ={true|false}}
bbset pnr.placeopt.PowerEffort       {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.placeopt.EnableUltraHighPowerOpt {0}                                                              {Enable ultra high power optimization in Innovus at placeopt}
bbset pnr.placeopt.EnableDpx         {false}                                                          {Enable Distributed Processing}
bbset pnr.placeopt.EnableNRBasedSPGR {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.placeopt.EnableMeshSPGR    {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.placeopt.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.placeopt.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.placeopt.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.clock.MaxFanout            {32}                                                             {Default max fanout}
bbset pnr.clock.MaxCapacitance       {0.1}                                                            {Default max capacitance}
bbset pnr.clock.MaxTransition        {70ps}                                                           {Default max transition}
bbset pnr.clock.MaxTransitionOnLeaf  {0.030}                                                          {Max transition set on Leaf for CTS}
bbset pnr.clock.MaxTransitionOnTop   {0.045}                                                          {max transition set on Top for CTS}
bbset pnr.clock.MaxTransitionOnTrunk {0.045}                                                          {Max transition set on Trunk for CTS}
bbset pnr.clock.RoutingTopMinFanout  {750}                                                            {Default routing_top_min_fanout ccopt property value}
bbset pnr.clock.ClockTransPercent    {0}                                                              {Percentage of clock transition}
bbset pnr.clock.DataTransPercent     {0}                                                              {Percentage of data transition}
bbset pnr.clock.EnableCellPadding    {1}                                                              {Enable cell padding}
bbset pnr.clock.CellTopPadding       {1}                                                              {Enable cell padding on the top}
bbset pnr.clock.CellBottomPadding    {1}                                                              {Enable cell padding in the bottom}
#Check
bbset pnr.clock.CellLeftPadding      {6}                                                              {Enable cell padding on the left}
bbset pnr.clock.CellRightPadding     {6}                                                              {Enable cell padding on the right}
bbset pnr.clock.CCDOptMaxAllowedDelay {0.050}                                                          {Early clock optimization max allowed delay}
bbset pnr.clock.CCDOptMinAllowedDelay {0.050}                                                          {Early clock optimization min allowed delay}
bbset pnr.clock.PowerEffort          {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.clock.CCOptPowerEffort     {standard}                                                       { Specifies the effort to reduce the dynamic and leakage power. value={standard|high}}
bbset pnr.clock.EnableMBFFFlow       {1}                                                              {Enable multi bit flop banking optimization}
#Check
bbset pnr.clock.MBFFMode             {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.clock.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.clock.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.clock.EnableNRBasedSPGR    {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.clock.EnableMeshSPGR       {0}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.clock.MeshSPGR.IgnoreDRC   {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.clock.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.clock.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.clock.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
#Check 
bbset pnr.clock.FixAONInstances      {1}                                                              {Fix AON instances after secPG}
bbset pnr.clock.EnableSequentialCRR  {false}                                                          {Enable Sequential Restructuring settings}
#Check
bbset pnr.clockopt.EnableSetupFix    {0}                                                              {Enable setup fix in clockopt}
bbset pnr.clockopt.HoldFixThreshold  {-0.3}                                                           {Specify hold fix threshold value}
bbset pnr.clockopt.HoldFixTargetSlack {-0.030}                                                         {Specify hold fix target value}
bbset pnr.clockopt.AutoViewHoldTargetSlack {0}                                                              {Specify Auto view hold fix target value for post-cts}
bbset pnr.clockopt.HoldFixIgnorePathGroups {INPUT, OUTPUT, IN2OUT}                                          {Path groups excluded from hold fix }
bbset pnr.clockopt.FixAllFlopsBeforeRouteOpt {false}                                                          {Switch to fix the timing for flops before routeopt}
bbset pnr.clockopt.PowerEffort       {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.clockopt.EnableMBFFFlow    {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.clockopt.MBFFMode          {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.clockopt.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.clockopt.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
#Check
bbset pnr.clockopt.EnableVoltageOpt  {false}                                                          {Enable volatge based optimization}
bbset pnr.clockopt.EnableNRBasedSPGR {0}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.clockopt.EnableMeshSPGR    {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.clockopt.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.clockopt.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.clockopt.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.clockopt.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.clockopt.FixAONInstances   {0}                                                              {Fix AON instances after secPG}

bbset pnr.route.ResetRouteModeSettings {false}                                                          {To reset all NanoRoute settings to default}
bbset pnr.route.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization}
bbset pnr.route.CCDOptMaxAllowedDelay {0.050}                                                          {Early clock optimization max allowed delay}
bbset pnr.route.CCDOptMinAllowedDelay {0.050}                                                          {Early clock optimization min allowed delay}
bbset pnr.route.CCDEffort            {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.route.EnableMBFFFlow       {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.route.MBFFMode             {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.route.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.route.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
#Check
bbset pnr.route.EnableViaOptimization {1}                                                              {Enable via optimization}
bbset pnr.route.EnableRouteWithSiDriven {true}                                                           {Enable si driven routing}
bbset pnr.route.EnableRouteWithTimingDriven {true}                                                           {Enable timing driven routing}
#Check
bbset pnr.route.EnableViaOpt         {false}                                                          {Enable NanoRoute settings to control viaOpt}
bbset pnr.route.EnableTrackOpt       {false}                                                          {Enable trackOpt switch for routeDesign}
bbset pnr.route.EnableClockSourceLatencyOverride {false}                                                          {Set Clock Latency based on PostCtsClockSourceLatency value}
#This might affect GSPAN
bbset pnr.route.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.route.EnableMeshSPGR       {0}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.route.MeshSPGR.IgnoreDRC   {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.route.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.route.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.routeopt.EnableViaOptimization {0}                                                              {Enable via optimization}
bbset pnr.routeopt.EnableViaPillarOptimization {0}                                                              {Enable via pillar optimization}
bbset pnr.routeopt.EnableAntennaFix  {1}                                                              {Enable antenna fixing}
bbset pnr.routeopt.EnableHoldFix     {1}                                                              {Enable hold fixing}
bbset pnr.routeopt.HoldFixThreshold  {-0.3}                                                           {Specify hold fix threshold value}
#CHeck stick to default
bbset pnr.routeopt.HoldFixTargetSlack {-0.010}                                                         {Specify hold fix target value}
bbset pnr.routeopt.AutoViewHoldTargetSlack {0}                                                              {Specify Auto view hold fix target value for post-cts}
bbset pnr.routeopt.HoldFixIgnorePathGroups {INPUT, OUTPUT, IN2OUT}                                          {Path groups excluded from hold fix}
bbset pnr.routeopt.PowerEffort       {high}                                                            { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.routeopt.EnableMBFFFlow    {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.routeopt.MBFFMode          {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.routeopt.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.routeopt.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.routeopt.EnableCCDOptimization {0}                                                              {Enable concurrent clock data optimization}
bbset pnr.routeopt.CCDOptMaxAllowedDelay {0.050}                                                          {Early clock optimization max allowed delay}
bbset pnr.routeopt.CCDOptMinAllowedDelay {0.050}                                                          {Early clock optimization min allowed delay}
bbset pnr.routeopt.CCDEffort         {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.routeopt.EnableAgressivePowerReclaimOpt {0}                                                              {Enable OptMode Settings for agressive area optmization}
#Check
bbset pnr.routeopt.EnableBoundaryFlopSkew {0}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.routeopt.IncrementalOptFlowEffort {extreme}                                                        {set the flow Effort for Incremental route optimization}
bbset pnr.routeopt.EnableIncrementalOpt {0}                                                              {Enable incremental optimization for both setup and hold fix}
bbset pnr.routeopt.EnableIncrSetupFix {0}                                                              {Enable incremental setup optimization}
bbset pnr.routeopt.EnableIncrHoldFix {0}                                                              {Enable incremental hold optimization}
bbset pnr.routeopt.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.routeopt.MeshSPGR.EnableEcoRoute {0}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.routeopt.NRBasedSPGR.EnableEcoRoute {0}                                                              {Enable eco route post nr spgr}
bbset pnr.routeopt.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.routeopt.FCEnableCNODOpt   {0}                                                              {CNOD leakage optimization flow for FC}




##### ignore for innovus
bbset pnr.routeoptdesign.SwitchingActivity { sequential 0.2 global 0.2 macro 0.2 clock 0.2 input 0.2}       {Switching activity for EM fixing}
bbset pnr.routeoptdesign.TuneEMTFlowSA {false}                                                          {Tune switching activities for EMT flow }
bbset pnr.routeoptdesign.EnableDRCCleanup {1}                                                              {Enable DRC cleanup}
bbset pnr.routeoptdesign.EnableViaOptimization {0}                                                              {Enable via optimization}
bbset pnr.routeoptdesign.EnableViaPillarOptimization {0}                                                              {Enable via pillar optimization}
bbset pnr.routeoptdesign.EnableAntennaFix {1}                                                              {Enable antenna fixing}
bbset pnr.routeoptdesign.EnableHoldFix {1}                                                              {Enable hold fix}
bbset pnr.routeoptdesign.HoldFixThreshold {-0.6}                                                           {Specify hold fix threshold value}
bbset pnr.routeoptdesign.HoldFixTargetSlack {-0.01}                                                          {Specify hold fix target value}
bbset pnr.routeoptdesign.AutoViewHoldTargetSlack {0}                                                              {Specify Auto view hold fix target value for post-cts}
bbset pnr.routeoptdesign.HoldFixIgnorePathGroups {INPUT, OUTPUT, IN2OUT}                                          {Path groups excluded from hold fix}
bbset pnr.routeoptdesign.PowerEffort {high}                                                           { Specifies the effort to reduce the dynamic and leakage power. value={none|low|high}}
bbset pnr.routeoptdesign.EnableEPBA  {0}                                                              {Enable EPBA based optimization for routeoptdesign step}
bbset pnr.routeoptdesign.EnableMBFFFlow {1}                                                              {Enable multi bit flop banking optimization}
bbset pnr.routeoptdesign.MBFFMode    {true}                                                           {set Mbit Mode. true/false/spiltOnly/mergeOnly}
bbset pnr.routeoptdesign.MBFFMergeTimingEffort {low}                                                            {Set MBF merge effort low/medium/high}
bbset pnr.routeoptdesign.MBFFSplitTimingEffort {medium}                                                         {Set MBF split effort low/medium/high}
bbset pnr.routeoptdesign.EnableCCDOptimization {1}                                                              {Enable concurrent clock data optimization}
bbset pnr.routeoptdesign.CCDOptMaxAllowedDelay {0.300}                                                          {Early clock optimization max allowed delay}
bbset pnr.routeoptdesign.CCDOptMinAllowedDelay {0.005}                                                          {Early clock optimization min allowed delay}
bbset pnr.routeoptdesign.CCDEffort   {standard}                                                       {Specify CCD effort value={none|standard|extreme}}
bbset pnr.routeoptdesign.EnableAgressivePowerReclaimOpt {0}                                                              {Enable OptMode Settings for agressive area optmization}
bbset pnr.routeoptdesign.EnableBoundaryFlopSkew {1}                                                              {Allow tool to perform skew for boundary flops}
bbset pnr.routeoptdesign.IncrementalOptFlowEffort {extreme}                                                        {set the flow Effort for Incremental route optimization}
bbset pnr.routeoptdesign.EquivalentWaveformModel {propagation}                                                    {Controls the equivalent waveform model to be used}
bbset pnr.routeoptdesign.EnableNRBasedSPGR {1}                                                              {Enable NanoRouteBased SPG Routing}
bbset pnr.routeoptdesign.EnableMeshSPGR {1}                                                              {Enable Mesh Based SPG Routing}
bbset pnr.routeoptdesign.MeshSPGR.IgnoreDRC {0}                                                              {Ignore DRC while doing performing mesh based routing}
bbset pnr.routeoptdesign.MeshSPGR.EnableEcoRoute {1}                                                              {Enable ecoRoute for drc fixing}
bbset pnr.routeoptdesign.NRBasedSPGR.EnableEcoRoute {1}                                                              {Enable eco route post nr spgr}
bbset pnr.routeoptdesign.MeshSPGR.InsertPrimaryPowerVia {0}                                                              {Add power vias on SPG pins with same same supply as primary supply}
bbset pnr.routeoptdesign.FixAONInstances {1}                                                              {Fix AON instances after secPG}
bbset pnr.routeoptdesign.EnablePOCVSlewVariation {true}                                                           {Enable POCV slew variation}
bbset pnr.routeoptdesign.EnablePOCVConstraintVariation {true}                                                           {Enable POCV constraint variation}
bbset pnr.routeoptdesign.KeepEmptyModules {0}                                                              {Variable to control empty modules for hierarchial designs. Default 0}
bbset pnr.routeoptdesign.SkipUniquify {0}                                                              {Variable to control uniquification for hierarhcial designs. Default 0}
bbset pnr.routeoptdesign.WritePortTiming {0}                                                              {Write port timing information}
bbset pnr.routeoptdesign.GlitchPowerOptimization.XReplayPreTCL {[bbget .info.REPO_TOP]/cad/pd-tools/sif/tcl/innovus/pre_xreplay.tcl} {XReplay pre sutup files}
bbset pnr.routeoptdesign.EnablePostRodDrcFix {false}                                                          {Run drc fix post rod}
bbset pnr.routeoptdesign.ResetRouteModeSettings {false}                                                          {To reset all NanoRoute settings to default}
bbset pnr.routeoptdesign.EnableRouteWithSiDriven {true}                                                           {Enable si driven routing}
bbset pnr.routeoptdesign.EnableRouteWithTimingDriven {true}                                                           {Enable timing driven routing}
bbset pnr.routeoptdesign.EnableViaOpt {false}                                                          {Enable NanoRoute settings to control viaOpt}
bbset pnr.routeoptdesign.EnableTrackOpt {true}                                                           {Enable trackOpt switch for routeDesign}
bbset pnr.routeoptdesign.EnableTDTA  {1}                                                              {Enable TDTA feature for routedesign -trackopt}
bbset pnr.routeoptdesign.EnableSetupFix {1}                                                              {Enable setup fix} 

######### mmmc settings ##############
bbns mmmc {
    bbns vdomain {
        bbset vdomains "VDDQ12_LSIOE VDDQ08_LSIOE VDDQ04_LSIOE VDD_AMB VVDD_LSIO_E VDD_AOSS_OD_LSIOE PADSS_LSIOE_BK_ESDB_cut1 PADSS_LSIOE_BK_ESD12_cut1 PADSS_LSIOE_BK_ESD12B_cut1"
	    bbns VDDQ12_LSIOE {
	    	bbset rail  "VDDQ12_LSIOE$"
            bbset DisableVoltageDelta {True}
	    }
	    bbns VDDQ08_LSIOE {
	    	bbset rail  "VDDQ08_LSIOE$"
            bbset DisableVoltageDelta {True}
	    }
            bbns VDDQ04_LSIOE {
	    	bbset rail  "VDDQ04_LSIOE$"
            bbset DisableVoltageDelta {True}
	    }
	    bbns VDD_AOSS_OD_LSIOE {
	    	bbset rail  "VDD_AOSS_OD_LSIOE$"
	    }
	    bbns VDD_AMB {
	    	bbset rail  "VDD_AMB$"
	    }
	    bbns VVDD_LSIO_E {
	    	bbset rail  "VVDD_LSIO_E$"
	   }
	    bbns PADSS_LSIOE_BK_ESDB_cut1 {
	    	bbset rail  "PADSS_LSIOE_BK_ESDB_cut1$"
            	bbset DisableVoltageDelta {True}
	    }
	    bbns PADSS_LSIOE_BK_ESD12_cut1 {
	    	bbset rail  "PADSS_LSIOE_BK_ESD12_cut1$"
            	bbset DisableVoltageDelta {True}
	    }
	    bbns PADSS_LSIOE_BK_ESD12B_cut1 {
	    	bbset rail  "PADSS_LSIOE_BK_ESD12B_cut1$"
            	bbset DisableVoltageDelta {True}
	    }

    }
    bbns scenarios {
        bbset constraints {
            {apply "*.ssgnp-NM-*"  {VVDD_LSIO_E 0p675}  {VDD_AMB 0p675} {VDD_AOSS_OD_LSIOE 0p675} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
            {apply "*.ssgnp-UD-*"  {VVDD_LSIO_E 0p585}  {VDD_AMB 0p585} {VDD_AOSS_OD_LSIOE 0p585} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
            {apply "*.ssgnp-SUD-*" {VVDD_LSIO_E 0p540}  {VDD_AMB 0p540} {VDD_AOSS_OD_LSIOE 0p540} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
	    {apply "*.ssgnp-UUD-*" {VVDD_LSIO_E 0p475}  {VDD_AMB 0p475} {VDD_AOSS_OD_LSIOE 0p475} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
	    {apply "*.ssgnp-OD-*"  {VVDD_LSIO_E 0p765}  {VDD_AMB 0p765} {VDD_AOSS_OD_LSIOE 0p765} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
	    {apply "*.ffgnp-NM-*"  {VVDD_LSIO_E 0p825}  {VDD_AMB 0p825} {VDD_AOSS_OD_LSIOE 0p825} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
            {apply "*.ffgnp-UD-*"  {VVDD_LSIO_E 0p715}  {VDD_AMB 0p715} {VDD_AOSS_OD_LSIOE 0p715} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
            {apply "*.ffgnp-SUD-*" {VVDD_LSIO_E 0p660}  {VDD_AMB 0p660} {VDD_AOSS_OD_LSIOE 0p660} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
            {apply "*.ffgnp-UUD-*" {VVDD_LSIO_E 0p561}  {VDD_AMB 0p561} {VDD_AOSS_OD_LSIOE 0p561} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
	    {apply "*.tt-NMP-*" {VVDD_LSIO_E 0p750}  {VDD_AMB 0p750} {VDD_AOSS_OD_LSIOE 0p750} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
	    {create "*.*"}
       }
    }
}

bbns mmmc {
    bbns mode {
        bbset modes "func scan"    {# all modes that will be created. This variable structure need follow BBMmmc.py structure}
        bbns func {
            bbset pnrSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.mission.tcl}
            bbset synSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.mission.tcl}
        }
 	bbns scan {
            bbset pnrSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.shift.tcl}
            bbset synSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.shift.tcl}
        }	
}
}

######### Scenarios###################
bbset syn.scenarios.Scenarios {func.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst_t func.ssgnp-UD-0-cworst_ccworst_t func.ssgnp-UD-125-rcworst_ccworst_t func.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-UUD-125-rcworst_ccworst_t shift.ssgnp-NM-0-cworst_ccworst_t shift.ssgnp-UD-125-rcworst_ccworst_t func.tt-NMP-85-cworst_ccworst_t func.ffgnp-NM-125-rcworst_ccworst func.ffgnp-NM-m25-cbest_ccbest func.ssgnp-UUD-0-rcworst_ccworst shift.ffgnp-NM-125-rcworst_ccworst shift.ssgnp-NM-m25-cworst_ccworst shift.ssgnp-UUD-0-cworst_ccworst func.ssgnp-SUD-0-cworst_ccworst_t func.ssgnp-UD-0-cworst_ccworst func.ssgnp-OD-0-cworst_ccworst_t func.ssgnp-OD-0-cworst_ccworst}

bbset syn.scenarios.status.Default   {
    {func.tt-NMP-85-cworst_ccworst_t {leakage dynamic active max_trans max_cap min_cap}}
    {func.ssgnp-NM-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-NM-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-UD-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-UD-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}} 
    {func.ssgnp-UUD-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-UUD-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {shift.ssgnp-NM-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {shift.ssgnp-UD-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ffgnp-NM-125-rcworst_ccworst {hold active max_trans max_cap}}
    {func.ffgnp-NM-m25-cbest_ccbest  {hold active max_trans max_cap }}
    {func.ssgnp-UUD-0-cworst_ccworst {hold active max_trans max_cap}}
    {func.ssgnp-UD-0-cworst_ccworst {hold active max_trans max_cap}}
    {shift.ffgnp-NM-125-rcworst_ccworst {hold active}}
    {shift.ssgnp-NM-m25-cworst_ccworst {hold active}}
    {shift.ssgnp-UUD-0-cworst_ccworst {hold active}} 
    {func.ssgnp-SUD-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-OD-0-cworst_ccworst_t {setup}}
    {func.ssgnp-OD-0-cworst_ccworst {hold}}
}

bbset syn.scenarios.status.Floorplan   {
        {func.ssgnp-NM-0-cworst_ccworst_t {setup active max_trans max_cap }}
	{func.ffgnp-NM-m25-cbest_ccbest {hold active}}
}
########## libgen ####################
bbset libgen.syn.EnableExtraNDMGeneration {1}
bbset syn.ExtraLibs.Enable           {True}

bbset syn.ExtraLibs.libgen.lef {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708.lef
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_DTCD/N02P_DTCD_M13_v1d0.lef
}

bbset syn.ExtraLibs.libgen.ccs_db  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_db/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset syn.ExtraLibs.libgen.ccs_lib  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_lib/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset syn.MacroLibraryFileInclude {fiducial|.*tphn02p_075od12gpio.*|.*tpmn02p_esd.*|.*tpmn02p_lup.*|.*PLLTS2INTQ.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5.*|.*DTCD.*}
############# Elaborate Inputs #######
bbset syn.EnableWaterMarkInsertion {true}
bbset syn.WatermarkRTLTag {LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT}
bbset syn.elaborate.SkipSDCErrorChecks {1}
bbset syn.EnablePhysicalSynthesis {0}

bbset .info.BLOCK "sswrp_lsioe"
bbset SSWRP_LSIOE_RELEASE_PROJECT_TOP "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT/fe_release"
bbset Release_area "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT/fe_release"
bbset SSWRP_LSIOE_RELEASE_PROJECT_TOP "[bbget .Release_area]"
bbset syn.elaborate.RTLParsingVars ""
bbset syn.elaborate.RTLSearchPath "[bbget .Release_area]/[bbget .info.BLOCK]/dft_rtl/"
bbset syn.elaborate.RTLFileList "[bbget .Release_area]/[bbget .info.BLOCK]/dft_rtl/synth/sswrp_lsioe.vf"
bbset syn.elaborate.InputUPFFile "[bbget .Release_area]/[bbget .info.BLOCK]/dft_upf/[bbget .info.BLOCK]/sswrp_lsioe.upf"

bbset sif.fc.ExecuteStagePreCallback {
if { ${STAGE} != "elaborate"} {
 	sif::minfo "Setting placed status to all sequential cells"
        set_attribute [get_flat_cells -quiet -of_objects [get_pins -quiet -of_objects [get_nets -quiet -hierarchical -filter "net_type==clock"]]] physical_status placed
        sif::minfo "Setting minor_change status to all clock wires"
        set_attribute [get_shapes -quiet -of_objects [get_nets -quiet -hierarchical -filter "net_type==clock"]] physical_status minor_change
        sif::minfo "Setting minor_change status to all clock vias"
        set_attribute [get_vias -quiet -of_objects [get_nets -quiet -hierarchical -filter "net_type==clock"]] physical_status minor_change
	############# IOPAD ABUT Nets #################
                set_disable_tie_insert -objects [get_pins -hierarchical -filter "(name == RTE || name == POCCTRL || name == POCCTRL18 || name == POCCTRLD) && net_name =~ *ABUT*"]
		set pad_abut_nets [get_nets u_sswrp_lsioe_aux/u_sswrp_lsioe_aon/u_lsioe_iobank/ioring/*ABUT*]
                set_dont_touch $pad_abut_nets
                set_attribute $pad_abut_nets dont_touch true
                set_attribute -objects $pad_abut_nets -name physical_status -value locked
}

if { ${STAGE} == "synthopt"} {
        foreach c [get_object_name [get_corners]] {
		 if {[regexp "\-UD\-" $c]} {
 			set volt 0.585
 		 } elseif {[regexp "\-UUD\-" $c]} {
 			set volt 0.475
 		 } elseif {[regexp "ssgnp\-NM\-" $c]} {
 			set volt 0.675
 		 } elseif {[regexp "ssgnp\-OD\-" $c]} {
 			set volt 0.765
		 } elseif {[regexp "\-SUD\-" $c]} {
 			set volt 0.54
		 } elseif {[regexp "ffgnp\-NM\-" $c]} {
 			set volt 0.825
		 } elseif {[regexp "tt\-NMP\-85" $c]} {
 			set volt 0.75
		 }
		puts "set_voltage $volt -corner [get_object_name [get_corners $c]]  -object_list [get_object_name [get_supply_nets -regexp {PADSS_LSIOE_BK_ESD12B_cut1$|PADSS_LSIOE_BK_ESD12_cut1$|PADSS_LSIOE_BK_ESDB_cut1$}]]"
		set_voltage $volt -corner [get_object_name [get_corners $c]]  -object_list [get_object_name [get_supply_nets -regexp {PADSS_LSIOE_BK_ESD12B_cut1$|PADSS_LSIOE_BK_ESD12_cut1$|PADSS_LSIOE_BK_ESDB_cut1$}]]
	}
	
}

if {${STAGE} in {synth synthopt synthdft synthdftopt}} {
set scenarios [get_object_name [all_scenarios]] 
set current_scen [current_scenario]
foreach scen $scenarios {                                                                                                                                      
	current_scenario $scen                                                                                                                                          
	puts "current_scenario is [get_object_name [current_scenario]]"
	write_sdc -output ${scen}_BEFORE.sdc
	#remove_max_transition -scenarios $scen [get_flat_pins */CP]
	remove_max_transition [get_pins -of_objects [get_cells -filter "is_sequential==true" -hierarchical ]]
	# remove_clock_uncertainty [get_pins -of_objects [get_cells -filter "is_sequential==true" -hierarchical ]]
	write_sdc -output ${scen}_AFTER.sdc
}    
current_scenario $current_scen
}
}
bbappend syn.fc.SynthDFTSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/dft_preserve_settings.tcl"
}
############# syn setup settings #####
bbset pnr.setup.InputDEFFile "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/0624_incremental_defs/sswrp_lsioe.def.gz"
bbset pnr.innovus.SetupCreateFloorplanPostProcessCallback {
	loadLefFile /google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_LUP_H_C240708/LUP_H_C240708.lef 
	set IO_BANK_INST [lindex [regsub {/ioring} [lindex [dbGet [dbGet top.insts.cell.name *POC* -p2].name -u] 0] { }] 0]
	source -e -v "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/laj_pushdown_m3v2_06172025/padframe_v1/sswrp_lsioe_padframe.tcl"
	source -e -v "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/laj_pushdown_m3v2_06172025/padframe_v1/sswrp_lsioe_PADSS_LSIOE_BK_padframe_iofill.tcl"
	source -e -v "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/laj_pushdown_m3v2_06172025/padframe_v1/source_gnc.tcl"
	source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/150425_PUSH_DOWN/my_padframe.tcl"
}
########## syn fplan settings ########
bbset pnr.floorplan.InputDatabase "[bbget info.BOB_RUN_DIR]/syn/setup/outs/[bbget info.BLOCK].enc.dat"
bbset pnr.floorplan.InsertFiducialCell {1}
bbset pnr.setup.InsertDTCDCells      {0}
bbset pnr.floorplan.EnableDenseTapRegions {1}
bbset pnr.tcic.FixFloorplan {false}
bbset pnr.floorplan.EndCapTapPG "1"
bbset pnr.floorplan.EnableExtraM1ViaNearFiducial {true}
bbset fc.ForcePSWStrategyAssociation "1"

bbset pnr.innovus.FloorplanRowsAndTracksPreCallback { 
dbset top.Fplan.isCore2Io 0
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/pb_0613_incr.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/clamp_cell_incr_blkg.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/rb_0613_incr.tcl"
addHaloToBlock -cell N02_DTCD_ALL_M13_250331 2.064 1.04 2.064 2.106
addHaloToBlock -allIOPad 0 0 2.5 0
}

bbappend pnr.innovus.PowerDomainBoundaryPreCallback {
dbset top.Fplan.isCore2Io 0
}

bbset pnr.floorplan.SVDDNets         {1}
bbset pnr.floorplan.SVDDNets {
	{PD_LSIOE_GSPAN {{179.808 1250.704 257.184 1315.548} {157.68 1237.964 257.184 1250.704}} VDD_AOSS_OD_LSIOE}
	{PD_LSIO_E {{76.944 1471.418 257.184 1856.738}} VDD_AMB}
	{PD_SSWRP_LSIO_E {{{58.128 1315.548 257.184 1471.418} {58.128 1265.6605 179.808 1315.548} {157.68 1250.7035 179.808 1265.6605} {58.128 1248.494 92.5435 1265.6605} {58.128 0.988 83.904 1248.494}} {{76.032 1958.918 257.184 1972.698} {76.032 1930.448 194.064 1958.918} {76.032 1858.948 257.184 1930.448} {76.032 1856.738 195.216 1858.948}} {{0.912 1972.698 257.184 2214.108}}} VDD_AMB}
}

bbset pnr.floorplan.VoltageAreas {PD_LSIO_E {76.944 1471.418 257.184 1856.738} PD_LSIOE_GSPAN {{179.808 1250.704 257.184 1315.548} {157.68 1237.964 257.184 1250.704}}}

bbset pnr.floorplan.TrackOffsetFile {/google/gchips/ipreleases/lajolla_soc/soc_to_sswrp_common/laj_pre_m4_06132025/0609_incremental_defs/offsets/track_offset.tcl}
bbset pnr.floorplan.PGM14M15OffsetFile {/google/gchips/ipreleases/lajolla_soc/soc_to_sswrp_common/laj_pre_m4_06132025/0624_incremental_defs/offsets/pg_offset.tcl}
bbset pnr.floorplan.PGM15VSSOffset "0.8600" 
bbset pnr.floorplan.PGM14VSSOffset "0.9400"
bbset pnr.floorplan.AlignM14M15Tracks {1}
bbset pnr.floorplan.EnableFullPGInM14M15 {1}
bbset pnr.floorplan.PushDownTrackOffsetLayers {M12 M13 M14 M15}
bbset pnr.floorplan.CustomIPM15Extension "50"
bbset pnr.floorplan.CustomIPM14Extension "50"
bbset pnr.floorplan.CoreSwitchXPitch {15.36}                                                          
bbset pnr.floorplan.CoreSwitchYPitch {4}

bbset pnr.innovus.PowerDomainBoundaryPostCallback {
deleteRow -all
dbset top.Fplan.isCore2Io 0
floorplan::generate_rows
floorplan::generate_tracks
}

bbset pnr.innovus.FloorplanSetupPostCallback { 
editSelect -type Regular
editDelete -selected
}

bbappend pnr.innovus.FloorplanCleanUpPostCallback {
foreach b {{0.01 5.59 0.038 1972.698} {0.052 5.59 0.07 1972.698} {0.052 0.988 0.07 5.59} {0.01 0.988 0.038 5.59} {0.052 1972.698 0.07 2149.056} {0.01 1972.698 0.038 2149.056}} {
    catch { deselectAll }
    catch { editSelect -area $b -net _BOUNDARY* }
    catch { editCutWire -box $b }
    catch { editSelect -type Special -net _BOUNDARY* -layer {M1 M2 M3 M4} -area $b -status {ROUTED FIXED} }
    catch { deleteSelectedFromFPlan }
}
}

bbappend pnr.innovus.FloorplanCleanUpPreCallback {
source /google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/malibu/scripts/pg_grid_iopads_conec_gdmc.tcl
PGPinConnect
SignalPinConnect
colorizePowerMesh
}

bbappend pnr.innovus.FloorplanCleanUpPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/empty_area_pb_incr.tcl"	
}

########## Hammer logic ##############
bbset pnr.floorplan.PowerSwitchHammerChainCount {4}
bbset pnr.psw.HammerChainOrAckNet {u_sswrp_lsioe_aux/u_sswrp_lsioe_aon/u_lpcm_lsio_e_wrapper/lsio_e_top_pdom_power_down_or_all_ack}

bbset pnr.floorplan.StrengthenTrickleSwitchPG  {true}
bbset pnr.floorplan.StrengthenTrickleSwitchList {HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT_474_693_148 CSW_EXTRApsoI_PD_GPU_MERCER_5_HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT_474_691_147 CSW_EXTRApsoI_PD_GPU_MERCER_5_HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT_474_689_146 CSW_EXTRApsoI_PD_GPU_MERCER_5_HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT_474_687_145 CSW_EXTRApsoI_PD_GPU_MERCER_5_HDR78XSINTCWGOOGD1BWP130HPNPN3P48CPDSVT_474_685_144}
############### syn synthopt #########

bbset syn.fc.SynthOptLogicOptoPreCallback {
puts "Sourcing extra DFT preserve settings as per : https://buganizer.corp.google.com/issues/383511775"
source -e -v "[pwd]/../../../../../repo/lsio/sswrp_lsioe/inputs/sswrp_lsioe.fc.tcl.tbc"
source -e -v "[pwd]/../../../../../repo/lsio/sswrp_lsioe/inputs/sswrp_lsioe.dft_fc.tcl"
}

bbappend sif.fc.OpenDesignPostProcessCallback {
if {${::STAGE} in {synthopt}} {
puts "sourcing upfutils.tcl file "
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/hammer_end_logic.tcl"
}
}

############# testpoint ########################
bbset syn.synthdft.InputTestPointFile    "../testpoint/outs/[bbget .info.BLOCK].test_point.rpt"
bbset syn.testpoint.BlackBoxList {GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVT}
bbset Modules.Tool.tessent {tools/mentor/tessent/2025.1-snapshot_2025.01.14_04.00_1ZV}
bbset Modules.Tool.synthdft {tools/synthdft-lajolla/3.3.0}
bbset syn.synthdftopt.SplitStage 1

bbappend syn.fc.SynthDFTOptSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/my_fc_app_options.tcl"
}

bbset syn.fc.SynthDftSettingPreCallback {
set_attr [get_lib_cells */*CKLNQZPDD*CPDLVT*] dont_use false
puts "dont_use attr on ICG :: [lsort -u [get_attr [get_lib_cells */*CKLNQZPDD*] dont_use]]"
}

bbset pnr.IOBufferExcludeNetsFile "[bbget info.BOB_RUN_DIR]/syn/synthopt/io_buffering_exclude.tcl"
################ synthdftopt ###################
bbappend syn.fc.SynthDFTOptSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/sswrp_lsioe_io_buffering.tcl"
}
########## PNR SETTINGS  #######################
bbset pnr.EnableWaterMarkInsertion {true}
bbset pnr.WatermarkRTLTag {LAJ_A0_SSWRP_LSIOE_M3_V3_R3_D1_C4_DFT}
bbset pnr.EnableHighEffortCellOpt {true}
bbset pnr.placeopt.RecreatePathGroups {1}
bbset pnr.EnableGKCNode {1}
bbset pnr.ValidGKCStages {placeopt routeopt chipfinish}
################ pnr Scenarios ##################
bbset pnr.scenarios.Scenarios	{[bbget .syn.scenarios.Scenarios]}
bbset pnr.scenarios.status.Default	{[bbget .syn.scenarios.status.Default]}
#################### pnr extra libs #################
bbset pnr.ExtraLibs.Enable           {True}
bbset pnr.ExtraLibs.libgen.lef {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708.lef
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/lef/ip_DTCD/N02P_DTCD_M13_v1d0.lef
}

bbset pnr.ExtraLibs.libgen.ccs_db  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_db/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset pnr.ExtraLibs.libgen.ccs_lib  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-06-17/ccs_lib/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset pnr.MacroLibraryFileInclude {fiducial|.*tphn02p_075od12gpio.*|.*tpmn02p_esd.*|.*tpmn02p_lup.*|.*PLLTS2INTQ.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5.*|.*DTCD.*}
######################## dont use settings ####################
bbconcat pnr.DontUseCells { restrict(SvtCells) }
bbconcat pnr.DontUseCells { restrict(MyHighHoldFlopListCells) }
bbconcat pnr.DontUseCells { restrict(NoMbitEquivalentFlopCells)}
bbconcat pnr.DontUseCells { restrict(UlvtCells) }
bbconcat pnr.DontUseCells { restrict(UlvtllCells) }
bbconcat pnr.DontUseCells { restrict(AllElvtCells) }
bbconcat pnr.DontUseCells { restrict(NppnCells) }
bbconcat pnr.DontUseCells { restrict(PnnpCells) }
bbconcat pnr.DontUseCells { restrict(PpnnCells) }
bbconcat pnr.DontUseCells { restrict(D14PlusCells) }
bbconcat pnr.DontUseCells { restrict(D16PlusCells) }
bbconcat pnr.DontUseCells { restrict(D18PlusCells) }
bbconcat pnr.DontUseCells { restrict(D20PlusCells) }
bbconcat pnr.DontUseCells { restrict(AllD24PlusCells) }
bbconcat pnr.DontUseCells { restrict(D32PlusCells) }
bbconcat pnr.DontUseCells { restrict(D48PlusCells) }
bbconcat pnr.DontUseCells { restrict(MyAllD0P7Cells) }
bbconcat pnr.DontUseCells { restrict(MyAllD0P8Cells) }
bbconcat pnr.DontUseCells { restrict(MyLeakageCells) }
bbconcat pnr.DontUseCells { allow(MyISOCells) }
bbconcat pnr.DontUseCells { allow(MyLVLLCells) }

############# Path group ######################
bbset pnr.PathGroupOverrides         {INPUT {effortLevel low}  IN2OUT {effortLevel low}
                                      OUTPUT {effortLevel low} REG2REG {effortLevel high} REG2MEM {effortLevel high}
                                      MEM2REG {effortLevel high} REG2ICG {effortLevel high} IN2ICG {effortLevel low}}
############ placeopt  ###############

bbset pnr.fc.PlaceOptSetupPostCallback {
#### Added for safer side due to observed CD paths in synth DB
puts "path groups are :: [get_object_name [get_path_groups *]]"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
}

###############  clock  ##############
################### clockopt ################

bbappend pnr.fc.ClockOptSetupCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
}

################# routeopt ###########

bbappend pnr.fc.RouteOptSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
}

bbset pnr.placeopt.InputDatabase {/google/gchips/workspace/redondo-asia/tpe/user/askakshay/PDCompiler/lsioe/run/t1/main/syn/synthdftopt/outs/sswrp_lsioe.ndm}

# END
