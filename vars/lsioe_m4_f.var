###########################################################
bbrecipe_apply setup_fc
bbrecipe_apply synthdft_fc
bbset syn.Stages {libgen elaborate synth floorplan synthopt testpoint synthdft synthdftopt} 
###########################################################

####################################
##Physical Aware synthesis is disabled
bbset syn.EnablePhysicalSynthesis 0
bbset syn.elaborate.InputDEFFile {} 
#####################################

#########################################
############DONT USE LISTS###############
#########################################
bbconcat syn.DontUseCells { restrict(SvtCells) }
bbconcat syn.DontUseCells { restrict(UlvtCells) }
bbconcat syn.DontUseCells { restrict(UlvtllCells) }
bbconcat syn.DontUseCells { restrict(AllElvtCells) }
bbconcat syn.DontUseCells { restrict(NppnCells) }
bbconcat syn.DontUseCells { restrict(PnnpCells) }
bbconcat syn.DontUseCells { restrict(PpnnCells) }
bbconcat syn.DontUseCells { restrict(D14PlusCells) }
bbconcat syn.DontUseCells { restrict(D16PlusCells) }
bbconcat syn.DontUseCells { restrict(D18PlusCells) }
bbconcat syn.DontUseCells { restrict(D20PlusCells) }
bbconcat syn.DontUseCells { restrict(AllD24PlusCells) }
bbconcat syn.DontUseCells { restrict(D32PlusCells) }
bbconcat syn.DontUseCells { restrict(D48PlusCells) }
bbconcat syn.DontUseCells { restrict(NoMbitEquivalentFlopCells) }
bbconcat pnr.DontUseCells { restrict(UlvtllCells) }
bbconcat pnr.DontUseCells { restrict(SvtCells) }
bbconcat pnr.DontUseCells { restrict(UlvtCells) }
bbconcat pnr.DontUseCells { restrict(AllElvtCells) }
bbconcat pnr.DontUseCells { restrict(NppnCells) }
bbconcat pnr.DontUseCells { restrict(PnnpCells) }
bbconcat pnr.DontUseCells { restrict(PpnnCells) }
bbconcat pnr.DontUseCells { restrict(D14PlusCells) }
bbconcat pnr.DontUseCells { restrict(D16PlusCells) }
bbconcat pnr.DontUseCells { restrict(D18PlusCells) }
bbconcat pnr.DontUseCells { restrict(D20PlusCells) }
bbconcat pnr.DontUseCells { restrict(AllD24PlusCells) }
bbconcat pnr.DontUseCells { restrict(D32PlusCells) }
bbconcat pnr.DontUseCells { restrict(D48PlusCells) }
bbconcat pnr.DontUseCells { restrict(NoMbitEquivalentFlopCells) }
##########################################

#########################################
###### SCENARIOS : ACTIVE ###############
#########################################
#
#
#Shouldn't corners be given by block owners?


bbset syn.scenarios.Scenarios        {func.tt-NMP-85-cworst_ccworst_t func.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst_t shift.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-SUD-0-cworst_ccworst_t func.ssgnp-UD-0-cworst_ccworst_t shift.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-UD-125-rcworst_ccworst_t  }

bbset pnr.scenarios.Scenarios        {func.tt-NMP-85-cworst_ccworst_t func.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst func.ssgnp-NM-m25-cworst_ccworst func.ssgnp-NM-m25-rcworst_ccworst func.ffgnp-NM-125-rcworst_ccworst func.ffgnp-NM-125-cworst_ccworst func.ffgnp-NM-m25-rcworst_ccworst func.ffgnp-NM-m25-cworst_ccworst shift.ssgnp-NM-0-cworst_ccworst_t shift.ffgnp-NM-125-rcworst_ccworst shift.ssgnp-NM-m25-cworst_ccworst shift.ffgnp-NM-125-cworst_ccworst shift.ffgnp-NM-m25-rcworst_ccworst func.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-SUD-0-cworst_ccworst_t func.ssgnp-UUD-125-cworst_ccworst func.ffgnp-NM-125-cbest_ccbest func.ffgnp-NM-125-rcbest_ccbest func.ssgnp-UUD-0-rcworst_ccworst func.ssgnp-UD-0-cworst_ccworst_t shift.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-UUD-0-rcworst_ccworst func.ssgnp-UUD-0-cworst_ccworst func.ssgnp-UD-125-rcworst_ccworst_t shift.ssgnp-NM-125-cworst_ccworst_t shift.ssgnp-UUD-0-cworst_ccworst}


bbset syn.scenarios.status.Default {
	{func.tt-NMP-85-cworst_ccworst_t         {leakage dynamic active}}
	{func.ssgnp-NM-0-cworst_ccworst_t        {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UUD-0-cworst_ccworst_t       {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UD-0-cworst_ccworst_t        {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UD-125-rcworst_ccworst_t     {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-NM-0-cworst_ccworst_t       {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-UUD-0-cworst_ccworst_t      {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-NM-125-cworst_ccworst_t     {setup active max_trans max_cap min_cap}}
}
 
bbset pnr.scenarios.status.Default {
	{func.tt-NMP-85-cworst_ccworst_t         {leakage dynamic active}}
	{func.ssgnp-NM-0-cworst_ccworst_t        {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UUD-0-cworst_ccworst_t       {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UD-0-cworst_ccworst_t        {setup active max_trans max_cap min_cap}}
	{func.ssgnp-UD-125-rcworst_ccworst_t     {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-NM-0-cworst_ccworst_t       {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-UUD-0-cworst_ccworst_t      {setup active max_trans max_cap min_cap}}
	{shift.ssgnp-NM-125-cworst_ccworst_t     {setup active max_trans max_cap min_cap}}
} 

#########################################


#################
## To disable/enable 0/1 exit on link error
bbset syn.elaborate.ExitOnLinkError {1}
##To take GSPAN & NONGSPAN IO BUF placement & respect voltage areas - the add_buffer happens at syn/synthdftopt##
##By default this below var was 0 and it caused LS_INST_MISSING violations##
bbset fc.AddBufferRespectVoltageArea 1
####When this below var is high then it brings congestion - so made it leakage
bbset syn.TotalPowerOptimizationEffort {leakage}  {Effort for FC power optimization (standard|high|ultra|none|leakage)}
bbset pnr.TotalPowerOptimizationEffort {leakage}  {Effort for FC power optimization (standard|high|ultra|none|leakage)}
##Enabling as per : https://drive.google.com/file/d/1v7St97cGmaNbCrKoiyEkNmIMeP0BTUd-/view?usp=sharing&resourcekey=0--a-L3p12hOlZWPjy5yz1YA ##
bbset fc.EnableMegaSwitch {1}
bbset syn.synthopt.RecreatePathGroups {1}


####
bbappend sif.fc.ExecuteStagePreCallback {
	###To disable Offset Latency Calculations on clk div clk_incheckpin###
	if { (${::STAGE} in {synthopt synthdft synthdftopt placeopt}) } {
		if { [sizeof_collection [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] ] } {
		set save_mode [get_object_name [current_mode]]  
        	foreach_in_collection e [get_mode] { 
        	    current_mode $e
        	    puts "Setting balance point false for clk_incheckpoint for mode [get_object_name $e]"
        	    set_clock_balance_points -balance_points [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] -consider_for_balancing false 
 
        	 }
    		current_mode $save_mode
		##setting dont ecgl on the clk_in & clk_incheckpins of div50 cells
		set_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency true
		get_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency > li		
		}
	}

	if { $::STAGE == "clock" } {
		if { [sizeof_collection [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] ] } {
		##Resetting dont ecgl on the clk_in & clk_incheckpins of div50 cells post placeopt
		set save_mode [get_object_name [current_mode]]  
        	foreach_in_collection e [get_mode] { 
        		current_mode $e
			set_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency false
			get_attribute [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] dont_estimate_clock_latency > li.ck
			puts "Setting balance point true for clk_incheckpoint for mode [get_object_name $e]"
        		set_clock_balance_points -balance_points [get_pins -hier -phys *SIZEONLY_clk_div50_dp/clk_incheckpin*] -consider_for_balancing true 
		}
		current_mode $save_mode
		}
	}
	###

	###For improving the MBIT %###
	if { (${::STAGE} == "synthdftopt") } {
	    set_app_options -name compile.flow.enable_multibit_debanking -value false ;
	}
	if { (${::STAGE} == "placeopt") } {
	    set_app_options -name compile.flow.enable_multibit_debanking -value true ; ### set it to true after initial_opto 
	}
	###
	
	###For Tie cell insertion during synthdftopt in FC###
	###https://b.corp.google.com/issues/391500220#comment3###
	if { (${::STAGE} == "synthdftopt") } {
		set_app_options -name opt.tie_cell.check_frontend_restrictions -value true
	}
	###	
}
####



##############################################
#############clock cell usage list############
##############################################
bbset pnr.clock.InverterCellList     {CKND3BWP130HPNPN3P48CPDULVTLL CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL CKNDHD6BWP130HPNPN3P48CPDULVTLL  DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {List of inverter cells}
bbset pnr.clock.TopInverterCellList  {CKND3BWP130HPNPN3P48CPDULVTLL CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL CKNDHD6BWP130HPNPN3P48CPDULVTLL  DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {Leaf Specific Inverter Cell List}
bbset pnr.clock.LeafInverterCellList {CKND3BWP130HPNPN3P48CPDULVTLL CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL CKNDHD6BWP130HPNPN3P48CPDULVTLL  DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {Leaf specific inverter cell list}
bbset pnr.clock.BufferCellList       {CKBDHD5BWP130HPNPN3P48CPDULVTLL DCCKBDHD6BWP130HPNPN3P48CPDULVTLL DCCKBDHD8BWP130HPNPN3P48CPDULVTLL  DCCKBDHD10BWP130HPNPN3P48CPDULVTLL DCCKBDHD12BWP130HPNPN3P48CPDULVTLL DCCKBDHD14BWP130HPNPN3P48CPDULVTLL} {List of buffer cells}
bbset pnr.clock.ICGCellList          {CKLNQD3BWP130HPNPN3P48CPDULVTLL CKLNQD4BWP130HPNPN3P48CPDULVTLL CKLNQOPTBBD4BWP130HPNPN3P48CPDULVTLL  CKLNQD5BWP130HPNPN3P48CPDULVTLL CKLNQD6BWP130HPNPN3P48CPDULVTLL CKLNQD8BWP130HPNPN3P48CPDULVTLL  CKLNQOPTBBD8BWP130HPNPN3P48CPDULVTLL CKLNQD10BWP130HPNPN3P48CPDULVTLL CKLNQOPTBBD10BWP130HPNPN3P48CPDULVTLL  CKLNQD12BWP130HPNPN3P48CPDULVTLL CKLNQOPTBBD12BWP130HPNPN3P48CPDULVTLL} {List of clock gating cells}
##############################################


#########################################
###https://buganizer.corp.google.com/issues/394850780#comment7###
####To Improve RTL banking####
#########################################
bbappend sif.fc.ExecuteStagePreCallback {
        if { (${::STAGE} in {synth synthopt synthdftopt}) } {  
		set_app_options -name compile.seqmap.identify_shift_registers -value false
		set_app_options -name compile.flow.enable_incremental_multibit_banking -value true
		set_app_options -name compile.flow.enable_multibit -value true
		set_app_options -name compile.flow.enable_multibit_debanking -value false
		set_app_options -name compile.flow.enable_rtl_multibit_banking -value true
		set_app_options -name compile.flow.enable_rtl_multibit_debanking -value false
		set_app_options -name compile.flow.enable_second_pass_multibit_banking -value true
		set_app_options -name compile.seqmap.prefer_registers_with_multibit_equivalent -value true
	}
}


bbappend sif.fc.ExecuteStagePreCallback {
	###For improving the MBIT %###
	if { (${::STAGE} == "synthdftopt") } {
	   set_app_options -name multibit.banking.maximum_allowable_distance -value 75 
	}
	if { (${::STAGE} == "placeopt") } {
	    set_app_options -name multibit.banking.maximum_allowable_distance -value 75 
	}
}
######################################


###To improve clock latency & skew from kishor babu secip###
bbappend pnr.fc.ClockBuildClockPreCallback {
        if { ${::STAGE} == "clock" } {
    		##derive auto exception, CTS-967
    		set_app_options -list {cts.common.auto_exception_disable_self_arc true}
    		set_app_options -name cts.common.auto_exception_disable_parallel_arc -value true
    		reset_app_options cts.common.auto_skew_target_clock_period_percentage
    		set_app_options -name cts.common.enable_auto_skew_target_for_local_skew -value false
    		set_app_options -name cts.optimize.improvement_mode_version -value EIM_20250101
    		set_app_options -list {cts.optimize.enable_improvement_mode skew}
    		set_app_options -name cts.compile.size_pre_existing_cell_to_cts_references -value true
    		set_app_options -name cts.icg.latency_driven_cloning -value true
    		set_app_options -name cts.compile.enable_cell_relocation -value all
    		##for CTS-080 warning
    		set_app_options -name cts.buffering.ignore_dc_generic -value true
    		set all_other_modes [remove_from_collection [get_modes *]  [get_modes func.*cworst_ccworst_t]]
    		set_clock_tree_options -copy_exceptions_across_modes -from_mode func.*cworst_ccworst_t -to_mode [get_object_name $all_other_modes]
    		##set_clock_balance_points -balance_points [get_pins -hier -phys */CHAIN_lockup_latch*/E] -consider_for_balancing false
			
			if { [sizeof_collection [get_pins -hier -phys */clk_incheckpin*]] } {
    		set save_mode [get_object_name [current_mode]]
    		foreach_in_collection e [get_mode] {
    		    current_mode $e
    		    puts "Setting balance point false for clk_incheckpoint1 for mode [get_object_name $e]"
    		    set_disable_timing [get_lib_timing_arcs -from [get_lib_pins -of_objects [get_pins -hier -phys */clk_incheckpin*]] -filter "sense=~*clock_tree*"]
    		}
    		current_mode $save_mode
			}
	}
}
###



bbset syn.TotalPowerOptimizationEffort {high}                                                          {Effort for FC power optimization (standard|high|ultra|none|leakage)}
bbset syn.Cores                      {16}                                                             {Cores for each stage}
bbset syn.RAM                        {128000}                                                         {RAM for each run}
bbset syn.ExportCores                {16}                                                             {Cores for each stage}
bbset syn.ExportRAM                  {128000}                                                         {RAM for each run}
#Eg: set_db [current_design] .lp_clock_gating_auto_path_adjust_fixed_delay [expr ${min_period} * [expr [expr ${::syn.synth.LpCGFixedDelayPercentage} / 100.0] * 1000.0]
bbset syn.IncrementalSDC             {5% uncertainity of each clock, also , clock latency on icg en paths}                                                               {Reading incremental sdc at each stage to control uncertainity}
#Enabling this will increase addl cell count. Might not be needed for smaller blocks
bbset syn.EnableSelfGating           {0}                                                              {In FC enable self gating}
bbset syn.EnableAggresiveSelfGating  {0}                                                              {In FC enable enable aggressive self gating}
bbset syn.PreventSelfGatingOnShiftRegs {0}                                                              {In FC to disable self gate logic insertion on shift registers based on coverage impact wrt power benefits}

bbset syn.EnableMultiClockGating     {true}                                                          {Enable Multi level Clock Gating}
bbset syn.EnableSequentialClockGating {true}                                                          {Enable Sequential Clock Gating}
bbset syn.EnableSeqBoundaryOpt       {true}                                                          {To enable sequential boundary optimisation}
#This is currently a genus proc, we need to implement the same in FC also
bbset syn.EnableDynamicPincap        {false}                                                          {To enable dynamic pin cap modeling}
bbset syn.synth.MBFFExcludeRegsWithExceptions {true}                                                           {To exclude the mbit merging on cells with exceptions}
bbset syn.synth.MBFFIgnoreExceptions {PATH_GROUP ANNOTATION CLOCK_LATENCY LATENCY_OFFSET}             {To ignore exceptions when banking and debanking multi-bit flops}
bbset syn.synth.MBFFIgnoreMatchSeqSyncCTRL {false}                                                          {To ignore exact match on seq control signal}
bbset syn.synth.MBFFAllowUnusedBit   {True}                                                           {To allow unused bit during mbit merging}
bbset syn.synth.EnableIsoLvlMerging  {1}                                                              {To enable multi-bit merging of power cells level shifters and isolators}
bbset syn.synth.TNSOpto              {true}                                                           {Forces the tool to consider all the endpoints for the TNS optimization}
bbset syn.synth.HardPreservesOnDFTModules {false}                                                          {To prevent complete optimisation of dft modules}

#To be experimented
bbset syn.synth.LPClockGatingMinFlops {3}                                                              {Min flops for Clock gating}
bbset syn.synth.LPClockGatingMaxFlops {16}                                                               {Max flops for LP clock gating}
bbset syn.synth.ClockGatingMaxFanout {16}                                                             {Clock gating max fanout}
bbset syn.synth.ClockGatingMinBitwidth {4}                                                              {Clock gating min bit width}
bbset syn.synth.ClockGatingNumLevels {8}                                                              {Clock gating max number of levels}

bbset syn.synth.DesignPowerEffort    {high}                                                            {Design power effort}
bbset syn.synth.LeakageToDynamicRatio {0.5}                                                            {Leakage to dynamic ratio}

bbset syn.synthopt.Cores             {32}                                                             {no of cores for the run}
bbset syn.fc.CompileAutoUngroup      {false}                                                          {FC Lec compliant optimization, auto ungroup control}
bbset syn.fc.CompileBoundaryOptimization {true}                                                           {FC Lec compliant optimization, boundary optimization control}
bbset syn.fc.CompileEnableOutputInversion {true}                                                           {FC Lec compliant optimization, output inversion control}
#pdd has less leakage, didn't give much benefit to  Suni's GDMC
#bbset syn.synth.ClockGateCellList    {CKLNQZPDD3BWP130HPNPN3P48CPDULVT CKLNQZPDD4BWP130HPNPN3P48CPDULVT CKLNQZPDD5BWP130HPNPN3P48CPDULVT CKLNQZPDD6BWP130HPNPN3P48CPDULVT  CKLNQZPDD8BWP130HPNPN3P48CPDULVT CKLNQZPDD10BWP130HPNPN3P48CPDULVT} {# No Comment}  
bbset syn.synth.ClockGateCellList    {CKLNQZPDD3BWP130HPNPN3P48CPDULVTLL CKLNQZPDD4BWP130HPNPN3P48CPDULVTLL CKLNQZPDD5BWP130HPNPN3P48CPDULVTLL CKLNQZPDD6BWP130HPNPN3P48CPDULVTLL  CKLNQZPDD8BWP130HPNPN3P48CPDULVTLL CKLNQZPDD10BWP130HPNPN3P48CPDULVTLL} {# No Comment}  


################# END OF COMMON SYN VAR ######################
############# FC Common Setting ######
bbrecipe_apply setup_fc
bbrecipe_apply synthdft_fc
############ Stages ##################
bbset syn.Stages {libgen elaborate synth floorplan synthopt testpoint synthdft synthdftopt}
bbset syn.EnableGKCNode {1}
######### mmmc settings ##############
bbns mmmc {
    bbns vdomain {
        bbset vdomains "VDDQ12_LSIOE VDDQ08_LSIOE VDDQ04_LSIOE VDD_AMB VVDD_LSIO_E VDD_AOSS_OD_LSIOE PADSS_LSIOE_BK_ESDB_cut1 PADSS_LSIOE_BK_ESD12_cut1 PADSS_LSIOE_BK_ESD12B_cut1"
	    bbns VDDQ12_LSIOE {
	    	bbset rail  "VDDQ12_LSIOE$"
            bbset DisableVoltageDelta {True}
	    }
	    bbns VDDQ08_LSIOE {
	    	bbset rail  "VDDQ08_LSIOE$"
            bbset DisableVoltageDelta {True}
	    }
            bbns VDDQ04_LSIOE {
	    	bbset rail  "VDDQ04_LSIOE$"
            bbset DisableVoltageDelta {True}
	    }
	    bbns VDD_AOSS_OD_LSIOE {
	    	bbset rail  "VDD_AOSS_OD_LSIOE$"
	    }
	    bbns VDD_AMB {
	    	bbset rail  "VDD_AMB$"
	    }
	    bbns VVDD_LSIO_E {
	    	bbset rail  "VVDD_LSIO_E$"
	   }
	    bbns PADSS_LSIOE_BK_ESDB_cut1 {
	    	bbset rail  "PADSS_LSIOE_BK_ESDB_cut1$"
            	bbset DisableVoltageDelta {True}
	    }
	    bbns PADSS_LSIOE_BK_ESD12_cut1 {
	    	bbset rail  "PADSS_LSIOE_BK_ESD12_cut1$"
            	bbset DisableVoltageDelta {True}
	    }
	    bbns PADSS_LSIOE_BK_ESD12B_cut1 {
	    	bbset rail  "PADSS_LSIOE_BK_ESD12B_cut1$"
            	bbset DisableVoltageDelta {True}
	    }

    }
    bbns scenarios {
        bbset constraints {
            {apply "*.ssgnp-NM-*"  {VVDD_LSIO_E 0p675}  {VDD_AMB 0p675} {VDD_AOSS_OD_LSIOE 0p675} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
            {apply "*.ssgnp-UD-*"  {VVDD_LSIO_E 0p585}  {VDD_AMB 0p585} {VDD_AOSS_OD_LSIOE 0p585} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
            {apply "*.ssgnp-SUD-*" {VVDD_LSIO_E 0p540}  {VDD_AMB 0p540} {VDD_AOSS_OD_LSIOE 0p540} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
	    {apply "*.ssgnp-UUD-*" {VVDD_LSIO_E 0p475}  {VDD_AMB 0p475} {VDD_AOSS_OD_LSIOE 0p475} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
	    {apply "*.ssgnp-OD-*"  {VVDD_LSIO_E 0p765}  {VDD_AMB 0p765} {VDD_AOSS_OD_LSIOE 0p765} {VDDQ12_LSIOE 1p080} {VDDQ08_LSIOE 0p720} {VDDQ04_LSIOE 0p360}}
	    {apply "*.ffgnp-NM-*"  {VVDD_LSIO_E 0p825}  {VDD_AMB 0p825} {VDD_AOSS_OD_LSIOE 0p825} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
            {apply "*.ffgnp-UD-*"  {VVDD_LSIO_E 0p715}  {VDD_AMB 0p715} {VDD_AOSS_OD_LSIOE 0p715} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
            {apply "*.ffgnp-SUD-*" {VVDD_LSIO_E 0p660}  {VDD_AMB 0p660} {VDD_AOSS_OD_LSIOE 0p660} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
            {apply "*.ffgnp-UUD-*" {VVDD_LSIO_E 0p561}  {VDD_AMB 0p561} {VDD_AOSS_OD_LSIOE 0p561} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
	    {apply "*.tt-NMP-*" {VVDD_LSIO_E 0p750}  {VDD_AMB 0p750} {VDD_AOSS_OD_LSIOE 0p750} {VDDQ12_LSIOE 1p320} {VDDQ08_LSIOE 0p880} {VDDQ04_LSIOE 0p440}}
	    {create "*.*"}
       }
    }
}

bbns mmmc {
    bbns mode {
        bbset modes "func scan"    {# all modes that will be created. This variable structure need follow BBMmmc.py structure}
        bbns func {
            bbset pnrSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.mission.tcl}
            bbset synSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.mission.tcl}
        }
 	bbns scan {
            bbset pnrSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.shift.tcl}
            bbset synSdcs {/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT/fe_release/sswrp_lsioe/dft_sdc/sswrp_lsioe.shift.tcl}
        }	
}
}

bbset scf.common_constraints_override {1}
bbns scf {
    bbset SCF_CODE_HOME "/google/gchips/ipreleases/lajolla_scf/scf_code/LAJ_A0_M4/LAJ_A0_M4_4_July_V2_2025"  -comment "SCF BE Engine Path"
    bbset FUNC_CONSTRAINTS_HOME "/google/gchips/ipreleases/lajolla_scf/func_common_constraints/LAJ_A0_M4/LAJ_A0_M4V4_11_JUL_2025"   -comment "SCF Func Common Constraints Path"
    bbset DFT_CONSTRAINTS_HOME "/google/gchips/ipreleases/lajolla_scf/dft_common_constraints/LAJ_A0_M4/LAJ_A0_M4_23_JUL_2025_REV1"    -comment "DFT common constraints refer: go/laj-dft-common-cons-update"
    bbset TECH_HOME "/google/gchips/ipreleases/lajolla_scf/tech_common_constraints/LAJ_A0_M4/LAJ_A0_M4_16_JUNE_2025_REV3"               -comment "SCF Tech Constraints Path"
    bbset SOC_CONSTRAINTS_HOME "/google/gchips/ipreleases/lajolla_scf/soc_constraints/LAJ_A0_M3/LAJ_A0_M3_20250619"    -comment "SOC Constraints Path"
}

#For PNR only : to avoid runtime, must use set scf.gspan_iobudget_opt_mode 1
bbset scf.gspan_iobudget_opt_mode 1
#For PNR only : to be 0 until Freq folding enabled, scf.Gspan_cross_corner needs to be 0
bbset scf.Gspan_cross_corner 0

######### Scenarios###################
bbset syn.scenarios.Scenarios {func.ssgnp-NM-0-cworst_ccworst_t func.ssgnp-NM-125-rcworst_ccworst_t func.ssgnp-UD-0-cworst_ccworst_t func.ssgnp-UD-125-rcworst_ccworst_t func.ssgnp-UUD-0-cworst_ccworst_t func.ssgnp-UUD-0-cworst_ccworst func.ssgnp-UUD-125-rcworst_ccworst_t scan.ssgnp-NM-0-cworst_ccworst_t scan.ssgnp-UD-125-rcworst_ccworst_t func.tt-NMP-85-cworst_ccworst_t func.ffgnp-NM-125-rcworst_ccworst func.ffgnp-NM-m25-cbest_ccbest func.ssgnp-UUD-0-rcworst_ccworst scan.ffgnp-NM-125-rcworst_ccworst scan.ssgnp-NM-m25-cworst_ccworst scan.ssgnp-UUD-0-cworst_ccworst func.ssgnp-SUD-0-cworst_ccworst_t func.ssgnp-UD-0-cworst_ccworst func.ssgnp-OD-0-cworst_ccworst_t func.ssgnp-OD-0-cworst_ccworst}

bbset syn.scenarios.status.Default   {
    {func.tt-NMP-85-cworst_ccworst_t {leakage dynamic active max_trans max_cap min_cap}}
    {func.ssgnp-NM-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-NM-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-UD-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-UD-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}} 
    {func.ssgnp-UUD-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-UUD-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {scan.ssgnp-NM-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {scan.ssgnp-UD-125-rcworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ffgnp-NM-125-rcworst_ccworst {hold active max_trans max_cap}}
    {func.ffgnp-NM-m25-cbest_ccbest  {hold active max_trans max_cap }}
    {func.ssgnp-UUD-0-cworst_ccworst {hold active max_trans max_cap}}
    {func.ssgnp-UD-0-cworst_ccworst {hold active max_trans max_cap}}
    {scan.ffgnp-NM-125-rcworst_ccworst {hold active}}
    {scan.ssgnp-NM-m25-cworst_ccworst {hold active}}
    {scan.ssgnp-UUD-0-cworst_ccworst {hold active}} 
    {func.ssgnp-SUD-0-cworst_ccworst_t {setup active max_trans max_cap min_cap}}
    {func.ssgnp-OD-0-cworst_ccworst_t {setup}}
    {func.ssgnp-OD-0-cworst_ccworst {hold}}
}

bbset syn.scenarios.status.Floorplan   {
        {func.ssgnp-NM-0-cworst_ccworst_t {setup active max_trans max_cap }}
	{func.ffgnp-NM-m25-cbest_ccbest {hold active}}
}

########## libgen ####################
bbset libgen.syn.EnableExtraNDMGeneration {1}
bbset syn.ExtraLibs.Enable           {True}

bbset syn.ExtraLibs.libgen.lef {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708.lef
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_DTCD/N02P_DTCD_M13_v1d0.lef
}

bbset syn.ExtraLibs.libgen.ccs_db  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_db/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset syn.ExtraLibs.libgen.ccs_lib  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_lib/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset syn.MacroLibraryFileInclude {fiducial|.*tphn02p_075od12gpio.*|.*tpmn02p_esd.*|.*tpmn02p_lup.*|.*PLLTS2INTQ.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5.*|.*DTCD.*}
############# Elaborate Inputs #######
bbset syn.EnableWaterMarkInsertion {true}
bbset syn.WatermarkRTLTag {LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT}
#bbset syn.elaborate.SkipSDCErrorChecks {0}
bbset syn.EnablePhysicalSynthesis {0}

bbset .info.BLOCK "sswrp_lsioe"
bbset SSWRP_LSIOE_RELEASE_PROJECT_TOP "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT/fe_release"
bbset Release_area "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT/fe_release"
bbset SSWRP_LSIOE_RELEASE_PROJECT_TOP "[bbget .Release_area]"
bbset syn.elaborate.RTLParsingVars ""
bbset syn.elaborate.RTLSearchPath "[bbget .Release_area]/[bbget .info.BLOCK]/dft_rtl/"
bbset syn.elaborate.RTLFileList "[bbget .Release_area]/[bbget .info.BLOCK]/dft_rtl/synth/sswrp_lsioe.vf"
bbset syn.elaborate.InputUPFFile "[bbget .Release_area]/[bbget .info.BLOCK]/dft_upf/[bbget .info.BLOCK]/sswrp_lsioe.upf"


bbappend sif.fc.ApplyCommonSettingsPostCallback {
        if { ${::STAGE} ni {elaborate setup floorplan} } {      
        source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/dft_preserve_settings_jul24.tcl"    
    }
}

bbset sif.fc.ExecuteStagePreCallback {
if { ${STAGE} != "elaborate"} {
 	sif::minfo "Setting placed status to all sequential cells"
        set_attribute [get_flat_cells -quiet -of_objects [get_pins -quiet -of_objects [get_nets -quiet -hierarchical -filter "net_type==clock"]]] physical_status placed
        sif::minfo "Setting minor_change status to all clock wires"
        set_attribute [get_shapes -quiet -of_objects [get_nets -quiet -hierarchical -filter "net_type==clock"]] physical_status minor_change
        sif::minfo "Setting minor_change status to all clock vias"
        set_attribute [get_vias -quiet -of_objects [get_nets -quiet -hierarchical -filter "net_type==clock"]] physical_status minor_change
	############# IOPAD ABUT Nets #################
                set_disable_tie_insert -objects [get_pins -hierarchical -filter "(name == RTE || name == POCCTRL || name == POCCTRL18 || name == POCCTRLD) && net_name =~ *ABUT*"]
		set pad_abut_nets [get_nets u_sswrp_lsioe_aux/u_sswrp_lsioe_aon/u_lsioe_iobank/ioring/*ABUT*]
                set_dont_touch $pad_abut_nets
                set_attribute $pad_abut_nets dont_touch true
                set_attribute -objects $pad_abut_nets -name physical_status -value locked
}

if { ${STAGE} == "synthopt"} {
        foreach c [get_object_name [get_corners]] {
		 if {[regexp "\-UD\-" $c]} {
 			set volt 0.585
 		 } elseif {[regexp "\-UUD\-" $c]} {
 			set volt 0.475
 		 } elseif {[regexp "ssgnp\-NM\-" $c]} {
 			set volt 0.675
 		 } elseif {[regexp "ssgnp\-OD\-" $c]} {
 			set volt 0.765
		 } elseif {[regexp "\-SUD\-" $c]} {
 			set volt 0.54
		 } elseif {[regexp "ffgnp\-NM\-" $c]} {
 			set volt 0.825
		 } elseif {[regexp "tt\-NMP\-85" $c]} {
 			set volt 0.75
		 }
		puts "set_voltage $volt -corner [get_object_name [get_corners $c]]  -object_list [get_object_name [get_supply_nets -regexp {PADSS_LSIOE_BK_ESD12B_cut1$|PADSS_LSIOE_BK_ESD12_cut1$|PADSS_LSIOE_BK_ESDB_cut1$}]]"
		set_voltage $volt -corner [get_object_name [get_corners $c]]  -object_list [get_object_name [get_supply_nets -regexp {PADSS_LSIOE_BK_ESD12B_cut1$|PADSS_LSIOE_BK_ESD12_cut1$|PADSS_LSIOE_BK_ESDB_cut1$}]]
	}
	
}

}
############## synth Settigns ########
bbset fc.SwapRTLClkCellsToDominantVT {1}
bbset syn.derate.vt_mismatch.dominate_vt.Value {ulvtll}
bbset syn.synthopt.QuickRtlFeedback {1}
bbset syn.synth.QuickRtlFeedback {1}
bbset syn.drv.ClockConstraintDenominatorOverrides {{* 7} {*NM* 10} {*UD* 10} {*SUD* 10} {*UUD* 10}}
bbset syn.drv.DataConstraintDenominatorOverrides {{* 6} {*NM* 6} {*UD* 4} {*SUD* 4} {*UUD* 6}}
bbset pnr.drv.ClockConstraintDenominatorOverrides {{* 7} {*NM* 10} {*UD* 10} {*SUD* 10} {*UUD* 10}}
bbset pnr.drv.DataConstraintDenominatorOverrides {{* 6} {*NM* 6} {*UD* 4} {*SUD* 4} {*UUD* 6}}
bbset sta.config.derate.VtMismatch.DominateVt {ulvtll}

bbconcat syn.synth.SkipICGInsertionInstPatterns { *lpm_lsio_e_csr* } 
bbconcat syn.synth.SkipICGInsertionModulePatterns { *lpm_lsio_e_csr* }

############# syn setup settings #####
bbset pnr.setup.InputDEFFile "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_m4_07232025/sswrp_lsioe.def.gz"
bbset pnr.innovus.SetupCreateFloorplanPostProcessCallback {
	loadLefFile /google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_LUP_H_C240708/LUP_H_C240708.lef 
	set IO_BANK_INST [lindex [regsub {/ioring} [lindex [dbGet [dbGet top.insts.cell.name *POC* -p2].name -u] 0] { }] 0]
	source -e -v "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/laj_pushdown_m3v2_06172025/padframe_v1/sswrp_lsioe_padframe.tcl"
	source -e -v "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/laj_pushdown_m3v2_06172025/padframe_v1/sswrp_lsioe_PADSS_LSIOE_BK_padframe_iofill.tcl"
	source -e -v "/google/gchips/ipreleases/lajolla_infra1/sswrp_lsioe/laj_pushdown_m3v2_06172025/padframe_v1/source_gnc.tcl"
	source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/150425_PUSH_DOWN/my_padframe.tcl"
}
########## syn fplan settings ########
bbset pnr.floorplan.InputDatabase "[bbget info.BOB_RUN_DIR]/syn/setup/outs/[bbget info.BLOCK].enc.dat"
bbset pnr.floorplan.InsertFiducialCell {1}
bbset pnr.setup.InsertDTCDCells      {0}
bbset pnr.floorplan.EnableDenseTapRegions {1}
bbset pnr.tcic.FixFloorplan {false}
bbset pnr.floorplan.EndCapTapPG "1"
bbset pnr.floorplan.EnableExtraM1ViaNearFiducial {true}
bbset fc.ForcePSWStrategyAssociation "1"

bbset pnr.innovus.FloorplanRowsAndTracksPreCallback { 
dbset top.Fplan.isCore2Io 0
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/0624_incremental_defs/pb_0613_incr.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/0624_incremental_defs/clamp_cell_incr_blkg.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/0624_incremental_defs/rb_0613_incr.tcl"
#addHaloToBlock -cell N02_DTCD_ALL_M13_250331 2.064 1.04 2.064 2.106
addHaloToBlock -allIOPad 0 0 2.5 0
}

bbappend pnr.innovus.PowerDomainBoundaryPreCallback {
dbset top.Fplan.isCore2Io 0
}

bbset pnr.floorplan.SVDDNets         {1}
bbset pnr.floorplan.SVDDNets {
	{PD_LSIOE_GSPAN {{{165.936 1267.968 257.184 1361.308} {84.816 1238.068 257.184 1267.968}}} VDD_AOSS_OD_LSIOE}
	{PD_LSIO_E {{76.944 1471.418 257.184 1856.738}} VDD_AMB}
	{PD_SSWRP_LSIO_E {{{0.912 2166.138 257.184 2214.108} {227.232 2137.538 257.184 2166.138} {0.912 2154.698 83.424 2166.138} {0.912 2149.108 90.96 2154.698} {58.128 2137.538 90.96 2149.108} {58.128 1856.738 257.184 2137.538} {58.128 1361.308 257.184 1471.418} {58.128 1267.968 165.936 1361.308} {58.128 1237.938 84.816 1267.968} {58.128 0.988 83.904 1237.938}}} VDD_AMB}
}

bbset pnr.floorplan.VoltageAreas {PD_LSIO_E {76.944 1471.418 257.184 1856.738} PD_LSIOE_GSPAN {{165.936 1267.968 257.184 1361.308} {84.816 1238.068 257.184 1267.968}}}

bbset pnr.floorplan.TrackOffsetFile {/google/gchips/ipreleases/lajolla_soc/soc_to_sswrp_common/laj_m4_07232025/offsets/track_offset.tcl}
bbset pnr.floorplan.PGM14M15OffsetFile {/google/gchips/ipreleases/lajolla_soc/soc_to_sswrp_common/laj_m4_07232025/offsets/pg_offset.tcl}
bbset pnr.floorplan.PGM15VSSOffset "0.8600" 
bbset pnr.floorplan.PGM14VSSOffset "0.9400"
bbset pnr.floorplan.AlignM14M15Tracks {1}
bbset pnr.floorplan.EnableFullPGInM14M15 {1}
bbset pnr.floorplan.PushDownTrackOffsetLayers {M12 M13 M14 M15}
bbset pnr.floorplan.CustomIPM15Extension "50"
bbset pnr.floorplan.CustomIPM14Extension "50"
bbset pnr.floorplan.CoreSwitchXPitch {15.36}                                                          
bbset pnr.floorplan.CoreSwitchYPitch {4}

bbset pnr.innovus.PowerDomainBoundaryPostCallback {
deleteRow -all
dbset top.Fplan.isCore2Io 0
floorplan::generate_rows
floorplan::generate_tracks
}

bbappend pnr.innovus.FloorplanSetupPreCallback {
dbset top.Fplan.isCore2Io 0
saveDesign -def -lib FloorplanSetupPreCallback.enc
}

bbset pnr.innovus.FloorplanSetupPostCallback { 
editSelect -type Regular
editDelete -selected
}

bbappend pnr.innovus.FloorplanCleanUpPreCallback {
source /google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/malibu/scripts/pg_grid_iopads_conec_gdmc.tcl
PGPinConnect
SignalPinConnect
colorizePowerMesh
}

bbappend pnr.innovus.FloorplanCleanUpPostCallback {
foreach b {{0.01 5.59 0.038 1972.698} {0.052 5.59 0.07 1972.698} {0.052 0.988 0.07 5.59} {0.01 0.988 0.038 5.59} {0.052 1972.698 0.07 2149.056} {0.01 1972.698 0.038 2149.056}} {
    catch { deselectAll }
    catch { editSelect -area $b -net _BOUNDARY* }
    catch { editCutWire -box $b }
    catch { editSelect -type Special -net _BOUNDARY* -layer {M1 M2 M3 M4} -area $b -status {ROUTED FIXED} }
    catch { deleteSelectedFromFPlan }
}
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/mramayanapu/projects/lajolla/sswrp_lsioe/fp_trails/laj_pre_m4_06132025/0624_incremental_defs/empty_area_pb_incr.tcl"
}

########## Hammer logic ##############
bbset pnr.floorplan.PowerSwitchHammerChainCount {4}
bbset pnr.psw.HammerChainOrAckNet {u_sswrp_lsioe_aux/u_sswrp_lsioe_aon/u_lpcm_lsio_e_wrapper/lsio_e_top_pdom_power_down_or_all_ack}

bbset pnr.floorplan.StrengthenTrickleSwitchPG {1}
bbset pnr.floorplan.StrengthenTrickleSwitchList {}
bbset pnr.floorplan.StrengthenTrickleSwitchToNet {VVDD_LSIO_E} ## VVDD_ Net
bbset pnr.floorplan.StrengthenTrickleIgnoreDRC {1}

############### syn synthopt #########
bbset syn.synthopt.RecreatePathGroups {1}
bbset sif.fc.OpenDesignPostCallback {
if {${::STAGE} == "synthopt"} {
set_ref_libs -add /google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/full_ndm/ip_LUP_H_C240708/LUP_H_C240708.ndm 
}
}

bbappend sif.fc.OpenDesignPostCallback {
if {${STAGE} in {synthdftopt placeopt clock clockopt route routeopt}} {
current_scenario func.ssgnp-NM-0-cworst_ccworst_t
set default_scenario [get_object_name [current_scenario]]
}
}

bbset syn.fc.SynthOptSetupPostCallback {
create_keepout_margin -outer {0.048 0.13 0 0} -type hard [get_cells -of_objects [get_lib_cells -of_objects [get_cells -hierarchical *] -filter "number_of_pins > 6" ] -filter "is_io != true && is_physical_only != true && is_hard_macro != true"]
create_keepout_margin -outer {0.048 0.13 0 0} -type hard [get_cells -hierarchical -filter "ref_name =~ LVL* || ref_name =~ ISO*"] 
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/my_fc_app_options.tcl"
}

bbset syn.fc.SynthOptLogicOptoPreCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/dhaneshp/synthtrialm3/repo/lsio/sswrp_lsioe/inputs/sswrp_lsioe.synth_fc.tcl"
}

bbappend sif.fc.OpenDesignPostProcessCallback {
if {${::STAGE} in {synthopt}} {
puts "sourcing upfutils.tcl file "
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/hammer_end_logic.tcl"
}
}

bbappend sif.fc.OpenDesignPostCallback {
if {${STAGE} in {synthdftopt placeopt clock clockopt route routeopt}} {
current_scenario func.ssgnp-NM-0-cworst_ccworst_t
set default_scenario [get_object_name [current_scenario]]
}
}

############# testpoint ########################
bbset syn.synthdft.InputTestPointFile    "../testpoint/outs/[bbget .info.BLOCK].test_point.rpt"
bbset syn.testpoint.BlackBoxList {GCUSTOM_GSL_CLK_DIV50_DP_2R_130HPNPN3P48CPDULVT}
#bbset Modules.Tool.tessent {tools/mentor/tessent/2025.2-snapshot_2025.05.14_06.17_X7P}
bbset Modules.Tool.synthdft {tools/synthdft-lajolla/4.0.0}
bbset syn.synthdftopt.SplitStage 1



bbset pnr.IOBufferExcludeNetsFile "[bbget info.BOB_RUN_DIR]/syn/synthopt/io_buffering_exclude.tcl"
################ synthdftopt ###################
bbappend syn.fc.SynthDFTOptSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/sswrp_lsioe_io_buffering.tcl"
}

bbappend syn.fc.SynthDFTOptInitialOptoPreCallback {
    remove_placement_spacing_rules -rule {NW1 NW1}
}
########## PNR SETTINGS  #######################
bbset pnr.EnableWaterMarkInsertion {true}
bbset pnr.WatermarkRTLTag {LAJ_A0_SSWRP_LSIOE_M4_V4_R6_D1_RTLDFT}
bbset pnr.EnableHighEffortCellOpt {true}
bbset pnr.placeopt.RecreatePathGroups {1}
bbset pnr.EnableGKCNode {1}
bbset pnr.ValidGKCStages {placeopt routeopt chipfinish}
################ pnr Scenarios ##################
bbset pnr.scenarios.Scenarios	{[bbget .syn.scenarios.Scenarios]}
bbset pnr.scenarios.status.Default	{[bbget .syn.scenarios.status.Default]}
#################### pnr extra libs #################
bbset pnr.ExtraLibs.Enable           {True}
bbset pnr.ExtraLibs.libgen.lef {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708.lef
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/lef/ip_DTCD/N02P_DTCD_M13_v1d0.lef
}

bbset pnr.ExtraLibs.libgen.ccs_db  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_db/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_db/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset pnr.ExtraLibs.libgen.ccs_lib  {
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_lib/ip_bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5/tcbn02p_bwph130pnpnl3p48cpd_base*
/google/gchips/lib/foundry/tsmc/n2p/tsmc/dk/v1.0_2025-07-04/ccs_lib/ip_tphn02p_075od12gpio_c240708/tphn02p_075od12gpio_c240708*
}

bbset pnr.MacroLibraryFileInclude {fiducial|.*tphn02p_075od12gpio.*|.*tpmn02p_esd.*|.*tpmn02p_lup.*|.*PLLTS2INTQ.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div50_dp_2r.*|.*bwph130pnpnl3p48cpd_base_gcustom_gsl_clk_div_1p5.*|.*DTCD.*}
############# Path group ######################
bbset pnr.PathGroupOverrides         {INPUT {effortLevel low}  IN2OUT {effortLevel low}
                                      OUTPUT {effortLevel low} REG2REG {effortLevel high} REG2MEM {effortLevel high}
                                      MEM2REG {effortLevel high} REG2ICG {effortLevel high} IN2ICG {effortLevel low}}
############ placeopt  ###############
bbset pnr.MaxFanout                  {10}
bbset pnr.check.MaxFanout            {10}                                                             
##----------- gspan ------------
bbset pnr.placeopt.GSPANBufferPadding {top 1 left 1 right 1}
bbset pnr.placeopt.GSPANFlopPadding  {top 1 left 1 right 1}

bbset pnr.fc.PlaceOptSetupPostCallback {
#### Added for safer side due to observed CD paths in synth DB
puts "path groups are :: [get_object_name [get_path_groups *]]"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
}

###############  clock  ##############
bbset pnr.DelayCells {BUFFD2BWP130HPNPN3P48CPDLVTLL BUFFD3BWP130HPNPN3P48CPDLVTLL BUFFD3BWP130HPNNP3P48CPDLVTLL}
bbset pnr.clock.InverterCellList     { CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL DCCKNDHD6BWP130HPNPN3P48CPDULVTLL DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL} {List of inverter cells}
bbset pnr.clock.TopInverterCellList  { CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL DCCKNDHD6BWP130HPNPN3P48CPDULVTLL DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL  } {Leaf Specific Inverter Cell List}
bbset pnr.clock.LeafInverterCellList { CKNDHD4BWP130HPNPN3P48CPDULVTLL CKNDHD5BWP130HPNPN3P48CPDULVTLL DCCKNDHD6BWP130HPNPN3P48CPDULVTLL DCCKNDHD8BWP130HPNPN3P48CPDULVTLL DCCKNDHD10BWP130HPNPN3P48CPDULVTLL DCCKNDHD12BWP130HPNPN3P48CPDULVTLL } {Leaf specific inverter cell list}
bbset pnr.clock.BufferCellList       { CKBDHD5BWP130HPNPN3P48CPDULVTLL CKBDHD6BWP130HPNPN3P48CPDULVTLL CKBDHD8BWP130HPNPN3P48CPDULVTLL DCCKBDHD10BWP130HPNPN3P48CPDULVTLL DCCKBDHD12BWP130HPNPN3P48CPDULVTLL } {List of buffer cells}
bbset pnr.clock.ICGCellList          { CKLNQD4BWP130HPNPN3P48CPDULVTLL CKLNQD5BWP130HPNPN3P48CPDULVTLL CKLNQD6BWP130HPNPN3P48CPDULVTLL  CKLNQD8BWP130HPNPN3P48CPDULVTLL} {List of clock gating cells}

bbset pnr.clock.MaxFanout            {16}
bbset pnr.clock.TargetSkew           {50ps}
bbset pnr.clock.EnableGSPANImplementation {1}

bbset pnr.fc.ClockSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/latency_improve.tcl"
}

################### clockopt ################
bbset pnr.clockopt.EnableSetupFix    {0}                                                              {Enable setup fix in clockopt}
bbset pnr.clockopt.HoldFixTargetSlack {-0.005}
bbset pnr.clockopt.FixSequentialCells {0} 
bbset pnr.clockopt.FixClockRoutes {0}

bbappend pnr.fc.ClockOptSetupCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/scripts/latency_improve.tcl"
}

bbset pnr.fc.ClockOptSecondaryPGPostCallback {
    if {[sizeof_collection [get_shapes -filter "undefined(owner)"]]} {
        remove_shapes [get_shapes -filter "undefined(owner)"]
    }
    if {[sizeof_collection [get_shapes -hierarchical -filter "undefined(net) && layer_name != M1:special_router_extension && layer_name != M2:special_router_extension && shape_use != user_route && object_class != terminal"]]} {
        remove_shapes [get_shapes -hierarchical -filter "undefined(net) && layer_name != M1:special_router_extension && layer_name != M2:special_router_extension && shape_use != user_route && object_class != terminal"]
    }
}

################# routeopt ###########
bbset pnr.routeopt.EnableHoldFix     {1}
bbset pnr.routeopt.EnableIncrHoldFix {1}
bbset pnr.routeopt.HoldFixTargetSlack {-0.01}

bbappend pnr.fc.RouteOptSetupPostCallback {
source -e -v "/google/gchips/workspace/redondo-asia/tpe/user/knandakishore/projects/lajolla/sswrp_lsios/fp_trails/my_constraints/my_exceptions.tcl"
}

############ Export ##################
bbappend pnr.export.PGNetlistExcludeCells {LUP_1D8_GR_FB1_H LUP_V* LUP_H* LUPOD_H* LUPOD_V* LUP* }
# END
